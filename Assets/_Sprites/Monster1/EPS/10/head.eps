%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: head.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/20/2018
%%BoundingBox: 0 0 613 763
%%HiResBoundingBox: 0 0 612.5890 762.6548
%%CropBox: 0 0 612.5890 762.6548
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 104 128 8%%BeginData: 21325 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD19FF7D272EFD31FF7D27F87DFD2FFF7D04F8F852FD30FF27F805
%F8A8FD2DFFA827F827F827FD30FF0527050552FD2DFF2EF827F827F8A8FD
%2EFF7D04F827F827A8FD2BFFA8F827042705057DFD2EFF7DF8270527F8A8
%FD2BFF2705F827F827F852FD2EFF2705F827F8F82EFD2AFFA827F8270427
%F82727FD15FFA8FFA8FD15FFA8270527F8270427A8FD29FF7DF827F82704
%05F827A8FD0DFF7D7D52522727F827F827042727597DA8FD0FFF7DF827F8
%05F827F8A8FD29FF2D2704277D52F827F884FD09FFA859520527F805F827
%0427F8270527F827F80504527DFD0DFF272705270427050552FD28FFA827
%F805F8CA52F8F8052EFD06FFA85227F804F805F827F827F827F805F827F8
%27F827F805F804F852A8FD09FF7DF8F8272752F827F852FD29FF04270427
%CFA7F827F827A8FFFFFFA852F805F827F8270427F827042705272727F827
%0527F8270527F827F82752FD08FF52F827F852A727F82727FD28FF8405F8
%0527CFA727F805F87DFFFF5227F805F827F8F8F827275253847E84848584
%2E052E0527F827F827F827F8F827A8FD05FFA8F827F8F87DCF0505F827A8
%FD27FFA8F827F852CFCF2727042727FF270505270427F827528484FD05AF
%8BAFAFAFFD062E272705270527042727A8FD04FF2E27052727FFCF52F827
%F8A8FD27FF8305F80527CFA77CF827F827F804F827F804277E84AF85AF84
%85FD04845A84592E272E272E052E282E0527F827F805F8A8FFFF7DF8F827
%F87DCFCF51F8F8057DFD27FFAE0527F82DCFCF7D2DF827F8270527F82759
%AF8BAF848459845A60596059605959FD062E282E2E2E27270427F827F8A8
%FF52F827F852CFCFCF7DF827F87DFD27FFA827F805F8CFA7A75205F827F8
%27F82735845A60595A595935592E2F2E592E2E282E2E2E272E052E052E05
%2E0527F827F8050552F827F8F87CCFCACF5105F8F852FD28FF2727F827A7
%CFA1A72727042704275984595A598459592E532E2E2E522E2E2E522E2E2E
%53FD062E282E2E27F8270527F827050527FFCFCFCA52F827F87DFD28FF52
%F827F87DCFA77DA10405F82704595960595AFD0D2E53FD062E052E272E05
%2E2827F827F827F827F8A7CFCFCAA75205F8F852FD28FF5205050551FFA7
%A7A17DF827F827F85259592E2E2E522E2E2E52FD042E2F6059532E2E2E52
%2E2E282E2E2E282E2E27F8270527F87CCFCFCFCAA752F827F859FD17FF84
%2727A8FD0DFFA8F827F827A7CF7DA7A152F805F827F827272E2E2E282E2E
%2E282E282E28595959FD042E282E2E2E052E052E052E0527F827F805A7CF
%CACF7DA751F8F8F852FD17FF2EF80527FD0EFF270427F8A7CFA77DA7A752
%F8270527F8272E532E532E2E2E532E2E2E532E532E532E2E2E53FD062E28
%2E2E2E05270527F87DCFCFA7A7A752F827F87DFD16FFA8F827F8047DFD0D
%FF5205F8F827CFA7A17DA7A152F827F827F82727FD172E272E052E282EF8
%27F805F8CAC9A17DA72705F8057DFD16FF27270527F852FD0DFFA8F82705
%27A7FFA7A77DA7A77C04270527F827282E2E522E2E2E522E2E2E522E2E2E
%522E2E2E52FD062E282E2E2EF827050551A8A1A77D52F827F8A8FD15FFA8
%04F827F805F8A8FD0DFF27F827F852CFCFA1A17CA7A17CF827F827F82705
%FD052E28FD072E282E2E2E282E2E2E282E052E052E0527F827F8057CA77D
%A1F827F827A8FD15FF7DF8270527042752FD0DFF7D270527F8CACFCFA1A7
%A1A77D270527042704FD042E522E532E2E2E532E2E2E5259842F522E2E2E
%532E2E282E2E2E27270527F852A7A77C27052727FD16FF2705F827F827F8
%27A8FD0DFF2727F8F827CFCFCF7DA77DA72727F827F827052E05FD052E28
%2E05FD042E59595928FD052E282E052E272EF827F80504A7A752F827F852
%FD15FF8427052705270427F852FD0DFF7DF82705057CFFCFCF7DA7A151F8
%270527F8272E2E27FD082E522E2E2E592E2E2E52FD062E282E2E28F82705
%0552CA5105F80558FD15FF59F827F8525905F805F8A8FD0BFF7DF805F827
%F827A7CFCACA7CA72705F827F827F82E272E052E2E2E052E05FD052E272E
%2E2E282E2E2E282E052E052E0527F827F8277C27F805F8A8FD15FF272705
%2759AF2727052727FD0BFF270505270527F852FD04CF7D27F82705270427
%2E2E28FD082E532E522E532E2E2E532E2E2E532E2E282E2E2E0527052727
%7C0527F827FD15FFA827F827F8848B59F827F80459FD09FFA827F827F827
%F827F852CFCFCF7DF827F827F827052E27FD0D2E27FD092E272E052E2828
%F827F827F827F8F852FD15FFA8F827F82E85AF59270427F827A8FD09FF27
%270527F8270527F87DCFFF51270527F827052E28FD042E522E2E2E52FD07
%2E522E2E2E522E2E282E2E2E282E2E27F8270527F827F8A8FD15FF52F8F8
%F827AF84592727F827F827FD08FFA827F827F828F827F805F87D7C05F827
%F805F82E272E052E2E2E282E2E2E282E2E2E052E05FD052E282E2E2E052E
%052E052E0505F827F827F827A8FD15FF7DF827F859AFAF2E5327270427F8
%59FD07FF83F82705272E2E05270527F827F8270527F82E2E2E282E2E522E
%532E2E2E53FD072E532E2E2E53FD062E282E2E2E04270527042752FD16FF
%2727F80459AF842E2E2E0527F827F87DFD06FF52F8F827F82E2E2EF827F8
%27F827F827F827052E272E05FD172E052E272E052E2727F827F805F8A8FD
%16FF27F82704848B84FD042E0527F827F8A8FD05FF52F827F8FD052E0527
%F8270527052E2E2E28FD042E522E2E2E522E2E2E522E2E2E522E2E2E522E
%2E2E522E2E282E2E2E282E2727F827F87DFD17FFF827F8277EAF592E282E
%052EF805F805F8A8FD04FF2705F80527FD052EF805F827052E052E052E05
%2E2E2E28FD052E282E052E2E2E282E2E2E282E2E2E282E052E052E052E05
%27F827F827A8FD17FF27042705848584FD062EF827052705A8FFFFFF2704
%2705522E2E2E532E2E272E2E2E272E2E2E282E2E522E532E2E2E522E2E28
%FD042E532E2E2E53FD062E282E2E2E282E27270427F8A8FD17FFF827F827
%848B592F2E2E052E2827F827F804F8A8FFA8F827F8272E2E27FD082E2F28
%2E272E28FD052E272E052E272E05FD0B2E272E272E052E272E052E0427F8
%047DFD17FF27052705AF855A2E522E2E282E2E27F8270527F8A8FF27F827
%052E28FD042E522E2E2E605A5AFD082E28FD082E522E2E2E522E2E2E522E
%2E272E2E2E282E2E2E28270427F858FD17FFF827F8277E85FD062E052E27
%27F827F805F8520505F8272E2E052E2E2E272E2759595A5959272E2E59FD
%042E052E2E2E282E282E282E2E2E282E2E2E282E272E052E052E052E052E
%0527F80427FD17FF2705270584852E272E2E53FD062E05270527F8270427
%05FD092E2F8459602F522E595A842E2E2E532E2E2E532E522E532E2E2E53
%2E2E2E532E2E282E2E2E28FD052E0527F827FD17FF0527F805598B0504F8
%27052E2E2E272E0527F827F827F827F8272E2E052E272E272E272E355A35
%FD042E5A35FD072E28FD0B2E282E272E052E272E052E272E0527F805F8A8
%FD16FF52F827F88484270427F82705FD052E282E0527F8270527F82E2E2E
%27FD042E522E2E2E59FD0B2E592F592E522E2E2E52FD062E272E2E2E282E
%2E2E282E2E2E052705057DFD16FF52F8F80452AF0527F827F827F827052E
%052E052EF805F827F805052E282E052E27FD042E5959592E2E282E282E2E
%59595A595A5959FD062E282E052E052E052E052E052E052E052E0527F827
%F87DFD16FF7DF827F859AF59F82704270527F827272E282E2E2E05270527
%F82E2E52FD052E532E2E5984592E2E522E5959845A6059845A6059592E2E
%2E532E2E282E2E2E282E2E2E282E2E2E272E05270427050552FD16FF7D04
%F82727AF5927F827F827F827F827052E052E282E0527F827FD042E052E27
%FD092E28595A5A5960595A595A2FFD072E272E052E272E052E282E052E05
%27F827F827F827F852FD16FFAF0527F827858405270527F8270527F82E2E
%2E282E2E2E27FD042E522E2E28FD042E522E2E2E522E2E2E5935592E592E
%53FD052E522E2E282E2E2E282E2E2E282E2727F8270527F827F827F82727
%FD16FFA827F805F884842EF827F805F827F827272E052E052E052E282E2E
%2E28FD072E28FD072E272E282E272E2E2E282E2E2E282E2E2E052E282E05
%2E0527F827F827F827F8002657F805F827A8FD16FF5205042759AF592704
%270427282E272E2E2E28FD042E532E2E2E532E2E2E532E2E2E532E2E2E53
%2E532E592E532E592E532E592E532E592E522E2E272E05270527F8270527
%F827F8277BCE5127042727FD17FF7DF827F85285842827F827F8272E2E05
%2E272E272E28FD052E05FD082E27F82705270527052E272E272E272E052E
%272705270527F827F827F827F827F827F805277CA6CE7B00F827F827A8FD
%16FFA827042705AF855A05270527F82E2E2E28FD042E522E2E2E522E2E28
%522E2E2E522E2EF8270527F8270427F8270427F8270527F827F827F82705
%27F8270527F827F827277CA6CECDCECD51F8270527F8A8FD17FF2705F8F8
%52AF5A2EF827F805F82E052E052E282E28FD052E05FD072EF805F827F805
%F827F827F827F827F827F827F827F805F827F827F827F827277C7CCDCDCE
%C8CDCDCD0405F827F8047DFD17FFA8F827F82E8BAF592EF8270427272E28
%2E2E2E28532E2E2E532E2E2E532E2E2E59272704270527F805F805F82700
%27F8270027F827F805F82705270427052727A6CDCECDCECDCECDCE512704
%270527F8A8FD17FFA827F827F859AF843527F827F827FD042E28FD0F2EF8
%27F827277C517C515127512D5127512D515158577C2627F827F827F805F8
%2D51827BA65127F805F827F827F8F852FD18FF5205052705AFAF842F2705
%2728FD102E52FD042E0427F8277CCECDCECDCECDCECDCECDCECDCECDCE57
%27F8270527F8270527F805F827F827F827F8270527F827F87DFD19FF0405
%F8F827AF845AFD082E272E052E052E2E2E272E2E2E282E2E2E2827F827F8
%057BCEA6CDC8CDA6CDC8CDA6CDCDCD5105F827F8270527F827F827F827F8
%05F827F827F8270405F8F852FD19FFA8F8270527278484842E2E2E532E2E
%2E532E2E282E2E522E532E592E532E2E2E592E27042705277BCECDCECDCE
%CDCECDCECDCE51270527F827282E2E2E2727F8270527F82705270427272E
%F827042E7DA8FD18FF58F827F827F852595927FD072E272E05FD042E5A59
%59FD062E2705F827F80051CDCDCDA6CEFD04CD2D00F827F827052E272E05
%2E2727052705270527052E052E2727F827F8F8F8275284A8FD15FF52F827
%F827F8535A592E2E2E52FD072E522E595960592E2E522E2E2E532727F827
%0505277CA6CECDCEA67C27270527F827272E282E2E2E282E2E2E28FD072E
%282E2E27F8270527F827F8277DFD15FF52F805F8052760FD0C2E282E2E5A
%59592E2E28FD052E2705F827F805F82727512727F805F827F827052E052E
%052E052E052E052E052E052E052E052E052E0505F827F827F827F8F827A8
%FD14FF7DF827F8595A59FD072E532E2E2E532E2E2E592E2E2E532E2E2E53
%2E532727042704270527F827052704270427272E2E2E282E2E2E282E2E2E
%282E2E2E282E2E2E282E2E2E272E2727042705270427F87DFD13FF2705F8
%272E605959272E05FD0B2E28FD0B2E2827F827F827F827F827F827F82727
%2E052E272E052E2E2E052E272E052E272E052E272E052E272E052E272E05
%27F827F827F852FD11FF7D050527F8595A60592E282E2E522E2E2E522E2E
%2E522E2E2E522E2E2E522E2E2E52FD042E2727F8270427F827272E282E2E
%2E28FD072E272E2E2E272E2E2E282E2E2E272E2E2E282E2E2E272E0527F8
%27F852FD10FF27F827F852845A595AFD042E282E2E2E282E2E2E282E2E2E
%282E2E2E282E2E2E282E282E052E052E05270528052E272E052E052E05FD
%052E272E052E282E27FD052E282E052E282E052E052E052E0405F827F852
%FD0EFFA8F8270527848B596059592E522E532E2E2E532E2E2E532E2E2E53
%2E2E2E532E2E2E532E2E28FD0B2E28FD042E532E2E2E532E522E532E522E
%532E522E532E522E2E2728272E2E2E282E2E2E05270527F87DFD0DFF27F8
%F8052EAF595A5959FD0C2E27FD0F2E282E282E052E272E052E272E05FD17
%2EF827F827F827052E052E282E0527F805F8A8FD0BFFA8270427F8848B60
%5960592E2E522E2E2E522E2E2E522E2E2E522E2E2E522E2E2E522E2E2E52
%2E2E2E52FD0B2E522E2E2E522E2E2E522E2E2E522E2E2E522E2E2E532727
%F8270527F82705FD052E0527050527FD0BFF7DF827F8278485595A59592E
%2E282E2E2E282E2E2E272E27FD052E282E2E2E282E2E2E27FD0F2E282E2E
%2E282E2E2E282E2E2E282E2E2E282E2E2E2727F827F805F827F827F82705
%2E272EF827F8F87DFD0AFF5227052752AF845A59842F2E2E532E2E2E53FD
%072E532E2E2E532E2E2E532E2E2E5959592E532E2E2E532E2E2E532E2E2E
%532E2E2E532E2E2E532E2E2E532E2E2E53FD042E042704272727F8270527
%F8FD052E0527F827FD09FFA827F827F8848584595A5953FD192E2F596059
%5928FD1F2E0527F8F851A75227F827F827F82E2E2E2827F827F87DFD08FF
%A8F827F82784AF5A60595A2E522E2E2E522E2E2E522E2E2E522E2E2E522E
%2E2E59FD042E59605960592E2E522E2E2E52FD072E52FD072E522E2E2E52
%2E2E2E522E27F827F852A7A77C2DF8270527052E272E0527052727FD08FF
%59F8F8F827AF845A35602F2E282E2E2E282E2E2E282E2E2E282E2E2E282E
%2E5AFD042E2753595A59592E2E282E2E2E28FD042E59595928FD072E282E
%2E2E282E2E2E282E0505F80527510427F805F827F805F827F805F827F8F8
%7DFD07FF7DF827F859AFAF59605A592E532E2E2E532E2E2E532E2E2E532E
%2E2E532E2E2E532E2E2E532E5959592E2E2E532E2E2E532E2E2E595A6059
%592E2E598459592E532E2E2E532E2E2E592E2EF8270527F8270527042705
%270427052704270527F859FD07FF2705F80459AF845A5960FD192E59FD04
%2E28FD072E282E2E2E2F60595A2E2E2E5959605959FD082E2827F827F827
%F827F827F827F827F827F827F827F827F80504FD07FF27F82705848B8559
%6059592E2E2E522E2E2E522E2E2E522E2E2E522E2E2E522E2E2E595A592E
%522E2E2E522E2E2E522E592E522E53596035FD042E6059605A592E522E2E
%2E532727F8270527F8270427F82705270527272705270527052705057DFD
%06FFF805F82784AF5A5A595AFD042E282E2E2E282E2E2E282E2E2E282E2E
%2E28FD042E532E2E282E2E2E282E2E2E2859595AFD082E282E355A595A2E
%2E282E2E2E0527F827F827F8050428272E282E2E2E282E052E052E2827F8
%27F858FD05FFA827F82727AF8585596059592E2E2E532E2E2E532E2E2E53
%2E2E2E532E2E2E532E2E2E532E2E2E532E2E2E532E2E2E59596059602E2E
%2E532E2E2E532E595984592E2E532E2E052705270427052D2E532E532E53
%2E52FD082E2727052727FD05FFA8F805F82E84AF5A5A595AFD252E5A595A
%592E2E595959FD0B2E27F827F827F80505FD0B2E052E272E052E272EF827
%F827A8FD04FF7D27052727AF85845960592E2E522E2E2E522E2E2E522E2E
%2E522E2E2E522E2E2E522E2E2E522E2E2E522E2E2E522E2E2E5A59592E2E
%59842FFD042E522E2E2E532E27F8270527F8272759355A5960FD082E282E
%2E2E282E2E27F82704A8FD04FF7DF827F82E84AFFD04592E2E282E2E2E28
%2E2E2E282E2E2E282E2E2E282E2E2E282E2E2E282E2E2E282E2E2E282E2E
%2E282E2E2E282E2E2E282E2E2E282E2E2E0527F827F827F8272E59595A59
%5A5959282E2E2E052E052E052E052E052E0505F8047DFD04FF7D2705272E
%AF85845984592E2E532E2E2E532E2E2E532E2E2E532E2E2E532E2E2E592E
%2E2E532E2E2E532E2E2E532E2E2E532E2E2E532E2E2E532E2E2E532E2E27
%2705270427042E59845A6059605A602E522E52FD042E282E2E2E282E2E2E
%F827F87DFD04FF7DF827F82E84AF595A5959FD0B2E53FD0A2E59602FFD1B
%2E0505F827F804F8595A84595A595A595AFD062E052E272E052E272E052E
%0527F80552FD04FF7D05F8272EAF8484596035FD042E522E2E2E522E2E59
%8459592E52FD042E596059602E2E2E522E2E2E522E2E28522E2E2E522E2E
%2E522E2E2E532E2EF8270527F827278485AF856059605959FD082E282E2E
%2E282E2E2E282E0527F852FD04FF7DF805F82E848B595A5959272E2E2E28
%2E2E2E282E2E59595A2E2E282E2E2E2759595A352E2E2E282E2E2EF827F8
%27F8282E2E282E2E2E282E2E2E2827F805F827F8042E8585AF8484595A2F
%2E05FD052E272E052E052E052E052E052E0527F8F827FD04FF7D2704272E
%AF8584596059532E2E2E59596059592E2E2E592E2E2E532E2E2E532E5935
%592E2E2E532E5327270527042704272E592E2E2E532E532E2704270427F8
%2759AFAFAF8585595A2E2E282E2852FD062E282E2E2E28FD052E0527F852
%FD04FF84F827F85285AF595A5959FD052E605959FD042E28FD122E27F827
%F827F827F82705FD052E2727F827F827F8285AAF84AF858435592E2E052E
%27FD052E272E272E052E272E052E272E0527F80527FD04FF8427052727AF
%8584596059532E522E2E59602F2E2E522E2E2E522E2E2E522E2E2E522E2E
%2E522E2E2E532E27F8270527F8270527052E2E2E27270527F827052E84AF
%85AF85842F2E2E522E2E27FD042E522E2E282E2E2E282E2E2E282E2E2EF8
%27F82EFD04FFA8F827F82784AF5959595A2E2E28FD072E282E2E2E282E2E
%2E282E2E2E282E2E2E28FD052E0405F8272705F827F805F8270505F827F8
%05F85384AF84AF8459282E2E2E282E2E2E28FD052E052E052E052E052E05
%2E052E0527F80527FD04FFA827052727AF8B8459605A592E532E2E2E532E
%2E2E532E2E2E532E2E2E532E2E2E532E2E2E532E2E2E532E2EF827F8527D
%27F8270427052704270527055985AF85AF8459FD052E532E2E2E532E2E2E
%532E2E282E2E2E282E2E2E282E2E2E0427F852FD04FFA8F827F82784AF5A
%59596035FD052E28FD192E2727F82704CFA12DF827F827F827F827055984
%AF84AF592E2E2E05FD072E282E272E2E2E272E052E272E052E272E052E05
%27F8052EFD04FFA827F82727AF8584596059602E2E2E522F592E522E2E2E
%522E2E2E522E2E2E522E2E2E522E2E2E522E2E2E520527F8277DCFA17D05
%27F8270427275985AF85AF59FD062E52FD0A2E272E2E2E282E2E2E28FD05
%2E0427F852FD05FF0505F82784AF5A5A595A592F2E2E2E60592F272E2E2E
%282E2E2E282E2E2E282E2E2E282E2E2E28FD042E27F827F852A7A72705F8
%27F827275984AF84852E2E2E592F2E2E2E282E282E28FD052E272E052E05
%2E052E052E052E052E0527F8F852FD05FF2DF8270584AF85596059842F2E
%2E53595A2E532E2E2E532E2E2E532E2E2E532E2E2E532E2E2E532E2E2E59
%2727042727A751270527F8272E5985AFAFAF2E2E2E595984592E2E532E2E
%2E532E2E2E532E2E282E2E2E282E2E2E28FD042E270527F87DFD05FF2705
%F82759AF845A595A5959FD202EF827F8272705F827F827275984AF8484FD
%052E5A59592E2E28FD092E272E052E272E052E272E052E272EF827F8057D
%FD05FF52F827F884AFAF596059592E522E2E2E522E2E2E522E2E2E52FD07
%2E52FD072E522E2E2E270427F8270527F8272E5984AFAF84FD052E525959
%2E522E2E2E522E2E2E522E2E282E2E2E282E2E2E282E2E2E282E2827F827
%05A8FD05FF52F8F8F852AF8460355A2E2E282E2E2E282E2E2E282E2E2E28
%2E2E2E052E2E2E282E2E2F35592E2E282E2E2E0527F827F827F805052E84
%AF84842E2E282E2E2E282E2E2E282E2E2E282E2E2E282E282E052E052E05
%2E052E052E052E0528F827F827A8FD05FF7DF827F859AFAF60605A5A2E53
%FD072E532E2E2E532E2E28FD042E532E5259845A592E53FD042E05270427
%0527275384AF858B2E2E2E532E2E2E52FD052E522E532E2E2E532E2E282E
%2E2E282E2E2E282E2E2E282E2727042752FD06FF7D05F80427AF8584595A
%592F282E2E2E27FD0B2E05FD062E5A596059FD052E2727F827F827052E59
%AF8584FD0C2E27FD092E272E052E272E052E272E052E272E0527F827F87D
%FD06FFA8F827042784AF85605960592E2E522E2E2E522E2E2E522E2E2E52
%2E2E2E52FD042E2F5A59592E2E2E522E2E05270527F82E59AF85AF2E2E2E
%522E2E2E59596059FD042E522E2E2E522E2E282E2E2E282E2E2E282E2E2E
%282E2E2EF8270527A8FD06FFA827F827F88484AF5A5959592E2E282E2E2E
%282E2E2E282E2E2E282E2E2E282E2E2E282E272E282E2E2E282E2E27F827
%F8272E848585FD042E282E2E2E2F60595AFD042E282E2E2E282E282E052E
%052E052E052E052E052E052E0505F80527FD08FF2727052759AF858B5960
%59592E522E2E2E532E2E2E532E2E2E532E522E532E2E2E532E2E2E532E2E
%2E532E2EF82705272E5A5A8559FD042E532E2E2E5A5A6059592E2E2E532E
%2E2E532E2E282E2E2E282E2E2E282E2E2E282E2E270427F87DFD08FF7DF8
%27F82E84AF8460595A592F28FD1D2E0527F827055959602FFD0A2E5A5959
%FD0A2E272E052E272E052E272E052E272E052EF827F827A8FD08FF8405F8
%27278585AF845A59602E2E2E522E2E2E522E2E2E52FD072E522E2E2E522E
%2E2E522E2E28270527F82E596059532E2E2E522E2E2E522E2E2E53FD072E
%522E2E272E2E2E282E2E2E282E2E2E282E2E2E0527050552FD0AFF0505F8
%0459AF84AFFD04592E2E282E2E2E282E2E2E282E2E2E052E272E282E2E2E
%282E2E2E282E2E2EF827F8272E59592E272E2E2E282E2E2E272E2E2E282E
%282E052E282E2E2E052E052E052E052E052E052E052E052E0505F827F8A8
%FD0AFF52F827F85285AF8B8559605A592E532E2E2E522E2E2E53FD072E53
%2E2E2E532E2E2E53FD042E052727592E522E532E2E2E532E2E2E592E2E2E
%532E2E28FD042E522E2E282E2E2E282E2E2E282E2E2E282E2E27F827F852
%FD0BFF7DF8F827F88485AF8484356059FD0D2E28FD1F2E2FFD072E052E2E
%2E052E272E052E272E052E272E052E272E0527F827F805A8FD0CFF2727F8
%272EAF84AF846059602FFD042E60FD052E522E2E2E522E2E2E522E2E2E52
%2E2E2E522E2E2E532E2E2E522E2E2E522E2E2E522E2E2E522E2E2E52FD06
%2E282E2E2E282E2E2E282E2E2E282E2E2EF827050552FD0DFF7DF827F805
%59AF84AF5A59595A2E2E282E2E2E282E2E2E282E2E2E282E2E2E282E2E2E
%282E2E2E282E2E2E282E2E2E282E2E2E282E282E282E2E2E282E2E2E282E
%2E2E052E052E052E052E052E052E052E052E052EF805F80505FD0FFF27F8
%27F82784AF85AF59605A592E532E2E2E532E2E2E532E2E2E532E2E2E532E
%2E2E532E2E2E532E2E2E532E2E2E532E2E2E532F592E522E2E2E532E2E2E
%532E52FD042E282E2E2E282E2E2E28FD052E27270427F8A8FD0FFF7DF8F8
%27F82E84AF8484355A592F28FD232E2F605959FD0A2E282E052E272E052E
%272E052E272E052E282E0527F827F87DFD11FF5205F827F8598BAF858459
%60592E2E522E2E2E522E2E2E522E2E2E52FD072E522E2E2E522E2E2E522E
%2E2E522E5A596059592E522E2E2E522E2E282E2E2E282E2E2E282E2E2E28
%2E2E2E282E2727F827F852FD13FF0404F827F85985AF8459595A2E2E282E
%2E2E282E2E2E282E2E2E282E2E2E052E2E2E282E2E2E282E2E2E282E2E2E
%282E595A595A2E2E28FD052E272E052E052E052E052E052E052E052E272E
%0527F827F827A8FD13FFA8F8270527F859AFAF5A605A592E532E2E2E532E
%2E2E532E2E2E532E2E28FD042E532E2E2E532E2E2E532E2E2E532E595960
%2F2E2E532E52FD042E282E2E2E282E2E2E282E2E2E282E2E2E05270527F8
%27A8FD15FF7DF827F805F8528585596035FD112E05FD1B2E052E272E052E
%272E052E272E052E272E052E0527F827F827A8FD17FF7DF8270527F85284
%84592FFD072E522E2E2E522E2E2E522E2E2E522E2E2E522E2E2E522E2E2E
%532E2E2E522E2E2E522E2E282E2E2E282E2E2E282E2E2E282E2E2E282E2E
%2E04270527F827A8FD19FF7DF805F827F8272E2E052E052E052E052E052E
%282E272E2E2E282E2E2E282E282E272E272E052E272E27FD072E052E052E
%052E052E052E052E052E052E052E052E0527F805F827F82DA8FD1BFFA804
%2705270427052E2E2E282E2E2E282E2E2E282E2E2E282E2E2E282E2E2E28
%2E2E2E282E2E2E28FD042E522E2E282E2E2E282E2E2E282E2E2E282E2E2E
%282E2E2E272705270527F858FD1EFFA827F8F827F827F827272E052E272E
%052E272E052E272E052E272E052E272E052E272E052E272E052E272E052E
%272E052E272E052E272E052E272E052E272E052E0527F827F8F8F87DFD21
%FF5205F8270527F827272E282E2E2E282E2E2E282E2E2E282E2E2E282E2E
%2E282E2E2E282E2E2E282E2E2E282E2E2E282E2E2E282E2E2E28FD052E27
%27F8270527F80527A8FD23FF7D27F827F827F827F827052E272E052E052E
%052E052E052E052E052E052E052E052E052E052E052E052E052E052E052E
%052E052E052E052E0527F827F827F827F82752FD27FF7D0505F8270527F8
%27052727FD072E282E2E2E282E2E2E282E2E2E282E2E2E282E2E2E282E2E
%2E28FD072E282E2727F82705270427F852A8FD2AFF5227F827F827F827F8
%27F827052E052E282E052E272E052E272E052E272E052E272E052E272E05
%2E272E052E282E052E0527F827F827F827F80527A8FD2DFFA87D2705F827
%F8270527F8270527052E272E27FD072E282E2E2E282E2E2E282E2E2E282E
%2E2E052E0527F8270527F827F805F852A8FD32FF7D52F8F8F827F827F827
%F805F827F827F8270527052E052E052E052E052E052805270527F827F805
%F827F827F827F8F8F82752A8FD36FFA859520505F8270527042705270427
%0527F8270527052705270527052704270527F827052704270527F827F827
%52A8FD3CFFAE7D522727F8F8F827F827F827F827F827F827F827F827F827
%F827F827F827F827F805F805F82752A8A8FD42FFA88452522727F805F827
%F827F8270527F8270527F8270427F827F805F82727527DA8FD4BFFA8A87D
%7D52522727F827F827F827F805F8272752527D7DA8A8FD26FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-20T11:05:19+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-20T11:05:19+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-20T11:05:19+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>208</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADQAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqlfmfzJ&#xA;pflrQL7XNUk9OysIzJKR9pj0VFHdnYhV9zipL4Y87fmf5s81+ZZdcub2a2YPWxtoJXRLaMGqLHxI&#xA;3HdupO+FpJfYv5M+bbrzX+W+j6teyerqBRre9kNKtLA5jLtTu4UOfngbYnZm2KXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXxR/zkh5mutX/ADT1K1+sPJY6T6dpaxFvgRljUzFV6AmUtU9dsWqR3e6f84w+fLjz&#xA;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&#xA;dirsVdirsVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:f1d9fbf0-ab5c-7b47-b947-2d7e8fc90092</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:f1d9fbf0-ab5c-7b47-b947-2d7e8fc90092</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:19d6b952-b641-9443-bd77-79e14843bd66</stRef:instanceID>
            <stRef:documentID>xmp.did:19d6b952-b641-9443-bd77-79e14843bd66</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:78ead596-65d4-664f-9311-ff5d6a6a9ec8</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:46:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:170ebbf7-4b79-5343-9e6b-0d3f9d7a2ef3</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:56:13+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d7886bab-91ac-7048-a0fb-9440b5348aa7</stEvt:instanceID>
                  <stEvt:when>2018-02-19T10:52:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d3f5251a-8625-ce47-a7c7-361c56ddbc1d</stEvt:instanceID>
                  <stEvt:when>2018-02-19T15:12:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:19d6b952-b641-9443-bd77-79e14843bd66</stEvt:instanceID>
                  <stEvt:when>2018-02-20T11:05:04+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f1d9fbf0-ab5c-7b47-b947-2d7e8fc90092</stEvt:instanceID>
                  <stEvt:when>2018-02-20T11:05:19+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.588988</stDim:w>
            <stDim:h>762.654701</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -762.655 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 762.655 li
612.589 762.655 li
612.589 0 li
cp
clp
586.435 446.618 mo
584.953 425.255 580.474 404.371 570.253 388.114 cv
551.45 358.212 513.984 354.005 481.419 351.504 cv
479.415 347.899 477.668 344.245 476.064 340.547 cv
480.315 294.761 476.346 250.267 464.745 207.172 cv
470.867 190.203 477.53 173.42 481.316 155.718 cv
487.881 125.021 486.901 93.7373 489.108 62.6148 cv
490.66 40.7256 460.706 40.4873 453.745 57.8296 cv
444.802 80.1143 435.123 101.842 423.679 122.751 cv
422.04 119.954 420.295 117.246 418.429 114.639 cv
407.64 99.5562 392.001 89.1602 373.844 82.7017 cv
339.71 51.9966 289.441 53.314 241.591 67.4712 cv
222.924 72.9932 201.963 75.103 189.465 88.1816 cv
184.412 74.6919 180.186 60.7505 176.824 46.1177 cv
172.133 25.7109 137.525 29.6245 139.615 51.1538 cv
143.023 86.2949 148.425 122.19 163.314 153.56 cv
143.068 187.901 142.299 230.246 140.051 270.28 cv
118.835 245.454 97.6399 220.61 76.3357 195.861 cv
75.1868 194.525 73.8362 193.44 72.3543 192.583 cv
68.9895 184.969 66.2044 176.982 64.2068 168.488 cv
59.0022 146.355 25.9046 151.85 25.3846 173.741 cv
24.6077 206.581 11.2474 232.929 16.8831 266.561 cv
21.0618 291.505 31.3309 312.258 45.7532 332.081 cv
44.6517 336.138 44.9334 340.716 47.2972 345.258 cv
51.6233 353.571 56.2234 361.658 60.949 369.643 cv
59.6746 371.224 58.5379 373.061 57.6829 375.295 cv
37.8958 426.868 30.2703 481.687 37.1805 536.67 cv
40.952 566.687 47.1326 604.855 63.6766 633.737 cv
82.6414 680.463 126.413 703.499 176.713 720.392 cv
179.011 723.722 182.268 726.46 186.63 727.909 cv
262.141 752.973 362.806 769.167 436.007 727.633 cv
463.812 732.985 491.416 707.866 508.909 689.729 cv
523.71 674.386 538.9 659.065 552.001 642.316 cv
604.335 590.756 616.668 513.623 586.435 446.618 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.227451 .396078 .415686 rgb
f
595.041 480.894 mo
591.487 460.954 578.405 428.32 551.574 440.685 cv
541.206 445.461 537.215 453.587 536.592 463.011 cv
529.926 463.363 523.351 467.246 521.98 474.199 cv
516.657 501.237 511.392 527.798 498.809 552.559 cv
498.452 553.264 498.197 553.96 498.012 554.647 cv
491.268 569.172 485.558 584.641 478.397 595.444 cv
462.448 619.502 442.93 642.725 420.781 662.337 cv
397.702 676.513 372.896 689.275 347.582 697.442 cv
347.099 697.037 346.741 696.566 346.122 696.239 cv
313.053 678.789 271.686 691.012 235.442 691.146 cv
194.897 691.293 156.514 680.595 116.552 678.365 cv
110.47 678.026 107.824 685.941 111.738 689.987 cv
133.293 712.269 164.485 721.065 195.07 725.298 cv
196.093 727.01 197.661 728.41 199.895 729.039 cv
246.82 742.254 290.61 755.897 340.166 752.312 cv
367.899 750.306 402.091 745.926 423.34 726.939 cv
447.204 730.802 474.66 713.043 493.303 700.907 cv
507.635 691.573 520.221 682.025 528.867 669.796 cv
590.131 660.527 603.147 526.363 595.041 480.894 cv
cp
.164706 .333333 .352941 rgb
f
467.502 537.297 mo
463.855 537.514 462.567 539.349 459.94 541.952 cv
454.078 547.761 448.551 553.901 443.094 560.09 cv
432.969 571.58 423.313 583.455 413.981 595.595 cv
412.629 597.355 415.687 599.742 417.081 597.987 cv
425.201 587.759 433.565 577.737 442.262 567.994 cv
446.383 563.377 450.584 558.838 454.814 554.323 cv
458.22 550.69 463.825 541.99 468.721 541.268 cv
469.208 541.197 469.489 540.657 469.518 540.221 cv
469.536 539.936 469.555 539.653 469.574 539.37 cv
469.645 538.297 468.566 537.234 467.502 537.297 cv
cp
f
432.455 609.872 mo
415.313 609.872 415.284 636.509 432.455 636.509 cv
449.593 636.509 449.622 609.872 432.455 609.872 cv
cp
f
433.857 527.985 mo
425.097 527.985 425.082 541.599 433.857 541.599 cv
442.617 541.599 442.631 527.985 433.857 527.985 cv
cp
f
477.355 494.199 mo
461.231 494.199 461.204 519.258 477.355 519.258 cv
493.48 519.258 493.507 494.199 477.355 494.199 cv
cp
f
487.178 526.778 mo
478.671 526.778 478.656 539.999 487.178 539.999 cv
495.683 539.999 495.698 526.778 487.178 526.778 cv
cp
f
384.747 620.055 mo
378.906 620.055 378.896 629.131 384.747 629.131 cv
390.587 629.131 390.597 620.055 384.747 620.055 cv
cp
f
112.537 655.21 mo
108.599 655.21 108.593 661.327 112.537 661.327 cv
116.471 661.327 116.479 655.21 112.537 655.21 cv
cp
f
126.567 570.375 mo
118.187 570.375 118.173 583.398 126.567 583.398 cv
134.947 583.398 134.962 570.375 126.567 570.375 cv
cp
f
184.098 600.319 mo
183.555 600.319 183.555 601.161 184.098 601.161 cv
184.638 601.161 184.64 600.319 184.098 600.319 cv
cp
f
216.369 629.785 mo
215.827 629.785 215.827 630.626 216.369 630.626 cv
216.91 630.626 216.912 629.785 216.369 629.785 cv
cp
f
242.142 591.208 mo
241.604 591.414 241.084 591.657 240.58 591.935 cv
239.711 592.377 239.472 593.402 239.628 594.275 cv
239.731 594.969 239.873 595.656 240.056 596.333 cv
241.049 600.511 247.005 600.612 248.579 596.875 cv
250.376 592.609 245.854 589.634 242.142 591.208 cv
cp
f
224.788 568.046 mo
224.246 568.046 224.246 568.889 224.788 568.889 cv
225.329 568.889 225.331 568.046 224.788 568.046 cv
cp
f
196.798 607.41 mo
196.331 607.462 195.867 607.516 195.4 607.569 cv
188.393 608.37 183.103 614.502 186.114 621.647 cv
188.762 627.931 197.69 630.277 202.586 624.917 cv
202.921 624.549 203.258 624.181 203.593 623.814 cv
208.618 618.311 205.667 606.397 196.798 607.41 cv
cp
f
201.484 570.531 mo
201.462 569.133 201.112 567.824 200.409 566.612 cv
199.756 565.498 198.701 564.35 197.54 563.744 cv
193.581 561.674 189.039 562.838 186.601 566.612 cv
184.137 570.428 184.739 574.488 186.492 578.439 cv
190.762 588.059 206.465 579.591 201.484 570.531 cv
cp
f
241.626 659.431 mo
228.675 659.431 228.655 679.557 241.626 679.557 cv
254.577 679.557 254.598 659.431 241.626 659.431 cv
cp
f
562.175 398.45 mo
556.792 394.48 552.172 391.486 546.768 389.039 cv
538.957 380.878 529.334 372.669 519.184 367.291 cv
508.051 357.978 491.067 348.545 483.509 359.569 cv
483.577 359.1 483.645 358.63 483.713 358.16 cv
484.37 353.609 482.808 349.494 480.224 346.407 cv
478.432 338.578 471.152 332.052 460.176 333.938 cv
456.627 334.547 453.819 335.75 451.11 337.192 cv
441.402 340.372 431.703 342.542 421.853 344.296 cv
421.093 344.144 420.38 344.078 419.596 343.886 cv
408.679 341.202 397.801 333.014 386.484 335.281 cv
385.826 334.804 385.162 334.362 384.414 334.026 cv
384.287 333.396 384.211 332.78 384.051 332.14 cv
380.121 316.647 359.875 319.024 354.938 332.14 cv
352.762 337.928 352.455 341.617 353.59 346.692 cv
344.92 352.051 336.223 357.376 326.818 361.74 cv
322.473 363.756 318.192 365.939 313.787 367.675 cv
313.651 367.687 313.476 367.711 313.347 367.719 cv
296.955 368.738 279.888 368.241 263.452 368.066 cv
250.561 367.931 250.697 388.327 262.256 388.395 cv
269.411 390.16 277.225 391.846 285.334 393.128 cv
295.488 396.08 302.986 396.881 311.608 395.375 cv
325.76 395.368 339.541 393.053 351.004 386.631 cv
363.455 379.656 375.516 369.856 381.442 357.583 cv
381.652 357.37 381.88 357.175 382.09 356.961 cv
382.64 357.693 383.183 358.431 383.8 359.122 cv
383.763 359.239 383.68 359.358 383.65 359.475 cv
382.842 362.428 382.827 364.864 383.65 367.817 cv
385.623 374.903 391.804 378.783 398.78 379.336 cv
408.759 380.127 418.976 379.332 429.101 377.581 cv
433.409 377.704 437.721 377.464 441.902 376.677 cv
446.983 375.719 451.587 373.272 456.158 370.944 cv
457.321 371.164 458.505 371.368 459.708 371.561 cv
464.1 375.985 471.072 379.07 478.525 381.73 cv
479.519 384.38 481.359 386.817 484.362 388.61 cv
494.298 394.546 503.794 397.443 515.18 397.975 cv
519.162 400.969 523.12 404.399 526.695 407.653 cv
530.13 415.213 534.999 419.445 544.018 421.85 cv
547.847 422.872 551.884 421.69 555.037 419.342 cv
566.935 421.406 571.498 405.328 562.175 398.45 cv
cp
f
461.603 210.146 mo
461.235 209.047 460.528 208.158 459.708 207.38 cv
459.06 176.247 446.672 144.273 425.49 138.96 cv
423.769 135.916 421.882 132.925 419.897 129.97 cv
411.724 104.965 396.206 84.0357 369.747 74.7002 cv
366.173 73.438 362.983 73.5864 360.257 74.6157 cv
357.733 73.5059 355.199 72.4063 352.714 71.2451 cv
352.055 68.416 350.488 65.8652 347.728 64.5283 cv
339.675 60.6279 329.141 58.7998 320.395 57.6343 cv
314.368 56.8306 309.052 56.1563 303.543 58.7783 cv
298.573 61.1431 300.828 70.0737 306.431 69.4414 cv
307.244 69.2759 308.063 69.2163 308.879 69.167 cv
310.614 73.2564 312.223 76.4351 316.817 78.999 cv
319.857 80.6958 323.264 81.1274 326.66 81.5415 cv
327.527 82.9014 328.59 84.124 330.054 84.9194 cv
330.38 85.0986 330.715 85.2588 331.042 85.4336 cv
331.488 87.752 332.882 89.9009 335.868 91.3179 cv
341.418 93.9541 346.68 96.7598 352.66 98.3535 cv
352.772 98.3823 352.891 98.4028 353.002 98.4307 cv
353.466 99.2192 353.999 99.9775 354.619 100.688 cv
371.517 120.016 386.367 137.723 398.64 158.312 cv
402.919 183.051 400.346 210.334 394.607 227.173 cv
392.698 232.772 394.375 237.292 397.659 240.248 cv
387.434 248.064 374.791 253.034 362.204 258.13 cv
347.185 264.208 347.458 288.937 366.313 288.484 cv
387.477 287.975 405.715 282.079 423.944 273.563 cv
434.5 273.924 445.856 265.579 453.373 259.47 cv
454.824 258.29 455.897 256.987 456.67 255.618 cv
456.949 255.54 457.28 255.476 457.543 255.398 cv
463.438 253.648 468.35 249.08 470.256 243.195 cv
474.223 230.932 465.28 221.133 461.603 210.146 cv
cp
f
89.8455 334.093 mo
88.9456 335.579 87.8973 337.024 86.8367 338.471 cv
86.9436 338.191 87.0423 337.891 87.1531 337.616 cv
88.4993 334.212 83.4002 332.584 81.5623 335.259 cv
78.0784 340.329 73.4725 345.535 70.9935 351.159 cv
68.2146 357.465 77.0467 360.974 79.4559 356.1 cv
79.4617 356.106 79.47 356.112 79.4783 356.119 cv
80.7034 354.182 81.6858 352.022 82.6004 349.811 cv
82.8328 349.771 83.0672 349.706 83.2601 349.537 cv
87.4017 345.961 89.3011 339.659 90.8323 334.508 cv
91.7693 331.355 92.8631 328.262 93.9256 325.154 cv
92.8426 328.262 91.5496 331.285 89.8455 334.093 cv
cp
f
95.8699 318.755 mo
95.2308 320.892 94.6448 323.05 93.9256 325.154 cv
94.6595 323.049 95.3006 320.91 95.8699 318.755 cv
cp
f
137.329 270.683 mo
135.954 267.617 133.482 264.902 129.819 263.435 cv
120.777 259.813 113.022 254.601 104.727 249.727 cv
103.095 248.244 101.415 246.825 99.8143 245.302 cv
97.8143 243.4 95.6419 242.692 93.5701 242.704 cv
93.5228 242.626 93.4671 242.554 93.4222 242.476 cv
90.0574 236.804 87.7532 230.281 83.9837 224.923 cv
83.1614 223.755 81.2991 224.441 81.6385 225.912 cv
83.0301 231.917 86.0965 237.892 89.7962 243.594 cv
85.0032 246.041 82.2552 252.745 86.9495 258.168 cv
89.408 261.313 92.0018 264.259 94.6678 267.114 cv
97.802 270.879 101.306 274.244 105.203 277.154 cv
105.479 277.387 105.732 277.64 106.009 277.87 cv
103.787 282.332 102.79 287.355 103.317 292.522 cv
102.638 293.302 102.049 294.12 101.43 294.923 cv
99.2347 287.874 94.16 282.782 86.8343 281.107 cv
86.366 281 85.887 281.056 85.41 281.019 cv
83.2376 279.834 80.9871 278.765 78.5369 277.976 cv
71.388 275.674 67.9495 283.814 70.4427 288.775 cv
70.2083 288.807 li
70.9832 290.597 71.9104 292.274 72.9402 293.873 cv
73.2215 294.973 73.7088 296.072 74.5022 297.149 cv
77.9944 301.89 79.7742 307.859 83.4617 312.316 cv
85.0091 314.187 87.5887 314.805 88.9578 316.365 cv
91.0418 318.742 89.3094 324.156 89.157 327.322 cv
89.0833 328.87 91.3831 329.493 92.0984 328.118 cv
93.5945 325.253 93.8909 322.417 94.8753 319.387 cv
95.2845 318.126 95.8987 317.052 96.5628 316.022 cv
96.3367 316.934 96.1106 317.844 95.8699 318.755 cv
96.1785 317.726 96.5091 316.704 96.7991 315.668 cv
96.908 315.504 97.0169 315.339 97.1277 315.177 cv
97.6253 315.833 98.1863 316.439 98.9285 316.821 cv
98.511 316.607 98.2708 318.467 98.1311 320.422 cv
97.7181 320.593 97.3436 320.877 97.2122 321.323 cv
97.0599 321.842 96.9061 322.361 96.7518 322.879 cv
96.4661 323.843 96.9656 324.706 97.7181 325.255 cv
98.1863 325.594 98.6551 325.934 99.1219 326.274 cv
100.674 327.402 102.412 325.831 102.569 324.297 cv
102.492 322.112 102.416 319.929 102.341 317.744 cv
103.271 317.779 104.139 317.585 104.945 317.162 cv
106.338 315.472 107.987 314.72 109.61 312.561 cv
112.067 309.292 113.32 305.503 114.72 301.756 cv
116.157 301.338 117.493 300.612 118.596 299.638 cv
118.625 299.687 118.654 299.735 118.681 299.784 cv
121.159 297.605 123.312 293.247 125.914 290.227 cv
127.316 295.539 134.353 299.675 139.039 294.414 cv
143.438 289.474 145.613 283.23 145.113 276.605 cv
144.803 272.511 140.698 270.1 137.329 270.683 cv
cp
f
98.1043 232.722 mo
88.4397 223.013 78.4978 213.574 68.7986 203.899 cv
60.1575 195.282 47.7142 208.123 55.5433 217.153 cv
64.5437 227.537 73.2937 238.145 82.3313 248.494 cv
89.3953 256.582 98.2874 269.523 110.252 268.803 cv
114.217 268.565 116.49 265.895 116.96 262.095 cv
118.403 250.415 105.52 240.176 98.1043 232.722 cv
cp
f
140.599 325.821 mo
138.184 325.821 136.176 326.432 134.485 327.386 cv
132.836 327.481 131.174 327.69 129.585 328.061 cv
130.08 321.67 130.573 315.28 131.067 308.89 cv
131.507 303.191 122.625 303.219 122.187 308.89 cv
121.681 315.434 121.176 321.979 120.67 328.525 cv
120.278 333.625 127.305 334.101 129.108 330.089 cv
129.844 329.998 130.588 330.058 131.327 330.019 cv
125.573 337.149 128.635 350.88 140.599 350.88 cv
156.724 350.88 156.751 325.821 140.599 325.821 cv
cp
f
104.118 358.543 mo
92.1824 358.543 92.1619 377.091 104.118 377.091 cv
116.052 377.091 116.073 358.543 104.118 358.543 cv
cp
f
164.508 391.574 mo
161.17 394.212 159.638 398.216 160.656 402.175 cv
159.191 407.113 151.984 407.834 147.695 407.434 cv
147.059 407.374 147.074 408.35 147.695 408.42 cv
150.118 408.693 152.498 408.632 154.874 408.058 cv
157.254 407.485 159.7 406.155 162.111 405.899 cv
165.246 405.567 167.503 406.519 170.421 404.688 cv
173.406 402.817 174.74 399.105 174.524 395.723 cv
174.177 390.316 168.504 388.417 164.508 391.574 cv
cp
f
172.382 324.748 mo
170.822 323.321 169.587 321.836 167.503 321.285 cv
166.228 320.947 165.252 321.892 165.129 323.092 cv
164.935 324.975 165.762 326.477 166.446 328.204 cv
168.75 334.025 176.353 328.385 172.382 324.748 cv
cp
f
176.653 297.418 mo
175.687 293.083 169.357 291.25 166.38 294.707 cv
165.42 295.821 164.551 296.96 163.717 298.173 cv
161.012 302.114 163.786 307.716 168.082 308.898 cv
172.296 310.059 177.843 306.659 177.323 301.858 cv
177.159 300.357 176.982 298.893 176.653 297.418 cv
cp
f
186.904 254.26 mo
185.183 254.26 183.685 254.594 182.33 255.104 cv
184.834 251.499 186.918 247.355 184.213 243.279 cv
183.062 241.541 180.772 240.284 178.643 241.012 cv
178.363 241.108 178.24 241.263 177.997 241.372 cv
177.66 240.213 177.265 239.076 177 237.886 cv
175.926 233.057 175.798 228.11 174.754 223.291 cv
173.393 217.02 165.394 218.455 163.421 223.291 cv
161.965 226.857 162.002 230.318 163.044 233.756 cv
163.528 241.953 165.717 250.432 168.912 257.363 cv
170.397 260.577 173.558 261.204 176.388 260.333 cv
172.44 267.749 175.924 279.32 186.904 279.32 cv
203.028 279.32 203.054 254.26 186.904 254.26 cv
cp
f
207.617 240.708 mo
206.321 237.16 204.531 235.217 200.646 234.7 cv
195.697 234.042 191.146 237.87 191.146 242.936 cv
191.146 255.641 211.751 252.013 207.617 240.708 cv
cp
f
274.161 152.322 mo
271.474 149.348 266.821 147.728 262.704 145.628 cv
260.55 140.814 257.126 136.767 251.778 133.905 cv
245.665 130.636 238.677 137.948 242.317 143.367 cv
242.315 143.368 li
245.108 148.403 247.005 158.211 251.211 163.339 cv
245.061 179.828 236.288 192.482 221.666 204.118 cv
221.72 204.171 li
220.388 205.532 219.595 207.101 219.262 208.726 cv
217.099 208.607 214.947 208.443 212.867 208.278 cv
209.519 208.015 206.481 211.984 207.636 215.147 cv
214.653 234.406 239.441 231.594 253.301 221.37 cv
263.711 213.688 273.647 195.596 270.229 181.766 cv
272.034 178.845 273.709 175.865 275.049 172.755 cv
277.787 166.41 279.227 157.936 274.161 152.322 cv
cp
f
290.736 115.436 mo
283.754 115.436 283.741 126.289 290.736 126.289 cv
297.72 126.289 297.73 115.436 290.736 115.436 cv
cp
f
307.574 147.622 mo
291.449 147.622 291.422 172.681 307.574 172.681 cv
323.698 172.681 323.725 147.622 307.574 147.622 cv
cp
f
294.892 216.85 mo
291.568 217.268 289.116 218.204 286.14 219.643 cv
275.668 224.708 285.795 241.898 295.204 235.147 cv
297.851 233.247 299.928 231.603 301.831 228.943 cv
305.157 224.294 300.772 216.113 294.892 216.85 cv
cp
f
321.606 209.359 mo
305.481 209.359 305.454 234.418 321.606 234.418 cv
337.73 234.418 337.757 209.359 321.606 209.359 cv
cp
f
342.653 173.963 mo
327.924 173.963 327.901 196.852 342.653 196.852 cv
357.38 196.852 357.405 173.963 342.653 173.963 cv
cp
f
133.046 665.38 mo
122.763 645.524 110.04 627.85 100.591 607.93 cv
104.616 606.038 103.933 598.711 98.5052 598.711 cv
97.8143 598.711 97.2327 598.869 96.6941 599.08 cv
95.5926 596.355 94.5174 593.613 93.574 590.777 cv
91.4573 584.405 88.3738 574.403 83.698 566.599 cv
88.7811 563.673 92.2342 557.576 90.9515 550.705 cv
87.4695 532.074 82.8982 514.612 80.5452 496.665 cv
81.2478 476.076 85.0545 454.756 84.6126 434.213 cv
89.262 415.102 95.1814 396.386 95.5286 376.368 cv
95.6727 368.105 90.8279 363.021 84.7752 361.01 cv
86.5774 358.788 87.4144 355.893 86.2981 352.96 cv
76.1116 326.223 51.5496 308.812 42.0125 281.072 cv
36.533 265.143 35.6634 248.979 36.5926 232.75 cv
40.5164 231.161 43.3299 227.601 42.0867 222.966 cv
42.0887 204.289 44.035 185.805 43.5848 167.137 cv
43.3528 157.58 30.0052 155.886 27.1111 164.908 cv
23.0638 177.527 21.6272 189.532 21.4749 201.935 cv
9.28887 260.163 18.949 325.398 70.2269 362.003 cv
66.0936 364.08 62.8172 367.754 61.8904 373.133 cv
50.9227 422.44 26.0091 484.581 46.5716 533.807 cv
47.6072 545.196 49.073 556.608 51.2698 567.834 cv
45.2146 583.851 57.0457 609.715 62.3836 622.045 cv
73.1746 646.975 88.5633 671.73 111.994 686.433 cv
112.03 686.348 112.064 686.264 112.101 686.181 cv
124.921 693.029 140.669 680.099 133.046 665.38 cv
cp
.396078 .65098 .705882 rgb
f
146.213 631.379 mo
140.499 631.379 140.489 640.258 146.213 640.258 cv
151.925 640.258 151.935 631.379 146.213 631.379 cv
cp
f
119.552 539.011 mo
110.537 539.011 110.523 553.021 119.552 553.021 cv
128.565 553.021 128.582 539.011 119.552 539.011 cv
cp
f
126.948 498.809 mo
124.228 499.735 121.402 500.355 118.621 501.068 cv
112.186 502.717 110.137 511.134 114.747 515.745 cv
119.355 520.353 127.772 518.303 129.422 511.869 cv
130.136 509.087 130.754 506.261 131.681 503.542 cv
132.602 500.836 129.655 497.887 126.948 498.809 cv
cp
f
162.29 488.424 mo
160.263 488.344 160.849 488.62 159.768 487.861 cv
156.714 485.717 152.091 487.308 150.32 490.338 cv
148.237 493.898 149.828 497.51 152.798 499.789 cv
156.488 502.619 161.64 503.061 165.55 500.459 cv
170.884 496.913 168.845 488.681 162.29 488.424 cv
cp
f
489.977 464.457 mo
455.915 467.864 423.57 496.87 397.756 517.743 cv
365.301 543.984 339.025 574.511 316.654 609.618 cv
311.857 617.145 323.351 623.418 328.411 616.49 cv
350.735 585.926 377.075 557.708 406.728 534.117 cv
434.054 512.377 470.967 502.197 496.047 479.109 cv
501.21 474.355 497.455 463.708 489.977 464.457 cv
cp
f
353.555 463.176 mo
352.424 457.945 344.106 457.941 342.975 463.176 cv
342.762 464.056 342.593 464.945 342.462 465.84 cv
340.822 475.545 355.719 475.606 354.069 465.84 cv
353.937 464.945 353.766 464.056 353.555 463.176 cv
cp
f
394.57 433.864 mo
393.115 433.864 391.836 434.127 390.644 434.498 cv
390.525 434.09 390.408 433.679 390.272 433.298 cv
386.673 423.18 371.889 429.135 376.567 439.076 cv
377.792 441.678 379.847 444.568 382.521 445.718 cv
382.215 452.201 386.201 458.923 394.57 458.923 cv
410.693 458.923 410.72 433.864 394.57 433.864 cv
cp
f
236.013 436.363 mo
228.523 436.363 228.511 448.005 236.013 448.005 cv
243.503 448.005 243.515 436.363 236.013 436.363 cv
cp
f
321.176 257.024 mo
303.771 248.833 279.534 260.872 262.355 265.817 cv
256.386 267.536 257.241 277.645 263.878 277.058 cv
281.225 275.522 309.218 278.043 322.136 264.46 cv
324.072 262.423 324.033 258.368 321.176 257.024 cv
cp
f
303.623 58.4336 mo
287.523 52.1353 268.665 58.4956 252.896 63.4194 cv
236.202 68.6328 218.7 76.1494 207.585 90.1538 cv
198.114 102.086 210.292 123.343 225.383 113.218 cv
244.434 100.436 270.595 87.6616 294.549 91.3511 cv
316.262 94.6953 324.267 66.5117 303.623 58.4336 cv
cp
f
321.813 112.452 mo
321.813 112.441 321.815 112.433 321.815 112.424 cv
321.9 105.253 311.968 102.68 308.394 108.789 cv
304.688 115.125 311.989 122.043 318.247 118.643 cv
319.558 117.93 320.467 116.976 321.203 115.686 cv
321.766 114.698 321.908 113.57 321.813 112.452 cv
cp
f
348.266 141.921 mo
339.251 141.921 339.235 155.93 348.266 155.93 cv
357.279 155.93 357.293 141.921 348.266 141.921 cv
cp
f
228.998 253.285 mo
218.84 253.285 218.824 269.071 228.998 269.071 cv
239.154 269.071 239.172 253.285 228.998 253.285 cv
cp
f
223.385 224.794 mo
207.26 224.794 207.233 249.854 223.385 249.854 cv
239.509 249.854 239.536 224.794 223.385 224.794 cv
cp
f
262.622 234.789 mo
262.351 234.69 262.079 234.592 261.808 234.494 cv
256.752 232.657 250.991 238.418 252.826 243.475 cv
252.925 243.746 253.023 244.018 253.122 244.289 cv
255.06 249.623 261.668 252.055 266.028 247.695 cv
270.388 243.335 267.956 236.727 262.622 234.789 cv
cp
f
181.138 339.242 mo
179.449 339.755 177.783 340.196 176.053 340.564 cv
169.412 341.978 167.293 350.456 171.135 355.436 cv
175.134 360.62 183.405 360.278 186.749 354.478 cv
187.615 352.978 188.529 351.563 189.522 350.146 cv
193.275 344.779 187.062 337.441 181.138 339.242 cv
cp
f
212.16 421.301 mo
206.954 421.301 206.946 429.391 212.16 429.391 cv
217.365 429.391 217.375 421.301 212.16 421.301 cv
cp
f
259.868 407.203 mo
243.741 407.203 243.717 432.263 259.868 432.263 cv
275.991 432.263 276.017 407.203 259.868 407.203 cv
cp
f
315.992 445.582 mo
300.503 445.582 300.478 469.655 315.992 469.655 cv
331.482 469.655 331.509 445.582 315.992 445.582 cv
cp
f
354.243 426.318 mo
349.74 422.844 343.169 423.139 339.087 427.221 cv
334.345 431.962 335.081 438.743 339.087 443.545 cv
338.943 443.425 338.801 443.305 338.657 443.185 cv
339.712 445.282 342.593 447.037 344.97 446.806 cv
346.951 446.615 348.106 447.124 350.318 446.514 cv
353.117 445.743 355.75 443.714 357.215 441.209 cv
360.136 436.216 358.759 429.803 354.243 426.318 cv
cp
f
251.965 572.342 mo
252.074 572.484 252.218 572.572 252.323 572.72 cv
251.915 572.138 251.858 572.114 251.965 572.342 cv
cp
f
254.216 575.918 mo
254.748 577.098 252.318 573.109 251.965 572.342 cv
246.321 564.99 233.699 566.43 232.473 576.719 cv
231.362 586.074 240.707 590.918 248.107 587.322 cv
248.966 587.282 249.819 587.207 250.768 586.974 cv
252.62 586.522 254.257 584.886 254.709 583.034 cv
255.358 580.38 255.352 578.436 254.216 575.918 cv
cp
f
271.092 657.848 mo
270.55 657.848 270.55 658.69 271.092 658.69 cv
271.633 658.69 271.635 657.848 271.092 657.848 cv
cp
f
358.087 647.142 mo
341.962 647.142 341.935 672.201 358.087 672.201 cv
374.211 672.201 374.238 647.142 358.087 647.142 cv
cp
f
385.415 621.929 mo
384.437 622.239 383.456 622.548 382.478 622.857 cv
377.741 624.353 381.286 631.455 384.988 628.808 cv
385.839 628.198 386.692 627.588 387.545 626.978 cv
389.931 625.272 388.61 620.921 385.415 621.929 cv
cp
f
407.199 582.597 mo
391.072 582.597 391.047 607.657 407.199 607.657 cv
423.321 607.657 423.347 582.597 407.199 582.597 cv
cp
f
418.423 544.866 mo
406.107 544.866 406.086 564.005 418.423 564.005 cv
430.737 564.005 430.757 544.866 418.423 544.866 cv
cp
f
221.983 482.24 mo
208.524 482.24 208.501 503.155 221.983 503.155 cv
235.439 503.155 235.462 482.24 221.983 482.24 cv
cp
f
449.307 486.32 mo
426.877 489.883 406.672 511.01 390.081 525.579 cv
368.728 544.331 350.646 564.854 333.225 587.242 cv
328.37 593.48 336.674 602.411 342.154 596.172 cv
359.663 576.238 378.925 557.276 398.66 539.542 cv
416.179 523.8 440.862 511.597 452.984 491.102 cv
454.557 488.444 451.971 485.896 449.307 486.32 cv
cp
.682353 .890196 .933333 rgb
f
118.286 680.016 mo
109.549 659.049 97.5081 641.081 86.5096 621.236 cv
69.5979 590.721 62.9056 563.094 60.9407 528.418 cv
58.0774 477.855 62.8338 430.392 74.4095 381.513 cv
76.722 371.756 63.43 361.795 56.1062 370.858 cv
23.8924 410.726 29.035 480.143 31.1497 528.418 cv
33.9246 591.716 57.6067 643.765 102.291 689.327 cv
108.517 695.675 122.111 689.195 118.286 680.016 cv
cp
f
71.0267 340.078 mo
46.4852 310.037 34.0686 282.629 33.9676 242.523 cv
33.8958 213.877 43.2972 187.648 45.3133 159.564 cv
46.0823 148.838 30.9671 148.267 27.678 157.177 cv
5.79228 216.497 4.50176 310.544 65.2879 347.517 cv
70.1653 350.484 74.2576 344.034 71.0267 340.078 cv
cp
f
314.062 66.0596 mo
290.721 51.4107 248.08 68.6758 225.536 78.5171 cv
218.295 81.6782 223.452 93.8731 230.934 91.3203 cv
246.446 86.0274 261.894 82.7368 278.214 81.1499 cv
290.376 79.9673 303.011 81.8491 314.062 76.2827 cv
318.196 74.2007 317.612 68.2876 314.062 66.0596 cv
cp
f
355.733 309.871 mo
338.209 307.04 320.726 308.625 303.052 309.311 cv
286.806 309.941 269.705 309.146 254.031 313.955 cv
251.603 312.841 249.145 311.821 246.594 311.061 cv
236.58 308.083 231.96 319.178 235.485 325.954 cv
235.359 325.97 235.234 325.986 235.109 326.003 cv
245.801 343.521 272.831 359.793 293.159 362.774 cv
316.494 366.197 340.24 347.618 359.246 336.749 cv
369.396 330.944 368.637 311.957 355.733 309.871 cv
cp
.964706 .952941 .427451 rgb
f
475.423 288.377 mo
475.896 286.525 476.025 284.573 475.647 282.677 cv
474.106 274.911 465.882 270.017 458.264 272.277 cv
455.354 273.14 452.849 274.725 450.777 276.967 cv
449.938 277.874 448.946 279.052 448.351 280.156 cv
447.973 280.86 447.809 281.084 447.795 281.101 cv
447.192 281.547 446.629 282.028 446.173 282.6 cv
430.867 283.505 414.859 286.027 402.942 294.255 cv
399.818 296.414 397.805 298.954 396.708 301.862 cv
393.092 302.314 389.553 303.377 386.143 305.595 cv
380.99 308.947 379.516 318.307 386.143 321.271 cv
399.717 327.341 418.207 332.901 433.209 331.035 cv
449.763 328.975 462.971 317.366 473.894 305.587 cv
478.471 300.648 478.513 293.519 475.423 288.377 cv
cp
f
335.18 528.317 mo
330.2 520.461 320.251 518.62 311.224 516.865 cv
308.544 514.694 305.313 513.489 301.496 514.063 cv
296.678 514.789 291.634 518.334 290.608 523.443 cv
289.03 531.31 290.421 539.214 292.898 546.792 cv
295.085 553.489 297.909 561.607 304.673 564.901 cv
312.558 568.741 322.821 564.5 325.071 556.628 cv
329.318 555.064 333.073 552.161 335.254 548.036 cv
338.427 542.027 338.918 534.218 335.18 528.317 cv
cp
.741176 .698039 .584314 rgb
f
523.682 411.226 mo
523.209 410.614 li
520.007 406.457 514.478 402.601 508.84 404.767 cv
507.794 405.168 506.881 405.594 506.042 406.051 cv
503.972 403.423 501.025 401.656 497.409 401.494 cv
488.641 401.099 484.785 408.375 481.888 415.28 cv
480.278 419.114 481.945 424.008 484.306 427.063 cv
487.088 430.664 490.51 431.907 494.921 432.39 cv
499.068 432.844 503.368 433.679 507.541 433.708 cv
514.609 433.759 519.577 430.481 523.682 424.966 cv
526.239 421.529 526.321 414.652 523.682 411.226 cv
cp
f
209.934 125.514 mo
192.395 103.405 181.473 72.2656 169.385 46.6328 cv
167.24 42.083 163.338 39.9107 159.147 39.5142 cv
153.857 36.7515 147.093 37.1089 144.205 43.6465 cv
133.619 67.605 134.129 101.547 144.523 125.65 cv
155.785 151.762 169.529 180.604 193.267 197.333 cv
202.862 204.096 215.792 196.843 218.891 186.908 cv
226.78 161.635 226.044 145.825 209.934 125.514 cv
cp
f
488.666 45.2227 mo
485.538 33.9419 467.23 29.7612 461.784 41.709 cv
457.757 50.541 456.08 53.9028 456.62 61.8775 cv
448.919 76.4966 443.057 93.5278 438.656 107.362 cv
431.804 128.901 444.417 148.64 446.105 170.559 cv
447.511 188.827 471.89 192.59 477.998 174.875 cv
492.495 132.829 500.684 88.564 488.666 45.2227 cv
cp
f
311.347 526.809 mo
310.021 521.884 307.374 518.677 303.534 515.606 cv
300.64 513.291 296.002 512.355 293.21 515.606 cv
290.134 519.188 287.745 521.989 286.783 526.809 cv
285.741 532.038 285.727 537.883 286.956 543.033 cv
287.893 546.964 291.72 551.258 295.86 551.936 cv
298.281 552.333 300.217 552.281 302.637 551.936 cv
306.778 551.346 310.601 546.897 311.54 543.033 cv
312.751 538.054 312.702 531.845 311.347 526.809 cv
cp
1 .937255 .784314 rgb
f
491.388 400.999 mo
482.625 400.999 482.611 414.614 491.388 414.614 cv
500.147 414.614 500.162 400.999 491.388 400.999 cv
cp
f
210.846 176.77 mo
197.207 159.551 179.79 144.255 168.999 124.886 cv
154.527 98.9004 156.642 65.9033 162.039 37.3272 cv
163.854 27.7158 151.285 21.5117 145.81 30.4844 cv
130.438 55.6734 128.467 91.6602 137.823 119.506 cv
147.44 148.129 171.465 169.91 187.448 194.824 cv
198.897 212.668 224.431 193.921 210.846 176.77 cv
cp
f
486.796 40.0523 mo
482.05 29.9297 469.074 34.7456 465.697 42.8106 cv
458.795 59.2891 448.759 74.6006 439.941 90.0908 cv
432.172 103.747 419.463 117.14 427.876 132.893 cv
429.652 136.218 433.738 138.562 437.503 138.416 cv
458.417 137.602 466.71 109.254 475.812 93.5132 cv
485.973 75.9419 496.136 59.9834 486.796 40.0523 cv
cp
f
92.4983 265.431 mo
79.7029 257.625 66.907 249.821 54.1111 242.018 cv
45.5857 236.817 33.4031 245.044 36.4803 255.1 cv
43.8699 279.232 54.7117 301.792 69.3309 322.38 cv
78.0657 334.684 98.8377 323.227 89.9925 310.77 cv
83.1395 301.117 77.1375 291.104 71.9759 280.674 cv
80.1922 285.686 li
93.24 293.644 105.525 273.375 92.4983 265.431 cv
cp
.0941176 .141176 .129412 rgb
f
330.025 538.549 mo
323.27 545.585 316.984 552.998 311.242 560.838 cv
308.046 547.447 304.315 534.219 299.991 521.149 cv
305.181 524.34 309.997 528.739 314.427 531.624 cv
319.524 534.941 324.577 537.139 330.025 538.549 cv
cp
518.05 422.198 mo
508.84 422.873 499.76 424.134 490.977 426.359 cv
490.868 421.492 491.147 416.695 492.245 411.878 cv
492.414 411.133 492.805 410.239 493.157 409.406 cv
494.427 409.683 495.882 409.902 496.645 410.166 cv
504.489 412.866 511.628 417.042 518.05 422.198 cv
cp
349.221 317.134 mo
334.509 334.337 316.88 353.667 295.847 353.521 cv
272.422 353.358 254.803 336.195 241.432 318.176 cv
241.688 317.895 242.008 317.674 242.233 317.366 cv
278.977 320.667 314.533 321.301 349.221 317.134 cv
cp
564.399 617.569 mo
519.012 699.642 414.926 736.657 325.867 738.86 cv
244.642 740.869 127.156 718.249 77.1853 647.105 cv
49.3748 607.511 47.5125 555.244 45.8509 508.404 cv
44.1653 460.957 47.5857 414.354 72.3436 372.667 cv
74.8973 368.365 74.4129 364.175 72.3738 360.916 cv
76.1678 355.096 75.3172 345.246 66.8372 341.679 cv
35.9378 328.689 27.1722 273.936 24.5833 244.349 cv
21.91 213.814 26.0833 184.336 36.2132 156.151 cv
58.4051 202.046 90.7967 240.167 133.655 269.912 cv
134.881 270.762 136.095 271.264 137.289 271.6 cv
144.417 277.553 158.945 271.373 156.728 259.29 cv
153.456 241.466 153.529 223.79 156.698 206.215 cv
160.788 203.973 163.356 199.595 161.299 193.759 cv
161.189 193.445 161.078 193.132 160.968 192.818 cv
162.196 190.464 162.656 187.716 162.16 184.978 cv
162.816 184.509 163.303 183.918 163.829 183.334 cv
173.375 195.81 184.067 206.778 195.295 215.428 cv
200.693 219.586 206.091 217.815 209.368 213.776 cv
210.966 213.663 212.64 213.188 214.344 212.251 cv
240.931 197.64 270.992 169.938 247.973 138.233 cv
236.783 122.821 218.096 114.258 205.435 99.7642 cv
226.267 73.4273 279.909 64.7222 310.082 64.8257 cv
355.389 64.9805 392.784 85.207 415.949 124.394 cv
439.09 163.541 452.689 210.493 460.348 257.483 cv
458.647 257.557 456.865 258.012 455.038 259.034 cv
383.462 299.07 310.267 300.807 230.462 292.517 cv
224.786 291.927 219.95 296.62 218.709 301.918 cv
212.42 304.242 207.968 311 212.685 318.168 cv
230.425 345.126 253.049 371.761 286.982 376.396 cv
324.584 381.53 347.786 353.644 370.616 328.139 cv
391.282 339.196 413.659 347.141 436.578 342.054 cv
445.006 340.184 453.744 340.895 461.474 335.484 cv
463.984 333.727 466.076 331.692 467.904 329.487 cv
467.989 331.069 468.14 332.708 468.216 334.28 cv
468.547 341.239 473.728 345.071 479.159 345.746 cv
478.751 351.861 482.371 358.771 490.161 359.802 cv
529.512 365.016 555.601 389.013 571.085 421.238 cv
561.867 421.431 552.346 421.322 542.767 421.365 cv
544.201 417.7 543.743 413.432 539.919 409.85 cv
527.484 398.199 508.141 384.566 490.194 384.429 cv
468.636 384.263 466.518 413.771 467.404 429.438 cv
467.513 431.381 468.009 433.073 468.771 434.532 cv
442.184 447.333 417.446 469.125 394.278 485.58 cv
378.297 496.931 362.608 508.624 348.139 521.329 cv
346.289 518.738 343.403 516.815 339.415 516.466 cv
327.17 515.395 318.135 503.861 307.622 498.501 cv
298.287 493.743 289.423 492.35 279.209 494.59 cv
273.428 495.859 268.49 503.164 270.685 509.023 cv
279.841 533.453 286.964 558.375 292.104 583.955 cv
292.511 585.985 293.311 587.6 294.34 588.89 cv
291.021 595.812 288.094 603.039 285.692 610.672 cv
281.106 625.25 303.859 631.897 308.432 617.359 cv
325.551 562.931 371.941 530.105 416.549 498.739 cv
436.761 484.527 457.036 467.02 479.247 456.026 cv
507.033 442.271 541.3 445.624 571.558 444.921 cv
574.815 444.847 577.354 443.662 579.249 441.912 cv
597.609 499.351 588.988 573.105 564.399 617.569 cv
cp
154.053 41.8692 mo
158.6 61.5874 163.484 80.3994 175.403 98.8257 cv
182.039 109.081 189.774 118.588 198.656 126.982 cv
202.201 130.335 210.338 134.676 212.631 138.786 cv
219.626 151.329 215.723 183.975 202.998 191.403 cv
165.833 159.41 133.112 90.4009 154.053 41.8692 cv
cp
464.455 287.979 mo
460.544 288.497 457.087 291.018 456.015 296.212 cv
455.161 301.858 453.561 307.297 451.213 312.527 cv
446.619 315.706 441.648 317.204 436.299 317.02 cv
433.541 317.932 429.351 319.884 426.72 320.38 cv
414.398 322.704 399.772 316.816 387.422 310.376 cv
413.269 304.248 438.679 294.903 463.762 281.217 cv
464.039 283.488 464.2 285.715 464.455 287.979 cv
cp
473.206 50.7847 mo
484.518 92.3369 482.537 135.713 467.155 176.638 cv
460.306 155.137 451.528 134.747 440.464 116.504 cv
453.241 95.1372 464.922 73.7368 473.206 50.7847 cv
cp
491.826 336.323 mo
491.866 335.784 491.936 335.266 491.909 334.682 cv
490.134 297.43 486.117 252.416 476.014 208.934 cv
478.144 208.093 480.055 206.41 481.369 203.567 cv
511.084 139.259 511.389 70.3237 481.781 5.86329 cv
477.752 -2.90575 461.753 -1.63915 460.079 8.32618 cv
454.741 40.1167 441.358 67.772 425.594 95.0156 cv
418.132 85.8101 409.865 77.4678 400.634 70.2798 cv
368.369 45.1538 326.686 37.855 286.802 42.9424 cv
257.367 46.6968 215.168 56.376 191.799 79.6484 cv
180.451 57.9326 177.438 34.919 170.752 9.84523 cv
168.548 1.57032 157.271 -2.35839 151.041 4.28077 cv
111.401 46.5274 119.97 109.65 148.023 159.389 cv
143.875 160.273 139.654 163.391 138.861 167.611 cv
137.801 173.254 137.487 178.684 138.095 184.201 cv
137.426 185.231 136.852 186.396 136.487 187.8 cv
132.111 204.602 130.301 221.43 130.883 238.365 cv
92.9534 208.122 64.7669 169.508 47.5247 123.398 cv
44.3548 114.925 30.8895 110.098 25.9192 120.199 cv
4.2122 164.309 -4.86397 212.068 2.54082 260.971 cv
7.81084 295.773 20.1585 341.072 52.1443 360.285 cv
52.1282 360.313 52.1048 360.332 52.0887 360.36 cv
22.8758 409.551 19.8572 464.483 22.7361 520.386 cv
25.2464 569.116 29.0989 621.981 58.7659 662.784 cv
121.775 749.447 267.631 772.096 366.311 759.374 cv
471.823 745.771 579.857 684.4 605.751 574.579 cv
627.232 483.46 600.451 351.718 491.826 336.323 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (head.eps)
%%CreationDate: 2/20/2018 11:05 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQBLXFX?mt!WIlG7=[5H.VD.]]Q>eZE1S+XfTr1rB.OmP#0ebn*4*`kS)(O8fAF9mhXSZLVi&HKmBMG3/65c@bfIk]*W*,8
%,CfEn_j_`TJ,Ag0*tE5gj]B'$c?\+AdS8-X]J$m(qN@J!os::hf9a7cs'^96HroI`nSEEYbk!BPjLZ7\??_`6Nk"lVk/ED=h7nF5
%S%!<Bh#Hl]n]e*nDh%Q4meE^CYBPKpr"&A?oA/m(?bLdWcb%)qk:cg+Y1`hdpu_/<ec"USg[C`KgVpd]NUo*AphtYDX/#jqcM$nT
%?[a@s?f/VF-f^E)EVe"1q\P%XQI<q9kC<Ndq`hakiSE8Omp<_RrBGa^;tkbZ[Hk$b^ONC.88#]k3B;O@+7;nus7lN4=7>dQ]7-(D
%qX,.]FRakJIf2E5Ic+4'DWH*=A;AVY[t]5,&lUc[G5WA/pUb^[k^@pORhP5Kon5<lQ678r]>._.!%gFu+>JM`]Dq<r=3od[lRJcb
%Q'2fu4Pb9cYT$=06<Oh'q@r"C#XWNp]:6*idJ2sD>%Y>%LN;RPF*:\nrVN3nhZ*2NG5q77q7$*:D3=R2hgPIoJ&u.hkO1_i]+hr?
%d$!behu<E9rpAUWIeca9<<lEDU&Oo5\+d(:)L=W7=3nGL_^t;,46(P2hu;U6SWNB2=$L/bI^R?trTnHOr9gb[s61S(l0Kb3rr2oi
%n)!t$NqerYRARSMae\\eh9Ed6Sc$0BMbJS>93p'om[UJ)k1X&>kR:bIS)EO[p)B^X?b_$bLR52o<A8>OGpDIdGl.'d:<UcJZMqnI
%n+,sRlF2aVk2>(-qq(KqSH%aHf>FbYmf*&u]>sC>pu?SunG;rRbi'gCi:Dsjr?-IIp$):akJ%W2RsgC[qNp$s:[d_$OA@8"RV2O?
%,Q9>"ru[<0<Hu<<s7,>9j3r;):G3MjY*[+`dpg7&1#fPWEE\<f9C9)#S5Td?.ItI$9>P>=i&(@ds)Hc_LsqAS>^ANlPN*8<>V>gD
%Ef#pF?S4=sEm]eecoP\XOks#$`MN8!H'ZYD"/k+gn39[cF4I2=cgXd++6VRUn3<PY:5</7kJI8o$P.skd?RImG)_9os*T"fJn@+]
%m](?.,J\#<2#NDU/f1nF<T;qZVKFM6Wpmc0W_]f/TYoC/l2<X;\lA>:rPE8n7f8=MF<U>!oeTf3r.<DeN-1t>C@kst,Q>_jGX/)-
%r,73X'E6$dGXhV7MlGd3PH,qD4Y&+'n<K1%dch<cmW"[j?C`$`H@5c'?AGD%f"UIUkpc95kMQ@kNT'ta\N[QQN+^*/3)+*-c`$H0
%(ZU"8K*RXa/!\_WUsl79:eIqP>`#?+*=&bnUI7s<8R5PkI3"s*^"um>O+XVD;kHj@O43Cm[<q:+5M%P-]P^]FCgDCY+RS1*0.#_o
%qt1l<]^FXjcg#'6I@ug2pHYWE?J_Z\mejfQFftUV?qb](H$Q$F3nudWH=uVI0,7@*0DmY-l0M&R,JX(NrE:!8]DpA6\NC"3l9Fql
%-2kIUe?>D8n!r.gZ[M68qGI9l?\a:5h1+^V>^e_J;u`h(kHk0DJ*PY8^5UBJ%Iq39YPqi-d[tbR^DrSZ3B<MDFRmPG0;mLfn!BP>
%Q]o2BYA(Q.9+G8lQ&G1c'X0iJTB2<djg*3GZu;NmM27aTbaR->V!E16Y*-u)anjR!f\$:riNHtC%QFfeak!+*i9i]F9tb2rm6%i"
%s70!8hoCP53I#gU)6=4Y,JNR>H5A`0UFPs9g56aXFi`#<+/W!+_6_>D5!F[`:-@jj]4dPc"A8.^U_f[Cr?O%:;8IKD$!p,t=5i_h
%mLea_A?$F@j.t_OS[egFYR4MTNmE`WNdKOh^LN.uaEr2U[a]Zsn+nsYDJ6nd_=ItMP&t1!A+7e%-qg'*j(4j;2<PeD4PmD-i1^`[
%-^I]?I<OK71eCdIY'[b\98k7E$Tbc?0nT6%1?8fq*1sK#6kF,bSb"$qa:!h?dl$!od@!m"W!&'fF?3_^s8&]-D<`JOJ%QbDYt-E<
%\96d&_/O=7]>oZNL]%A]QHPoT.Yl^Y8$HC1eS,]:BX?,GX>K(-Me@)Ss7LM@l;+*CH1JWW;nheg3M?,ZKY;aLhOi\m&YI*H60Ghd
%Pp1Hs9SX%s.FiEN@lEV+r%rt1jRj,jC=a7a4f0G<N$1rieF-4M7V!2q;P1hK/dC=NI?&/+[W/[J@nu_(]5C"-F/X9mHe``RS-PI#
%rZ(B6l/YN=\XjdYa@[X#dZ/[u$LVLF-L2Eog";U1qc'0phjae/Jj8Ab@Ffc5.Be2Pcd/ZV=j=(sgP%GX*21U`2jCR>>s'9qdpB*j
%SX>7Xf%C&\_&2f6UkmNlh646oQR(hol7D\m`o!:0O[FM>=UNcK02C$[>sBhf'.^oH[$f:QpLUm]Ia3B]M;:FQa^L6L^SfB=laFd,
%J:'&V2;@,NBK)s;DVl9h$$GJWl9qqT&DR9O^=W8GQI/:@clc&.qIriA\(""2$B]RMiG,Pg+DkkJTBl2C.<Xq$Q,D,=Mr+>AJP]V<
%F#,BtK5ATmg+&H*1=do?Zp5MA@3f^1WL,^^]i:i>1(N*Gnir\3^-YG71<9h.WtUYV<L3-Wq:8Ra\'.BG")"T;-FeKDT'QNj.hEEA
%.n42=H/q21YtIU4b&Np^eZ;M,(%O.dO`0?h=%%]/&nZU]7\'m=lIlo>LTbGcSIlF%1)XDYIKg6j;52%">S3&&#P+2r\(S"&[Rdt>
%9f1NINgb\T>jbch,p-^N\sP!"MfV_Xb;cU5Qhuc+fEDuRXK,#>.I3;YFQI'c=Z_>fM8X4;g8K\'SIN=%2f]g69*Y5B2i4OJ/Hg\[
%@Ae2gD"30m1sW"k(f;;q4A@E/X@ZH6%q8YemBFVLkHVQhQ!(eU`]TTkNrYs("m3.HZ>Z4qc[H]fR_DXcUKJF^K%o*u_WD*%D+.X9
%>@&rZ]+213nPtduLH:,#=]MZn&(P4G<]0(t`lC*mca%"]\R"'W5r.^k(%c-P;6p0q/ZC5+55QI_/#SYTGH5nXSRj&=FQtb(lp5nU
%1+LiR/(n1+dg\B32<nV=.YjqMN9P4Ya'Vot[:NM,D;*`D+h*Na-HDQt5qGCp,n2]u%bq9S8WC/Bj]Z?"SphLiAu[X;'n#83+LJs;
%I`4LAJr2TtTINWC-d++^@9;\epCV5Kau,aS7(G-h;9DA[,"4+cri)n7W&u#o?Ea#9]'cULJBnJnTJ,#b^)m8f)tjKLV=EfDX>JLJ
%jpp<P[dI`p<dqJVEF?@P4/;BBPt'Sa4EC08['sITG57TP;UqM=TVe<`I\3<KW1*OCVD]I$agq$.B;;bl@]j;ckP5-^X4(`c?!^;O
%$o)cZQlV.m%G%#B)-+EijH*VTH<hGdDFJ8Ig4!nl<El?g3*#Kbb&hZ7GD?'N)MW[Lc]q7Bh7&Uq>5OmL7.smj4@jUq):k]E+e?(V
%8!C=u,TH):9oV2*NI:Nf<$#`5l).oF$G<J)/Gkq/[Pe+U?C00K?;D\WY!1KG6`kke7?(:AOBKUqeLh9;nt)+Q^Cm2VbA>\7JL-]Q
%9T%\(""F$G26#n"D2PJ>OC9&+rtZ8n5DN#*njh5FNRgSHZ2WFdSLS6Vo.e#\"%j8.>i:M"laj9F>LC&m)pruglMC[GD,d8ZFC`fW
%mLK#/J(`,i7`KRTO\4#oPce!:Oglg8.P^AC:rem=DHW/-]]`0^=fNt!as]m:LTFsZ:/%VIUTd,GE2>oW%3R*Bk-$1No@)9:`%#o2
%jKps%eXa/@<hFL<5+UCK9hKOB3Lma174[lp01L_$g1q@K-(mu9K=T`;)T#sk<?'b:o=qTh:4EdG>!nPD?#cA'J6'.B[Tg>LB339h
%mNZV<B)M:"f7^KI/r$K3pN4-kJLf.#oPG_S`cWXN6b>E+>;XE6;=d(RAE>_-g$.mA>I""NcUN$l(VBLlYGcAA^-SAeLZ=e;pem63
%@2!pfrJ5=T*-<>]86N5H50T[B22uO=\#*/C2;$/A#+/lsGW_nA1l\MoWJ15X[oGBuh5r&G@lUQ_&,\Xif8.T,U:OdVN$$TD*`)P@
%DP\1,3G?D<\0uHUJP=[k3DO6kZd^Kmm!@Bg7$`c`*G&b:2?7W_^Rcpn=TL+@<jpdL2;(#,]$Q(-qB0L<L>b&TB):oEVf#ZK[kgNp
%_Pkr9^Qgtf/$dH8\)#OrRE+DE(_WF>!H?Ko#nGkV=2%K/V]7\s!f5T&`T;,lr-d3f>d0f8A"4"b<P#!JFD59<_76Is\Wt<JH-Y/W
%?9NeLU:NP#<rukg:?\$"ZJke6?<,P&JLsnlZ/KuZ($.Lo"d_[aB_Cs"MB<gB='L"?#1hV\&TLl5W/7pU-YfLD>tN\Kp8r]D6nBf"
%@B=VB5kA2`>%+5Y18`KpTglHscKaTR)X%)ZL=W8"elGM,DOmZN1otG\K%#PYdi_t=nu'dp]!/?-G3#Q,.7g$+n.Vt3&c*>QT,E9\
%>gIp#dqbU1X@2]nnjR^kN9T(ei+'5RWg1S@JD3eG#%$4Ob\@X.8M3*57GaM;fQmt,.9*>PgGZ0X_V,iPT*BQEb#Cm/C)>'l;.9mA
%(s5*l2[/j3d+VB!j/Y-2N';AC[E4QO.MLcoc;i.<[lKqD3h!b<,^E4B(fn2q(se\d+8rat._3_?F((Y":8LhD%55[P\F8,^<k%G$
%V8K]IG8%<mrO7g3#1#S2UIt]Je,4`KHg@X=[fMu[4-(%VjaBQ.##3pO%03amMjbbIGTRF%c;><JWV4IZORinh\oHPWGW+i$j2E$T
%*1Q^OGrsbd<U8T`L=>.=TR&F^n7XUs=\n)odrA!e)c=,MSOU**^(Clf-r/h]=01o55PrrU1V99*l!/(nPlU*:Kl*:@$dgb\V_n<`
%@u.6(`>XkF)/F@e+1V6[]:1kD?k-08a]7/4bR"IaNE<S"eY*_/.F$c0WK"B)]`4In.u=(rT3^>0Y.HTG[Kt:7IA1tcc1VR2768+1
%[?,4'f3N+rZ4S+)DC_knVfGVZi-^&.1A<Y[@A*>kdg2m]e>7aI2-a[?@[6[nmU$R.5Bfk8:<`-&*Up).3kf_*J65:cEXonOSj5sa
%FDC_1M2KaFGs(W>eX;08f0-,b-cJ+%gM:q?N.6FHmA,c-[Jtpo\:9Isn?^F<X_<=sESVi$I4(M*Kpci8NM#*+9239`$:'lWqEX1P
%0V=>V6;"[Y.3%Kg-Lan^YO8t;GEbVG?(hLa)5;5QVrk`#o\Td8H\]p2J5I(fPq2aFC9gk1@,SAji3ja$*=`r$Zdmh@#/AU]<p*LC
%'[-n=\OK0%AY5\6CmC2:8$>Ze0XT(d!G5W*'r,(S=p15`<ZN8mi1Si3.))]C!C=QMXOcLTlG96s>?>4&q:.rK+R<8SBcuZ(+2W4q
%/Sqk2B1:s:<[;7i,!MqCB%B?j<5lj9'51#/<kfJb^,ke!n;'fpnikU_4Z_s458uQBi#t0@OOdYYTpoNp=Dc)[!a;p&U\Fa9<CC9\
%d'i&O"75V65G+`WCf(:=-aTIg+pJJL[M<GK=l]A:mWFB;[.Y4)I?`&BiFe4!0\,3rMX9-=adAC/brhTjd)9.H25nV%drP/^"b9M+
%_<eZAoVq**FIC:[i[p^IFQWfJT\=@r4>fsCo@c(tEoEI'o4nNk-GAT_[LD>?:$GKtYdCGBg!Qe[\#_:6n=1Z%kc>!:kR"pgo1Frl
%_DMS`]^a*N7S[`Yf/,^l,RZqO1^$r_`a>=F.'G-?EU3W[KsfA,ZD%(oZtS-3p`#_Em%^i.`dZBoLsu2uj[/VrHZmr9Wa$F=/oTbZ
%fDaH<__)3lCSl;Xd<_b47Yc4o;d_Q,aY8PrIutd,h`=CGj4o%rIGQ&egX^Yr*P#bbqeG!RAh^Xf4Zrb5k-&dHNn1@"VslCQ]0=^/
%DB$pW'f?og<h_bCF);>L1@B_:NNgY4pq3`s;A$OK.c._"Tu>#BYbbJ`cbDasS*u)7D3q/t]22HKCi-?IqiBb.Ps-(Kg@`Na.;+<"
%W$qq9Hloe**tjXXaLnr.UEQJRMCn\CPtpuX8DH;AMYY`SLHJIXYupA@\U0oK^<$U&^BXGkO$;TV?Fa<\rDbts"8_r_T9\CRWp_'i
%<\r('!LrH`]5uEo_h5$]8]djUDRd&qQ;NjIYt3#_i6l=lJ%lUq/_naf*cTi5[jfR7gY_si(&$@91TbBj8hAK4WHPpp4'`6U&#PF-
%h!h!U:8r,9c-&[/a3%Q:6/rjUoWA+8AI^g\FTYea0%HYM4*;4GM?c@g(pJ(NeJ'YGBH7,/b<#"_`m;f;\DJs?YXA&!fKgCSq^-bt
%,?i]DbdH&*eO=U*ei3tXs-P\6(c?L6S`,%b!L-i.(U0!\SoaS2WCBSrksq'i7isQa.Ai'YR#g\b(.<V-ce%WW[:0ZS7WdXcd<B1k
%hK7]b-Fj?Y<tWiSD0h!VBk]KmiNUuN22LH7BYTO0[@amm<'@7M2Y/^X'n0-$m'6\4&&tcI&i8b?>3"Rt8lH*&=T(Ashj:RqI*72Z
%cu]b8K9"]YCP84W9Z-;)'.X%_/VI=i<!G+8M:/!e7XW6n65g\`h-hRp\,go@kHBNfc;3Nm^5!6lp/*98Yn;$/(jhU8@(%ono+PAs
%6SrfN)+-H1lM>4Te4i'o9h3M%k6%K^;b($G6^hgR6MiJomZqJXp`p?p9KW`lEDoJpGLu%:liPRS:7XeHb>crWB(4YZAJbB-;#,CU
%6H4+NR[Ri\kmi&r_RK%2FU\(2gZp]1c-Np\d!H2QA(+Kk9%A'a$3RRg%/;`bF4JBiJ8`g4)P+DnY"_T(*o*.Gp\Ec<W5AK$l9lQ8
%5_Y<'2#,>6h8Cd)-cbq*JDs4Kp5NI)^N:JQ4<=?n-O6[c8`eeKN-Uu$H[(QcW2>I%C]F:,XP&:&Z0%6!d@RBRA]jbD,2ulnh'V0i
%=6P$AQ64Rmifi<7CAP&rc7Hi7P,pCtpS]>&T20%Jq0'A5qtg]-B6I,J?CD86gLY,Q4N3^fIm2Zo^"d)[c2[d)-_`*q4n2ur.I8!K
%93e94>*"#8)XOd(9fNSqi>%dCO\?XeibHc?Wb5"MVflQVU%cu:])DH?Bj2/@[2T$nS[PP-FXLs(c*YuB=0jQH2.\tKf:B)ZjbJZ#
%`GMdplVT,g\8P?S)$2^W0d+`K\UQ[4nUs_LQ++99q=Gc+]rN$UOcaIgR;eV,;LMG.24RT.f,`^DFa_E`F->*3<Y3\h(j0E)+6oPF
%2T-Y!h$e'`)u*6bb$gSjk>eAGmBs.1mZqligP7fZWQU\'C6`QcbsnGtNsqTt_K"rDT('B'n$nM>Shu!CT3oR#1ILG4[JH.].;cQ<
%'B@cKIm-2A%oZnrN:A<df@aOpiJ-ah(th$"VMFEt\2n*MOAZigR4g.+H&WE=*p2^,Pn+MpD(8b>ZWK\s6%aTmNTquNJ(Ql*s*KM[
%41&lZ+D51k9BM2jj4'&$mYQVgX9M:VQX2n)>7oG5:flde78@8.nn)f)p@N.VAd("kNf1N,EcKKq&*rWSXQ;a/Ulc^#kM18le*GR\
%=_!bCce-E+?)If6^rp]Kp%PT`g9;L.h<B`94Es&^qC(4pI5Ud\ANEq8NR$LUhi"Ah$Y?FUDS(-.7HrXU2";Js^6$\/'mR8A^9tW[
%Qf17D::0S)5<HXZ(54[6fAi@h:aQog2RNhRDr/3Rp#ZeYC&`gXI=;.`a7#X7ED\WAo/CUKJsWZ<l1<S0J"rXtDgq<C8,;X-hS/gU
%qnIOWO)LV<p%/-kDuS^EpYYCG]R08Djo;plG5(<Ppn.,t06TQm$/OG+hEHE4IE:=5S@dr;^]29"3kW+Orq:f=T?=S>Zi5?por%\:
%I.R'DhLW,,?iP6JlHT&ja*QT@HMl$gkHCMmh=6-KiEs:r8NqDPo@1CjM>-K<mR_i`^]!,<R25M5F#Nt]El.=n;f;8004/(/_7&NF
%hu3/9\,V*bHhHYoQ8*j[p?qoembcXVfDfsmm_p9WI9Pr,p\LBBn,BgY]XiUkm14%LoZo_=R!!7mb**p>^O#SD%r\(is2UHZG)*Ok
%rp[tan(t^&eU#"#H+VQ#)*c!':V#`AJ,8RThRn11_ftK+A'8e$H="=1FoV-,IX$):2!RFKhRB\<rEACIqC1cam/u_4^=-j]B_;>5
%GAC:9\s%O:+6bCb^Ym>k]#XZBFrtN!hs`7@OjDq!Pg0(*K6m0[YQ+F/0S@,dq%)rIW0l^sI/3VC)>D`I^3k.^pZ@t6^.4I`h:I.(
%rr#!(:-J47hIZIO,haZOIeh1-AXQbGLY(Q8J+<7.[kC0Rr^oT&o5@'4^"FFfc[50YqtnucS(m>BBfGJjh`gr&n"5"ch2*IXr/BN<
%/.(FI*WDFrbPWYgmH<^dL7J4Z&&X'`pri)<h]1L%VG;l^ltSI-p8snPC*1(A`Qie^q-BA2DOSo_$@@9oM;9/#pnX%*cSCUOalE.I
%_pD7#:7YiEd60aN^\REepTO#bD"m8)cX6\QEc^!@-GF2_I>R`9%ahh;hb'<Ma)Cl#0=)n6`9cYP&t6u(E)EI%s6&':qhQq^rN`'i
%*`_%i;`W$@.Yk<B@Hq*,$"YQ,n\rU)j`<WI6^A7'atYR&B9t5A6r#$7=f.RP1aa(mEh)2M7-Pn-(B"__M0&<034`u\Eh($=Nak&%
%"/31DOrPVrJ_Kh(YC]t2Eh&Jk*&?$?/96Xpie1m/__9Ioc'S5WLR8*_aQ(KUc>o^`DMXKeXh9%n=f,h$aO\>)0M_Tqa$Ga!Q\Y3J
%Y[`d29@nW)[:L`+KYq*N=cS[c#FVfK9Sts?O@56V,0eal:2Y[lS=;-OS>VPj8,5>BHT;Fo/4\b5!(-7DobPlfqL?%:1,.;i5Q'T(
%=+Ai.VKs47ppT5,mkZ@iINIVNUE'0K6,*)KEf^Gf,WW^b@MoZ^*1.?I(ni!`3Dc(PV[Hph/J:W86=?0qTcI$,\]Ab'qDl]L'1!s3
%(8N)"OAZZ3*nK"9B^$qcJb6<^]kOaM867MN/0Ek&1F?03,,$bHn)X?oru^<O7,&FOcLQIJrt>YCU`oBnYoIIM;\X"=..JjD;WCWg
%%iBbjb9V0IKebr`Pr_4'cKOk/'T-h&e%.ThBE!3QO!n9PAa0cSfhFe?;(1nkc9a4k:hl-S3mW'05`f\Ac6jb_ffRA$O&_L`EYdtf
%Q43ppr"RHII'YqXP$'caMp0[%q_lW&SqJYcm-9D\hm,Qb=g(uZ0*t-.'q%]tkntOOTnMJ*[(cm+GbLKM<4!I13Xb=8fn,,U<Kb<i
%<VM]=^H9[qM,=]7bjTr5T+7dJ8U?Wg1nOl2GYZ,)p?1K3,_phSA.*Zk!*BXb'd9,g3=NsmEc/pSX#"aH5W!j.&.s_T/p_e"Gu>7o
%Li+la#9l9m*7=LK7L*6RPAC?b"D%Gs.j8PQm:A$_,k;W%jTW8bm*g#;/7bcRZ%O(;:121cS$J5oV@+bHL3[anB_+O@Lg)NQ,A,_]
%S+FFtMJ[^[QKIgK_p:6_i@$4tWQ&K;Kk]mn_9qO7THYMg%ijkT#[PL`CalS"nd$(q/-[^d@GXeId0X&QpnL@i=WZP9>TPGX9G8IN
%Q3i3/98/(g/rlH%\8b_.fsa@Z$A6@Pp5sb1<tqMK9H=cH#*/fEG.8NR&NHd\0l)q*^4^AQ,''o8)EA;[QJA'V\2-&qUP"6HZ(\G-
%Z,$OO3jsD;O!+nH664,aNar`7ckol?:_9!"jFPAa1)AX^(UIj?),DCp3`#gJaI^\)@&:Mup4W9q\HOat8q3*-7iJI.37?bZ3c($O
%`_&i;RN/<Skcn!\D\P4[A>RG2/r_XPl3J[UKdQNA,rTS(BjHC<][5%O1kgef8"m6%gc!?N8"'3B-k_,FU9K3)3LFbW#LPSCM&(s`
%8"jsh]0W+V.8H%`'2q7FGlfB;7oMbt6q0$:i^60bZN]<mQc[;_)G!8c.57d+36KB/83f.&$3q:T'1Kcp_I-.oORS^*VP#mu-YH@O
%p84-DW[4uJUI,N];!CP"p-=lgRnBt_+`XNDLoLK0jC%6YP`]@RLmp8>r']XVDi0<"*A\E?<AdOWh4\Kr83sE(9(>tOE*)_J>u_"&
%Z6*'JG?"n'<>G"hlMl\]WRC_OSHL>-@JN#1Wh&CQ6im]!aXP(_KUVNZ:Nt5Hc$91!I/5WUHKqHng'[VblT`_rptOE(T7;(bmHtM9
%KNX!HE3ii]&(MMqRYXHV^2U1u49$^VfSPWm#lfLBE"oG`4^ep(.me'MVCP%XbCbo?=nDkF`#FAgKrG>TT;XPj10q-<K?+I4V[FAU
%U$b0h.EiE@EZoKtA;LPs_fHR-Z<=7'<T.-cmjN:Ya:6/S.[qZ\,)\N?(+3>0fUOb6X,KeVSME9<GKTDQ@sad:[<J&&+hEXg_TE;a
%EOOn*%g_X_E46?$!.T.82im'O,HME]d>*bWi/o'EUrS6Sb9(q!O&&!P4QVYGT6/r=O"WX[FN._C38l;BXcCP(cGEX0Z"n""b*94P
%gki\_dgA\-/r2d,Lk(s`e4"Bpi@%%R-fZs<Xcc)KO/eeNG>R\6(sdbjgmS(03DL^CalGK^eO3M@<R"B,X5'VRAV[.GWC!KI=B!3D
%7?"*on>Lu=@]+)RQmu.%Z.YAHcD=!qX<(qLcM"-.iAe:+2"IrP[-9m,D/(DO)`X@crRHu)O^m&aiT_P0,R3nfOe-s]IRoOq"-<$J
%+[*R&N"8(CguFU5UrUgZoq/#"pMlFKT4B*d=LZ(&gn:bhaA52C'RgZ_M9`C179W&o&M)=e\fI`YA83\M*$($XKneU&:W+N#Adh]r
%n6q>TH-43.p(WHU1\8m2Xthr=U(@F2X9pbBSE4"8]Z+0?];Pq`JVVN^Rcu1>-*7Tkde'<WB<HO(QIDopNp9IlY-[7P)\-uMfPhnL
%"J<]!*^0d',s>RUYK)]ZH.r/+hFASnHMk8;n_XM"F`s\s@-4`@ielf/b0Tcj$ioJ*n79rHakITkDMA(AUM*?DiOj+hkY.C,mb%.Y
%DjFO*:'\J3C//6+J[%Y>1WaVVpt\Vm#7V"Z5_6-Ior$KIhF(oY"p&,7$c+FZ;>;-@>b^=\#\9(0&]+TNX&`H!E^QXb(nbn%eVKG[
%-%eeVV5??h.oa5\3C_ibF\O@g1J;Pg]P)-g9u,oVQITY/N>BmpIbAJF_j>&Rpc@4jcF8l&=h/g&H>B*u/5J:%a![EJ!;K-@o_@Kg
%s%hpbEg4c/Ek35Y(oBs9bSPK;S56H_75dMp/a,rrdn*(5OD$a..-u8m*)FTW6-r.&e.MT]oN>j37tR=_499[.mKD1A:o=Ac-i1t"
%jA^ra!6u=hC!`_j'G]DN$FDgDRtN[iE7<aiB4#ZE.)]7S:5(\CkZ"KZ_+o\G&*ASj"?cd4W\8NmDliFV!2.WMZILUT1>hGLE9LW]
%LA>MHq.Y+QH>==FFggd+3CMJo93'[5i4B/?W^klK'kXGHVQ*V+*E;EtIFZ!Cd<rY+=GC<l*SW7!&*^@pLt@Eo4E-f44\d1a:/='6
%:H>5k-_9u3S9<kR*hRiJs#E4d6MCjXq8-"CE0N!qjn&->Kqj%S-snsV(QS(^H8LZ16BR%QY5\=j%iM.(A;b'pmq%-PV`Y/"985rB
%p+fk-KIGOn^YB)ppcSMk5;-[;gl-3'8U+IO`MU2;);UjIYMHkH75olLh"n*YPGF8tj3CGEZS-$8c1\JibprXa210^4JU8N2^o`3H
%7E-;c&6#E#CM;[2h=oBm<Ac$mNnP\93AN3F4h5-[:#=`V]Q:^JiHT*#-,`)6o)".i;d'Nb.#VU[&^AFK;FJN!an:aYlX+NBjlbi'
%"'1RT3"u0%ai[s5\Ie1l-XRY9rm]q62STNScfcOU,O.L#T66*bqRiGEp--@uEQd_Y,41j/Z3n+`KRHX<A1^-lR4p;Lif7oX+9LBS
%ih@>NK"FV(MBa/$E*k2MFVWCPUs$8<"`uQV=/5@:&BKRKl4hQY1.P>Z%]U2t;H1Lq_:qN=(@EQ][*-t9Cm'M(=<+A1%*eufPJsY=
%bj$&g/-B07==(=&<K0jUi:PHl;`-a]*Lg4`0""0GSn7ej)4RYrWAR"b[KomOW/a`T`@t`>C%^e.a$jK=T7(jRj=n:54PR-J,IB^G
%NFcB;q<BBVUW0m*`sNWsH(8alp*DlYqRSe24J\D<6]?V6Rt("&Oh.#LHG""i[,Xf?++!%kae`lr31I5D)[,3"o3>QpOT@H\luuq&
%p12rKq+m]B8_>7(IA5[uh<C?IcA@RY9+(l]`fUbl8a"*Y1_)Ut:`[P]T,DKO6Zk^'&Ce4)%2&5+1KYJY%:04en7]Wu)CN4sleL:X
%HZM#D2n<i:EO_Fdm9SQ'E*tbK0[39f:`$>>QS\jMTm\MSO*\%a@`o=4O(/SngCJ<!a6Fo_DHPrhCJ92:b-0Sr3FHMTqKh4GFAKS!
%:&=H@IZ7%_Z9B2i*''s5HrQ,=?_-<ua7A.#hK)*L0g>D(2ibO6UrTOE7um0>6[F-s=W_\^kO,T%bY4WJ?J;UA--#j)=7DAcb#hFu
%e0t>8j+"N4rZ9nAfRDch@s%`L@f&6s1_6R@kFU%C'3arFkMIK^DZNKO<mnL-"-l9H>Jj';:oQcRYsCut39^cB'#*1qUc"6U$UdU1
%Cn[U)1m/o`+eoM_4Tl73!2/j))"]YXk(*d_=4W0!\7osYa[`pbclDtn,MkV[`s4g(f],2;NuK5=L^Me$W4_7JM&q$i\&kA80AneP
%8Q=jd1QdcSUfg706.-1;^%%Z/E!acQWjtWcH,OgUSosZ+3ChE0]#m(F1p42mjW2mqURHO/q3(m<$@rSW@X<,9P#O#-Q$J?H7<P)m
%RMi]3l-j(1VY]X0b99ojr+r,(BF32oMh`h&h__l)0i1D$SL.Mn#,]^?\Fp-,46:t3"8/Ui<)ji_*(nO\kYZ_,fn:;Z1h.Se1`ULV
%K["N0,sBO4%fbJGhK+cg5P6.3J+)poX/DM$a8,[ho_=*G532LbguF:@0JutB%FTt)N-EOP8L$5+aEj_FFj/FWa_+fD7rfgk%#$eM
%(kHL$Z/Dn;(31gZAV`Z`q#c=1P@'lJ9rl:NSlq;3qJ0OmARmu9YUq-cJS8sOg*&qn>(CA`BC`SHH/5aBX-TNV[R7GLaDB)?ONfH6
%0JFkQO1AC?]l3t3<\0mY$E-H*LpNS.-?gFskW27.9s5Z)"J9g-hC:+6]&>Q(kuJGHm?FU9e1,AC=-%\lVPbCkd7Zh;5N"N9muSUJ
%Hd8D,BmWC3=)FRQI-L/gNXp-+dJ"ch3)@a8(#<?mQ;BX(kS%?K^PM;R$sYS]Dg33b[YM]`[=kZs93V=[>u:NOPZDMU@?_d@^R6Zu
%*)a+H$3bRXb9ich9WC>Y$fS<AV.,urYthO%a^"-7M__)0*2k"fj-:\+1lJCkY*MuEC0JUO)7@^FYH0G)^K4j+IuPM?"isc`Z>:)q
%KbbT29#E+DZeMS:/g(5u\!E'=JL?RkLeR]CmX693:e]o(_HRB\SQQ#+:TYN]?b@,!J]>?@V2%GH?F8W%FP&,_.BIkD>2"gi8$Ls9
%.%F%s#$Bo4\TNGq/;h5?XB=,H$]G%XjA20V9Dm!h.hBj9.p6m+Q[:^aqf^EWO@1<VDNs\9OfsdeFf^gKl1('sI]]E\?TC(,];]M%
%0MHe[qr;LmfZ?t:K.1>2-#6,@**k"g>/n]?%kD8Mgg)KN<O19b?+?bfW>[*fhGg_-;n\>/^Bg]KWHqQEWcM+3[[!.XnS']W%E;=f
%hJ68TD,ChgOfIM*8orS2?"Y#g'*7OdZAX@aY*YEa$mfI#6Ii3*N0TMc")J_f<M<uHcUDouC#PH.:c&Ao\&E+XA1J=7V#0Iej^GMQ
%9YC)@K8b]=GDNDXh90/<3-c\5b/+3qEaFK))H&0/Vt73sg%Os,=Lj5:HcSr@KD1aHp!W(mGBAfl.<,s;rK_F%a::C>\j#&ep/h7Z
%k4,NZd(4dMqm7s)D&[:8gIN-%BV,'D'&oi/.M!IJ[LH4[_Tdg=fed9IA7Vb6XVI9.1Ck6p[p-9V9=7p6Q(lChUIA(_OB].`[k5T$
%BXJ-"E@;[/-^LPSd;fVOWG,)CMX)i^RJL@Rdd.fm"&$X54lY6RKW68qrh2:;?Tmd=%>SXRL1/n%DFoMMi'+WF6-H9&8WV?nd<)Xn
%Ofa[7SN<k5;ifr`a-3Pr4J4of_P'-$YbP`P[^,gR`M:XDH=KM5OZni)!OW?64`K5/l88=R)*"jr,.no2&5T1BA/8/:/7j$kS*j!l
%;;DD#+%S>[hD2E>U245rX@L`F,0M5mdpGj$O/W$_X[Js+L0B?<C6VaBU,P=_ZA*7S.RD;`\da0U3%2/HiFu<E0U]AU:]keMkr_bi
%,!Ykg999+"p\:q&iLj0<CplfA!q)JQkd7Po+sW,Dij0@L=m-5\dd=$!(9#2EMX1i+e>V0A8-gWD-s2X7?sq;qF]P2rjcOjh3fSqT
%%)iEsrOF3Y<YpZpG+_m,4#.]*lHSj<<bY<%&(JO&bJ.nJ9iu=/Cn%]pgi_F5hl>#I/Whu0Nnau7a<>r0f;*bL$]f[``V#"DFh[hh
%C!l%_4;9]`D2!0Q4?mql$KLgL$.V:ER?haN+)\[4Y=g9+E0q[C)%Z+SYS>3:<?eIbU$/B5\uKVHMmc*.WA@VH]CehQ^SLC4?eMjn
%c"X73j@Vpb("M,F25H*Yf9ha?H`&L^MZk'aiU#dM$MCHhM4krp*N:*c.6BD2%;"%k3^.p2N\UNElWdQ&@9/D[XcmF8]jA=CWb\Va
%?!GG0b1RM4$gH5N(:j'^D5H.>h<]B)BarX;Hi!8c'Qg>omlMSI4M!]t^d:6D5`a_M`*(EV/NdGNDlX:0p&MRQSSJ5nNG;EiH64Wq
%eS8''#g7(mW2q=PY8<CW.P\tM'9A$Z/%tjn>h-bk-urUDG)ZoHbKn<\D%"]3CAHP.#_1SETKTZt[qu^\<'ASp[*,HdD%HGBMeNUt
%4k3rK:#N40rk]E$6d`n=Z7u>QEHeh`N`NZ5$jaSsJ7'?*$Eask%tt4C9ka#W4Eq,;`aM0LO+daE#6mC0&:>3,r*UqWQ.UN5E?cn,
%'+afhp<UnB4q7ekg,ZZc$=:=Ga3'.g%_qGe]A^PP_!O%kF,n-mH7[+?;&:(MP-$7)D/7V%lOBs6m'c3,[UN,jrh[XM$nr_AG<pEk
%ClajE,$a08!Y'#fO-K]m>Wl7X&!)-%W5(Qp_PN;X>$\3K&BMm4L<4na"$LO,Kpoi"lmQZ0LG]B)q-P`$D<8=3E7U<c[6fO.*dehb
%rAo5Apc:FH[q[[4*>3[(\G6$!Mm&$Tf+D<m@.qh$A3idSnDu.lEX9:Y]eMe=687t]En*r7<rG%?kc7daHt3bF5o7on,'(#QBFDA^
%GK\uNB#W^TTTcb8)b4dXI!pAaQJj,^LLX*1&n@=[N\(bqTnBmV@*UW"Cn&oH;:g:I$L[je&6tY_*bNT`d)'#m1Rg"/,\^tq3#(O:
%WDR0e\JCV[Ka,Rpo-PBa;4*tqTQYBW/-<f+>,Fb`G`8\t@%+KC),)k+_5cBUOZ)i\DZ+JM*rA*>"-+\Jk)+Zt[Nljn_8;T]gJL`t
%s5%psL/2OI<.*aJ&!r\kh5U(J!F!N<s5C!Xm8Iih:nQi==nP_qpZXL^O8'(X,u0BMg>gG1"/cWXb"3a]msn3u7JEH^Eq7F\%SiBF
%IT[HB9<rW`U!u!K1`(WtA,;D#q:$EFh[]LM=iPh,G,3*]V/7d<i*Li(([*]#I;6=Qgtf*0>#odO/!1>kMH)erFg*<F<TtG1>L"2\
%YGun+ZFImimnGf7VA-C*AW9*lMF3Ed-Q#KoeB$[h,*'u"Dh1A>^a)'"It:'MSG88D9Hi^j]L'+pX<PL^mjtEo!PC20;ol"i(WmEn
%7OV2rE!Uj5d3O,'-p.eh1O:=diA"U45>g4ZoiKDn$S2sjYqW!hMA4TN\dY*RPo)9RKrgG(L3H^YDm-0T+>j0ff)43&/a]=2HFTiG
%oljR3</m?$;,\kc:kHC4C2m^Tf6:FroM"t5X)iX2ePUOU\V'CeMJVUJY.AD)6U1l$$/E<s:,d-W26&E@.NMA0T(;6KMPi9^ASLTK
%-tV9iPY4Yt%_%Un>9q0S4#O2#.!cTH3eh)W61IeD"CAOb@UM*5jF]sIjG<br*olNV%j(P/@k^0Ea0eM8E%LA7O^lICPTGlEXJ3TZ
%a>k9QQ*[Vch!,B1<_IN$3(n@I_UbiNd#J-]D>M5^@4a@)>#o,p`_B"A3iM#iX'f&@8N%8k/NWgdXiET'J_k-L-S$<I$,"um@?V.k
%*:V'Qh+^@9)W!Y^\p'(:WmOg*CnD]EUuof6nBu(#h!Ob]GkXfh=\?CAXW`^Zcc9:.(.X+)!fLJ^7?+41`DF3WD28fec=7C4MZW#&
%dI-d_?E3*#"1=pQX:?n1A.L<3KnUpekp^1YCjZD^p>GB.)S244oC9NX3/"3SR:3a*\6c7"3%0[J_)+)J13:*:J:5r/T;q:tS'#&j
%XuBNk<^aKa:ej_;*`j+U\!L.WP?/]V-'VuYX)#j/[?[;Kf9Vm$FaK/GhumFBANBj&M_0Q_[h_rGYG@Q])OsZ(NP_]RX$L,Vqs(%/
%TY;Xeqbi;T2ZC44/(j.CFO2'fNe-Tpl+5dCZ?f=&XV^+J`7\M]:g\]K1["(>EQ/gQe/-j2QdsSec<(96[IEHP=;P7,X";oeJ$mLD
%V2dE]1sO-UA>GAB=S-s+^foLCo3g+8c;L.)n=uql75N.L;n<j;8#Q'p3]B$\7Q44h,`SrPTqXj7=]<agHkY>/r,hV0^No6(^5N'f
%d1<nT,["E,rl2M=70Mqcbmgjb,.Q@E;EJ`T<4/U%DADhBr;@obqYH1D=e3,.)QP]'`R&CkMS^@uK>%,T3bc8f?\:@;bA'hF#3VRf
%G%5[b%94tUl2[8hU,:NfkfSi6Bi@W,5i#XUMnDq^lV"HegZ?!^r>h,VhfY8-=,t$m@3(Wa^(/2((rCp+,7qJ6F9['*P+f%okS1*a
%_h\3c(;OE[H>+0S=5i'mFF8.@rS8!f_=BtZf^?cMm40bc3Qfa>PD@2=s%mm5Hgm:$Ml"qS(C-m5fK%\\hT!5$>;EGSZuRJk6@4DO
%h(RVknWka4i5h7t\b>S?XYkf);_$[Fgfs^mBCoI[9^,2Z[Be:bCJ%GBAQEA&P9VW[^]M).;c502$\^@odTd9,;/A+TWj-*3Oso"!
%A*Gh[5Nr#Ij`kNpkItMO#0Z@T<-K'4>Q]]k6Cr5\cg]N/nXZ!TaoCG2?B1F,p8[1LI-]lr(IP^mB6`b(ps)Oki1Kqu91no3Y_.#L
%>P^tZ,@Q<nJ0A*NNE8B]B];s)@0;$91uU5fK@5AA]Z6u0"6]d8^c0Jd2L5?\#Yf\IMI7:QLJl''UBt/@E=Krg*7o18a`/oQeH?lA
%=*36Tj-gIY]%Z9+]!dk=0'\2A*S5L_bO)gViu3uZD!NVjb1*`SNif`X?1$BhE?9/DZ6k7GNk4N9](_I3f7%!'nL_92qJ1MK8cp:Q
%4QKH_.:K"U7n?Nk6"o8fU5+jT3_c]6JhA?p63g)JJ?P;6e&$=DQH:_pY`,(E5<negqSq;IA[T]I"E;K04kuP^8E@HmgOIjuT5<$7
%c7FjrQ!(:tmL&[%2VlBiFifMQ*h!bn*2#V6)uT$E=A(I[p(lb82WK7h`r-@CENPHWK:*VEc#fe5oS5?eoAFZ^mG1Mn$*Spp*N81Z
%g@<=f];Wkq2)8fSRg4(U<#)_Ss4c:5lH&hc/g,T*3ATJ](Y\baP!ofJ\TnZ)gPHkAa/A3up[d=)phY8Aa\c*#q]r:YU[e#^p!NI&
%ob$mPhK0PY9^melmnW*tVm5?d%<CJu]oi!?`mLp/GMZ:<al=51I:`5!c=V/]c>fZGZ+?B@GKoB"SeengKkV:a.Z-7Oe0.MA'#.DE
%;RiXoQ(*fq:[*TRd+G)QZ"8!c55\AdQ>X"6oDtJ`]'i+UZ?!6n5Xu82R2KAhc*ZfdP7BXU+f>oi>*n5:Tr&0-jBa0XLf1tS7si1<
%-Ak.aV,_G;#:n[*cL1?E]*V1c)Y#pT'E(Y]"6fL[jEMLaa)_D.#2l2Ami:5Y4h_API#iC\EU8KJI2C[@g2m3&\6ArEPp"h*!,eXg
%\\8;fi5MbT*!2ATPTKqna(=+:=V3S89"rnd9/GmUV-EKW@ta_+`r4Rl6aG,G8j;49b8VQZXNJ/8n91_.Fi=._D3%ii@p](9dq3Mb
%gM88Xl)_U?Ge]u^!GYe(OuM5)s,f-X3tuMh)Cl?V8.clJeh!:pOS-MaFh"0%_:<N]j'eMM:atE&2"CS>k2)a=Ta?'YmXpO\C$Y]\
%!4;j&X-s>1#CZ"9\4%S6D6n3^X0:AuD==mHoks!nL]HO(?g\94XP2mNdZi4L\u!HrL?%*3h;*JMkq1!IKYhXS"4tN^a3sb'#$9B]
%q"eUOR>I,PS*?>Z0uY)*$_p#5HtR/$$0`&#/:?pMKdH.SK..BMm56A>N9=S*7gCG$PqWJ?c<gRo0*(*\!6QrOnV&=(d)6`hG`4!K
%I0%K?Hh71/>H3ij7>od<@D+!OO8ak=dejtFd85Y('kdHs$Z!oF`ZuO`Jg''U.>?%8TM!$m-*Y?pD>tukI6:)+L[0B<jVB3;+d_&A
%e,,NU5N^8COa/$iH+ie^m#"ntl_;+l.]3gpco67/1$-D.f-sUiTskQfE<#lt0AkUcg$\@pq29a>:0[\q"U"XRJUPAM^0k>U0X*2I
%fG=t_$O6;."8cQ^I_e+[d)6`hpd,X$0X/lWJP"$DJ+MgqDr/3UrU/e55Q()=UT$G+o'EElq4=5'qUoeY^O(2)p9e#mLEHQcr#ae.
%JH9,-h)QSFP1VoZRH1t+:<RM]jfSm&m,mO"ids4j)"Cp^r7sTtkE#IpV'k^1mSE]Rs!PS]:MKc?R>0O)n,E<99Y558nZ(L;Pp#a+
%[HH@iBYM(:m]T[9D.J.(lK!NYFXOB_hk0Ap^,s#Una>M.f?`@RC%j-+4is<<hRn-Aqt^4ED1]J^J,AfmS%%8pT"k%JRDs/op[Zl5
%2o!%Una74*5Jn692u[S's'L6)?;C@X^TMK#&&j)RVPut=GG4n&PWha79Lp2s4h0bFSnfG6BjBeJ2btmjgcXJJR'Y&cSF02d<gj'a
%ppcLsG;g[Ff(j>6F=7UdcHSdREMD+S?KdZ<9N9)L?=k?lfr!3h'Vn1#'`Dr/Q[FS4VO^rN>q0pJ*H<Nsh'?9!pTb<MO;$*6Ch57O
%bFLbMQ^2l_k?+Nk^(VI(l_VH/mX1,DQfUteK\m)k\6C<U\BK/TBXYOFoX&Qr@s\r?2iDga6URI.>sXIBm.iT7<cbg@;&K=%]ddRU
%Fu`tA(3Z:'s6Xikk?)]VI"tle]8SPp;Qo\96$Ug106bfR%MtP=AWCGS"YXq!m\91h2#&&#S\g>H*En.+iA>iD8NrI.SQh76aKV"f
%"7S'tHC`iha>;"!,>OF7a`)p1(PLVa]_fB;Z^7Wtg?cdRORm!f;dQt#&L3lY!ec)GbsZ8AFbPp_/'fSUh^qL@/O3^Ra!>./.A@L#
%Ak\#MK%pbt(?G/2'[$j@9k$Q\*g89dC%3r@B<sa2QG\AfLL9*`QtDDm.4ko_\&D1RK3><.Mf4q7GJ_1S2X@3F;A4kN/[>Ro8X";3
%7).5ESWK@X'/V'Sj).WR:AD!PJGm^,6^i"'!km?2dOK<$F%2=K,i1ec(fMdmBX=;l+d:/a^qRW:MoZdE'Gk=$1.ppbR4GV"4`@YJ
%N8"X*:Eod]@TVBBbn`V4?Hajfo.UPl-d];<=QqCsF<Z&uSnLI.;He]Do(qF*/7h4R!IpRTflA,mo67q,B%Wm8Z/6OS.d\]gfAa<T
%dY)n24V9ue18^61VeiSf0lu4=.[_6DEnT$_$O,O.fj1o`MGcLH"`==^L8%rG1*HXJqOeNKJ<V3+AYS6_]W`*@@qc)V,L-3_e.4)S
%mM%H]!pU)c,qQ%"76"h_3KE?A(<o5_"../^M?7fW#nM&OAt>.RKFC,o:70*V&QpGZL?<%?K9-6X@4$bm(=?\I(\5u5ZZ[XXUgE<4
%%ka,U-SCKZFs*6/:dbY\+L0D3F_>EVL3_!F/X]:8Cgj!2o*DfO_bS(HZ+Z;sNMp(BVB/+S#F4G]3,MuZI#\sS)d1k^1i&$="?iZ-
%\W:(^Met+#$jMF7AtLe\R4SmpdZbC+09lQ%$HE:iQXA1b-PJDsAM.R,T`rCEfTLr"l]\$^S";%S+mPqpLaAX'hW8@C7*cX26A6U1
%7JY"WKs!7F?,DQ&kY^=^B*pSG1:^B&!LB,n,h5QL$5o_&i#Ro=*JQ;pPN-c-&u.,=)lS@BQ7S3'?5\_q5`kQb,YJ>[N0EXpM@b`o
%VC\C1]b@4XAIiaS820P]JF/.M`$l;:+$c9k%M$`$KI7^DW&s5qB&$?hJhM:GLa]XOo2VfVk7N,GmLb/HTZ7p*,%DIPW>LnEbi!fW
%Fi8*;g1@P\N(Xrq>\665>I8%R7t_kH<I[k!'e5OkPM@BohEhodff9B)&9)3fRjP@]@=i[!/?u3UJ.$SrHPW&X98:eZMfNBC&Rqn)
%#@`PnOK^)Q$$Hr`>ok)034CmY7SFs5Qfd;K80UTlqArjO3JACHjAV.efuscA@$SBDq\`8j@SR2#"DJFP2$jq3'.98ToP2D`F3]s$
%#[SE[?4&)N:77cnG[UkVDL<8s',[U%I["F5BZY5%H/UGg`cK6MjBb8Y+C2$7Jf0k3`ecJGLts?;/2rL8!YuVqlJuQ2/Uj-<0aX6P
%]U'/RPLsS29W$SrZ85@<^k=)j/F]gV$!6)P4pQ#dbpjm9Kt&NT#Me#Yh/nFX-IOH?GM]B*UI^`;Gq+i[:DGs*#t^`(R+$ZC#!rpT
%.FLZO7%&R]A\cU0F2?NYAh"U/C(q8r$"O0@*?j1S.tu%-X@md$.mQDO$$UZ4QY,Z69Y,+7XQ[%\6D6.sVhYcC\],gn.MJ-13;LAP
%aaqa2%*[(6jme#)6iWNRG[_KZacBG!M,5tSX;`"FUQ=+12&o67Os[k?IT@IlcK"+n&_\!DC0+lVM,]IZXInd7.1:'Y[?mlO.V(5\
%H2^Cd,m7#W0;O7:YBm]BR#(5K;"$iA7?f'4h*nDg\VD`HllEOQ*,ntup/IGGM5i]u.,qP&WqW?hn2^CZ/!7oT4n:9l!$^p[U[Bcl
%/D1hSYOdG#KP,_UVLscIL+bT/WBI>9`FI)2`N[gEVH):cVCjtQlR`KEKO6;BU;G)iBgnJJ3[F@ZfKb-f'krK+:tR7e)lG"'W2*X"
%kYPH9UL`d);+YfieM)kK*%so6i72M_OJSUO*A6\)\V7Ce?Z.mJ.U=dpU05T%PU0@Q-9>-3Ip_@u_7L0m%SI42;ALu[2AZG'QWR-X
%LdB<\K97G6'QYni`E6gAaJ9QZj:JqgP\Ot794('fo0Qg<+tT!27bH-E:VN8[Z6k%Kk2^()/Pqq`Pq]Eb1QB.Jd/>)7f.M]Y71C>3
%%5ip=3FD.+M%lUJ;fVZdft2PZUCEI.;eV%oE^uZg)FS^76\:c>:c`,1Jo9-c5=[W4DCF"//dd`RM!1iPNb7c@4NeG5SHt3MmOf-q
%>%eoZ(dt4fLLT"!YeH=aM*`#Y*lO;NATeVk$S6)V.\0(gU!WM0n:H'Y#,_*a@mdR=7.\Nc#j!dR[59'9F-rB2e#;.hpV"$3H/UtO
%KO=ZTQ[!SPgj8e8ma&Xsp\*_75O<iJ3:("bq!kuR^3TGm-Z=Qo8^RkVEM7t0P:(B*.)5g,enG[&'k.L)s,8YJqMOhLjsfU/>ZT6W
%R[tmmPSe:1)?Gd+8q$gnb!IGT"'AAq4Xr(LX%B'2c\7'?p6QrcTPqok&/DsAQ\rL:dl<01,@4>],og%S$83;[\#(WUd#cGH/aMTt
%r)<H!rq<\l[K;^BWFOMjX%o^gM'*8adWR3HG;:-EMi_M)e?FP<nQhFY+VMYC+Fp,XQ)f7%V5_[Y/s%%RSA,D0&U2oJUPMJY_)R+#
%"qb+?,+pHJ]?g`24tr&;eqAd/iJ>0Xn;K2[!=UP(_+4_Cp8D79W)ksCYWZ#3eeRZa;6cI%K(0%$dId^/V6[dH%^)?M)b?hVE[W\[
%VW.k"L1j#@FC8`,a>o3uKg>=`PHt9dQiJ>=(4Zt1fnXBu'dZI?6(Kq$$nO(7$/hYi/)UYA4sbA(:PY:uGmb]f*e@?kR8hG]8$*5G
%Yj5j;d@,W'akW_Kh'EFF`>DUPLe40>Qm1t27*^+;hXR23/LeFI"W+Xu[Pt)oo8/uf'Sbc7'\#d#/[Y8,ao#+@`rolB*m4csafHI8
%``RfO!Zci\V2#(T@Um$V;Nkdt1@$Wr$U@62CG]+EhK0CqPSPDY=kTso#iD$&4@<5D`FAtr,"g5!(*G2B#cUNZ3'6EUGq9<Hj$a)u
%5Qs<XLb0pY?^(P8=a4Yik8.!,0Jq,(J)o3:0p*qkJM*`s^52P-elI[n3C"EMGn-j@AJm%l8WTf4W-uNERkR,uaL2oP((Q$=>%Ei>
%>n[WNd3!k<;J4"`(>^V>2;*i9F>?*mO.@^d*la!@'::;NK,QY+h(?l,qZ5%%@029(i^M`>Gq$YK8qK^1Ko1Oh)SgN8&)jRp:=Qdc
%kVQthQ<8O6]`UA+@8OJ,RV.^lE?nUg,FJPb9\c%H#LH%)2ns,V.fer?bm(47:Z/SfMl5@7=Vl3IoMDuRjb,WHA.i]$C+R5m8.Jg\
%/8!GATJ_TLo,\m/E3lX+LRB>a0@&%H-)9CHK:L=?/BgWR=]8de0E^"YZ4!?K&^]ePV@?s60p6id7%@kpI`g$Qqc1=8>D%on03TaE
%)*%=\/P6kd/:ZYH-<J%*-%n@K]9kC)qe.+L`tenD+>%l-10_U8%#GV9;UcA_9D($\![Xe5U'ce*+:MRj1/IU?@($W]BYdp[cS-(E
%p7s'a6b65^*/kO:X6^aM=IH6ZQkc_QZqtb+*=HYkOPgG/lD9376QgN-;(e=U?n8<K\V',*ZKf;u#kVT5U.*\'64jc0bcU#Xs(RDD
%U`N]_JbG$q!JY*Po%X4mni(h".*&P\(F[&KmLjT_N$i%rC@+'ddZUi7^^7>f%,F0Xm5iB7C0GIrd_$-$!h[AW(=86&.AB8!0tT3>
%8W>\i3E4H`J4[T(oE:(_KnJ#^`3dT96/Z"OhuLAs1$5,o;=Fd+Mk\MY&I,<*1&@>Z[*]%qQ3Z&f_XjK*p]p:J@C>[8<rc$>ZmtHd
%TsqH!0K8*uL&\rK%[8`CN[;,Y4=FCO8@>QH9N"&%Jcf+J2X`tB#jO2C,&qM,?;,>N6^m;Ld&dAI,*&GB(E-bW+9sTm%Fka2lNum7
%A-Cd(nRE+b)Obk"!7iNT<LZ@S8d498Ck.%Q9;<e3a#.lPWt/<BVN<E-juu%gNmL;4NIge=9;%Ro3eQgID4M]t&[=Y#Y4j5(6AE&'
%:#W],VArjS.7OP4P3bhC34eqhZ6a,93qfMV@VX)E2C7!^g'j;`-BgX0%):b+eI6tc`3h>4N'/=9A;r4Xg4a4%Ki-V>12CcRU$O*p
%s3bHM$Ekei$h?Pnjai._;:Bdk;Jj>Ce\6rtJ=#GL!tm'joN2Ig5be@am#mTGg8-JDJ]%W_LW(24_GY0%r.^phlEZ?NWfl.-QuSsO
%aKc50(qc7N?%k@7&N2+$TM7Bo1$(/CUG0'TcO$ZY>\]*%I^b^fX<JDl)EF`W9aZ=&Y4`4r@4Vd.Cg%OXTGIrQ(T#D+=+>-dMiB<1
%,lluHR,E-:i/tR%qLS2Op[E8Ui5)'u5l5("=e`-J#BcZ*Q3o$J$TcZTk_Ort,r;ek\Gut2(r/&-1M<FEV?^?1O+)&$,/D/aUeHt@
%<Ci*skubo_:iTALT!0qA'@G;l]pHV$k:26pr?Zc`'&K.2oC+5?\??_Q!!.hQE&b?o6RX()JCac?P@p#aU24aVqI$fE@gbCQZ>7i1
%8l*&/gdef5d'651a':o<$rE:9>mt>s:B2^k0F;174I>XB3XUe-3TL>47\)BO*#X]A9Iqe4Pat'\9j0=-)>'"DFt"-6##7i9(-*2l
%FR\k%c8m*Y_,V$V?no:r!(-2!BUF\L=0_n8Mh;WoQ3h))B[>U5F]oW89Sm^Tko]n9."]ki`h6une#Z*KbdFNN<MVop_W28#+:><B
%"Wt5/VLYM[)2GU,&?.F*Ts^^Imo+mr#B)7I$dgn%l(VZ,`JN4^if;Oah+%gKLAi53Z;<t8\rrCf+BYZ;;Qc+b8Imk@5\.aGkcUZ;
%TDM2`(''p8c3^kb&je`.+G^?)33u'(2=QtNn.Ro.;!X-ap']`A6BicHV!(]U`(2$^W\s(,L66>ZJ[[:`O+UqoT>52C%iP<Nn6U#6
%JG8"C*Y)4P4rcn@h4p!NW.imphc9>QPe*9Q5cd*lV#^NFG&h@1[NLl>l'L*6M:Jd4)1i0*$a;LNX$RQC/qk6sWaKuElTJVc$]39!
%bAh']eu])XL(%0kMFC\sp?OloJo0#WEV6E*Ip*qHOZoMK22nn969()n8^jL(&M$98pmNpaUR7<LJfn]tQsrYg/fTQo)L,@q6GKS$
%blY$WgrMcE!B\oc)sBLQH`GJNMBj.9W[?jfKD.[-1kdX--V)p6JHdT>&?liCa^R_2n.BP#Kh?bGcp/C\<1,@K3`;W`V?NG`>);G,
%V))WSPUE>2ba:YV.3q-*0VXAk,__/<*-$RS%=^#*V83*87?+0^dWgfg9b]uJHA5MJm=TsZP7F=oc8n_53N:4iF9ffXbQ)W$$PYA[
%`Ns'M'S7L-Ro;[Y$(i@31r6hXoh]1&TdDQ>$q*9H1RA;liT3'J2=3G4Yt7BICa_GB@tprZ)`tu`<6!<8b,.:_=:Oog?ri!Qaun-K
%#E9IA7'f7Rf?nI=B4e(PFGEEC60'm,hG;[VUM8m<TL:If!T[.^K*r)Of*,-+3&)sf%r[#iR(PkX7!S8<5]5Z"\26P)_hhHfrZ\)9
%7su!8!;E)oW'C_2Dj2g]m8l]rA<f'I?W9cRqF$'MVD8CV!]6#W;rB!&T4-2$$#t3/78;;4ia!uG*4h/0c:Y>)+p+s_Y?K^L5D9An
%:b^(3E79`'k`\FN1gjX(?34Hu_Be%o);$.W$7%ka%@qaLRY1gfIoIu;`5-;Xblbj;9)+c*mLHf_]#puih2EM//HQ;S<fHOh7&:X\
%Su9bH`[E]6-H,1_61Y3_)1aQ;o.E/QYqp2)%GPC6?t@@#;NYVKe71$NU`1<Z-gKZlToOqD_>(nN_a.I:Mmr5n;G%j`'(jG%6*3oW
%"[r6Xl`:??]bb*1'B_=lh9h>hXod="Al$L&>cMrS*<K/pfI7Z4$Tt:)EWV7[H0W>fOG%[s5VBi<lEqMB(pZe_Yukb@*.VYN"VOc@
%Gu6jJ;.FSi0H/RW0EE'j6N>lS:d/VZ%%VSO\Ur9P069N;d5F,'>\<Z/H!$,P<3L9Z_D61D]kA]^L/T\Ha)$UpO7T^&Y<&h^"_gUE
%8kSC6Kq:Yb#qGT^Oui?UUo[Bj;@j)8N#Q"ibQ\+rn.!f3R:)3n2%o'Zm_\8=fVaOljomVEJLimRHu1"q","LV#-B%h3&:adC1to0
%^k&SeT^Y1>0,W'35q%N5%)kS%!6n=G,Er3kW4N!07Spu'ON"`HBThaO2/9(sB)i4*HWjGicP]^;).=it'g2Bs<s8M'kT`?ZM2lsO
%pKK=an;GFZE^Vl7L^]tWJ;;VYKtrEDNu%N;ck'V>g0+N2`D$a$-$C)d2b)@A1=]AAM,mKh6PSgWJVKA/K2PZ/_UERM!*Wp#:1L(P
%&;*Bl<)F\f2IL&'YmN1,.^6Fij8\'8%T-a:cl%:)bRb[$=qotLFO8qgaNj'ZKIiPT5"9oUr07<!!K1;U,a:57r.M+&?@s=:916iP
%7r8jl&-a;J;Gi(f0X7Wg:_#H*ogD91^`s,,4P:@:P(>lcJjBX,69$VP*!2Fj"#/](nnAW.:eDE"?GTVm+0[dD/OPUHNMF<lBtg<q
%d^D_r#'lnfRILC`,0O[o%Yu%'7O7=,9=o<8:39h36A.ltBPE"g@R20_$/V%@EPJTG/S`Nhok&5L<\P]C>NgNr(2!LAH4*N&+3ZNl
%#N;OZlSuXCl:n6q`*(o89d:>Z;BS]C"C5AU@XJkm10Or7Tr#,h@UYI8Fp""?<#-%D*2BE)90!nUU$DMi_,c)U'UABJ)j!JtE2YNi
%,q<"<&AO(+5fBJndaU[<F9E&!#pcWUIS'%G@8is]'2t1@Vc:cW]WV)8)Pg\LZCiGS.I)bi7RKWH\#&O6[cjuI?3Eq5mf_kT">,g7
%,@Cg[f2$O2'143:.*u<g,`oSV`!#9d:ofE7j_S<gYXJ_E!,-uNd#rpf!#m2(%CB!M46c,+Q!(pLcRDCM^G,lt^7-ZaL64a9Y6^YQ
%$R6o"$4(9?@m>VT10<1(A<<$DPt6GUBS>DTbR^jcOq%<mL5#g8ha/%*k9OgYKRlj;<bN4>&ck:@'5Udl"P44,$qh\B+^NII,OfUt
%$aXB$"'VdM\.(cQH@"h-8fR8Ed"0e>1V=htD@(*HL,@#^@`jW;L4CZ4-7"J(f9fA;<Zl;FpQ`sFAHF&@-d3K4&Fd.?qc`ViD1USQ
%Wot\h*Fo<4/S.pn0U"qe@@-dNDmFo#PMqH)F$bch&C-(9J[1C&L7\?W2IRN?*hf?c[>?sf-c"9*AK]i+!ba"W72%`K;J6,qlBJmO
%EE><NBq@lrp<3tsm2N+p*m^ZD%p0kmn,X$0W/<,mp&gN^YA.m7*t&@'UM^>9+ImVQTQ&DR+#+LOVc:Wmi7LQ0!Netm/^'s5%-*Ot
%4hSn1lI]ig0&!r`Z:oKh!2r7ZS7s2L3q\C(7-JU1MMf<^J_?^X^dpU#S1n1[\qc"A69oKtkg(OF!^[GFBS6PM5YME04V^fkf'Il.
%iXmp*dh4k^8-8N`<u8`#5_S%F\^\Y7c$P&g>j!kU3-@VI!19Oa4>k0f\);I&KTs<d-^B^ll6@R>MNNOcXL]i:.UH*!94o:(h`6!t
%>"bQ'(+9J3Limch]f*Y<Jl^pNAdeBe'K"7I=PrElrVVlU(l\)!]ksL+-CH?87q2*G(b'`d'B2V<Yi&?b"?/'6C5m/:0;G44:^tsq
%WiAECe.A.:C61q.1&SQ>W)s@raQtK,kS.Zc1Pr+,:(be^MpatC_Lk=e.g'I9P'd&:Moo)qf.$:8G0V#[mbrd@ljX7'6ejJ2/S81!
%M6Wg!WT1Ws8sTHqlJ_imUBOO&hGh%6%GSfaW*:Cu#pbCTOFb6k8r!XT-4^nKq*u>g9o!Cg5NAm?$u$!IbG%E`-/pS;aOh,\aA!7!
%KrkiQ-j0^P$NUdea8opP5$JYr>rjDk`OM6Q=HUEWkt_L!Kbi?sSrXeYHIRO10ddiR5=S/9KTh1!hr!&E1"QlZ-r.[rfLc.jnf#3H
%nA,15dSLBk"C&_?nAs;k2?&aHV"%hMW=WK(1I<C<TbFiM"/X'CK'\FoJUu+4(2Ur\i!En]M71ZfEl$M^d==0o1![;bPE$CdR)t6G
%F!qFY%P?&&fE+?h(*kB9KlKb/BiH1V?d&P&(?+hWil,:+FG<k?GQe$.WSLQD#D\tNd]*fZ(f;:qM6MM9/7p5t:E@(gbRH/84sD5u
%"WA5MJ;0YNKh*VO?c't%RR,"oN7rdn7@SB9#+9He2(AjYe?jkdEeZ.G%hWmS4Gfhas0)L:[_bXD!7ru(?M)@\n5t3i0Msut]\"og
%#nI-e0N]1ZA,rCm=HEgTc&#LG`4GeDcqFktdj_8Y@4<tGB@:lXTi.7$N\(ZBZRZ^:DR:b%]bZ5lIC(t$S+3."(*ZB#ia'd-aA=!K
%kck:I'TlU"C)d_bPT9<`B%J3e.mi^F4ZF5Pq\#,f[e)0<W9m&4#:PuJ@dS^RiuX/=6OUf^IC(h$]@8WT:)KF7M!.JN(<oUi.)_E&
%N3=[Yq2i+l_"^Cu'V[k_!;,)$ib%mF8XWU76'5D^Q-^Ma2JZQE0ST[[L%/'!.4])jo]h^cG`*JI7+`3C#%\&W+N3nb90,?'%d5[!
%i451^VaWb23D>BT")a*[UVSBJ.F.,$Q5kt<X+J1K8Q5CpAA\0T+[r?>`QnYG7"cbTEaXY.Uk&UYEH1WJA%YL*7f6L!f7u?k?B.JZ
%[W79>-NQV0`WC>0TM(%4`TGBbRLYTqA#$te_5REQJR9=(-B3kuEp:"HRm=G8es4a=&3JPE0V4a+N)iE\V8_H8?n0"t@`T`:\#!bq
%#[26uNHKT-L@U%\iEdBU^e.skk0X'+)=W:bo,/Cl6Jj@nI%7S%Bd#0<Eo?C?8A0;r\?$Qa#V3k&2ajoHR!>eXp>G$'A-'PjTnVs.
%H&BF)nGu8RL'q*0>cdK4>9ZD@lr&p#>&3Oe+OGq#aFoY1(qRfK';-43)c^o?"K!C45W+@*_BKjaDlUgY[b"41GYt.V+e^S*`]X/u
%:BXJ5;eXftTWa!/?T`KfoS8:$?kb2_,?Qe=%)+X#bEdU+1h6dl!I9>G*\GV3Dd^"@E]]a&l[Y?k-KNGT0c;)g.5F(C>:`c2YThUR
%@<fA;]in3V!"OYVS5+?bZu@06.B%lV2Us/T$/E]pR'A*LS755RAI@DFTPQklD4n8P0h0/:Pre"tSI;+hS2F!"@:mT3RfU$]-c,8t
%BP07QOP54r"u+A2V3>W!9UM4'XGO2MOF_,RF'_hYS//ll&OpjF;E=%CD;cAm3D%i=Q&tm>"@Tc(L#I&LbpVIHC3X5/V?h1^gUB\D
%.OPLj;iCH_eHThs'RruX6;^46Rnf'XWQG4#4Jk'"X$sIiE(ri]l0\3Nl=BBFi>"&C@T%>WNZNkH>fuH]&S!Tk%"ctGTIF"0Z3mO@
%DHUp]3^n@>&#Bf2pArg\"eq.rM1[Bf*ju,I6\#H$d"J<W'VUTg)Mmo[;YFC!S:\h<?Y2S)pcGH$i`Qh$C@9A9q$*;<`de./CZQEr
%#Hh$hL/UCX0KRIQXHKE@@aQ&J"O=PW)7;.`$QsH=G\PkTG%h-pUiP3b9W$JdN>IBl7Rh$AB5V;0Vol(nAMhm(`XEDd6DWrNIDVj6
%BRL5f15o.h-LgM]`^W7E+YFIJmaU;UZ7)]F0GTCM>;.+Q3]hIHs&<EVAiY+)0D#ZcPD%l#Mm^q$7Z.eJFGc@hnM"=[R/h(,C?N^E
%!&I!c(+RgOC%IqT6]X&GR458p#D?^l!;<3U=i5n->HHIEoCj$#`UJu7i0t;(fH`FpL?S\L!"Xrr!>nl30dH&+'0g)jZ+!-^3,-B"
%$Sn<peA,_1`mU(h&[ftgJLR6\eQQd6iHLi0&unDD.3'jOE4!lIjn9hP*1;e"iF%X4=LA@W)_lVt#\QDA;(!Sl1qXag!4mXigXS+?
%,:Z^q&"&uV)DYOHobA\?5#<N@.jrj=i?:ib0;m3X=i<@M=6ENlEbomnJ\`iB6t=P=)MnS-7aPEab$Qs3leFc$JP&S!Q^\/m:'C7+
%P)[&biHL`[D]B$M<j``E^:LYE%8jm\4N!gEMrk>m\)496%FM']&!t/(lICt.$eapMTCh_Nl=3B6L\LLMB/chIrT+RIr:TZJYJ3*3
%q>O1I]_P&uD>K1"DgqW@3k]s`DstHUJ,\m8gMc."gUig.c[W4s]DmmuDj5GA^aqV/XHV$_8M0l/Zur7j(`5?OFS?3P7Gi@;)?D;)
%pQ>d$J>d]q7Tn"SMR3p9p1i:f-Y>";.#)L`(%jJ)a+>H^,aomAdV1mtK0"W)9uL;`8tEAUdF;&Y&FRP7P!k>1IMl6^p@h@/'%/9+
%.8F10E$$<A(B/3a-QKU-rXtiT[4.1FR[O/YTn)cDZ'Z.Di2n.4+j/LgcOD`?ENe)YE/cWP^YJ6Y:^;b)qg)Ng(4pWUVf@&)Pr-XX
%Jb](X#Y@HPT'LN%;bG`SW2\$LHDiFrOaaM*$Zf9l!,`.?!>E[2H02HXC1^s+,>P9CFTZ=+MDK]Y1D0PK(_:(_=QP*TN'%K&`?E&<
%.N-m:XDVRE$a"3OBMd,n:-^*A<-3*gh]g:$Sj\ujRU[<<\KRZ;&]'9=p!k3Q:9M;No*qCIhKmaL5p[5PW,G=4\p&fm+TNA!Y7P<6
%PDXdq0Mij!=/9mN;7O>,<rfk^+bLs`0LNZ$1K)71q,M1H!S*Ru/8/jn[2BYf6Eh58n#-mST`\.SaI1CX7tu=ZGR]md"NdBl'i#0C
%coFUV4QB[%G\sb8=M6"b]K*g2_NYY]+S7,"D#*qS-X_'!Z_A6Q)'\_IHA;&cRerLoc!^f!7;Dp4(\E8VY%P8k&1"6ef@TGK#.`ro
%ENs$`PidSq-JS\?)(o+\7W*V)_;[q.m8DZ)Slm(U63565Boe^=WRD@7-/;pfl#Wk8CZ5S&+Rb+C0LQ]X%&)h*1G+_l'0`IRb2m'2
%0dn6hZtc"/dF-FI\S*Sr"5PptemqAg?\J>ENV]e0H7@9P_3b%UE,UkNfblR:HHXO\,'G8K1I`d[?HKpe'fbb(7B5m:;/:I1P?+$t
%A4@k](sT4OU;GrtC<E:Df]]6mV6KPfQ]p3\^3piOKIiB)Vj_\M!Z+/oD3uE"Q3b/F91\Aa#3tA;kErBN>3IbWe>UQ?<^[AhQSckf
%M0SMSTWXH>_a<(<c+AsE:a2?uAjE+r<76.jgk"]p1BS/0Zos0Xoqt3O$0k:kS>%T,;mg?/U.#0mP=;;$V-nCBq)W/k/F#c;ga7%H
%PV>bWC'<H"6q9CtTg3=$2)=SFQpqJ,i]/lfD5FQcXeD.68'>qs>29T)_ItAH1k?Dd(:mbp`EAFn7c^VVig0mAJ87%c#1^cR4K6r!
%_.>D15Zo['/rm$q*U:+L(i?6P#%p=f9UInPbi3oq+tKMC4.=Y/r7gdcQ<q$L/@lT\W0,)GFP'ltOTcO_)Vi!(r1TQm(HP86Km+L6
%DJ"ta$J@j"7\o]8#fmgAA1gW^322VX,7aq-B&*GXMp&N\<JJ>q;"CnI,]XY_13_-m6;UKY6C=0VXf+V.Y^Ai:6\/f/6mn_4pp"u_
%@eikPTM1f\`Ti?MYCIF%-<JE[l[mLU\?oLu=X25mW$8=LFbFi\4?W'[9Ku`DS6j34$.DERX4t$j")^B;*IU!%9"!VHRfr('[M&2#
%[IP-nE0aNB$TJsFHta_/T&rj6!9(mn>@tlB$h6PS/ZG"c6WSHa;'^`E&HiCb'-U:^gSg_)L&[p!/i"GI1(69KlJ]tRE`q*-<Cl//
%Jfm.P27lnq!s)@XDM926M%[=R5oit%5Z&nT/n*f$C=:@g=:$%qXPsQ:gPB@ZUfn3N4_PDB;ug\!j%Y_H!oPidW+_j49:Q^I=0[>Y
%a>:!%6I]R3W#hL<GSlYs6`I.5BQBm8<E:IK'Q99(fRQj&;>lOB3n+mH;C`Hi0\m_O=ZEuhR>igS2NYhML_5M8bsP)S*dO3i&qe>0
%E3^AH4u*142=huO$>KqpVlA1;j["T7Vb&Cg69L*PQ,P7`BfR"J$Y'[6q[0%4i??DVGo7r(Jss.T-n!/]+daqapI7mkW]Z+X@Sp6`
%He0%id6501m2mb*5UD9U,@3A!W>I3A_*XS<-:@$O`7=&,0,^q)E;2jNg@<T^T$)OPN?pGoSMW4/+PmTq%$G^'a]T!NR@^]4`/#$u
%$c,(9mq&ZRXPOm#@n0#)="S!g0O8pNE`!W&ocSo#^fOsU@F@uPKrJUCGS*SLJJAfYK-M,q/i2Nnlf\r7%YlS#r^-@H;8AIGj.Ho6
%X?j*65K'm1=k1M`>W[HIFCZT.%D@?P7XF3"A,tT=\`na&-4oSRV9s#1$4hBt3Q2.Z)]X\9o+7+D4#,jO"V"iA^;7$\J@UK_2Z;BE
%W-pG`Ns=;7BudfBMh6c?2T`8c9p_@!*sX4I)5'kMfV.h3c&,R$PRb<?.Bu?p4;gd#0ea8q)5-Ri"%??q";W\+Q.D`3?qNhN^%)J1
%du-oE;l[L9bhn25HusNO?!gF?TZ:JFIoj$e#I$@:NFaD6NgQ-`^uDW5?"U^aLmDKMC,d-i5:eKZOMT8dAnEQuesKdahLfE?d`&!a
%?nP)hiBWa:\ItqE_JV:t"2ZM@&@N,Eq5<dj2'_P<6^b_!-c[@IUrE&7f[=<,f3m&tC<?*p6!8n!Nku>`'.073ZEVKIYt5)-:n=sU
%:hmD[=TPjs$F*\*Na\W&br,6ogfJ)^HpDd+>q=<[[pcmq'EI],"%R'jZjRc$_iR=:#%S+)H_JrH#&9/,h>u&rV,i/#U7-17IZ(%!
%i"i'!'t3ab)Gds[G/PBMmn]FP0U*/s!UPkes,;jU9@1K"Z\m@#MsGoDa/j$^R:Qqp`QH,r>&sklbW'(;CpdP;)6op?E(82/cYVUo
%OsB<k:H&LD[k[#O"ujj^hD(?qW'Z88ULaE\W^tPeAJ)Pe2[2"3#X!akV[Bd3*\%31gS.],dD2Cs%5LVS'Z3[YWWni\G7$hp,1=?i
%M#dT.@nVHZI'c"/2T%lNoFes@?j14\E23\!3@]CZIZ*PEVt'%uhLph:[*3DcItX]'Z#"cH9.'9N=9^Em.\]D_0O_(sF9XhM7E^^r
%!*6]^MmG0OacS/M[9t.3)dd4tIKs%+0knu]SSu(p=gnlE=>rd/-i,1S]n&Peni6_BKj($jRVVBnK>%ssO"0:C9Q)$F;GWZ#$,WV`
%`FPcF\e*+[HXJ!)`9SQX:5^3(/je-.5lq]*7.mZ++e"fA%esIeRDcVPm-Ah+jBbeoaBG+5@32c:>;C6So?sGkCSX(drg^?+%<=`B
%JO.a\:a*qrZP[QfeYJ9XX.B$f9mjrY.^%btd7QPQX$rg1/_7dt.X4L)Fes_t2'3fE7L.7>Qo%A8pJ@(eWJN0WM3bl0CD\"+(aIiO
%hD*<07b8Gn@;,`Fk3(^F!hHgE3/ClU3u4au<)EpSL8e5:a@#nt1c*Vec)DuES.rE#*^HM5AMb4*pYi$=6cEXQ0jl:iH<+I->!Y3p
%.p<dXl"Yc&S#&\tP5q_hr#Bkj%9"U0+KGI>$5g&]1n'hnbE,b:`W</nl^XUlo-1L_[0TlWJagpcZ]#ZcIfR@-gc0u2boSu1URZ&9
%9G"+Ybtm8]/.jj1e>bU;DWk,k[0f\[4NdFY/V(`RR`^DQE0*_(0W:[s[3p3fRKA(=>?PlP]QDTc(T]'#_Z.>b<5]c\>e2rSF4Aom
%=XeqNAh@A[HkR&dq#`/H.8&b<8g?*M==LU:e:Q4UQI>OeUmBL-VOX4.L(])?QjDeMB$V=(`VaJj'I*fpXZt'@X/N0<OfDU$H4YJ&
%Hp>MZTU%n+=U=15Oc*X$d&kF=E@(#:(KFH_:4bP]F-aC``qGgZ5gb1-?*XXQ3pfPCRGD$\(K(>&)(&.bFE4MIc['PT#W)e9M5'cW
%ILKhR=p,i<':7QiaHiNr;/<\I:p^FbJ=/0T05H$R:\@*bLn0F^qZp^=<n*TBm\iV)'#UF),iR=]ooO#J0,2X,<g,i^J43sFk]HEb
%8RQkQf0j^=_pX5ZcH>6^+i<Ior.TLk;Jf7G=]7ZYlk8]36FKS?ium8Zid+:$ZcCdb7(bc0U#96RUZ/"Ha3;0Q=)`LhS8n`e^$Ho0
%XpfB<&b"*&;!EPt!D;.P_PI;!li;)?$Y6XbY9jif7`^mI1a05Z<1V9aTND]P1RfA,(+Y+Ko86NUU%0t=[%1]G_5)Q(4-"CfQ!*4-
%Z^cA*#?'.#O4CFETJ\'aeLcUo+BoH.^C#'r//I-&6'bYgI47ti0.77snX^Ih0Xi;c1#A/:(.M8e,F#2Q5lF`K\QEFd.;FQ1a$jpM
%;8N)T/^:^Patfrbjbemri$U)2iqTgGfOe[AP.>gp%&*`0_k84)&qd!sV:8RL9<>L%)E>I`7lbXDY39!k!_Q?W3LJs!A6!ShZ)FWi
%!)\,`QHdF2:0'\R._toC"?88;3'i\g=u1,`:8UIX[D,>N6a+U83=^"W@Efu_Qa=DmJ3]H2-u,ru$;h:*KJnib^_[j3l?glZA2)8@
%;Q?T_@TNnr(L+7iil&tkN;Hi/6_RLW&U`9t4Yqj+$7>79GQol'KSuNpPVP2,6Is@fC,H-W8sOd<dTg4Oc*1;)mIhHYRTIZX`;il%
%,s7]p(pQuMc.uq'fq;`YCpC0tp^t=`fYWg&cK[+8k\RmCA"ahY3L8GsaGp^njo,Ft_#l=%U]lfHIgZLW#Uko\,lfb"AD*;orsV5g
%B1L2pCW5UCk@j#$$s9/?RH?bkZ("n]:!:NC!%4f8CahEH7dLEm&ai4MRllfZTOGloR[6:Z\C;5kRIn$<LSk@BQ$8Bc\12eDmmPMS
%bO^'5f:k$PQ-:+#!KQ?A=jpa3+_;kQR(%a#/+gL%[gdd&/:KBg1%(mQp&k1,ama2Ve9:]N^p`3o;;]q>0^u7]d0(epDIp>"Z&7F=
%Ia9-BL.<Z5bds7'0/IT//R%B_=V9HO5h4Jt5iI9+9A<Nl8l<MA7P2G_<[%rHkY<&48]<Rl2<).4Won_/Vb55Q`k`Hk2'ZJaTQool
%12r_;+I@*,'5Sc_90gt@=[3YUR:J(RWo?[Y(F@V+i\7X%Bj";Qr+,Zs=At_]aoJGV8b$?!NE\hkH<jJ%'GLf5a^Q6tTK"DYn^Vik
%Sp8@X*GAGJ*3qS#TiVOj#%2&sq,g?2)$:d;@'(tZ&6#bYNo3(V0k2YP]`'&C9aA(jpsa)8:RgA&$9QPHFuZW?KrFXtiLW*%gQW1d
%K;k-R1#-;:+tO^oO98JR>o+!k_\4W&Fi.&Y"9-Jdg$f'<1mM*!*6Qi1HnQD`-"1M`<RGb&Bf#+4=u..#"]NfL-,ZL3Dq'['Tig5m
%/Jq7;&Z'2Coth<s3*G#K]mG]kV$"Z9L%D]C_/G3b'C0,iT@F9]bU`hLCT29meh1i=.\,E8$fkKfE7?]r9Bh/IR?>4"b(M.VaNO6C
%iJ9^-+d-uAE5u&?5]N`V_GRV#6)C\[3!r:*>J;^(Nqs3dVc)i6K97p>H;u:3enVGQE/I#sh%%V*MhL+"I:VVQM/Yij+lo:r#T"u+
%X(6R.E;J!kK<FKl_tmbLmTL[EbSDOBe\PCG3J:+Hn<29;hMQr\`$A1><Z<%M_ZK5+dbpLf"XsM\1,s#c=i$Gu1,qmC"ebLi1,rVM
%kOVLg*$qg/hJ0;J%F018_*QmLK6'0q"44/,ps:d^#1mHo96qtf"K)!5<qMk7P[glJ=;r5G(G('i:1FU@`V&6K]k(1a>aq/3B][(`
%(SYPGH#OP_Jec!P%ut89[ADCYB;#IH/[YB4XQ5*03iqY"'8m(Ch!0NuW7Jm:hd_(RI7p-mO0Ll."U0e?[K>D=Wo[?aHRKG#20*`O
%(C91cesLqj$\Ul%ArtlL4uhj3Zh/CB&'i$gI%NYU&<7NSp!9X'3.P'^?>fGPftc^Uo&+mS)mbi3jhUub[ch^W5,%]GRFSsjqVVc-
%;^:)_K/8s;!hrobK>[4HH<f&,G>+6BU"9N>$Yu6>qVWq!CB_V&H#O$>QKDrD_',_`SGT<K32%=&RC2VDKE)nODrnflfd09in)_A/
%&l>7(<<m_q0afsMXUbmQO!V]pot_ehF=CsQE5tT?5YZ!AE3s:rr2Mrjj1Dmsn+FNU3+=M^\ir+O7"i`uI;kL6/2UA75.H?e:<TLu
%\7b']**Rc0cdI]oVE?hr#k@"i[2Dl&^=-+(*-,q+dGn5PE"ji//DXCNK3Oe_:``kG]\Cp@f4Mng<Zetu<pPD(>mW]UotbcqZuN33
%G^kBM%9sutBR%p;UbsgfEa.[O;]_H-$usb=K@;"-=:*U%K<oGC8U=AXgr3GGWg3na=qoEXo&.;cRIdd<%h;]9Jacha**A_WTPAak
%S<Nb8d8bI2cXaWRH[0QQ].D^`b(I$\X;23dbCa<j>/>2/%o*+41=$E[)`MQjaJM-\/5%1:XZe^JW8=rYi!9FT/,mo]K<p/7[UP?"
%&'goeXEh+O%o.b<[?G?RE,E^rf*Cc2Y3LYg87S`>XUi^/;u.h?Wt3MHF-@KV]fnDV5RSE4I;m1Yc6[>mKC^[iF>_\Hi/V^k8>XoC
%7q!@;[Q`7ILG3-`FK5q4-"X0p\ir*Bop)D^5WDOB$<[ai6W=XJ)%2*bcqOdEXp)\Mm\VY>5WD;E7`F._NE3/dX-j,bK&[K\[9X/n
%4')0Egnm=r9-NCCo`F(`dn8i)!oYQZWHFkLJT-nk9tBlti=<ZfCmVR3iL0-kmH)1Us3KQ62V2qR=eadoU&TWr*RW\OdZs:FegHZ1
%gqHju'pa3dMMW8Z#QuH45sPO(P1@<rEim#2X6SVn-r>TB6P]$TW6IA'Q!'M:pN*H&%Fl=W3;dsLBJjaJKM?M]*?1NfGlY^P!cFna
%WS*"7SueSI1gofT"BTr-$dJq<@YY*l_hC#i'KifBmhmHs7)T`;UI'PgAn2f@.g/`79BUi`aJZ8t[c)cV,#c;(RG`X;lA<-VGi1,7
%-6Z=*"(qjji71Wn^`dmnTc+t33uEXC9(B\?&\=kX*dB"jSa17QYVSh?d*TRB_^MnU#R;DQ@hD3fnB_g>%1W5qhu70J:58/n`bp<X
%'+L<'m1&o]&7+p,7nF?V@#h@K>n\2nit[5O,W:WIh==KlXVmilSfn6S%Jj;c"$s"@+fHP@rqr[1j7ea-:uE[=EG)'P<qu;#TYOEY
%-V[cC-u`90A40?EE'bngnS)+`YhZHHVbl=<FrQ"J8Ti0.P(j*WfM1bU"qioE5JjA$8Djbj-j?t%J[=U\Yu5:n"AY.Aj:MY;!c@.g
%!eHOs'r[?+$60+_3Y8f8$pufnE4dhc/fPKa@8g#Sg7Z7WU54TNTYT71K;_%f!iH?@"@AVTi9]U*<nI866/i'nA4$E2LC[2c)A5#>
%9IA#8^ki1c&EsB%:.(I]&5s]jU2%!!Vu_H*`CR,\JA<$6:2JdU!eHQbR]pE6#b98J1_OCci%1J9J/\tXXTf\_%0mklNpQe<j+*>$
%S'</e#FoaMe@l@sS>_50Bpmq11Dc/kdF+Bb3C(udh/U4R@J0I:#@'sBTo:thOAmabN&]aM?">X&AiS^r.ZXYM!G@L!JC^VXi,"I:
%A;fGt;p,I/Zf6MQ1_fr6)%JVa%XH5:%(IH[/L$W>(iTUF==)I*_"juGZ`Pq>YT8O81WKOZab`DV`rS,ts/'eiE53V?f&[;Eg^od=
%$G.&7%8%#_@DMEVLu?)X#+X!bKP?&>Vd[Ia]ESIULpUnT:r"e\WGQ>ti5FM`UXfhWS97D6@;..J/99aMCFJ,*%-fa0.,^s9.lA#[
%^&ptZ3XRj[I]%^W,76EBF;P?c'QD85_)==]\04pSg&M.$1*n$A(uUdtJ[DEa!KO-gC%WGIS;hb>q@NcKYAX^"h]T^o5X*+H"?<5W
%`=2m='%0*(#]ND_W]l1<VlsWrZACjm[R;:61PYt.XlC,cRi((RY<afe"upTU=`cL>!67C@#Z/PA(O]iB#Qi:e_"'Sm!N5%D)@s.D
%df&GFTplnWK^!%'_$gF9fT0(X6=PJ_r?HDk`rO/Sd%\-$"umD6'n&FMB/,l0j\A[g,rM5?38gY7XE5G$!OgN-)0*G8ef;$UJ2>SK
%%]G*aNi7K$S'QW#n^^B7G9Cj`9K)VR#b9b4f.mW:_Rr`gd"&oO1\OJcE5411`O"PoEPSOqg""hr^a5U9p^J3^L]rd=iIFR7E's`i
%fmrGM*!I<tSK.kS"e5a+/1mHeJ?qebQ3dmX,@`!3BIMdiTSm!13MM$KPq%;4%0`94.U`j[U4>$BP;t:iftL>KmQ(b9dn,K+cX=P&
%LC.@ti./06PJO\^">8N![(E2+i$Ksr5XPTcd3!r7)A5"\%DcVG+b;F"6kl5I"HHTQnGP3iE(C,^Dh\B)1$c[p&i^r+o^Pj*E(9X/
%*8HXk=_UF5Xs&AfTsQaj8DmU8_U$ep_"!8<Z.kDVR;jAebR=dt916R:)A5$D'<1pk&if4,>"Yh_?#j[Y*.bn&^19O@d?25@4q)G@
%)%nppq&#32:uI';WNFT)7BmP\Y%7e@:>=BI2aW'7B#S$qTtjgh75ij;'Y":U[-*dR"=sMNY\-ejXK>,6ZIN\OY9BJA"`B<OUs>[L
%3>YGsRtN<?BQ$*!:uKo<+F"A"N_.EaJd)AgRlfet2P@htD+hm6&IP&7`toL>E.332"Z%QGV!pu-l(g[tUX35rble@nW1rt;:+%%h
%S3:+cOM*3TSO'O$B2IOQ!+YnKK*"QbZ&i6J-uemBak`jki93K@-j.EiB6tMaWYu^6hBE<hq\0GYY=i*&@=_p^969t=$QKO[5#&or
%(C=P:%1A[j(!.-t*5R+nDGVm'9VipRO'(>','>+E3/Z'SM9qs3+]1aH$3cIY+<2F3$CmCWK'074i4+NE_@-_j<UGpqp^IP"%o%$H
%!_5"5[_iLZ*.nmIVZD>nGq3lX703]hY'bj>'K@g$#g^kj^_m.?gcZYb*",lc6k'KnIV$D*2fs&7o!uuK^r>+dA]+X_Ne^&/%1=-g
%Fqi6,^j/s;^)^q2,A'Go=@31GJGjmP1iR&^E#:JiE"3u08&GGDj82%Tp@r#XE0a2GpRL2n)qNiM2b!8PAO=M6Vg..HLFtG/ZL':G
%aO$.miP8T!.*RSV#L9&a!ccHR^p0;+/#OU536OUn2T.:1!5`8aO;T*!:SXZC3DDc([f.!Pr9d*?rhSsB*]Q6G&Cd?4J^]j:kM>[D
%Z1Nldg@;rb@)Lj>)'1d"S$$>C")"'f/T;.0gpFq^3?C/uLaI4'E,6bRmQ2CJ[QT3&kA]ASV3KUk3,hJlr&fT6k9JV_d,;_0$sKeS
%%U<ri!09*l"/gp10)H+`c8:!1G(]sQCL5V[T>Q5tO!h_\6N^t;JAnT!%33cG9ETBk"qE@"4?=B?r+Z6SCM;X\`6q<e:XQs$cA'9e
%M?_AYSn/q['Fc%#B8EJ?d(g+4m0QLbB]++G6&M5,JKo-#4ZeH6%3-"4HHa1?ObX/_<lY83`Z_o"(-%4ML:dNjNatV9@71/e>q5^W
%)A79l-F>cE3+@Hdq%3iOK#-O\"ro?_:IN#J$96NO'!WG[S6c0JNYp\C\N]-ei'k143W_9M,%B<Q&ASbP)PS5a^`ehYU'T\3m,<VT
%Sg&[eb`6g;%0.AK%bgmD!8r],e;j=]khMm7eDS*01k@M<6iVm^9e9O<s$e(pTh6:!2t5)mcT9,GL:rgr1P,OcN$u-Zl$+;YU<S8(
%iNj%>lo-r-=h:B,hl*hiPM6N<4#m<dm\&I).c4(>7aQ(2#t`T2^EF2Fncnqb#nhE&cu6!lp4mk=Dg7^^!r3;\&(m+f`:)80f`Ak8
%Me@Pqg$l`72YmleD]E$S<#XD5<mpLJp5SpROuK&JM.ddLM"H\9An%V^I5=DAd%F=5Di.[IU.F/U+9p>X^*00n1.V0n"B?utco7IY
%B?CG(G;0`6lS.5[=\d8'.,UtA(3J.Wa>Zk+T1=]UA1CFGd/^mH]PCo0cg\W+g(#.\Rm8sc^(&p<\L$RY%,Dl(R)#-Si83,!N.!O!
%DeP]_1:epA2\N#V^MhKU'"90-mhFIp@Lf,"HUC-l]ajGS)EB_Bbcnc(Al>:SHUC]4[ei]G%K/W[;OW/`UJ52'G/X*/6A>@u6h\O@
%*-&"ofULP%1d!U"n"R0-1LP-uVk(7;0r"`--\QM%YW(S@eBDuED[-5=H..nh)>?qKNl^(9ntRp^NpMa9`;h7N%dhO93,l"^d,$as
%3/A(3NJ"D1RVmfP`^rlPH4K>%$W/h:OhE1lK^>9SHUCJDgS);(@FCr]Hdcs`6tMcqHS^P<6@agX%I8V6qMsqP$\Tu%3OUl+U`A3H
%m>]KjJ4O(gp4bsrDe@YY&q[Q#`:dg@hA4kN]npSC'k)M'V.(#S^T=/Vdi&Q#W'6r&dkl,S"S_%,#+J)$Djk)#7$rOP,7lL+CCT'g
%2.A2l&_u-fAjHgW%,@=C#M,db\6G^(=OIZ6Rr/3U0';*K7QgH$JpU.0e;`,;E_4o6p1?l/dY/^qRft*i?_Gd&a<m#GDi3o+6jfF`
%)mVCLQ^+ltfpa'5.DNcVmEI=EmG<Tb9j^j27&JVn(b>cV*S]=&?K+FfDtln_)UG+j)$Hg/=(lLXfS84U]p\X4_?R;)lZ.7(1h:OW
%pT29#+a_]'-ci//HR$6iPei+@D+M6Lr!'Gcg\c="2.UW+T$cno6$pLp'^5&km0s;adBa>M/T;]`=[,6",E*l6*Y$h-K:65%p1E6H
%<l5@"Rk6@NN-/fP7L955>bSk$ArQc9TtM'&B9'JhHXdEH#L/@D+XPK3"8:kgK//<t;:@e_LcM[uU/#0R1gk6VkH-MVN54;/d^(46
%!II0Xa']#C7`\oWNb6)`N9d`qTE0C,&ti/aYW!5:QGL-]YW)GUN&)]a\)\3M*g+/#kQaHA:6E5H^Cp;M7J93N2Zfk^6[LU8a+EXq
%[Q!ft-m@m.hGf66J*,D?</K]$:i(&"6Q=:+m0sASO>CQg(*&O7V."^\n+1efi81ON2o]]bHS_ZL0h2EAk'k:)lJUN\#__@Lgm]86
%oV,@]ARVsO@=-o)mN2dTHuLGQ<1rk3bcnc`QPaCp/%.CkoE`ahYe:@W4/i*=@XCc,Tdq@r2]^O]7VH_MV*\BDKD(&97Dt8lm4Bc%
%)b+LZHH2GL2cFC.g(LKiDp[@Bl"B6q_tLf+dZ6Vl^S"W;<%$6BL9(`TH;Fp)GlPR2W78[cT])iA?5qm[+9Wf7X:Z_DV'?KGA@Qhs
%Y2rdj8fBUe8UE-F'-6t[UVa8/"tuK8Lf(H@(e,p@QO%+.A3guQ4/=KkFa$AgoV,*:=cW^$6ZtCMe?L3e#*;.e%D/>s6]__]e[U6Y
%?)Ts6(aMN;?M["Q_aMt0]nl>Kn&#K4(.)`R.KEpS&j]Dn$X+6Wm<?Fa5Wi8t2*a*4D<#&5&mg/%C!/R1(8LUP=tIfHP_GjQ#j*'O
%b(><<=PXYQNR$8@&afe;Y/"0@'2TaWon9l#&BRM,OM52e%:Qi#>q8qLi^+iCZ;9:I/%.]c(8\6F6TYW<L_gDj(Z-_F(C=KCoOT0P
%^>i,.#Gp)Ri)r_>d6Y&P[V.MUqf\Z,9Mr8?'&cGJEH)"U,Ke%HS,@hcf-,ANnj\*/qIY^3;CT16iKFs#nP_]<%Oau(,he9WMB4Dl
%m1@H:nH!#.:f<W;,`+&^OSIs-4'6$"@43m?K+<'$;-Z2Oi/[-@M5NmD2#/RO.gE(IQ;AHj+j8T>/L;(VSi3.hA-aTAidS(m!rtl4
%J@,TN.O6_2A_mOKP[;-t/<3^Sj;OlFnjpR;]E_Qob1hXD*$F;L[:@c=JFfU/lm,mCi*S,<!EpKRPR_N0!H'g<QQ/YUN&^Qj39h$,
%^bF4"a121`iQ*m81d.R1NmM'<>-drAoVZ$**rqN]#UXQIFoio*`K-Jr%lV&3)djpt7@H)l7arGE18,sEBVHCp/M'srD.:J;"\pV<
%$6Xoo%09?$*?#c@3m+/[)Vl0Z.=bje:m".0/k!]aililV<060DT?!J?2rrqR+g?0N?9<)eSUfr\-I@*/J_nPPA7C])IOZR'!rggP
%S.NmU>PL6!8"W<fha&fQquGGkeE?&Zi]s33J.Co[.msS6#&,;kqDaKlc((LNGjga(_J>kG3lt1"VEYBoJBD+e(.eQZYWH`[\\Srr
%,jE#EX@58U]LYjk5e)h@/-g9nFJ*!2;XHe[U&Y^UIJs4p8;Ro6!/+9qE!CjcVh6+ZnIs=qAt1"PC:K4]),_]?+$8cW$`(i5Raq<F
%r'B/$L=8`h&HIgs#8f#OgqfCMmZ&\,$r6ed0VcE+GLDGH/(7'WP4OPB$jg"@DdXal4?ujKoi\`R.SpP(IY^/(-[YuQllfdT+XP(E
%L)!or"Yr8KLg8/VP]#JSAY2%bZ\bgW`j+P6O2e1IO-qR4]m""51SUNt9M1t*'<:H$rKNF47n8U"7Ka=X)j,L,:6=6@:IXY@DnQ0T
%1"J#d6EmPQ&r2>/fEL+#N1m'g)PqeHe4Cs$TpRE#=KqtN)]dZi]/g5/R)ffZO+XAhSeX)sjN(4g%!"-)WH:lSG%mVBgRTgJ#FebQ
%opKl7:\B@kjU`(0M%G`ZAJDi;)HI9/gp77`jHMPl\NCI.F6_,7S.n7`]E[=,6/stI>6Rr1G8i0YK(F`19*-_:!Ychk(SqG"\3+kL
%)Ko@&MCltd\5(H+JnM=R'5Ni+B=u:;2hI<0M+Z#/c>mOF1;UQDW3k-.DijZN*)?e+kre*Ia?+DP@:$;2Y="Ha6W*O;-*K_0DT5nU
%<?a\M2^'H"Y>0U1HlH;I>$hf^%apRc21^u0(SD3mnI@9XTRF0)+%)uVh%g^11\KLR6^=?2a']$p)54tLR->0dM7aW[REb>T3"@jf
%6OT$u!I,RE*_[tA'JeViFl_7i(9M(R-oM&JEk%)b6]`L#>TK]':P8R%GCU!)aOe<OR)P5\@ah%7+Z<:YLe1;KF,VP'LXNP]iuR2p
%"F,]e7<Uq(8bJBp#NR>`QU.-\CcfKk@;2Eb'TG\G7!O]9cXIf[1qs`=+CV_shAY(ATu[r#IU48`OgCE67$#C+\B@DSBa#0B<HsVT
%p"UBF&[tM?("u[Q)7S`U1Qp$a5#j,gdGW^n1-*^W!YJYN/WcEXIr9r.f6(t7"ss\R6+E2D'RFa@UJ)[ba"_Y1=@!<nbM3Ae.2IWA
%=^l%86nLu;(JuX-!GZXA+.Dk]78jKm%30r1]U3lI<L7-O8W!mE7W/`[-L;/+SYPJm\e5Uj7$VcdUtDFQ78ECV\3;J(EJV3"oXT<H
%WJLqI&'eaEL29H`.90k^gI4`_eKZOV?,JHZD)P`[26&C\J;[^fn3K4<^qh%AD[gK;<uM"_8<FaF`eXl8J]CN'g'GB#mL&P6V?-Q+
%<F^_9T;9UAP+a$*Ef_PG777V]68)bEFF?I\l@]tMX^iq.gaPjs8=5@4":bMEq2t(H@W#tb0LN-ZeOCZQ![OjHK7k3E]$-opV4mF)
%JrrD?)GH/%[*HL/DCu(&5gGgR:Ig?i-/_Y?SHI.E`7MdqE]5oG:j?U1a_r6XFls%r7%;.d:@Lt^`\J.mOj0VRU*H'3^jWL"<sU6(
%Q;CNRn5>u5%"T`u9&,+2=i;^rC53Q?;^&0GPE70@\=`m+$OuJ5@'cLFRqah0PI:l>Si(@Rat9%`&7\[K@)5Yd^>PQ%If(XC?c;74
%me0T;Q5oM<:*tjkhf"qa&0g-s;8B!Ho9I!5k:'U(MA"CfL#9X\PYP1=Q"Y@5k_r;7%>>tHJg]=Y=?;g5PJ)PhFhA'-EuDa/k6+:9
%S3'bWJVpu<Y6ib`4#UD'Qe!;,%53V+W)tgNb\.&(i6^>ZnN,)Q_oY7@X/E3=p"72uFA"Oucn!t+[D:G@QAUZ-)%6g.#su8;I7(sB
%V3"&aSE_6Qr@hhd&0oMS!b*FR;d&aZ,F[sAc3Lt-nUYB?b!;F=9mh>PEElB-Pf,V'Rg#dnrNa]D&-h*'&b]Yr,dTbj&5>QO;^%[W
%QjXDd*Xa66'0\*+#!C@r=7SgJ2;^@C0jl_]<XM,q'QnU^fKi>qL=;=Z,rjdfmfS30X3%[Y%#]qKGBbW;l\YENV90g%Ja;6>5VEEL
%McrX'=U6Q*J=PoGAO1q#$Nr#dl,oT2e)X/WP71BR&DXK3LlVp23u*E&mF8326[d&i(b?gRW_0mn+!D$KVXgE"JMr&o7QUk6`rlBO
%=BPn2+`Jk505-:nW?3JV>a8'LD+]m,5Z3dUf<ks"S3"SK".s<t@6-';T`]*91r4H\^ET,8*0j""?a)sSaGuP*%23$6I%gbo$lC*e
%,hSDs7-H:V:j.,1D*d=-(%PE.?suSOQg],Gf\U:["ei,3-NmIc"FZMIofD4V\c;qkkK`P/pC)?mef?Wp"tMuO*J$MH)ER1<WaK2/
%ZN7*18F^$3.u>an*aq#5ED5+RH(OpV3,B2C0bUp,RaHKLT:&6I0E<;O^4S<(eUg)m*Lu:D0CV9l<OtSXTd9!cj+WW/&pgV<7KFUa
%%!Rg<I5R]KYL\JF4X,i;Vd2nM(cQ;a"Bg);^iDpB*s+q*+CU<cM;&:'E^f_b?_XhVo=M@l";uPZ,-rkhQ'>X$cnR8SN/0O1#XISm
%K,T!Q"lfAZ2D?!_]8JhnTsI]9OMX$B@\DiFMq7E>`TPNhb`7%36Uc]Z"qrj4`'"\S8;OB"epQ<%qL0S7b:rXYUG"k=)=%=X&).sd
%7>RJ8n>=8!WSJPlRb:Ej_Df5f.C[U+9Rk[!>!Y`^fb4[U8[]1ni&lu1L`Q?HYp9kM*lOC:<ZQg7q9nnl,fI^uV,#g%H4usIi+QS,
%@qc'H@=eOtR^-?2"]j>(orScW$<AD-f]`5o!F1)0,^X\s1bTtRFZZP*0\eph'eVi$>m>'jMMIrO[45KRj\)9,.H"j;bK1qFl8GQY
%@[']sWPb,,UI>h)V\"kT(`<D$XHE/alU?aJ^qJ.j7R\Z!'.HNk\517FNs"-leuT_HQS>k+Kad9/T[&dQ@RthE.^Vt,/e4SC'Vs$V
%2LRiq0qB("ppMX/J=J[#+Rq5&":p=1+\foU+_(Hq#rFD,/6.hl9OkbMeRmjD@'QA57@o>aKi#oMj?pX$Fuj&Jq/U<PY`aOF-6m*s
%73uSp9!GoqN(b&R>8]L?UoI4f*Mp:TDFa*oKS6oKOW.?5j3pQk[%VWTCn"!_JAb?dDhl7YCX9Z/V?AqG7Ju9[s#Mj38+/'&VELSD
%(?PoJ[Q([qi?WqGE$]PZ>QIi)BZGZc6)*7e3%QX>6jp&1$XgUkFWg(LQ:D?Ca3Z-lS8tBM;3k?/Bs;]`15UQW*9"p($)qI.O9\#g
%"#LdU$lh91UM**i"#ppn\@+*5?Ai4m["Q=8ZiLsQ,th?O@1KiEK9Q(FPVAGS+:Dr5a.Hg6Fo&g;eAER,b9WGD0V6)H.2$A_=Egi_
%_bXKb\gNi='oZn!a$+8<'4M9,!9i8rP$Sj68uP)m9f!%eKJlagd'H9AQ!Uo*V(U`&CmkW`Ag>Ru[KoceSjE'1984!+6\QX8F3G0t
%[3&L;35'-=aVQE=>AOqmS./LkaB0>C;-h:1\?)7NSd!#/0I]L[!gkYG+_qkL!a($rP'P0NGU(SlFR9C7hh.+P&&sh\k`Kh]aC5ZF
%3\6^D7[V-s'4&[DR9W8.V%G'"!I5-OdCoODrcO8u$onUJ'@iX$p6lTE,o3V^;<_<,E=n-g>"#3CKE5:lpr%2=KWb/29V[Za>a6La
%kq&oHJMil)dNP]/)]Xm,e4)E!89Bd<7"jW;cjV/b!F`6';GA;-fZQ?"-6NjI&(W+<1u8UkCIB3S2^@aS&@;*)"Ul\U5_Ctl,LSn6
%5o1506J\Qp6GVtN@6#PfIiq`W&rRJ+ggjO43VO@8Z.h&L)o2h'+\i,>*S-&l-\.I=8Okr&pF-OB7j2Q!LLh;r7:.8A+>e-bEBSE`
%>L\r@b_u9[ZLR(MH*]%:V0Cr#%u!53(rlr3OQ=ib'/f9Vg"ReBJT`/=/WAV&n>D*G2H`X`r2FS#fWn5>5\)&EP!s![K_uIN%1LbK
%DK&*?e&#,Fb.qdHn30I'FD5Xje3tOA*M5V(nso))mYpeu:[5[R3!H*s$nH5R]ZN0fE?]o8!%gI!.)=^G>,_UN-j1n50'cnllSHK'
%Vb+Wk>ml4N9pqj&*ooKc$$6_3P!^.7>)l/nL"MP+?^)uD'V.akL4ePf!lLr^<"0K&Oe8AT"3D(F)lPD"bb^J9KpfA]1co,lJR^ps
%aNM6Cr?U@_$?Uf^(5DG_U]AV*UR9(=^""qeiJ_i?G9qHGp6-[3]Wf2IP*mq*Z'h0)b,8`4m<0Cdo4+b'qX>c:S7hmj%;_DE9o5%Q
%"CcEfA_T!]<ZQ?H0EZ8t<SpV*A=\jXDpZRPE$<JKLe/Ng[mJM,<p@#l8M(BrABsCVMC3>b+M+$74g6T8Ta[m+SL`'nU*L+p2`lV!
%E<rr^11\JLHMCdI1b7$I(q>\rEQ<97eYNMn!0f6g$;8\ia]F'j]8RiU'<XAA,n3B2!qT]lT%,eX]hg6&!>L:>Gj!c4K4;189F2Od
%Nh%#>R+H;&a`:'Uk(X_nL[os4Pe6u#*-(b@,X>K*b@^"D:Y`5;)RDQAj;TA2S^C"J!1?:E'/A&-E.PQ]UX8>4jII_>k4m<A;0m,Z
%BGnscI"Kk8W-Nt?^cu?u*kPU5&E`YiM"iIhi>;Rag=]#O*]1J_`T>e<@&+iGJ*Nim*$#T$PCpgCB'9tmU-C#u%,_VP4YG!W!eLX-
%.7'<jG%I<M>GUrr,9ZS/,U<ri\Zg`Mc>jWK'Et.Y_D,U2:2\RsJK6.>U?2T;K7jVnAX%ul5sfu*QX`EhpOGD&?4&gYY9Fr0M$R=]
%Rb/"dOHga!0k(sOp*=*ZdrCgJZ5+OO2@+mnOs(-@Q(57d%oE?=BkCS;LQfe/)4XiiB;j4h),q,gQeN1Z-;+?-nMgrn'dn8c&-!8P
%[8O_)l@RM*QCnSR7@)j3LEpWWNg*h>->'^!nks2/.7l:^[;?19_<<6:"UdgelcqkF&Rc_O=`9,C,/J^SGt:Tc$3V@I`mbes)Dm!Q
%YdP+]WC;";C*\\UVb)NZL>[cq%aW=#AS/>FPTh0piW>pkd/.Z*lq&<F->L/rMEsX`U)iJ*&3C*%E`BqSCn@I#d?*jj4):u0D0jPY
%^j/H5%a]MV6Tk<hBqgNCdm8@7r3sU75`h$%L!Gc3k;?Ciel2q^'HhQicQI``Xt%$rCo2lB%<b>8,u$dU4;@$?'!s$c0nfWC!&O7q
%)gjLK,\]c5-b*3O%m]5(e'YT/C)ssZW)COc"e%?gTnAOA[Hmn@$r=<5-]uWE*e<N'3AF0@;)5qS+qp,!dMW/+nK9,GK2>J2:Q+k&
%3:>IGJ18Psed%6T4o:&#B#O:2]b*VH3JrLRjalVR7ER"!R3<N&&:[/UfqRmK&gGY2=DUn7^;]ZiiQVu;*(%/qOA.;!5jMBW.Y^gf
%4R!d)9=+Oo1>[l.0[#[b.C?q7d_2K8PZ&WaITD%d9K9u;aJ^6?Oq'#nB/H#L[[AU7#io+NO@!=h&Bs3uL]OhsOOak.pOs*,[rR9W
%NlX?ArUC0Hbs@8O^MM6#F9$n/49e!72BHLuVA2/)U/\'F:"RY-HHm@.n]?MnBEuT1TZH/T0_C%rO6NL^_5U5U9IEHA&>RAJmIF?u
%e7V>K[+*`1ObJm]KWXdd0inC@Z7KS7(:CqQ*^opWl]o'#.'0sW\AHeXR!*LJq@k-+Y,2U?'4B5EBEnc'W)i2l?n`73KaX8+2+f,+
%fO`S;I++EF0SZ6X'LUHh!C8V!F0c&c8[%U;b71P\5hH2G*JOn=*$VnpLOjAc2]rL^"&4T>1H*1Oanjs=+Y8L\J?UM#6mJN4Pgm>T
%jq'Hsb8B6.0Ph;[1P6ImYYOE*(8R.O@]op05lt[3.V(J%^9ecV*eU+0aTN`N,B]+%ZlFTj^h(E26L.V[/CJ)5>837^J>S"`,l5YA
%eq!ZJnB,^V&I'SDg^9L,3GJ]1_,ZZ**g;!bOQc(/:>a]!!i]4PS2LXaj#Rs)!SRNNj1o-G+pC$AQ\krI&:5iJAZ>_D+Q]@drbQQ3
%=R,I&r#kD",!fY1b6"ubT8Ec^M$=>'U;FC7<eY(A!Pr4l-ihe#`jl0S,g1kC7)pF4;FBeV)@WT^CHs,(DA6%97LFp-`Z()X<ChZs
%2Ah9n=9S"=BXNEB^`]MNm!h,t0!s'2'!MGJ/W:9XrNeC;0mj7?#!GHB"gM^nlkto)Z$mspe/p`R4bfCjF1)45U\#?6d'bT1#pBmg
%P^XqO51!I-U#D&iH&mTPRG-YM,0j]O]MdsC(3[%%=@E$m&7\UI5fD&pftuo3%+.d=#6O@OgbW5=JE]?t!km/5XnFfS+Jd#!8\m%]
%M3WfrP(%;'"<Io)Hn`,Fe<o=8&Br!`I+)\+7LYjiACkBVK9T_abFsrdhk'OOhdFN%V(B:_`)a]/.4.9ZSS0&^iGsK%)4@g>DooX:
%pAf.4(fnAt7gj>]i(TFWiliYb)7X]EC<+KD^`CADYEcqJ8,Da'p#Dc.*F59YR?,H8`&?!=4U&)1c3'P&OVPiTMb[nci;uZ0"ha%8
%*>%B[]_P+JcMT]UDRdajdk?eU$oN]8R!*`>!0i;_O.02^eZqFDYm/NP'-r.<A(H7aCh.=:fc`RIehN8<)3l`#0eT[OT\f+W41UM`
%;#G:k?-3548U;7#:L^mRR,=\78CS<YMA#?ra<T=O6IH`)cjS5McO7)=qTC#XL\QmG6>Bd?O9iT[i2XKbb.c\hLtI8"'LeO3)"btV
%Vi8R-n7c`UbT=tELJB=j,`,&!=^GdPXWsMGa%.#]*"'/++j1,d\nmkUa!+87)Nt?!`@5](bW:*##sYI28>O`Zf$IeO!!j8`^]ctl
%iM`Y_9HkhYA<%45eK@aNK%)!hQ9Ct0;aR;hJs.i!P(Z7q_PbWM4sYg6Oe8@JLeg94HOrTjK]&^uXC?:7Pn]CDinKP?8M6h77?6`/
%TY4lpL4m7)[aBcl:OuT9Koh)BYJ=&TohHrcA^\uYS-07Zh(b5O<+MX/dT$K:e;RlZOpP/GdSkfdV#,qeIR<!D>C<j4)X%=@Zimq`
%MJQ&=@1m@+Z\fmWfo?]r4.ODg%BC>%2]DrI/i$St-&>Z^D$P>IcV"!Z]&9k1(fUP27jVsWb/"o$F./oqSh,_hk6YT@SNs"""JZr2
%5WW[X8DN&Y3\T*i5L;S#(auHt>nKO5jToO7>!"4MB#/M'fn.H:W_BRW&<)FT^RfgZ=fTPRWAA`gKL^2=>L$j2(P*)1<4/f9>e*@s
%'-[l!8sX:rKN)"E?ucXjMa/9`D_uPeKr!8MQ;C$FId#6,]GN``W)9:PXW\rR%$RY)(^9urThZ++=igQ3'fZWma<U(BYVeh#FIZJF
%a9>m,$3[LZICpYt%\1c0RF_E]UVg8'X%3Ir\^liXO/1sE_S%]+K"t7HQ:HI]f\.*(RujlE+$h'eG7`%QF_HX\2N;;">Sd)BJKKE"
%aTC)>C4&[]QRSke@&;iZ,sk]6@LCiAC53RRM@*Vi!&P]+,R@HQ:FskT')^/j(D"N(-BKQA)\D(jXcG:gWj50oM&ud(RT;DA0+as[
%gf\0PUED3&<ST@HN>s`(5_tPXCJ_,D(u1g[92J:p8tQ8GT?dL`0(Eu0f0Te<DNIPjU!VnSj>h0F"O0(YY:rk3?lIVBjTUeP@b1>G
%6PD^;$B1XNZ4)>m_!p;cq^#N#!j9Kf#kC[/i,g.p,cR.+:mAMMS9IgL_^IF[(PM\e9b7qDThG\$'mU!FP'4,4Xp?J')1^sV)?aFG
%C)uV!lUkW#2a:%\!"S.D]VDohoJ(<L2!M@j2NORDTPG.d"&8o%Cq[4#oP%emL1;VLTU5k51"(tQ]%P0K=(9$u3MnuW4S0Z9*gFrS
%3c4qU:!=8Yl(Jt!'l_tu0q:U$VbFTeU4R:!)%rG_9Ph.h`+7&i0oVc[dt]1cG\R72*ctG%obm9%.UOil+[A43$be4(mLc+%#C/iA
%Z`2+!.EYm\_2oDNVI2;bWR$Q*T"^krH`E<n^nVLWJBIt(kYOkO^g^)#,at4-!k'_bLSuFgm0T&4E$7Mu)&n8J,8bY@RT#0\p6n1^
%dmq""K@!Eq[+tq`M6\tg>NQ$4Y95e1qU;*sDM)CS_(+C6,pjN@N@<tfV3]3INeKbSGX5W"h$^:t!^iY4Nj"#<-0ggF.:%!6D5q,U
%Q_5f*WRE+9#53JWO>t$,0]N)=.,?%g5plIj/3j6O7`5t[\Jeso@.t?k2Z[-q3ma:O_EpA'39@+f]"uIF89SIA<arM("s?P(3<9Ch
%X#91=r#]Ap4(t6i_),`2(@5/C>R3T!>*U?+2s\)[&'7#PXkg5<=EPtN%pEpI`&>Q?Ye^LIJ0/rr2$udtrcm=D$/S6O%tg2>''1kZ
%ZC$TI:,IRa+h>OoW2#\a,F/IZ'-Kk[Bbf\k_E^.R&HN@qjmf6<c;b_$K-"-(`dfZEQJn0IMP]5Z"SL%OMBN06c8p'SfLCZhkY^Cg
%])/:RR13ae#u6*1Rtcds'Zj?K^Q41a7G<GEJ_A`c6OK8J%B'L4>1K3FW=C&FC-tlf\sg,TbS$?C;m_o$o)3:^n3R8+Ab^nB&2;JR
%Of-;gl)2?AE%GnRKEA$'4GoGIY!mkB8*it\'AX]4kb;(5PFa^COLs%/;bVEoF=.iU&OSm0FtGnTKX@SS@d?iK'H9.QTFID([!!U:
%@_MIp6XmkH0AotBUu)P",5bl')bUei(WR#@*XbiOd+"'Z5D4-bieoKG8k`/*`O6(4PO?El*X]r8E*jZX_"%cJNra\'9j>Um%0SM?
%.to)Id9D,qiX*1R8=l,;F7.3['\5QO#2t,Hho?jH1=I9eY6X5iHgp[*M@C"k@B(W^*CuQKq&$&)J`K,gSo"LAbD92"T*"]P(`*W3
%=N@B(^,s]&5GrkXR"ql,O<g`""^g:a49&G2KsWgs)sHi:3bXonVsacnFb7Ruq1nrdi5JM0aL0tG7glC$UW0&_XUm7sdoi?"Nel7W
%HZT'R`/,?)Z&7oX9?J[jP3pL;L.G"6+bp@m2MrWBi*Fd1A$)/*AgC04<tSVKR(,79nJ6#0&B?9W/4'P,kT?5;&jRf7]Q?`8e23)n
%#c&XpAE@EBl]=&F9">W=T%?^D^\[8-0@8?,!%139`j^N=cib$6Sh6lb(:7Y(:WuEA+Z`J8oUS+39GJro7VP#W8`W/AVi\;p"]ql4
%LDCN0)O/1e0S*_i_pi@Ik5/bGY].l9mNtVZOq^fQLb=e9[Ubg1R6fZ2=DC6'@Cd+r,5iW'PJ(d=l+sZ.Lf(bZU7!%H'gX#MHkMaW
%7Nt,HZ91^D:oshmP"6srGB$4$]q&(I4h0'R7mLs%o])X',X#Y$Ehgu2%pBI/>*f:V/sF[T1'[$*`Zl%8dDA!iAeG9K"DP5>ZO,2,
%.W2In(_]2"]4]QTd*gg\6UrV5OqmIS?:I:0.AJ1CcG;Lg^djqZ-ogV`7i;RW/&\/1dT"'lY[rsC+AJIKd$Q1Eg*7bPF^H,A<eMkC
%6saG[!H2;?jCP^,f\QWbL5$4D:ln3jB?P-`<FFIil6gg=''"_aO>O\+jfNSFji!6@LG]*JN)b<r5i4sqTRm3F1-:KR1u*JHEAW`]
%eY4\R@MM=kh,s"lV^">sgk6>7`'sM5=S]t'A*[LOC*T%@HfmnUr"S*Kkj7h+Os"2Hnn,+<7u<_n'N<3o-b^Wc2/\]p(J,%7e1)H5
%TRl?(20[!<A(Vm"<\3Kg"Mn3kgD@FG)Vj:IiFN2r+ddB^<fj9d=-)?OAko0m(BE>F8;@Zc?q@(f(.!S(]cUQi`fLaap.ToR>7H)r
%PX0j>e3u[p%2iJ-A9-Z'>W7R+*BTsS<7S<e(JU]ML8/4NHc"ATgHM%+%.$*6K'k4R,d#l+&8mS#9m>):<W+At<KqNOk1uhdF-%#1
%p)(m!`"!=UHRG1l>`oAo=gf'&V^K\_#f<$JD3JN]$*505<M[;nTo.N&/=e7nd>WMF592c8]r4i'S.dBr_QAF<`'W'Vp+-WG"H>[R
%86S4l'TeqW)JPT<NPbB81D&(9J6"$Z/0lQ(l2$MpGZM7E^X(!/cH_Or-]8.,$IM)B_9e?qHoh^S*!+#T+ji"`\E9oD=dMI:FOSf]
%'TZHp3^B'*-Q7-QieTY3XsXF[F+VS)e,Y(IG784cPmM@35\jhpmKV*\;ps,rBW`%5M'b]_)/K"mT#2LT=dU?:[@IBWiPQ%t^6-,_
%68fH'(Q'*HInJ?@K3EHeHh2rTau%fuVBKO?AjCGAV@K5UQp[$o3Vah*%^n+#-5&o1!2=Kea@M_(<68:8''q7`HU53+KOG3#j3q^d
%LhuD#V(<Dqcj)i8_uM#6DN`IiUr:1MN/BMDlP0_%oH<28U.QendK$T\744p7&WRaB-nYj2)0+`b:a)AI%WGZO:m>VG,2Y9q6)Fk)
%**@;\"GOZ"@8.Go!ud6E\hFgjCd!\)[]/k^q,;0/Qna_H+AU)#dUut<=Kt%W<A?PaTk.56Q@`O9fXX]=Ob!n5#8foaU'*aCVr.b0
%65i=j4CXX"DS`t"@TC"?NFme$Zk>N_&mRu@7GO:(;le],1,+5nGTjpK%LW]E5dP>>9M7m?UltD+*<6Uqarji!*mBr#KZ`)%5er`R
%r$kgELc*8HM+c!9`#tGB!r?RVW&B431YN;[F<9^ITH0uUOV)';LRpgu.^kFk'(uNo,r.X-5#CMT[S`2\^!g*BS>4UDN6oC3D)jnM
%O>+k`I[b8,Y."&96/jIeqQY.+h[bVKG7l)Ie4i8,OXk:-:'+<-X.-ZDP,-,cQ[+^qo48<CYZH['6IPG%Fi'4SVDJR5kp2:W4*V<8
%%4M$0%DS.Kfes+1)hIq;Y"ZtdL\NIteX5nmFU9=PfTJ(QUtSX5]nD]AKB+-Y^_gd(&.u0.;0>#mr_M0#JW*FZjH5'df[DFP=coCd
%LCIRMm'p0:6HTS,2q'OWA=jL39X-f&#r!Ckh3'&biKK0dAib3?,gMhS)3f+YOVYd878,8>8poXfUQV8>1VjDfMu"RSge;"Y/APtY
%NICXd]]87%`?8I'K^>%I85RJ]2FuDt<"q"?B-?^pK.`"-$LZanAH<DDTn1+gQ_1W4?qXC7^s=aZ:-oh\dL*qnLo0$c#Wre$q;Bgd
%JO*&jV*b?tBdU;E#$Ipq,s_XFCqBgU1)/e@%'^Mk1@ZnM&t>/J+EHWjqCM$?&Gi&$!q6LQS=HBtjXj`/8GKVWD>k4kM,XZW)3?h`
%/[Y9)*9bG8dX>uVF3NPb$\kZY"P2Ed$cbPeUKW3h.k#Hd/da+N"Ho20T4b;jo\*S:KL-F\Ymn'6deh!Z&Z&r*".NT<[HqS/27"*E
%$82uj#IP"Z.\lVCdJ#3:i_dd.+CV'9IYfOW`#O#4TWuTnO(ot27D=]KgP'10JOU>i:=N>G>_lq>1u7@$%pBasCQI+d5N&I'&gq./
%."XcrfF4FeA4GH0C,X'U&B@fk,942CG*?*7!qrtI,ZukWBtV\c-?*(3(*+4qj9FToN,9tJab$2Fg%$%7kGnNG5),/"$@jj.pg?J<
%22E1?+GMA)FY``c1Kdmi#+9Y?>+kqZe3s'g_s""[bQUS#_+8PVTm(3V$sLgQI<4rBq2lJ]8>h::B(G@>V&JlQ#:lVu@i:5@I0=*?
%-'g?7IBjJA`E!,`=SQ)t!B#<\P9`*h0d@U<s39r\EHH/`&DGQCCV>^*'qEu\`2K)jmK=j^Bl+Mi#mSh:0:NL63It41Ub<">7d<.t
%$;;sM+M(sV-4btS#"h*lH\&Y\/ep_6#4g.gJJ-L8!;\_\M6%B;SV\?KqM[asMb/F?)j[.iHC7cE:n4J0@aUGpS7Q,V")1h,[(!+o
%_W]ppA`YaXr==o2p>RjX-+.)9C0-eg83.(OZEg57EjO1$raIC56PceZV\@72[AJp?O>)Q*=BR;20,T6bUDgA,4%pPu1k=)mJn7`8
%@,qYNj2ap<$?[Qs2b\W\,)9:&Shs?_:7VZ7K.1nJm&8VR_F@60CJUtW:eEFgZ+A?k`3Z%^5YDUXq3arIig)PCr6B?<C#+`P3jt[g
%`)Z+,L?XEQ(b3X?TjqUf+-'#DQpFeTpU0NHA['%uaH.Cu^RgFJ3WTWk`bDOD9=+EaAXadhc,dJIXb7<qR>KoFEe]t76E<M0]13qU
%@rOa2&KD0JN22CN,o^&WRB3hp@>L.g4bf_D%^DWFaVoTHg]=0Q#O!#a'[2?K8K0LC4:*u?>.:0`bmq+>1j1(DTe`2PrLF8QkS/H+
%[-Os1flGdE;\j?^P*@8N)bLr<GRCZ4=?GTqJdT!7:LH9Bn'F%R:5J8@R7#ug)EIK%*oOS\iKHSGP/L=/TQ)1nVQ<\B<:O+4'+*e+
%0`d!\XpO2/PS]V@R`sKY[OX1<7.rAQNI;AVK</S.Bjq$<>l.Q)bH1a_&`@u/f9f`,D*2NE?lO?\^n)/&hA8bk.plGB*YJ6HN*q`/
%2G+MPQlqL/K1=QsVohg[PE@7oKGu89JsF1\h\gMUbM\VTJh9WIj3QG\,j1+]H;lF.\GHEm749aq9NY0U;Mca96]9bm!JQC#o%(aX
%Kk)>'%f'#6Xb!pZ6H2.T+VjA<,&sg1h@6i@0pFe;n]"3lU'cObN^5e9CcZ"^,9\*7$aT+6fDFn'c2t>o0'"RNhLa]JGZiY&1kKE]
%Lj9oi,FtAnh[iLN3?&Pkae#FB4@ubuP[Hn/)O*r2S<8Jma2Tu;h;Hk+`OMRBC*@=WJ]QuF`Z/3d%ip<PGsm0,O@mg#RNa51'nZNV
%&^ZYoa?5lmFSVolVB.bW$B3+M3*#XB[KBC#Yp3>6@q.e?_*"O1.gW!\0fVIU_3T1tdTNG_V/1j97JbK7+mad!j3j%Oao'+Y\(Dl!
%AIW+PN)jmo$>9IdNe8liZ).h4Xq`Huk_'M'V$p7Cc\$c[T2a6aOGqfcD+l7&l-*R"L[d[aCqq!G?MIT40-CGPR2llZF?[c)+Pm8I
%!kLa::8@3g8ZM9:I\FMub'HNjYUE0],`Z8D;=AKk?quT8K2V2YgA&CTBo>Xd!%rriOd:MU)C('%U:B;aIdG^O,r85a_PtpSWau<J
%K"sc?Xs6Rr)E*:E'>`7n[1Eo$Ll=79:]ldkYSE:s2bDslJWIa],?*nhQ6Y1.S#$B]TNDLGW>'(J/HgaC1KpC3HDMI0rs9e[Zt'RQ
%SHZ]?9Bs"hj?DPS!T4$[m3j+aZkM"Lr_b"2(u]W*N$+Oo]E5c^CbnM2#,jhBEU(p@=ep(BO92)J/;oDmn*DHb*K:n+\&HI:5TOP>
%KFT-P+Xs8m9:E36'O\Dd8rUHq)n&"B%B4/k5#O"klq\cM4EgodDl9cbJ3<3>UKG!AF(S)e/H[725jF(G_8Jp!)-`5c6U_G-H(Q?i
%>_HuXg5b(9g+<cl$7QW.9IP<[pn?r/MH(aO%.gQGU/(!2Lh05gPE>"8'5\?`%F<NbBe2q*<sWg^E(9%Ni-dCE<`lFuR]2-C"ikV9
%cG4ZrV+aAn-tL3V7B[JLe;AZ;%gb?4%f,&64Hb\[l_uRRDq_;8\A:d$.)HYV<tPie@4_"n>Qqr=p)+J$&nB6ajCCYVHQPbE(eHEK
%Bn.+9^c6+AQqY8-C="@sHq[0":6^[0qh3m&hN*Gpe<W*H%Y_g(JI=%=^,si*5H>m82fH$ABg>c(Td?2(D@)&J7\,']!aJQ=M5qNs
%.u@*+fNfD26H-?@j(o?sM)W]!PT!GqOHJlUZS)_@^^LKiEf`Zi/]QEV5c@'4f!,R,-KP:uU&/&WG0!9E_:)aRB]N]^MBt$<YY-6W
%J^kNfN/F#SrQrclpRea@M/BalaiE&TKPZQt/c:$H#3"&Cs.pMAIPk_2X^ZoR%Bko$b_Y%K&!7%T#b8-u+`ZWJ>)@(J7'md66YXJG
%VF<-PE'\H>,r?arBn6;*3(8+U_U'<:-P^b,L29j,.4Zp3([A76j?,=5S+2V=*6K7Cn<2",XFq7R)u)0pbn`0.9?r,aA[N')"f3,]
%fJcK6k>jm'e$Yb]!g-4r01iQ_YC3aZ;2^Q]p<IsjgE9U:L!3'hn'L)So7_OhRE[9!#+ugP$q[dkQ<pk`iX&8j9p.Jh$'1TfB20&q
%/[fRr!h5MhZkgFr'n@Xlq*JS)Ap&"<A0)C/Ziuhj7J__#!Sf4B-*4o0gn.2b+ugII$OMM6>TG4VZ7TL?7S2at6]t2Tk0)lPTQr"t
%/U`O`M*lT](2cjJ>HbPJCh.;Y9G[#^1@#FN2%/,seF+NtBnQ?5!@!dI'Cb5p0)"]u<7qo5"'(4U47n4*$[>;sjfrHZr`H)Yi;#uO
%VU4UF3Sh.2=/XlB77d_TUYMK1)J)\a=N_.8(9f'_HH,c4`,H>64\1!j-HZNqW=W^>`DY8jq5>Tr3q$4u@N:N*Q&h>pnkQER<'mN+
%E+d/0CbH5\7"@,JK*SStcr3>im=;c8p(p9>4cJW;Vb%j2cAfi:V&?#_2O;X"'F]k-19s0*C,$WHJtf31r(OA/^h.9DZt3cSJWu`)
%W6HbXmB$89!de@`0c2N!d=lY"W)65TE\]m*NV6p0@Rrcm.VQ)sL2F,81l1`jLg_(6ZhFJ=!BE>CA8?reQE"eX3>&X$M>.5CA8#OT
%_deReSYW<*KEj.=Dk(5s>l7hu!M<b^4%n!\R%h:b#LOsKBFCdOfn1M,F;!27h_jr%4515a+9_GL8<TFRS0/`3Li0KGJ0l"]Z"LTY
%*6n$SeYIg%-Xr8.PNq'lWb,@)`Jo]m(*U(6g+A3kO)fG=)L2?ca-FuZBe-!C//`#N#LPL(-8;;hPa9`^(@$L1^bH:/QhD'2"Mt[R
%m8SF:BoilS+H;qS]S@UrkkJ\b/F6@lFcFE_<\9bQ@.bJ%\Dln^&q'd65tZkH.@)h5)KOCI+#:]eTLiV4VsmM0k)I<H+<X=:rmE9.
%@;-2?6sDK:8],j!:(B;ljJehPG^'np-!BK^-1Ce/UaVIiqB"m6[kLD%=P+'d<?>/Ij\+(=&5tHQU.)*K3$oWV&S_Oh&WL"q'9+gA
%lq+!a[@ma1/cekjamR,e!ONH>IjT/P!\?[\L+VOsEVr-IKcNU_J,E\$"9fFEc:.8uQn](SGt=6tXBeXZ_\#0#!A90a0t1$PaLq]i
%.[%*^#c*\cWj);$oKa[&\^WN.3N@2`^i3f5!ace#`%P?]>T!+S3P[ndQ"k*\0"!tj`%ds8)LA9A*jQAu&2KD)\rB,f5<]Gd@MW=W
%?_\4^5oP\FgJ6c7'-g71fe`s("#7X#GA9J2_.CaWRL*5%`%")iLJBfp9*lo2#[,PIQ<C^5Umb6?.(sFI#R6nY_*BZ;rM?XB$-'I,
%bIR/R$j8%T$m/27Ka12LPCUHl+BTg\Z9*(HZDA'b_<.NF-U_ZK(nb=h'.GDE!J]PMcnJM,)bFJ.`_%?p5q)Fsi/Z3!Q5gN7]iWjM
%%$*G#$8rA\Qr<c!2+R_(OGDi2lrt,L;iE7`oYsZ9"BfIVE2<7u^rD7Q$^2oOh^%Q&`o%gEmAqH(Yl5!-N??8=Oanb!F0Z^(6RLS[
%$*=cWZLW'u<D@[*Iu+oB?`dZp&>C"Qg&)JuM]j$9N"aBlFeYu#6pPlc1'9ON=fk8T8"k.Sd@t&H;e[U$nh3m5Q)'mB.-*DqD8V8V
%r0G.84(h`o3O_U?K_a:=!6^O1?+*U,,5(#UOMTBB(@n`uc\#MTI14uUFoq.;&mL=<46E2uVb0;H29?sL#-3rU3%oNKJgc@a/;pBf
%J0m"R;j<*0q%Yqt#L#Og.H3aE"/f\r#UE(A2edi?l"6/+iLqg8Ucr>L1*D_,,k5HpI_u,@b$:]V;?d6HFVpqLL.['&OOB#_=k6iB
%P]BSWH(GPJ7:7n_MURR%jRIA8V[l[cL5D*24lW6\bBQT=6GSN\O97tt>ARC5gL='7I2)qJA;J5>k158M$OT!1(P1U*jC*:\4]AW>
%)1bmN53/31m<_AQZ5JtpDdKMA,F(kr&R;)o5Fo2<7S&MI!Ptq8lcYiN!a&LKB!>_I0s%>qc^H"HKP&rGm(^`'<ffebQ'*Hia`q6k
%q7DP<jnqg;BuQn[F>ECL"f$B-erN%tmgD';rb`ek$>M$,e)QneO<C@uR$$GaRB@gi_J=r%?8*To*mkX<gn;_UIUhU#aSOSRZ?:;A
%4G+7bZJ81MnPD#3m+B==LPhO.dn#N),Ln9gb/fTu;`>4q,e_Ah0l\/nG`gB]4%bX35f$Hu`j<TnYqouSG(u0hZSCJL,:23N_1a8A
%6oS$&iR]g4,?$'S9@M.%0]D\+Bgd2.T!X90\.D1gPFZI.K86-n-\0Y'+\dkuqDep)mHIS>&j.".^=\PMO'e]Eb]:jW#Ns9]R\`m>
%<Bl48S2g[XeFoV3J4Gu6\1!@:Na<lZ^M!1_:eUG*)Z*fN7;a*en'KT[k-QT3SMYtS:45VjDQp,ujuWbf]\-],A&(bUT:""N=pU)1
%`d:5>7)-Qa=(d]<QHjhi?l(V453'=4a9.Q?ZglliR)=ZU^[U(toFH:U2L+\r'CamSHO&q/_Wr**?+*YFdRio5Q%$`uH&$hZOq18)
%mkWH,iJEihNp'1+DNsT"?5!+rk&bfd.F@),g$[c",quV^Z9&\Wl&A2(0m9h<_eNG#TM\)s\5V3l>E`rD`cP;/8;K*4,J#\.1Rq6t
%mL7O*#e`0k4+dsMbnHtdlB!Msa,K6m2iMF0BM<XJ*%2We9Qq/lPj(r]2N:CSHo^b>2[2?RZBTIWWU:0[5!]?,?:aJdXNnh.2bI[m
%G9S@>]Wg5^?>/`kCj-(C_=Xk-Cj1sJ"`^<L1U&-qocr95,Z4XtUV!SIKp7I<\iW9@qrB[!mN<:&Tgj6=!.*R4*;T"2\aE$P2s%Y-
%LjpUshtc\jZG^(0c?BNc,a8DUl0\QHj@SIakjAEa-01GQn'7"bM`cAc^,s,(#oTA`h,1ruW,-\Q+\T*'Cj,km,&h:p]/'GB@fCF<
%GA#Rf9A`q;mL2Yp&>X/bG6TZ/$:*crGD?$W-B*%jVEo0C\iWHgo&#FCGA+l@NdP?K,H;R5$)_T`L<P9H0obR\k\_ZNCM\4]&HUM'
%SF$f#<`Gf:Z9(F>@<-68h&TCrKX[T$h#[+A5(qA?&V;Wh37?Up3Y)+sF1OG#id&=42nD*2Lp^kRkjAlF9:ZsbmYoUAQ;2W/M3m_I
%PjZh["=f1hmZ';?lSmJacs>^[Nh[F_IFd4u[Q?f!P/h@XG"4q-;GARo*O-?I/88pE,-ba4mS:\/W%6][GcsS\-P)3=>c9T`fS7u6
%kjHG&1ibYqksTJKc:A`RB$r+^pmg`3F,Wt>[QDB;#Dnt8m1*JMECJ4+m]a_7f3I"sd/P<giQ?=VM2qg=BZ>4N8n86F2mteUEC`Eq
%Z/&Q;Tq\0ch#S;6P\`ju4('eK]Xb<'$(,8VA@j(RUp0#rIhs6_,XU2:mL21#6JS6G1X9\cYL2/l@`hM:\i[f1(tuT#\iZR)$,Jp&
%]-E+L_6[`qGCX38SF8pk-PB\:kjHH_cKOZr"<i/HNU@9iD3>KHFEc*>K%<#Y]7XQ.VN"&h#JEVWR5s(D:+nBJFh0Y%%+/$D\iW8m
%d#^3MmL6uR$>)[O31M71baQr85q8.#NUMnZ0br45mVko5ST<#"LN?4@66"gQn[:klQ1*"Cjf4d`$Q0R4`A$l=nOp18X7>!`!a6+H
%KC9<8TA4@Umg_jq/GC%>SO)X,REQT,*R#SFWlW2(B4-<QrTVCILL`kp,MO5X"=0Km-+ee"cAJXAFU(DZCM<dBh,9@VQoWWdcr['+
%kRJ"D7ct%>GHg=@Z5YWE>]26T/9`cR]GW`t@V@lH;i3Z$bb:l01Ye\eQ/k`#i"!aN4.p6aG"A%*0>,]eR/q[CLdo\Rm3$#WIAaQ,
%`/noMdG((_D5nJe*Q3t%<MR#Z80J97]$T1t+CsUjH96Kck!0lt*UF7KK/Ra3g,-s21U>a9D\4:%S_Pj)e9`FL]Apmq'H-`)#!2N?
%1u[TPG-Hiq8_BHt?tKbHngI(5i]\TF_]B/F8.Is9-N]c,hDtBX]>:BJFa-;(boO]rOOlarW_6HVLI5JK;hD%FaWi3Qj%J/FkJs4C
%I;PX@!_L69NQcRafeZ;J.^PZl-]*#od.fnh,MQ@5b]\YVRdf$6-D#f,M<tT5$QUuM[Y)7rGZZh447nXAAQ'h^KC'Qs$^.C*Fp*:A
%Ll(]V6(eK/;dMOaPZY1HgT_XMN4a>2Z"VI/mI87DZ0KPVXA]P4@Fl6>=Z5EfR-iO.(P<ftm0'+c3Um5F'<XFGdBiELjc&OHDT$^Q
%G:%4%'&+;$pX08LSRE.g8P_b`Tr$#NLDd99/u2e0H0sNT#U+EP[54U?E,gN^%MkW@G(8s(1;k>UDM-QdYZN'/[!&f-@,c<44+QVI
%&)fE[m7aSOn$I7m#RdVj[!!c)>!tBG[=ajOO%sHq8KFcNC$d#T@"fK#*D?hBP&skh8@63&C$c?!O%Q#<4Rf%,(`KNI@2@,?%9bjG
%Djk98>!#96&==oK*O0DMXlm'7#)mH!JW=238A,`(SCJ+S''AdIWuZ=/)R2?(*UF+k(sQd^%,n3Z)JSRI0F3VHT+V5B'!M,eYr(&@
%9"rkZm3!!#SAo;VL^T^=#-/ad8k,DlC.G=[ped%$c4Hc%Clm@ZUf,Xh8F6PnQ78j`W?&po38@'lLjk(if1G?X):Yu08aT2!&oXRh
%nG(]7f1G?H'lZOs+LQhR/>;&mC56<#"ENoZWLY1qI+mMcK@HAE;VE!],-I'Uc4GNVKFLC46Nl`=7n,SQ^WAh])=9-)6!33FN-5n6
%1H.cb8k=Wl)!r_#5&E"-_5tp_C!%<+1:X_>o$<QJ%Uu<.4/JKf)WgFPFp<',X>ZMEg)24c@MgQ]i-qspYB/Ff)PBFB3UI7?'3e`u
%1LkZa;oUi<\4b4]\/D+`S-,a\Bp<e\4/ojYP]hcmS^D7Mg;1J%Vp0nE%\)/Sj_mn/#I.)N2Hi3+KBSO-Sh*'%-,QcEUU>_Ve&t@!
%#Dk.,2d/:p1,IlEj0cd/'48EBg0nCUJtMYgd67&(rkL`8[[AmCUV(c[(P20i[!%gei`YK?[!#E2"QF4(FsaSdp6=,<dLq<jdb7:V
%E$VjOiP;8MN78>1S^8*DC.EMs(),"bm;T#/5,a\!0lfa`d7.k`=NMNL#,rV>p'nPD)lXk?=-sb9Uin(BR_6XTLS%2D?":90'TWC6
%F&kB8[F3q]XW:4H,T,-hm=\$GL(.TRP8+S6'AF,<!3TNR[Y)9PLZ%=5G-FU`eR9]26bH2#ar7N*q'HB22^>b@0*[?N)R1;(;>51d
%+LYc&O:56NfT(=n62Tluo#@TUi0Y,2_;MU%b%nq=#j7:#WY=-l2kQ&h1L`Ffo$dF&`-)DV`IL"Q7Vl_j4KB@'Ok:/k-cW&'Y8s(W
%a]HlHmDpN7^p?!F[Y%[+erAA.&5Gsc4&IFrW1&sf#.#<Z@IN$nChK+CGB%0%1BclnjYgVWP9:\Sl]g(_'Fn*o1M/^8iKAK!1#"E6
%a>d"+[Nk]pdb<'.Ne&mZ-2V7`[Y'7s31\_tg?':PRki`$[RX^,PhD)4%d4"a1YWKh_._/nQlqbW^2@Ghj2WN1mYohZ'HaTUOkGc>
%mT_\,AimA\GrMO]fo?>)62ND@#okB+o'+Ddm>+"qr4p<g8";5q[l.h[+rSMiVp'=[@3CnMUUF[9%b]JR[iO<M$B=#/gQ)5M`K&Gk
%=R:Xc32<o,2[R5pUUCh-E[.t4Ik$U1[2krg"F*nFm>+(US6]'.4,>[An<DT9e`XgAfpM0Z,UC+YPh?OR6ZcmL[M*D<>Xi<e>_>0u
%-alB&HR.KY,IZW"H(FN[TmU0)`JiE/h.SWp)Qt1?[Mb*D`-,[[ib+W5gC_Di(o*)DNks^M8_q!BZ'$DZ,g:H(1`HH:5;ZYDX7^BU
%[@K:MCnFR>44;fdW2ieMOedM=eMCr%U38@/Bu(c5kU\f*Q/#-uZ&79Y[fZmCHYbaRSPX1"$,,/,>i;<3a9VId&]fl:k`"AY=Bcbf
%UUQFY`E$#c46T,"ROQoJ)+fWdgt(-F87=p@^TlOULko`M1O;-g>"CrMdbBn/-b!-D5oG#[Qd"[\kXu_OgTb!&Y.niTV74&udZ6Vl
%7nR]$?f^tShnT+cpXS`9?Kpo-#S;CVkNf1pl\KHETUn;Fq2=i_lK_.Ck*'0Nq)eSH)<<Hcp`G"`_o63#eL/-.:&d!Rpm]%ul*ET]
%^H1PMk@9"f?[[7kYQ&ukGuan8=ae,UMm)$oT"jB[l4i*FDI.DXmD\1fRrb!>Hh*[+]Xf-`'*#K?n[ilAjhG,OrP-\)DI6Y`]6[Jt
%n`'D;P>=1:`V69sn+8!23LKiX]"!08cc&t`DrfXK::%!N]q\Gn@JH1E#PQ'SX4qP/$q[YWeR4[Oji7PBpi53+a1(4JhgBd_?mP-V
%IJtGbD62t]rjfWar:W@iqX*Bghk#:.*ZiJCWs*"L7DE1&`quVHmDDkAp$U(3c>HFm5@:,dV\egeqqf'!q>0&Yh426.GI_8)[0q2e
%j/Q>Un8Q**I=(sKS+H[Omel?dM+6:1ITM06])L^_iqD`QUM)Eu\%M-I(RL'2iU#i80#Vt#Fb7p]*hN;p_/].;s-0uNmsFAUD5-X:
%4Z'=`)o$mjpK0Xb>hu:sB<!%Tm:q&tEW,=fm/2o'Vr)oLEOKCGM[$Q#n_F"nP<iH'GCFUZH[W5..-%-chCgOchgBYHp>U8KG'Tgk
%TPsDj$iK.2kH@ZF?!Y"kQ!7P)eWi35=3e"Pgk$tW?+F7QEXP2DX!bB+T%rY$e%-8Hs*T7bG4jtj8a3@kh!3(b^>)$OElK2`Qh/EB
%K:fL6M]@\JZg=1J^Sg\_r;6*/0>9StFoB4H\nWT>h7k0o0,JkODf9"]melqiXYEsd3);3be[W?-I!=I>ob0Ku?!78Y4FQttmD\>?
%Mu-#RhfeUCjn<GG7XVU2Q+1?592=2B4$78ED3)B^?IuAf^HK>[cYb`#^&Ah.m3$WK,n)G+o:9/o?Jk\$&)Z74\'3-c+"ru!0D)h]
%XgnU(&T?R_]KSJ?s5NBefmm\$Y:AKY%HHi"k@]9iGMg+p`9?RiRi@!/GBnN+o(qY=mHN/a;;M2mcGhdo+5lVfq;(_oq4e-Rro?<b
%Np9+E_h'oFmfepGh`Gq8c*CdEH'%#g=>YosDZ)2)N6e[\Y&6I.(/Oc!e%Na;\lCsn]AXllSk$d(p-(::p`SC>PMdm2!rMq1%aF0^
%>aAmW1r+]Qi?.e3F462$MfuM8QAje:!6AsbI]j4CIk4I3s4F%=>quVnA.7l+eC4MhL<#T-5J=V;rV"M3m?5:*eCf(lEVoRr`P!>P
%H8ltC'E"4gmpe95/jJQlc>UEWa%RPM[Bk7U*U!0Ad^N>ZI+F=;a&n8^Qti$)Pl^8tR./aCRDOR'm!gJ5bNnK;(H:O?s1KNqH0fZI
%k4sTUr0u/:([mZg_04dTrNg"5b'J2MH+G84IScWhJe)oV3S>^:lm(hW-aPb8Dnc,BqXXKP"XiRV\fo+j``D3/Von=mg&[O^0!3:^
%kAbX)TpG<VFOo%Onh#X'^N\&$nPgJ*J?*&oI>31-(^m?L&$EPElQm>,TksF2M>b'[pA`QeqtG8D*Ql3>huErTeV6clbgQ3<*VUj2
%=]G9*5]RRi^t/s[e\RcG9*Xu)D7,k/`e$n;bAU1[Y0J]8357R?>8D.fqib<Fn#m,I:6-LSh4O'/[/&Osg[?ajcd(F<?et_GoXf`<
%Ee]eO^QUa/1p]D1r(["--)OqZE3GPJhQ-;Q@AnfUlYfPam1tq3*/6nq"+\4cdW$qf%/d$tI@^>fDi;?K^2NZjc(kT$pTYi;FYG:]
%a^C.B4QZ7Q17d#5Q^>n<oIb@^5o4@:acQA:s3(L+34=h4G;[I2F.0<@`qScK`U1Y=Mh]e9h:8I,Y-4-"#t/%ehNR]*%;KqRY(h(F
%q8;HXpDMV)SU#R.ZVYAYQ+Ir4=>67H95p*UWgsT/Ja%Ko`,NEHh&%atY0KfZFD@>:?Cq,[H:bsOjO.<CC07^S^'6CLOp$\J\&VP-
%l^R3!9?pOD[StN3o]kG\,/sHFVg<t?!+pSDf1M:@E6umjW=ida?k+K1EPRhfMa#%mDi>tr;$U0[Ect]a-nAfc>)T[6On0k\lVNV5
%"0Y-r?s4UB/]seV[K!W_7pupu*E+Q4P/46--u1EWcZ.YYAM&f8"k97t;BgIkf%4)iIC6$*>*Q_JDi;?K^2N[SX[P63VHT31K/o0%
%s"Ui:LKIK]kZ^5;C[CUr*]A9"U'e*s9,o#4`o2<$-[gnY^;3\*(]O+m^\Su@<5/4M&Y_WT^Qq:c%L)+[fDqb?)YIa@MY1s;1TOi/
%N*_FC?<])eX'T$'g8`a76Eg@eVFjm1D)Kr==fn6)Ofhl)eS:/oC9+VJ)JcBS>IE1iBXMPDkc5`b\+a`3(/2P?:!"GU!cZsbO5EE@
%h*qdL@,4<<2O^b90V!e"eVH!E^Fh!,S6WZVMsQeH^K":lk84.\^\n$#oZ+.Yd.=bcC\cuTebSNhX8BFWB9c<NSY+d<D@nS?jP!mf
%lC7B(fCqUu*#^HS6crpCV:do:'pRipL380B1hI&/a8qs^]_r>-/e8J(7<I513]f'gg>Tu'qTn,rrr8nhch61ff"X1iRN@gOGp&/6
%I+^I-kdZEUIg/De2ta_>LrKt&Lk")sIYhY6LQQc5qi:6$$Z+_NftB'6&X#Yrl1hc;oA0)olA,E$h0jV7-gJ$D.Y="(F9ecK('OO6
%EF182qCus:c7J/_A%41i1`M))U$93t$qh<(5B`uTQ]0n;Eidq2h!W2O8BZ8Hcc!lghRu,m:N%k'^O:0P]>S/=fJE)T^_`'kO?CHL
%`$<%ag?H(iqQ9SN2?3R+;9naI3rg>W\$`m2J(OVeRf?[b^Q0AcRfD3ur9qelZ/>@a>*$`)gYpV8QK4M+h:'HrSd0kuSF;p<?$!`@
%2?Xe_!>hqH^O(>,o(o@)/QYTrfUZC9bfj5$EP>N\oKKm5=/5W^r:9FTLPLY.H1B.g\+P>cB7L_&0Y5LNm*'3HTZZ0J]WMaoddK*/
%I*Zrm^7VdD]oVAR>!/N:6FKA)I_>suZ:1dA%?kWLg);;B_dlF-a!2br?,L4M*@;GXrmPe'cHi[XX]FHWVtD1Hpu_G%mk:gscYl%]
%3Ig_dp!)aO]m9!&I^TX*SH[Ebo?6u;$fasFCNlZFnq&TerqFC$GIR<D%aL*2G3+b%1r$Y1+Q>1Z9foIOq40J`T;hX0ONY?fUEbd^
%Qo4ZCf>36OhjpB>6hf`b3X9hmO'T!TFQAJg`8:I7?>h?BgY`&&]BUP&C4P>?f"fHIGZb,%CZ&b5]W?[N2=RmU?624P&S@0@Mah+l
%Iouk,HgH<dJX=C[??Ts/*D`6Ph?8qS:l"5,,=ol+;Z!D[`84!dNXfpca[8P0e4bW,2R*B-?j3%PO"ou_fYiq-loWk<nj9_^58B6=
%`T(Wo-8$rh5<lik2r;7iNdIkSf#)JlN0J`T*01,Wl&fl7hB.j&p$R,ameRm)#Y`9m_"<HO\tUj[kY&NkVS<t<U+a5DI<GM+8lB_H
%?24k)Vq/$K]eKg'^7BZQ;<4eTFQff>jIa%g>"cl>J8LPfmJ$>,HgPtSqXrV7>O7*6o2c<"ntGIH^Mo.H6m(>S^@#u%"8he'ShP;+
%3$2`)crLZo?T^1*LOXSo?p@o/>#_&ifBm<,cV.FpQmF*1%P96lQ@+g5c^.Y5oaCNkRk-;MGA+OJEJtWKq8hP4EK+HJOABreEK#8J
%EJu2R=Q:6FlffJESmULpCE-jA^<@M9=Q:66*+P&h)">mi:D]9F*P6fEp5r!Tp(fUKlJ7rESDBcc^Sj)8HL\-BFg`E=E%o?k_t+&Q
%041?c4o`FEq>Y_aIW`*;-.o_V=(AkRro3Y2p?]MTk:ANAli)'I\S)T#Y27^e?Jh:(NH"^Vl\d(f..XtT8(MUn[i=Ycec#n4F;R81
%92so.1UM:</'cMj%-n1=L5lCKBR%7ArTNs$aT6h']29Oq=OIiZp[uf(RjBEp03`+74AF2_0sEr>(&7UZ]:6"]?.O)eOFr/*K7:,I
%Wo!J8_Gc&XlnVQ;\0eC:;#9ZRq.0\$c#?&S?V?-Zn)[l6^;n'SHS$,ZrYKp@L<*Hjp!3Sh,"i=/4Us(YIp9\W;$H!82&^t+dJ2IO
%I%HrAMr1@Z])$Gk:4QXHEm++2lHQHfh!3.dhVA,,%]_OtDdVRu]X\28o!*O_$W%+0Df41`gk(To3ck2]bWTfWe`tG^mbI*QXmY!0
%c5j#K(QQS-HY/;STj..X%`Y2Hp.b8<V>Hn:f<;p!3F-ZS*4nFZChsLf>b;am@J;tN_?Ti=Tn,:M>_s1;F2aD(5[9-d%dnS+f>dp5
%fM00JZ5RaM\c*[X?_3kfj3nYR?%7'EG&dE>Ik1q\^:jL8E_.NNYM7U=>KA@F0`,PBGRe:(r;d;p+Eu4giPb)2OE9[_g@rMWk]g0i
%g,aIOTZ<D>V:uKL05glaM=PGr]Y5S^pC],fo,##BE/PU4^,S2[AEM+=hUSQRpi[5^_55SN5C9$.T+5c1#J1o3JkD38mquI(St.P5
%D"GhO#PKMS@klm/_440A)2+&5i#NV!6_.T8s&p6\Sm8n6,JYm--`?umn`JZ%`*^9"=6$!;h>ntL;jgFr]:b/Qfs30dYFkASW!#<5
%6gu5#\^`H;/V>)/g..87+,k?H^kl_,ItWl)pEr$Ahh"51^$Y:gq;(_oq4e-Rra[mD<hnjbNM=rMqWKU'L$moP2N!Ns5l"9Tm,$J*
%7i0!kE[,6,G!DZHpQ,3SR=5QL[&`;r^_lmfI<keE)#SiD@>Pp%`t#NHOtk_sE&/GcgYE^4a$'1s<'7Tmh:%jOgMbu>0;;`3W:TQM
%iqDumMgJaNol/\rKsi%_qdH;eqr,%q%/YK5517^0qZClLhHeIIrVo@%fX()Z,KMCgi4^*m:SSU7kBf>U>9)^]3%bR+UZ?`J&2<2W
%ZcjrB/<0'4R#(49!Y]tbh01X<s0hm*9-4(Er8Wt5fIf8h`OPY4f,s=^hnH"GlO]?ZS'u\q"o(-6Ua=[=o;D<lCqnN=E>a/E$M!ZY
%*HA^H6O/[7na%)X17g)%_"Slrj6<:33uQ=NI\qSH?1.[o#+>7JcZ9)sP"4/rHbY2nY.tOH"K],J4W-$J;'\aDi7mVshD%ZZBFiO_
%SpmUAh1UQlM[nU:5,Ju!C[LSocYrf%EUuT7S3osWgQMfORG62o0@0[=deMkhl<SgT^;P#F\Gl!clKk\ZWCEJWPMp%XAr!_:rcjgR
%bcJtROB1%mSJI"-`Bd/dhel2mhS*=5Up,Virm;/[HQVp*S=R+_B'3"q5%N42erj?,+5=L>9AY,EH+A5\+1be1'$I1%Z$`9)GU*UD
%^\mdic1'9PY?l?,,g$0V?iBfslLT<<@LPCuq2=i_0!;($o?"38r*?oFs72'ihgBj#=l6')o'7Am5!+7Bqer)8-boW@=2W/;J,&)+
%n(RdN-\&rs>4p5!J&Hj8^\(D&]?5R^0uM,*:B&lF5FfBd^]++;5P`j9Ch%p#S22P7Vt)rQj%nN.T&XlN=>u@,bAJ/gHb$Yrk;cX+
%'*_s<>?lH.4&"]n57_=]-e$fSDqf-LGN_BM_$9Kn6s&Le]<p\.UN#o:UO;XLj)$/2gG09m5P`ifY;(V!^DGd:-2m.Z?/_9f3r.q#
%o[QC<m7qK*A=a7VLVXDlp;:qfZ7Qh,=3ph!pnD+_rqW:;>\B]+llH-'=o/_XK9AQLK:JRSqSO-B9>&7P]Qh8rqsX<sp$uWL+65aB
%!IldjrUgKR+\'15n6m^_Ijf;-pd;F1#BTJ1e+lMS`7jaVf9sa`rc"+F*0reIcM044[L%H:-=!IRpufY/F#(G2cU5J738mU,Z7W`*
%7R+YtPV'B3_MraVjc^MK\"+#rmQAu\quP^NGFS3bVXmc*(5H!=E`qkk@rqV/>W@)N;3$>JHto-<DMpAsGFk8mAc#Ld)EY^d`@\Rd
%_Td!6n%S:9gW@gNbeqVNk3"NQfmj%*:O_tDZ??0GlB>SoPCNP?PJ@.Dm4t]Dhl6%Dp[m]qE:o]si8!p;lEZO4`tpMfakI;-q%s0>
%+E.U/YoE/p6=XZNTZMTgFV2aV"H0Yo4dXDQhS.e99V%tas!sQ6`Ap%VdG[H's#^\lQWl1eIi<4eo"7/t/ai*jB">0n?Ksks[4+77
%Nr%tQgZ*+U7G[n$NEm@gfqN-N/W)Qh3f?&HS#RZAJ?]#qP2"jl'WMhUl+uT`Xm-c['E_A0/;<7>eJG4VOE3.#[%N9%6c(4,FeLip
%l6#:qH<WV7$-u6cXFA<*$XV"V*EKr.akuE!W1VTFCho*"_n0g`D4RXLH`Z<)fj%f$0?ucZYqHkWelo.MI*J&D$OiHLm<\]F0RL_/
%4?K;+DMdb9\Nfo=-Wi&>7#CU0L/:s"G.L+O?&=2hh"^%mV52QOh#PE,nI]?GPe'\r3eL"#Maj&r\B!mE;^pL3_:L?.WB%5DgnmP;
%iE9CC<U6%J`MHpH(KZK;6\si<9"Vth+&\AnW#$D>nLXuI(K?PZ6liG6)S[o1Y5cc<iZjJQqQj9T%h%_ucXR-qONYbsM*-.2!gdsl
%\@Q+Z_EB5(f+i2g$bO#$]G^c&f."Yp1;<`2<aAXr=-lQ#=VC\nX%'</T-Dc6Y?,^pj%G*;S:(93opjq=dno_OX+*gJSgIGr"^0e+
%p=L1>+7#qaiGoc-r?t%#YO?u:W]DK9F4]_b^)GK(LJ<,9#64GReZ4nChk#:@Ie&47`ijA"bic1t4Z_qa@CtnL\[,jTo6qmAV)VuG
%[B6EOQL(#:DP>)U0);N;II[r\a[+-$m6mlk\P>LCIXZ9"<e_SBN6c?s1?iqt<eUl(N'l(&?+mas&1g3&X&dH\W_>e$44n^Vc$@]J
%3%)DiF!^=`l>^F9]dX3@:_c@PFS.bSdE/4;R=$c^oK(pg2MLuRhQuGZ2k;Co<4`F*Y1cTmpXd$R!WV$/F1.)Xf<#S.S?OoDeZ\"\
%rG'[D@HXDQ3-CY4A;*u!]TG?iZ.(#LI/RFjVrF#76=DiiRokqi245'nrs(a\`R:Yb-c+nR`GirLpt\&0*nVA'MXo]Y,0R^&%G2F`
%1O%km0gq.R[NRT?Rt#J>4<Pa4<'K1%*]_g$jLKKlo<S\gP5;opO),Z3Yr>_.E)L>Y3_](^74^4^Vi<'6M:CkhQ:msd"MW$A>J7Q@
%<g[6,lIiQ?J[]FFIsk?\ft%\dS:i7r]_LmIft01m]tPL[Dn9P/d.I*hce>tkl<.&cG7BTi'ke]eTmFiR7"&BrH<d<?G,O(1W8BFG
%he`'2<RXYYd&?<RCa%MfjFc39T6oYOQkT;OpCtC+,L5`'o&U:t9/AMMmKek+Un:B*k_H&""Adh0HfWZQ>hq=_F7Pe:f@Q?G-c5$_
%s#e'or;>^Mq:VkQb5S$^X&kX39oA?4$DV1l5!Q`o4hnQ(lhNIUDf9PR0n3tY_YVc,i\US[7'=Yhr:U![;At/Vf<\\G0.nm\D7e*e
%+)`c<rI<upl>>nD#6Hs]k'$<o@5>WId1p]/IscJ18cuj>c@c&S+8s<N?[%H.C4(#*aRN'phHl_SdDe&t\4.FhB]C`sg.5:^1YV'%
%72u1gd7/UVd7/IYZnZK8O,jul$pT*G0ko8N0<leh(UlgP_u$0fY"'GU,i&1ikACSbhXfOIE+=-eE+AmHiPsiJE21?=2StGf&&O=j
%1#^-V38BmNSoA1U_7P(RmUp!iqq4QR;<*,6D#Ys%NH#@cRVh$'`K,GPoW\f`3n*,KEK)o+P^&t\(2rh\]Q&oiIaiTe\&d\DU^,'g
%*`rZ18%2lbL)F'id6fE3b:Eu\]AB!VMmg_TfA!<%EmSLS&;nWr>T:RkOIa?GdMSOe7pZ^_<'hSne)^N(:a3A72$sQ2,HqNU-KMV=
%VR3U/YCnLVG*f=s3Kl8/F#$c*^Uj*/9NF;uOrcC_:ZaAF;Dmdc=o^$4rI/kin^9J;3-&]6(Fo_29M?gHQcJJ\1HiEd%W93/#@OPF
%M?=J7]]VWhEi.C?XI%)/QqGo^H3_YL*<r%"hY0+1jTq?b.\8<Ti\=hGSW^RmgSa=8D!L/<_7_;$#AL8'GE^((]Qbh'@%DUg``6-S
%Z5BYaAnI]gL+>VdqV(TF$MA5e455<)U`)9L9DBRJ&#(!.e0dm.Tl(i3["2;()N[P2/B&e\J).%XQQfc^`T$O/l2u9B?$\kQT>+Pp
%e`djSpW]_\,m=%h`VQ5gho)DZUA(hh*qGu`d`p7o<r;G2e%2+d^+OQJc)V>UlRd"4S(IDOcDp&`M_8d)46]B!ilQ<d[buFrf4BBV
%`=YB??Wn:pfpuJ$\23ih+&\Q.Z(DkjSqN!gEu78_2T57sX@pN,,0Ne'Rh=r=ofO;)aX>]l"j#e.`=<8XF\[?%Q=-!TR>r2VmX+"p
%o;$\oNqXDMd*VK7J`A(4StDD*H:WoZ=,$<tm]*=Z3n2QeD\?tA_]m3*dlYOGQLcLj<C*S`*%_O>BjCVeU6.Oe.5l2heQl7I@XTg9
%HU*2OYb]R5?>d?T>1k3K<DunA);.8Bh169ka\4O:#5B:NhZ8p',a%9TKXEo*e1d?>Fk<!R89!VK*F/fg\!g?AF]=T2X7A*0(H@MN
%VQ0(TiggK4RV&Ph>N<T#S=AMX:gICGCrIU81%0^COLh3XlEe(mPF>)<N+\nQQ^T-t6uuMpO<WR,V4hU!CBcFQY$,IDF+pL%Wa4k1
%Mg1J^)BV/X0&gQ>/;ORMi2eU".%1N>2<JH(7f/@<=AffID6Nbl?Z:JRp3]S1XQbR!4gCk3IUVII].H1n/<3kZ_VLEIBVc(AOe+9$
%UaOU>UaQ*.dM)A.qVRX2a=U*tQ_c(r[e.MtkIt'r>Y.`PSt<G29DUX4M=f9F'>B]XdM$e.H@e'?Nme[31$K"Z3'ECq1d)FTSfkcq
%:I*6!ncY.sBJ).h$J^"!'8VcAIR=#3%t3l(`Qr+I6Mt=?.+4QWpa?FU[k0o)ec`s\T_R.CdI8GU2nQLE.u'7+>'Ofk<)7Ah/g!"3
%Cdr7$4*&Mp(?@+1Q@k!gF]u0[[+V=h:34t=l-B7^qqS04N`0/hNME(SZG3C\Ws;j)]i5rk1/_0q?\Z1$or8T+!j*ZrhO1rn8hjmE
%#bNZVaO2KW0ns6`:J9.0:a[Eb&R3#YcU!2;\_afp"T0lfScOW(B5Jd:[B)n;oI[:0kZ?Ag/:"iNgj$5(mcqNLUC`Qdl:O<D(RR/K
%katZ)9?ueoo.V5OWeL(Wj0KoPON,URmFEN`Y\KMu%ILKKmdi\PHW:5L!Ekmf[(tK@Y-oWO?Up7DA*Uhp$.f7>]e[99Xq5W7e(7"l
%Qi!A4leKu-n)`u\megP1ST3S4='+3o2uicgTs;Y/TnBq]eH0:&(J2I.m'N$b-dp*e9YO#>Cg7i]_ur.!Z_!i]^A1O,mDdCT5Q(&1
%X#?/Y+0TSDWr2>]HM,dedjI-nZ/F[X2SL3;"k?N,H7>.@[eJk+4`o9l&)L=$R_PVM\(N!I:&FIl!RaXZqoQ"1.c&U>nYY*q5nb4j
%p)M;P]d:JP^+6Z6SjU)1Il#:$gjRMpRc4U?4.)QCnZLO;E3=MSTdR?JA*,gH:59D!W.E5pQ##\K<8"+)Ed"TuAOlPm^%^N]jrp38
%%UHcgU$LZ`Q4-.4_ccXddNC19,9h4mCo\Vc9oD&P3eqJ6H++sPGdUE:C#>l3XTl;,DqXHuZT2`p*ZeVel67MjmPHU@AWgm0o![lC
%C7_.&kt^9$hId8YHrOC)J>^e:?<npi$p@cg>Ya.UC7V5]i6^1?*qlUnWd;(eCSNsMmnG2L%3B:#jd2Q-q>Bm@gF#Xh$tXc(ALNJc
%-tR`D`GE_lP\jQfE_dIICrrE=D+Tu_La:+sIt]M&g*DQJ-;h?q4@u:.pbQMZaurml2W<,\KTtP6L1nd(/;aXYk#mqn)/mBo=VSDk
%,E!bTh9;UXm9,\#l5F8;Pe.=,h;LM"P]BP8V<s7F;Bg&&U6P%JPh\1;1lJYNAPVB%,E!`^De)`+[[UEaE_dGsDp+kkcBFaSiNE)g
%B2S$R[PrK=@/$bCUWeG3cBQ/Xa!8'FKkV/gVgP(()9VXuMHmf^7'YL0.,gaKMVF:_R='0>h&]di4GNYIQ0f1PfqR6-.&giV-;>QC
%DAEDJiZi)5Z6hB_4n(!AaUC,MTbPa_0[P/b%L(%03L&IA*6P%KqI8tn-%cgeK9AiQq?E"n4bM2Sf<YlXckOX(_]s'bnAmbB1263u
%gS24RSg\L5(<%l[U:=c]r^=%6S*_5->Q1Elo-]aqNjpBb;Z+YfBmdMcNj,V2,&V,`\0hHcg"t]FM^J&BA+-jMh"00Xp'tRB14,1n
%-Vqspge$1b4"9pb:0Qk%RQF*q;C?IQ3goV`jISE#oQL.[RuXJ3\0Z9lH)6M]M;+UaO[Et1H/^c:nf^2;mNag;@\DXc;A&=[=c>DW
%0mAd<MrF$RT1\OI[+pM0-Qi-5(JCCCgds+MGHrN6pUK;+q\hTf=RSIIQh6a"0)o`?h^DROjoP;M4qH/N&$G>dP7\<Ph"@S"PA1UH
%S7fiUYgZ;fj@kLagfj""6a5LoFi]sfdpfEihs\P]n&J8"8K6CR)=)@Q:2t7-V`;3R;]5%lqRcKOU+)+Oq\3Q%:8_X8%LkDl:\!9<
%]m0SU[SQG,rl%B`?]S,IMdIj@.K=3:a5Jf0"nhumoKF0A^%7%=/Y0?CdD9aN7(h]JmbY_!*q.>8)M>[U#$L]G:u.[uJ(n=.2"KDe
%gZu8GHS+MhMn6C4_ckQ<Zpie$_Y&e*]cp^b#hLTDos;:T>TZs3pPNq'(3KQb"l7A&\Y8c2c!i&.%5fN,c9[QoX?$U3ojZtRgf[eg
%(AK;__2Hh)m3a%gfeM>=_pj>m>;QeXG\at17Q8(RoPj"N10*V-E$?Z;aO6R?!@uMtBB09T'@$0peV<WDh\BZ$Vht3%Zk1i"ft;B7
%h1:29URa@3VQ)K,*)5@olXr,5?)(3]d@eU>FkOrE8=60c)hGj58ToOn?a`(u$i?FXd9ee%o%BnQRbchC^_J4^)["k!J$O41][TsX
%]<S`WIS(CYVq/]hBo@l>eE)8XZ3m]U<9TjF>uY6TGCp2":aV)jo(S@bd<8bl;St3YqSm)YB9PD0b8JYfjh]2[K#?4'rYhX9;O",(
%E$eB'6As<4fN*!!I4f"gILhi1W&i/igRo9(AohUQ7YG:Uf>MLlQ]4S.pGYKRDPIIRF`4cE[-ETX!NB='?F9o=VM]4Bm`e.UHZ`kq
%;/U?V`)2N'7@EE`8*p!\9mG7/P_,:"PDerlimEap*JO*/R)m;a*cF+Xg>.$6S'=m?RsX8AL4$^:-M"/]ZaaGo;iH5M)=*ciHH47<
%GF^pfNt](D[d0V[T)oOng`r8hV9Lp]4;SLsl#Qq;RE2E90iGuW&92_oi7i.=!3=%N%J.)'HfZUB8L>J70`%Q.M),Fh`07=0fdi9(
%4VJjEh5BNU.pgN^M-ViR]JZ@Y:^sf-g=WA-A!mfi&=4]f-YXcpc0-RJ9KtGHiV>;*:frf3hYl0g4.FK:Jdub*@`#R](%*WkQhS_e
%K!^b.$$o+Kb()S.P*\ee&Q1a]_b#KCR\V^58M)Sq"FTD#FV2to[\]fA]\SM?hbG^(];7#i1j"0jPZ@ZS^egehKfMB^"tLnl0S=[[
%H*1b@-so4k`U9bj3>BMV!G"#J[8$G%WGg<e2K#JjU?C"d-H*-PVfaMG.n#B"W>1XT;RLM[AXLs.Y1P\nB\XeWN$T6BEH<;-`7u3O
%D6"4O],QV@q&l_Znh@T:rF,P/?1tQATZu,W'<!$1OR;re@G(.TM,<)'mlYCpjKhR#<?'f@",B!de[rE)==,qfHpSWZ'&,DT?-uN@
%]3LK"WZLY!L!KL;O:@Tb%D@ch0>s=?)USX92?m6Gf@Wl+1#qhn#BRrI32c:s4M$NA<,LnnIgq7_<8gZ:hSJ0\l%W2HCGKec?*g0Q
%e8\FY.3!]iWVM0XHZsbdQ1#$h\1,0Ka$$\3]uRqqZrd2tm")M(;79^Vnn/BS<r8Zb8Hsa1*/+UklG.3L\JNG-G$BU6QB:e7%S_3!
%K6Q<(9eMHN*BK1DgJ3F.G8TG*(ERKV*SR'03,;GLl.+=dZ.[#VgDU`FeV?/nP<MIiV<72Xm]r1-inWnSm[9KY"5:]X4edIg<]dOT
%4C)(V^o>F3b2[1+e>69cGSh6<_GP3?h)d?:g+*\Tn$!=@R(.ohEo\,UEEaf31jSMWkHO>;<NXmsCcnu'_2Yo.-Cs)$b[2=$1XSFZ
%%))'\n&9Yn-YXcpc0-RJ9KtGE$"<h,YS<WF\D($X-MLL^i+0f[D/1Y<Y/?V#9]mr?FaSU5+'(FAH2?QMoJ)mV=Q.';oWGgm@sY@s
%+GXGT*;E\6R#\:fi2?<(Xb?k</KB#87]$^^A"%7qXb?j]qj7kkE8[La_<#6AE;j@B_;4_<9f+iA<Xu3r")I#6=ugPlPlpc&1[VJg
%!/W"9/2E-(pi01l&6fW/^Sc)p\&n_7<'KfN0:"e%.L/XcB=c99p6!F2d[8[I@U4)r^po+L`[3[iBT95sI]L-=B1YIMbO/nWW/5^U
%C28?Vpidbt\5l4cVcBduGL]Z`5#fGbSr;o4b/U5[CX%KUI^.hVdUX"M%fW)f^dt57cZE&&PABR7Qp0'LlQs#\=5NE;fuc2A@#'Wk
%%Mc;tEMK/$6fj6te!m[^f+sXZ7HFLn9l#[0g7iUaOX@ECW2qR#CQ$=RBNbL4CS5AN1p&>Za4@!U!,PDFT+Tf/jUPdZC9&a/^$0eX
%S"UnnK9+.d=\$km51=/F6=8'mB)-s7Pm1)ceof[=ZL3#P=^bI#N)^)Y9u0(Q9n11pZtU`d3I*/#)Pk1O`Hrh)\cIkn'h^N4fi-F3
%P4DHWLL.BQ[Bd'o@7Uj`0]<9WPS2Dr$Mh"TG<t2bA!@lUa@oIPC8]RT\:KdQ"A?(:;fR#A+%C$iU%f5%h)W!4GN3Whj,F]NSXaV3
%l)DoSr5uV0'gH@sBi2V5>-p^D?#!#Nr*mL%3TfN`TEHX%;r=rsW"KAs%3TBcK>2,C<n2Lf+t">K1Y.)3&@H[?WQB[cbGV=9$i0)'
%Z;'qK'3[_3Z]W`s!&6D)PYj62[p`s\0atppMS[m<(&lR1\M/>=,cNL=i/P9BQWj,S(fW[I9l0IX`2R[HIHZ:h;dlkj01/>&MlVT;
%V%ZM"eGQjRN5g[)k:S]l-[\qb>!6T(FQFK768iZ]]P^reg;]I=RoS8KJFQi,:e56tVH'2K+DO)A7:r%2@XM$>Cnm6!itt4.enT*o
%^qQ>\V7rO26"O'Ha=P6,C;RPV_YBh2ct-Y-"l$UdoPFhT'D1*2\ckGdN4XN&C-dCdJL,S/er*7L0=1o(bZEI/Ud2=;-c#E@.hjsY
%[(ZJmHgfXZb`O`@T$MahrXU+s"@BoBSf+4e<Ygi`3KcZr&aZni]YFDE<DNaNFF.l.f8mR[)2\pSeWi4)Wa8_#Y##jKh_5>D35_jF
%couBCoAt":@@0X.YdOU+-4!S;=\cb28N*@-I$ZCTNfpNB;G;0Y9QoaQmV5&=c!>q:1,c1a;O"6b7b6NQ?o?cN0d!L/D]pJZo;7"*
%YK=<3)p"(!GsZak-MDR\%a!a]Ls%t%JQlGF.*?MT^20dVYI0l!]Np[09qTsN=7`lp5?r)&Ct#*<Rg$6G<c.H0;n@PG.Eaj>kf&H,
%d!AmsU_;k3:/#WuN'$i(6Zl-;R+BsKDfqO'dlO6W.%(k*ZHf*n2<T^%agTJESh/B]?+uVI7],.D-[bIfZSELKEi&o%Xd^sS5R[@!
%IE%FEc(G%@2r&0A+]*^<95Fk<_HJ.!=_@nfPt[htlIO?EgpWaKJAc%pC[0saEEfTF'@Eu)<aLmY!W5cF`h2GPU2=$\0Kl.@S\DJl
%h#pc\N1+=KSAKNjcerG,'V:*=;_E*U""Fa"C1j`_AY&&GX)'Zonu-RDa`ppKG0i'@(`Fn_#0\u#+Sg9=OR$!rrml5kQF8RR$Y]!>
%[Z$DK(scKU`X1P=cm@0!=N1Y(L4)`-6;hmJ32e#u&p.(6=N61^&@HHuAo*ZGCF"b/EO&ACo5d&+JUieuSZf7k'3[e8AqV.9P"5To
%+GemKWbn1Y<+_Eu@$r?(d%i/:/6euC7q^7j(G4*hn!2Y/CRHLUhda,i'D\4,=29F(_cD.`K]@d@[h[)m&QHm-'[H3ed]2EJlAB^(
%<g4>W-S3`BTGoQ0Yc8#::IOFEKUo`ZBEcKXPU-]Lfd:gF--bB^?0#g]7p!o)gGK@G0U\RXXkic<D)1U.]Zhk)D4<@Efjc%2Zttq`
%-TacS6;FJj1Y%41<;PcpB,CQ)A]`&%q"NG>rr%_ppF@<BYBYH0iplu)a7@LDhlh9P^Z+e^MT>HA*oF/Gr!h4%^L-O+I`:@Ii[Z'C
%f-24?>PIJ^<+k/;?MMa8'q4Y!gtg7'q.d.+W8js\P;PX5o]EQfCY`7oE^(?!IUE5DEBpVfbCOIYZO]_\CG3B64nF5]5BcM-m_fKf
%B7AJar58u8\H>8:5(U?#q;)ebrG'5To'%(hqgPrhg[+[#q!Tg)hco+?q-2jLoTO&`]IX#XG_$72`&mdms+)clP$:$aVP!k7/b/+5
%^*VXM"@;nSb89NYkoX0'0RNVI\ENL;0DE(d:](IrcL-O]5:QJbVkALrSp94H4n2PWb-NJPQ%]";m>6$5Tg%?IYC:am]`-OLM.^2=
%#"]2c:r_+M:u\2pe<de<:I9KVm7\-"4L"k),h1^i;nTDL;nV\7.K4Zmr."1k#"_]E[mF(pkIeRo"rVZjXC5I<N*NGe]4[O@_m'n3
%iLho:2k7D7q\H1^GOc@$qjaefLVnW.=koEg5^>':F1njgf/2%3Ch_PoEFlWoF;smupgQ?ML+>'!VHKDf^ArK>Zp'(ghn$d)g1%:A
%I86:ACDMt^T;Y?(I,5Oqr2T@V4*_!FF5B$L*8$ZAl$WBb(CYE_/?%LKlY3l&hZ^D:VFd5tr<4i%=?!)%_`b,KH`(3*/pbjC7`We*
%\C2FAj[=5,/W(Yd_*r8uY22GRM)&p;\#S,be!fG0]Zh%Yl#UN840lL9mV./:s.VVGHg6C$*b!:ccQ<itBD[f"AKfj`r_3?jIq8;e
%cVFN<[?-gBoWc(ufBd:2H'7Z[eZZmRn6*OY*gq!;WjOX%Q<bb]0jKk(qO_\UJZK,n:0%ZR\Z\>C8IN:&H6,7#P7-,0YqJ+\<0)6K
%A.J#O0q25L"Qp"Nja#E\#aY,Y<YkB)g"f!+c;\j:A^RZ1M;M2_6QDg;f!FG;b@#inVHV$.n;^t.Io$u(+\73un,I/TVn^S6g,"&T
%i6Qcq_6OrgT@JB76+/<Qr/M`):Md92F:Nu/%#WetA!Y$+GoR=EFuX(KKk8=iK$V0*njgTIm%s6?G4</;Ce0KB)I7TKFH[/6RVdi<
%ZMUGL"^d5Oa)H/*c7g4.<Of%\DT;qT.U:M5LO$+nGtpI@jRGebo4P8+#<9J-I-.s@#j`:7I]3h9VJbob#BT:el3f7kQRIP3$D+C0
%b<QFkF>BJQ@5HANGo?3m:[<2E]E?':$gfrSFN"E-Rc5YmA@!,pf"n:f\>OaFAa?e4A0.#<g>3"&SNYH6n6/9:p+GLdT(]j'gNUW]
%FNm<!b]PKUF+hMU9ZLTPmVUkG>.&4W4PR:.;s89s/\8tDiRY9C=d6!h42(cg_oKq>*klhQV5hk87(g?+4V,#^mEP4AXB`<s6"G&2
%89"RLOtnBrg1'QQ`%>f^R3+qqG^[jt\;RKtKUq&VO\k1CBd&j*'&HY)okH+PI'<JJr=>Cq-0tM^m^-'i*OM<n(ZBY/rEf0s?M,,L
%=8i0hX8^umiI,'dpO*Y1pI0>a(Z@gUmu-]7;/?0g(ZBeGq>^1B_Xfn%lh,KSp6a+:aQe0@K=TILJmprTbT,6)hNKnRc-5>hkHXhn
%FTnsL!Wsc!k4/joBX$@bM_&9#kfg4URL:'p];<P)9p!Tl'eo:^?I(Q;%b3)^G]RT\oCgVUgI%7AJ4mOrbL9)c1H2p<P$m1X,FArf
%?&k]6n&;?OHKZ;N99V5spB42J'<R#70/%>H_0cO^3Aq*pi8%W8oI2S7M4n\jA_hg=fA-9)Cl(\pClIW<'?-%masWLDA"%/4#Qn[q
%F<]QJ_p&LTD8pL4EI_BF>]:]?!7sbdI@D@I90(qZo"iRKm1[h=bDZN41EEY%`67LXEu)Sc>2DFqD5j8;3eqUH-@Sor!A`S-0V!j2
%fQ-fr/YaW/)oh$-M+O"A6_1&>"85sHbYZOHjFP16>b_10MTIiPH2j!I.Z!kQ[&V@N4Yu69n]i8s0=ud9X\5bbHksJ)N[\#5!<u*4
%pOb7;$8UG$7u:*-PnV@-ns?nLEQk?Hd<^]4Sd]5fT]lGhf\D%1Z](o?2sOYaAC-a[77@$JQjID&#&b,K0jY>=R!o73$PX]Pgh#g$
%*+$hpI/ZE?E"+)/5!&GWQIB2SR7'T6IlQj,]\cG-6<29?F_pisAfALsmEE2@kTj/MrhfN#S8MtKba<6ZAlHVf2U7bB@At!fOoZ55
%AW/Rba\GUgd`(,rBKQl\(CQ[H(]#ki2KSsgXCF&c%7a"K5mqR8i(s2X,U;n:oGEFR\sS%$[LWKc_?-PA%.@X:H6\mC;A]bU\5P-W
%_,_17K5kmTJ6p`1E5TC#'Q5KX7gtuPA/^n>U1Glr1>-\PELVgI\j+$Z7X-SVm3U\U>l5=[]Y.7OmQ7hB06,#PRg"+WG2NE)Pg!*4
%ZE9*OR@4qR!=G,NP4>An>8t\]2Soh(-/$#Y(X94&?"7VU3f$R9S*Gf<(;UBJR:li.iZJ]Z^a]\h"5`gM=m10G`i82<aRAern+@mV
%HI9jmQga%1n)^;4jeD5*UAn`H7FIntU=RbJB=US4@(FA4MY99>>U4d&>bq<YLI@F-bnmtEf+*X0J+O-)+7qYl6MGkNmuLU)df-TG
%,/l6"=>,gQ*>531s1c3Q`-u718GVh&OnP]U(GT^ak(A#qB]4\h&+YDnf7FU>)BIFoQ^e]-J<qo+BprhRkf<QpJ%8oi0qujNq3$m6
%]k$bj//cQfQAjnn-)9oTUVComa?KJ\ZXdUaB9nJjb]D*]RGqO.;Di_8:.n(=ZU+"kAsSD<Ykc_1OWiJgRt6`Wq=n@>aL/l0]2s5"
%P-S,I,iEi_;)s_LL,hBJMUA`ld`\,T"XD9RjqiuDRI[+p288S,ZVjKJ#r"-bp3Mj;(a^7l`a9KZ6&6Ca$%OIRo:g[Md-G/pE(od`
%=4d%6/LYTf1M9R>DSF.*5HZbPX;6=TAM_</BY(NXA7.Va`NPd*g^EgC'kib(Vo8kci9%iFH@4-2i=.TRBP<QWe%V/\?V9j<JSTKS
%?CAp;$T&T1)W#e/$6R[3=#q*47<Z^]=RPh\-`s71D3_$m`VD)XIq3HS5,gB&gUH,t8UQJBN;96>b^KG`T\:d(Qui5"@R"+,[UTRN
%N^D%Mj$"'jT4akIWo9I.1LepD#9@I1cL*3mi52hJk)3o_:s('4V7'\uErj\<8iCnIE(ic317^?S9@cNW$6BJ0RON@ETf'uKB<2kj
%ST$rW:=3@fi=&:51\n%ghu.Fa%`:F($ucD0#EI4]=\ilPr!b'1GW"0kGD9eg$0go31]^SRrc0p\T9%_)#p:=LRW-DJ]79Y@?Y;b&
%:$99^GGjr>:jE-GIem+o<?"p&^@Z)"DY[&NrGo5.neFX%qC)9pO$<PYVVLRI6%]\PmAa<r"J^tRAD_>=o3GgE&YC]aMB:L@ec7U7
%<lJ9FoaQ0c:a=jL:HkmW)GI36\Y"-dj&S;/Mj\)WdX$cB-P61X/<R)Q.aWC8$iQ^tle"L33R5CGIsJJL)?/ge>keso=/g82:YrSG
%;lM^.rr6X)]U1k%/TV7EqYuUSiV0R9_1)P5=If<CXcIu.=8]Qmpn^dD:`G/;h/]njLQqkkeg0U?T7J)<g*<0j[J=n"/fN''iI/Gr
%"mn^c1Tb]0n)Hhr36W,6=_;_p[Gh<N?!]*g*k/3<Xp4jYZp"5`4D6c_r4G.\I+7=\:n?upq*^G-\>k>>"fWIWMj<%i>iL,lTlAh^
%DeK0$pu8.DUe<pFe9&/R.S`Hc%\F?B-%h$m9J5Y]!U.lKrbA??qTWn@>9DGn[;hl^2Le':jU71rp?UbD(JIi3bG-s55l+3_I`o/#
%?_Z+f+.%*]/`;`=J:<FF"1)=b)h=A]oR*9.1%+1G?c!U78HDO(?47/&BfcgC!IdNia2;fj=8nJ[_s(d=0?hol3QVg[n[1/I_?X?8
%ED6NWn:[H;`_6a%!l:"&o\h_$d5ihUg_J50jk-!O=OE)\j&r$K_?X<aEZt.mm!,GF,.]WFF)t!hg6FmiHE4K`m=^Ofb3'M3=ZK#s
%TuBf<B.7c=W<Hoe"E8S"\t8;`SC>X$a=eWl.83Bio#$Xb!NSdQ?<&E3>Bi4/JFD)56g92U:VdD5l6PerSc>pQf-!u<IikR?T'\aA
%=V_p8EIHgK&%4@!+:l*?.Cn,a;69ccqI6krBu/2PbGTksCR$`7fa!N,,](aP8]P%b1*hBZ($Tkq]cRf:s21^!qF?tUTB6%2s-AK\
%^0Spr<VtBI4)S"pN5%cgs$:B--0mc65;qH(erT4K_P5+<R)G4),V^H-i93Qn\:t>HJM&G+\6'0VP6G%JHLBsB^JM!0G<&%fArJs5
%0uU:2bl7)&L&,Alr1VEohg1$b^M8B#@b:WUS8,!dqff_77:c1SeAQs7a0]!P$jJB^`P6?*j0+;=IXk^RB6<Ycj`19IM7%ROCjUe0
%6LMZ9G#,j2mh5("AQ8SgPjk<<\mg94E/b`!(m:\(^ku?_Fb>kXcTC'iN^X>3Ij$-;%r*VRRX=FN))Jn=eGHWNpJkDS8_WVYm=1_'
%eHJC7PUp==AsgtV9]Drj"PgJdBV^bYK*hD&i*B6q"8D8SXHSju1e!_ok_uNN.[G,kk9D.I#dQa/D%,>VJc.$fooID710$6HF0OO^
%fKVD%qlRlQo<81Z1n1Fkk?n7m1PVa'n?DCK-BZLtrBGj%^/M:p-<U(^-/8INFHM:G'_S)`oI5>uf(#TKe%5"LNZQ0s2<FEG7W5T,
%n80tUY/((]kRCls_>W'^GQGN,-H("s8Xd6+TbLoj7<:5L5:UdP0+p[hK0'G9a0KN;FBaEKDfnl508V0MXc"pF-N`O!(J&pI(AT%=
%(7!!&T)"5b5R]/kUf_HM6kKqn$[@81Q&I$];#VX1^h]B\b+(24#+6,m#%eD\\lcl^a?'M+WS.u2W%mre64qIM'IcVBTj..#6$m#'
%KU4;1%*>>oPQe>uUA^58pk.Aa^Q=>a-8SQ0W[QeNEPW8Fo:d.%+YR9&5EhZ;KES:P^D&p20/8(XkA$;IJJBI'Rhu&D?2t'+O0QQ/
%_?k_TI2)_'/s>\-n41@4#Cr/=h8tjB+=ssJ_laXaRUNoX[n^-c\Eib:A)\T-itm_Y[!$_bK6E].`^&_6ErDHm'\_`jg!7dsqIELe
%"$*R_#j.fcpMo&f0N$g&2l*&>LS+Qg?<osucqUQ(WEVUed(t$WT$D%1Af,Vb>dX<^8mUk_I@'Vqh1`Z6RNa6-</>C><^t%\I95l\
%nV0T@!aaK[4,nQDmZ6Z+^0OVOFhuuGY,$[LDi`F$TD>n]'\@Jq6>O6h=d>N5:p0AVPd&>(ROBl((s`=fZa"M85:nh[rCP\F+u7sc
%M0e*7j7USM"5h(jo.YD?Mdd9`kmY$$L_-:0,.ZmDlH`\j&ImF&^EX]3oT#Y,A/$;Amotr3`d<dMNSgHYkih7u<sE!J6C4/2n4-G3
%+LE&Q?juooOq%rEbVbHM@F1;C"6Z77..X3DbHT)HVVVLX[_H;XSd)I26pk#V0o]#[R6VFHI:**YJ$aA[LbsFU8]2505_M$!(Qu(u
%WtaUZpl;]+)q4U'f6GVn8CWc4;$K4g)H.546o_lT)@hAoLlTDXO<ma_bf2>M-5c_L9L\T\)j?A016G@UAmEsX4^o'F8`d%VRtS]&
%iam,D/WjX3;S6iI_*F`.#"6JaaH-RZUM>Ri(?'dCJniqCUBih["4:Va9>DEO*Ql>9pte]?#fMQ4cOrJlMd[l+8@)$UjoY#>g!LL(
%N0o4K3tpA;f8.BK)=M8!GZqALUuC9!X"D0u?Rsc;c:f'7?=GTk&I:=_"dKR^8PHomTujt\1qJ/nL05UhH!1oDKW67D)O'Y34CW*F
%O9@`fU,Ae@5WNJH/]il5:/Q,@V#sU@\cs61kX.os.>V+d_4?-do>iYN@8YPpeRiJ?T*h-\j/CpjVl&HRM&'-LO#NkR(.R()aUp:6
%;fn1O<FSWu**6**$#o^7/p'A"!?GHia:C==;tupqPtm8F11%tP"&ud*!"CFlYD>;n@aD63*eTan)Q.%Q8*V+5jjYQE2$G>T+LQlX
%9sJh6.V(=e@nHn2"_n]5)rbh@W[_8bn22-&c-T%9^a)H!]J7CQTpQuJ%:b6KJ5V<O$NYk)e1,_#T#0$W8fn15k#r-G`au_O6Wr,=
%j`>!+S7_#";/mjV`r%Dk7D)NW.=C2A7[dk/3tD7'Amij&?tfF!3-N39>CbprmdpO5_8:3C".b$\l<MlMWQF\;Fc9jndr6g86PJrE
%(&enuBp`bT_0%JE?`i(,D7^t?`(6V4*[UCdZ)#Kr_5GaY9l6_0I)?BjKHD32Ae7W$,TJGR)7iF4>_-%S!NElNPjF&0&]fcKNp$7-
%0omqk"@T:>apJH[k0g6EIDiT+Yn=Q@!"ohDA0qj4fk/Mb!OBbiiOrl3k&@&;=2Ppi1u=fjf,?GJ'1dB;\24X_[Paa=6P<J[B"L*5
%9TmY"(KD?N!_a(t#.7)Q>sT/r6e_Co:A-0#Ha_9(!$P<2EocFf=]?-=q@("qMA2k"kr5/<5%`5/i>Mt,5^@ORAVS&SP1@u,VdUqB
%NG#8gaOGhPN'JEo?9V#GD](4]ZIl&=nJEpb>qTtC)^=>*fG-[u]*RQQO>s;ARc\&\Zs4rMM)04.]Ls;rb=-sgdtl=-['X'dQmfP&
%A+.@CGL-Y6.N:nc:1K'tM?^@Tp/K&4reM2UaNmBBU-_&/A0EL-676`;D)P'EQ:Y"ZU1UQ*P39RDj'K7=Z!Xjrkq279-=<q+IAMKJ
%"-+mbMVP!+XLX%M4O'Hn7hDV9q?j!<^KLTD_3s;qW?41*?l/fJYm`RJW7"q:#(-mn"8IZ<'N6=K4#FT9PSWG`o_IhY92jj2iT7[5
%/lU"']$alW(X#Al0M1>_8(I-)F<BUIb^V4r$dCk![KD#LQ;lP1_[EIs8AmnG7oX)B_\t.TR!?l)0UpT`)UQ%G>aim`1h(nK<"-</
%WW3SC@#+rAJr9N1a0=Q1<&9Om!%2(52.VOsi7T1TE0Rni[ZI!W@'qSK$DU,qr]9TRl@aNc)/hRd8.Wcc=(.c4a?<u*^L"gNb-U5"
%?j9a7n9DI`$0&!?DS>CJP*lh]Ri44oAG\5S!<Ck/;Oep>M"DAE:V8$8@KQF6Md$=</2ZWjq!5jG\mga2!hCU(p5_dm0dgR8(sRN6
%NO;#[$F7,$6r8-qWB_:,P/;I*@=H!=9_IcNY8rdg,D#Sdj'QGr_+^&F#C\;>j<D0oP\N56bdhE*j`$,5=V=1;lq@^F9AC*;d2ZeA
%e'dTk))[K@f\E3(G#WLm-Q#Kr6`SSZV*&*.WAB[3I6!!/o!'B/RMlRMo<a_;Z#_lhG"^4SHT^ho\e]+;=ElCZVtoY;]SHIJF&BTR
%hg)hspF-VhlMnb-b+mAB(Z.ft6+ro""qstNU$Hm(:*36/j*$]:.Sn*`eO.<t?q>fcq,^mSZ;7'Y6"\u=LJ%71W7hU)h<AOGZ"-BP
%\[-o<[+Cp\bEF\eQ"L-m/U<rC-in3]:X00Pq?K54I%c&a\pYt</Pd^gFp/(Yh-(U"R[!j#B)\H0>ihufG.0B0pLipdZ[TnY'B_Ek
%:p<05q7/U+-X=9Xh.;'g@i!<?N'E7c.#<5QXP<Z#<lrU9&uk_[If1crl40hbHL4@9ZANQ!/I#<kpM5;`pm",HcP5]/1E+LS#3mi?
%7l&&5:)%\.;8,MW2I:%l-->r)9`N]^iQ%5#f$@])$X!,k_=0G0l?#-+o_o'[mn[NBX`561hU%"/*.FGWrsH:;K`5lar3Je:h"]uL
%^u,.oRXC&q,QD99Sr%\r[scQl_bpH^Y0ld]c_oSMq6s2W;-_Gd#PR4S#PdVO#5@H@A7-=i/#k)QVo*9"c'rZ:+.H:&D_]&+CcslM
%fa.WV2.cD=)4,b9aG8fT$msnJ@)uUj[3;pUddZBLrGC<sd[.qhFB#B?EVJAJ_lj&]pU@r5=.b^mi,JVqa;Fq314bm^2>Im2\OuJY
%&#])(HeS'sf#NF2eD.6<2j??;7A$-:!WQjpUm'AnHG;Z7SWE&\8Db0[M5kV`qp=i'f#KB"AU-D;O4q@rSgRT(AeeJ<<%1Kg_s-6g
%8tt=XBJ>5"8\*`KQCE$Sq-Z0&>*?5Mi@ln6^%/[CiPI-FL?4j=]j"cB#MkLKZKmggD+c]C98V/QmFZ6cnSg1%-6[Nq92-c9H]Y[A
%=&mq!)oD*08!D)g4KA4MlbUXiqO2dLL^L2G,3^0cQ@'o=s6sa75>\`HYhl8p\Bu$U/3'DWZ+smLmZ3-7&<lC_cq:q4)`q#>5?&g&
%/:R;8qL`Nq!3FWh%I@6t'LgVm>jWHD@<i+e5&U+lh6Mt-53TTflrfq0TsZp->%[.+PpU2_rET)^lMmINEjbV:>\SE:'?`PTAQ7@&
%e`,ge\c6_r>kAGsZY6pSYLh-I>eAL:I3HpcG>K`40C-MiGO30'<Ojq']'FZl]L9fWrNkLXUT">l7pJa23!eD5rTAKN_8$4]_c@U.
%4l(:rmMjX#l1%9<3Fh0.p$P+k!X(O%A^/-ZR!r@X&ackOK5.rTR`SL^?(uuq+a._%6@<5uk0B*3;MY'^[qe^WFa\q=KO5O7"*4pX
%gn1s%5aCnb6,?"^QiKW974lJ*]bEbLA<9_c#PLfFWc$/33?U/[dpYptn)X_@+ntG^UYWU>RO3O%_^ut>7FU^>m%[,m>'rL.\NUp@
%VVbF2Y(poM2+FD9U-D"h+G@P-jaM?tf:&[;mC%fB^14YODpVQ[R"u:K#A2Xq>C`@*r2gp.maN'^f%>6b-SC5_^7'uWBfN,\d9r=[
%e]XBFB]P+8JRidZB$^*0[rE@A@C::\@ni@pk:jNh9T"uD%)T`$VRbKcR<EYNV<#$ZOF*XGW^V5FhGegt&q.=^ifA<'X*phR+#_@2
%$)]LhE2GGR9OE*Xg+.,U7T%T3-u"^mrS46CDO.jg*lX++0:7o+oOol9_f@%nU.)Oskmnagn[88l`R6JYp7=.*<eI_FjXNRVQn.*\
%3\%u%N;,7H\+GI8`g^0ld*LA#dTUW<@Yqi/.^;TmdOV)En8aB1>41t!B!2lKTV<>])DN9Q=^K4*ja6)dB097%>_%jDq<>C!bXlPh
%*<(0k<2g3S@Eose.g<h]i*B&a+6(?V\prB.fKQmO[!/,.DRA6u05bai3e:\(`PZ4.Tj+QVO<NBsU+_IB@[$.gZD(d.PXh@oIg@O!
%h/<^foj/Zh@Y7N6p@FHeYRHJ%fG]]tqkVlS3p]msrCVjI,qR)@WqOKVAf1tNg0L&s."'\+(jqcuXL4i]'KXYH!uEU]b6h:opjQq@
%[JIDhm*Bpn$\pJSTjdc(jD[)9OdEha:j3Up4lO%q\E,GH24l^<leW!+T=;1HFjPp''9(be9-k.SE.utPcrOH-S?\$bO?TcI?%Vg=
%G`^-P<dR];0m)URk$Ppl1W@l-:L^a"E7>`7bgL-/qt&G:GEdmZ!LJqnFEnmbLL"Vh_-0`k&&cFsWhIEX9jN]&9Sls]0'j:peG-2?
%A^^j[\AC-3l&(9Mc0HHolcJ]Mf"Ot\h#g)+_cht$VG=<OeiqW&_#E0\d&g96(L3i*?p=G[-=%2X$#>NuQ18AkOiNZg7:_SCqIljM
%@WA_ZhrE]JD0T1[][:-s=f:S#e_W+E];\lk[,WWb3e/p!mWLlZj;W3QFn2Y>ro_=MEjftl$UK8MSSPs^YJ0?/BKQ'`+(Pp!U<%>/
%[%*=B/eq!5r(2Uif=BDk++0a]5'8lc?]trUfW6k,b_,^bNlG`S-F@jX@k5uc=jcbId]1Wj\n6gDMmiN+38`7m[J-_5^HuEmjER'8
%i40R<Prq'c\a"(Qi.F3u$?:&QUY9DJeR2%mQ2CN2CJaVEVc$Qk5@3Ian<27Los6D["h0<EruQc`)'UrY^Yg_lRiaj$+(s;HM:<_[
%TYt5?RsnD43r#ep\A!oR6VbBlW!B.a!bMe^MsWEgD3\o0;>l[o]-<!6ASZn*72?h3i(`c=Vi-Flk!DL/?S!\\>SL0j.VQD5'2M$1
%U``H.IT!Q-?KPuh$-WF9]nqRVeOYbRcl#Bkc5:&W+D$i3\WW5p7r`mtP=fq.9/)d<-sbh-(\![,=7ZU.oTF=@Vb+1j*dtM5Aa;R=
%:=+`]-d,L*QF#:$&&0Z4Es+,eBNuY+"4>;MN]ZVO`"W*p&tX(RlVfo#i-")DjbKTsjUe.p2`H+q'bBJB=jG40/]I;,oi#g=g+]G(
%R5qJhT\(n.Dd$OAZD6tD$e@H,hbOJA_p:!O6kFU8&%nmCRBku@je&paqPNq*,A*Wh]ns;?"V6qmJs2UE5@JH7D7XShCoWj_4Ohn4
%Y\fB&\leS$rOJnII[#<OhsKjSfm)Jk8E@s0URcM3E>gg!'5)dokXP%HQ%R9@<ZsIXgA04<ht4eA[$;0iT+$5Hm5MdEr0m<U2qD(.
%rm9%"1omZ)\\`:15L>Bs8rbM67JO)J_QTf#p=/HGLU@NbZ_HodPP'?a;6Y`XeE$;OHPerJYLD+YC\@0&^F&/[>1O@6ppImFQgUnY
%ppE_$;u221KFaakCj\=@T>*8A;g8P^QCs`GoiPrB^2.2VQ-9-6cC#*52UAUR0%1l.iqSd8<O8sRkSQKO7J\m6WK5p+lP4l.k$E8h
%6hm>`Ige1d[43Etb"#qADG9FX"nJ)$e';muSdeo78kE.,DeGuIR!c3K+fFAJo2Ot&]U$m?2^G&?kUBS9h0R.#edp?;a&Df%W(-ED
%Tm<)X81NP98_HK,<6D@-C^I;sioP*n"c'.R,\'@3-7_ORm\QF<RZ=k']+JgRTK<(--5rfOWaSZ]7d$?F?,*P&J3&5rUikaPJ63iM
%7kiHcj(Emdg/d0t/Y&QP$iG$ikod&>e"eXSHb0-"()-GkGP@H'bM$8VSVm^e_C-+6^->,n]:GKtE,`FoT71=Sl-<=H1\lLO::iL.
%BsrQiL+U#.:^_I';nYJ<RbuC4()T-9?>%tR#@!>Gl%tdThlCLSge%L(afEnUDnj7Q8&tVMmUW,]<9bQBV2CbaI\tr&iGfX8pUD0c
%f#N,@m_4fZ-b%CX3q;6"7+$;kimeH$Vhr=]5p9;A2Q*P7]0HJ\o.?,c)A`q;_qO'11mdVW]5kK`Y#R;15&SH@;>!bEFGqR]Pa..O
%kkenP.SfrE83/+Up/Bs!)G+Pl.k*V">KJdtO)d.,HFc1"Z0%#E7a1e"57eU*rW%2Yrfu3RS)9jO;1Np^)8C[iBS)VSQkL7lGZsWm
%cYhY=)dC;d0fu"5-t5eekR#!-ntCUer5NWKh+2Q+DX.!q'Ud_uoWJCi[et^$m$W?'MH'Lh)G"jeVkBauXD\FBrm5!G_&pr;#QB_C
%7*Ha`=@rBKYFi#sdDt%35?<VqrUFKHa"R)10Dsg3X8D"oACW>/YF&Z+DBJ]-B&M@GM(^*gSii;:7UA+EDdE12rJ<#;l0dF8hIuoE
%h4oROms:nr:\Mb`5J=Ieok,<I0E,3q[-Gu0^F/sbCVr[B@::#B+%N4Xs%.M'`IG<4$2`&$m*L5Z8[\N9_c+O(-/;i&YGZ:hrnG8$
%c@>l"e&#uDDm)"to0rE$s&r;ZrKZ]lU;(k5>kL$j]-mU/TKMagK#3)R[rqH5*u&2]rqG^&]77+8*N]#HbL;`l0R^MF9F$/"U"8V]
%8gL_jX@1*EY:IJ(3O'cdV`j6U7=EoO>1([I6S""qro;/hH?ji`3P'QEag<[Y/,A@<A``FGYe+rHGYhKke4u9obO.fKj_AgA>.G<>
%TuU,VA`]cPIp&cCT^,),:g.R?5m+g9n7cHYXrh+3PP$FA==K82"$pM%'aV9!2h>Y)*<\e+:(O9h3>0\cj`+]*2:2[T0Al1"fs@G?
%i1MLZ""-$uS\Y']Kb>fIm6h&#Jae!DaV_/`b3.k`T\_6n!cQNW)fubW?Y3JmEA5pJ>q,+t<nB8dc.0o,IVVqS*5AVUri=nUnbD[h
%\pHR3Y@b*"qW`X%MQWO?DUd4[c10*E9l+TpoeCoD^09A#4KLG9O'AZUfC<s*38'@pq%M3tk[lDkHZl\1RBAcWM.brL)OmNHCYNL<
%h6jW:.'DsH/m<%ga#i7fU)$D)h5s@gf:KUFpU/^ZS#sB;]Ul;9)qA9A?RmYCohOlu(^p%l5t,!L"Ll[qLL@EY$:-VeI<L#Y4MC.S
%K;IMg:@S6l^Ci(*D'di9Wt3$qp*LQF7`.1N_=:6A4^*p(Xt/+"Z1Z%(ic.,04AaT>$cUirq;^o"qFs%.>^r?R:=gHO0!a=q3IFu%
%FHV!L%G,fJr1R61\.(0FD2!/ioLUHt:Y^\"5t?Z%rF.JQpfO\RC.H1*:cBu1cm4%P&meAcX5S:MEZWe,:3OO%cf8,Ps#iFRT>s"#
%nEj*8-N#po+,AU_-0uuVhUU/9[Hr6N,8PY4Cp9i(qo7KDdb-UA=6geA_*NA,DGYi>!4VH;UXO[<fU*(R*[9Q^o-kmJK9o-g@&4LX
%^']k@fk.Z3\N.>D7ER.@[E.+%*fE]m/iDj)1\;;NDbBiCZd%n$i*eE#cF5_?eT#!gmce!5XM2ifc!I5f'4'jh3mm0FDBu6!78qU`
%g&"M9\D%igYLQ-'qYGGX)XYHq>L@0V?AM%u&#V,tXE7soee#HM*FFS>@b3!^X0M6ceNp9`eF1CYNo]SPo^]:#f4tCESs^W^`sZ)b
%3IZI#oGe*Z<9*H1cP7T;8o4t,<M1T'WTCd31cZ'Pf?NZA:q;ZfTar0%CPSSskXH94_JsRn(iG1cA`6V$)JG:9&MjNoIrKigXhD2B
%P-hP:O`gu?Y&p1Z^6<Fn@f''*?IYeFPJFaLc5-:4;o5_Y7X_t5caED-r+)lUjgUGNY,pCm"R&=3:GNMnB3P`n7sC(1j`Y-VU=AX4
%a3%Lj*NP=J`^D\%Zk[^JP?Chfie=U?NA^t5I<.bc)]S$)VMhV_/>%q==m<6e_CFA<Qb=>^6#GXZ@@@e2jjCs459Jctf=OpNX,R<&
%g:2mWk-T*&D]]r-p#A_LdI28mB6sG7q.9a:8]d(Za6,oQGWdl9Eij3=[D!!2YA\>sD7&aa[^P`WISaBuqce:;eo7Zqg;uZ?M:LYS
%+JE?>o8.:,I@M]sT2$$,S"oYpUb(;;$_`*^S]naS\'J:/_sOc/(uB^[gqW8Fp[0du],S0Ic<7\Xh0HP;4l.%tWUfK>rpaZG-X1lM
%4ZhL[gjQ^t72FMr[YM]4BJe2kgH?K=m1k@'kBl=gAp/)L//u]U@6^>WC%?SU(g?MYCVA"IjaVaEUu_)64-cl&2,cHYRmu[[^"c5`
%Dg1'd`l5<O4rt'+oQ,=CO<0F^&a1PT455iQ.HtA%;k-OA16'HUFa!G$>0CZ7ZZ5];&;t+lDHa%+nFa/UM[+I\\[9'_c<WU0;n;Tk
%mk2A(o/=lAi[lC)<ps;T.tu)ihnKo_fiOsFoDW1n%(k2B>-"7_^IQ/9"2QtB*+[AcSV,ZtDYKg5d;9qBQB$/";rR6#iRL:QF80A6
%O,h(Ul0N)m*f(dN9<G+eeocE83)k,>+7IuL?QWY+b6BB@p>dKpO7#bd?6hXDHr=3FD4Iu9+5Tc1UAt(3\"1g7QEJril!$4-5Ds4"
%eldml*mSZQ^tDk/q_;<2S`UT>m'@fL*`f/-L%ehbrEO*&"6YGdO43]ean+T1s4!EBkkW';7DT835rTU>#Rb!oioe2?T)>Hk?L.-p
%bMLq&;))Af?5<4pQ^-QO+Zq=O<urS4]sP7S3o:8Z9$Kr&Ej\cX%U>hPNjl1ZMogmX;(9o'<hFTSldOGQl#e5<Hb0T^M[FQIPA3"Y
%DXR2*Q((W\2g<FTT&+>mO\k&Gff?1k7:''']Bn!HjmMA!ddR.rG2n%PFg?3ug>!V%pN#5V#I-#?GW;"YcO[GHb3ibaVs8cUXL7L=
%+"P7b-i[*r#i.ThcF,2u<u8i>Va7;_4Y((ZGV8d[)p`A<j6@q6Fd7;6%#N\2osPT\%4d4_f1]Q<]KSPRWo_dKb%#]MH$rW*:S&BG
%e&1d89&fF>]Q.;i5-Ko'.[O06CiU!@</Y8VTfP.s/D&Ndo<!15'h5Ufog?6l*!pBYI-3\!mq*3!%Jeqqg*kb3:)f`n;JsX?I+Tta
%K.kKpGi3M^(]?bf4Pm\fFZZ?q>BpW)g)!gp&+0AL#s+r%m(@Z><d]kuhM0:mSW4<KeiMF9Ph$_e%EmSpgkFUuRu6mqb&)(+QeX4e
%HI#LgW4sB/f)*"#nZcG\$Tiu8/N+Id*QU0l<b6K%-jbUCn@\Pe3ZLQc8'oMmrjo/Eh].q`7Xd?u+!kDmf;"ZAD1<O3CDd(if1?TG
%Y/lp,H@8rMWQasOU>jn!Z_2,SnMX$_H+a&HRO@acHLf8B\j,c/lQM0A.QDtMD#U7j.JIW>dF,ub9RpMRHctL@FqlQDD%Bd4r39'H
%NQT/tB-dibg<>n,p,m_Q!0srNp3`Pb+'?.iCe<A2RkKgM2tb=9]Dd_R4t<u*j1;EVWr"-F]$FU_o8W&L4L@?HrR._?IH*(p<IEoB
%%qd]B(EUd\-/L)3nONSg(\D5+NfEk;`mc^?*V4TKL4:4;ID[[:*V=dQ>+9D.5W!_\9tY8Oh<4HY/k4Re6-"-NI2K_;1;JXEF^LX3
%<gA*h19^F&mL+b0lF*a@6htt1D'?cOr@I>PE#Rb"S,E@09`aQG_a14ap.bE)]G!0r!=)h6!A.ACmGV^4Sifqrkuu862W#B.B:Kkl
%>GJJr?e1^E\@2BJ1t(fW^X%h)Q>ZE$MOp0(og@%`Se$aF7dZcdj(5$j[T0qA,KI>C;]bKMf'W=hhRJu>^:HCKn\U!6b3>Q`W4#0J
%?9J\o_%5\RmuUeK8GM-KgudCaQmru]i;!?iGM,.aX1ha"Y[7Q;5aPiWq"apU%u1#(7V7%`q%H2!_Mk\apqnjVit"K=J[iMe^C3T&
%oOf-BXIB$]nuipDNQ'\V^3obB#>V#k+?pjTqj*pX]X6dock8NG[+34!*WTR9nUaP-Zl$cYr*GmoE)$W9aX'jJ9,!@lc-6&?dgDt)
%<]s(C*HFfT)s>>+lNG=2#_6/bT%$E8Bs5r<\%?.*-bmf+0!]nUi+H[*QKU<^^4Ii>j>iP$+l.s$1:3]7V[.`Fc<TecEdMG*D>idu
%qcI)-Emj*>$GYfj\S?@Y[(IJ5aEV!=q[8m"B5Q"TH[gmX<+Jk_*AKUnN@q3Qi9*m*[Rf+b[DZM`op+Q[5Hp\e7YK]D^.NY4g"Nr`
%#`IeQ\Yet5T<E"^0-1W!+kAWSJ`1H)g@g]uO,;$2]f.U@]I!r'5Plq8k'0SqOu`AHQG29gV5g:VV*$aes&pM(Ii"4eB6!`4B-^r(
%UgKPB3D[e#:kqB-]/+WGq3C&KAZlYmLhtu8X=)0"Rn%M'&5=NBqn:Q]ZgU-$q_pn.R<CSK?=d1C3>U7>?L@3Q.XPAIO6`^cdBoq8
%F4.&%#'"lQ&B<D4Ci`NW9dZHA)p.KliA`h]QK$7c13):q=f%-*l/oh$8TJ%7(GkHLh.eh`>Aqg[F],i(%^g,%D+hLuT4HiNd`Qu[
%1Y!G7N)PMN8Lq*i!n2Nt=hRDAFk:Q)RqtGOW[qt'<APQIou4gYWg&?GJ)%*:gt#DE]9@_:DN//>89T&kRLef;)UJr@/,os?P&3>;
%BXjLT]@BH]-CL0C07#&;)U)7$PP=/3hYI\"#`p*?St"%.p_8+r'g[=1WkY[5MU=\],B6qj9q`Nd/JP2HWp3#$do'KbgSm%j(eL?:
%^>`&K<Ba?RDX:[O"^6at[G8Som7=C"dc+Pj6G0CZg8hD]mH:6J]">D[*Z[ZjVl>khn/V`F:*u!)\:i'=f2'Lf^Ui9[m$oE^>46I/
%m9,b1'(%$Hfq\'p:ek5uCH&OqgM1B\AXI#uF=.dYXJ`\aH&n$FmURo;3SY,"j>IG^<thoq%kOrcAHpJCmH`KDQ;e/Q;7jI=2&Oao
%gBc`E4KocJd77+%VE83%2&Z%tFs;`<J^\GJ]H,5n,PNGLL>`Zhe-ZqADM60TTgE*1]D6=8e+QN(R$Z-8k$E=Kd[bIc*.08)G'A"s
%;Kf7S@lAG8Z^n&.SNYG<g)*2(KsYT;"/XF92@<4i$=[]3&kgaiJuS`kp4^SIX2bRZB5c=".Jjn&2WDdG\T2tD29dUP(WQ:)m8^0J
%8Y9W7`V+ZLrFr<h$cU7ol%KfCT%37M04O!'Xk]c\q<Zk\9;_[-ie^-CXdRKl2FO4sm]33jecnm)HL\[mS1:%F*9XZeg+fLc7;FLW
%a9%Q6llr`Z?%1s(g1>RjR4(d1;Pg/1FFJ0b`-"qoRZ-!`heK.s&lcs1nnda.[ap[L\+d0pr\5i8+)J]0kHhrK)k2u^^j)HA0/%>$
%PA<ksB:llgGY3(pdC;bjFL%Nb3>.0e[Ni].CHg6-NhqErd_-?$IGX+RGU^M,QUX+[$4atA(;&qo+t'Y._lk0fG6:`$`EWii2$q^]
%$c:g'iCpSC)f(;qeR_@bQYpEuiV]?qm:grZ58W.W(lP91kgYYLcqUN^>)Rp:fep)"PIo*aI&X'Fh#<kq!9)$kK!__OcEkjX4<HcU
%-Lt=4?Ae+;^Z$i2cHos(eOD`h<OFZA(9U7'`5I;o:$OSTIiWF&h^5a;]%at@Ue7cD<G:DP@Q-!bD%=jeHn_Q`Ub3UgFf>!J9XDf3
%b>b$@gs!V8ha*1$`8(%QJYgbfLZ>:qS52%eDGf<+Ah-L>-?Z^s*IGs5;jX>9Y5["3DNf6bliM@j'GqergZ_IHfZnF(M]nFe^VAPP
%]?(,_`ML.7TealHG2@-Wb;8`?13@3(2$(O>ENXik)G(p/)kasH!AuH(]+:n#lVY\"eO[A#[gt5K..VZnqVWWd(@S.SWT(:\358@"
%e7epI,tHLf+J1EuTZ6H/pBm>&G1gP``6.[O8e1]!F3*&QEBeN-`)""^dD!+8e14aMiasUFB>\n`)UOIBPed&ONI!<H2<cVASk'[m
%lOL+9ooMIAR^\U:Noi2VR_=qlmY<eRZ;$&C.kUkV#c=lVRF;`9#!;IcOgNNn[;.%d#blB838"C/&LP"MM^.=n7^TPoK@:IM'%EB!
%%CIo`,n&tj?KnNH?IA&XY"k5p=F^U]k>7Ab'7ua9rFY'+-:3hcC3R!I1O[=GhUu'd^V=86AnJpFL0$]f3K;KQLf@]<m*N84YLK#s
%p&5"<P)Di:qt[U<V!4*!,k':\Q1G1uJreRE6f,Vq-hb%iIT]2pq>hI[SmFL+\0O?U7<Y1uA)Y9K]$?,59uA!8BJUkZZ>=g@f^ki$
%Z+K/"4jtnrG,,Wdg6j_BeF#BA9BD9QW<FK0YYdNleHfefqSCS]eF&B]HTBOdeVTC;ZGgO9Zlon(QI-da7QrE4/=EN%Ye4MX(bX/_
%4p<nW66H6_H[Wbj<9a7hT22WA9+V=b,e*_+;LPd@c'/(kl.oCs^C`i>L-sEA%j8Fjr_0ba]Eqh#1[X@lA?OX3%s$FenhJY9q8_HS
%gD>_%:q2/*RQ'4L<3sh_G`V`TkD/"da67g.0d2Xk?4RpAf(AMsH[Pa_Fq6&#;GUTlZ\;r[GuXTrG!YgiD`878/[irXm`TeG2*[K,
%280]PJ3`dRR&b+jib>hM79uU`R'&9Poo7aXj)U7aFYkrqg6gaMUL%n.GAb_.i`?P=NGa3li,7:S"1JV:M[naEQ]ER`$lpbcjjj8.
%,^B,Oj?a@+Ii,hG+`ajC6(:`H3&hs]HQqP6NYB7mh:Ur,S;4/QNp/IX*i6urF\(UNooBJC.,MBVY(Od]ELO!s&)g.W,5JI*^0#`N
%OK4=D6X)f*GGmj`^WVXIfu#bNlqe/o%j[`,"f_KPG25;1V$^;E_"JnJS4=Sn5)M?[8Tu',YiT7Wh.=h9M@H3t-Tmbd[9grBGLl%%
%B,B<iri!]3c,os(V.(:(KQ?3lpZ-rDAp`?52Z'I_2]723c$-F=\Q=lU=+8$qB1j1dTN=YZ,WR"'G642`UONY*IX/2#i$ej4NhI4Z
%G>9@oW15d\>>Va^DKnp#U`I5AK?a#)<issgE2np\OYf_o[r[Tb]+lptr3R'WkPA*k:MJ);l(#LH=5sh&<]rH8?^rL[HJJ2=9N7p6
%CT35ui\cJOedj]XZ:X1E:s_8Pb.2IHN-4m8L&,J[CJ-d&HN0bPL2LhQbU5oUes3O`HF$+),_WkL.gCMATj_IA?&]YTl%?>u9aftC
%e_'>YLPP&WOZ8BT5EqE,=?FKs[G5A7ZuU8Mh["-MTXo"`!8=OI_-C:.o.OO%$ca_E[k#f'jNU+=\CHHNgL(JM2e$utY+A:/*(7,'
%UQ&?=e)pJGTA/HrD+XH.p,+Rj==QigO`E@P8[@^D.@5st$PO4aL_^5T9RGQ,P^\EP>RF!3pWQ<p?cWG]g:d!.0t5)'#,gUn91?9W
%h2`.65(%Q<8KH]F2*R?ga(MerX_2HR//VQAE.1U(Ae"mt3(4)Oh&&p)n8-k(Nk/5?%G"6O*Lt1!h:SP0N>DEPMa056ca,/#.JNDG
%p&O;8rQ4g+F3$7J/XuW&#IDr<+GOll2Q3%E`:)Gec\D)d",6NI#sW-u"/XhD%Z=Y?cAQGlEiu!\/lZ/m@nE?]BnUQXM"$d06H02-
%_Af'C#A4!V+M#10(!I`mg(.ojqDOYNfJmfH/kZcb4SID#T<r]1XGu!F$o]k%na,5PaTd&6QW+*0olb<eqKaU#>0O_aJp5lPO=]5<
%=#[HUTl>fm*_-U"HdQ*a!,!-!M8j;8[@gS)bj+:L(YN1*\%T]T)SW#>PLlk!M;@h29QS\/-7AU^A8&@bMgBhVpBu`eqqG^%[`PAY
%mcdrNZ.30q3!EZ-1R6;C*Gd8FS>Vm7]3H"FK87KYV62baZYH3g;^>4i%X0>i[WU.pZu_^hHP+c'.]/)<rb9,+fiZ:8Dmls>j/'O.
%Cs-ON]/P*'G!C&6\_`fa&9I5KjF7/rqY_%=3r/2a)pP75(f9u3+1%[6P6LOh"$o(^Ca]73Yat0QW/cLH:?6K3T5>9L#FY;.WXA[+
%'N4nc_ndNdU:ESH.h&FFj0TC7;h_@/EAEXt]%qB?\*["4'K)bdTp$qmWHOSE(pEJbI=2`u+fXui=tbF[n9gQ@ZjIaC1b[&)?5.g9
%FO19"p'tB0ZFe$879j;D;Ro[t1G6eAI*"9!`b;0YehHVW#ime@Ve/,VCgJ0amYHWI,Ml!D/s=q594!qpbPCPl`.\]bjhOK/l_`N4
%lGM!WV(rj/"#8[;bnoltH0_M@jo1m]Q0nP<BeQcmm2r"7H,!/1fs;uWf$'+.`I@nNneOo*2bI"Mj1FYkRZ1V(U3*ohjgi:$&mNKP
%1Zm,F/[t0t$?=NXY_Sf!=RX76p#fD7gi^S1Ob:M-Hgj-=B/_@:gidpbm0YiDmQKAVm&KYNF0Pf/XE./I<'h"EdSn`4LF^?MNRA*l
%6(u\IM;mLhl#hJ-mlsR-!md'H@k`cli*-<MBJYU*6aukb@o%9daGOo_A'coXb?_=LlKqe[OOR#U]>(sY#J\/a4EF`?^)u+s-M!kJ
%g'n7ZO/OXJZh<]u$m_\^-UtJ0M<'Xm=BA"L)fV,:hbjV4/OMA/f1BlK%KgUB[(IXY</\?o.?$4Sg$Y,g9<$>!$WJ#'Jo7M$U&(:G
%8dgX.9)bWYX/^U33Z8AZT\"K^/"Ym3*q%<PK2a)f5rV(-A,W/\6JtfLc)oHN%(<PXoRBGC4ksu$bsqhCkO!s0Li]Pf&u<5="gHRY
%OK75te84\`phgi'*2'(I3&g6^-+gP^BXo+FSYQ',(P0@14f,boEg7gXF$Z&Lb(R2X7FcCg'l@cJm'4-C'rM:F+l2Mq?YAAG(T4f;
%GpQN([b'@7^"F[k5GYmP3j*0"E3Vo(>n0UVg!.B\c#TI<;]BS7]qK=q\`sNKJk3pHb3/E?K38`GrS[7"_WaI`(CWWPs2H#pBn9?)
%$Mlh#UC"tYQ8fe>Rp;bn*W[0C8!fLq4U$*n?A5QRYshqc2g4XKamEt0lup`g>:Y.RJ1/V0RBrFR8d6WJ42*Wn7>\#X8$s#A#iB%n
%Eu&[![^Jn;f.*&8l,FSh9\)pQ\'8/Mh]GX5+[)8)*C[.fi`0oeW,Did0^?ic]Be;I*k@W5U%bR0YNhXToZFE&Z4Ng\mk;fghujOC
%6t9CBbpq_h7Q0\7@BVC!k?sV9>r7GsN#2*]A.t?D3%`ZEB4FDn0i8"IKN$g&)[W%!m8N=anj_Nc%In,73aI$ia+V9/A2?m`p8MCp
%/"Kk'?!fa#le5\-+ObY8X^DFCP2*d5T<lSYgFN!/o5$;Ve+2U./t$sq!fp<mL^;GkHPMeEI0[u8A!jjoW](ua>eWpm_m_/Lj!,GO
%5EHp=d]V.JJFe,ioJ5fDg9):6lsuS8>M7l'5.9/4qaM(4UlG-HG.q]HV6-e72.`a7;l>W"R,^:Gfh#p/=k\f7Qonre@Vr?/Y53,1
%3U1-C[q`<cBhKpoS>WtrZ*]"-J(oahRA?DO+"q[.>aa_]T;F2$dnRYW[(faABJS?V0$n*Yk/$G0oEJq-.[94"RU]RJH(',HH=Rar
%q_gS(?@uV^49ZY[XauAAQo`!NS9C)G?"kU?Hq#LZFom<bh0@A<8En_FYZX>%S.`9VL9<ood4;oE?-7&lj43PA]An!*h`SjNJo)J:
%8ZhA-I7/L!JkXcL#<l2"ROT:!i4<^q%OiQHE4T-P>>]l@P]$bNA2kOS]rgC;`h8lL^27/,mYTdP.0%Gm$4h'PZ8p#kIb8m/4@os%
%<>JWaVr;T!lQ9G$-t&ZA@paa>E11,=Y$Sff7ITk\>.Kcj/f&+bD`1Ojm!+/r+.)_F+G((hoX-8s41&5F_"F0bAZN/$I;7XC>jQ&]
%7,^A_T\`1Ua;:7FZ51\+Fu)'5DL`j849kAMj0XhfF+1kaE07r"6"dWdBOd"$jsm3tlDR9MfD"K&*7QCcD'`-K%8+B3,V9B]Dgl:K
%=+5SP9_J/XkP<`VPCu9mQp("!":%5nnX&FW@H$.-D;AMu?o7PhkrSsaR<mma^]ZCgIpqR"d@KH5>Ci\*m93DIQUpO$@Y")>2F3X$
%j'6a$!1LJ+%TeXjgr$/>]YR,WE'(k*IdB'pC/lX;V=t\Xd@fJLd+ObjqZ*(5$-V[Xj*5j-F[eaihI,\fb-c"IjIA'd)u8t-h>o8g
%Hel$?M$7+CEA-_'<Ro!-hnCi:pKW1&mWZ8&8ZXt?p6Y6>2@GPGUW2MGk.[J*I`I5IWOf;08M!+,@l3d[fpOd!fC2d@*7.KaVdsN5
%k"l!iIA5odDp@e1A'U6pO70(S4fSAOY7QumM.,:5T88UJ9btEtF`j&TipbAL:n!G2G_+jUp:]XFkR5*WT#*_$^\m`-.=N\l]AA8b
%#l"D(_K:doh,XqQdHT2+6.Js6;E__]NfVIA6,VlJ'iAO'Ih5_d?R!8`'u(d*V`0/)iY)LQWUJe;nC;u>+"r-?QR#,sR'l@?6@7@P
%jQdsgN!Z4e!)uj*Jh/E9d9n[D++TDeJfGF=KD@p+`FO?Y3sm"KF@/rS<?NX;@]G5LQ,O/!J9!D/V_#srP%+27ZHpm,MQS^f^fY\$
%G35]P)(GVT"=btBJGFVJN).p'#a&VK,YL<gMMX)G,o\QVB*^!h*kDX0W_c!86!uF_'d8GH',2jl$SbqOTV<p70`srOo`/bpL.7qq
%Y/^rVU^gCW!AtQ#3\l6JJ>nM&728gRH!iCe&P-:X)F>`8&I9Za*=\l3q_IfGK)Pb3)A=t3$HYsEdR$H'Q/TXJ5T^k5TF-S;df9He
%j:I0I\rR_Z/5D'21h;252&SS'XWpZkOkRBB'k<tuZ_Rm%8@p#ATE,Kl$[@L_<J'+9R'IbH"[l&sFeC*UP7.S(&j[AKWsoUY*!0ZD
%S44OYcicNX4U+$Aq=L&inBLL%XD:'^@(3(jmsc8Z&n1V>RZOJB!/J]H%KQ8AZrkhn%^8SDGX+N#M2I0)P8+u_@ke;B&:9Co5V3#j
%`.<eB)(/I<`XQP,i8p>d;\^%P8WXMM)CCUR&p4Y"$R6J3U5B-`(^8=f?&7^E5nAMk9EVR;L_4#&6X\EU,`4RT=;4kETqP&nO,BUj
%E$QGfaWeS9@")D"l3>U%P'M1=L`*uLLm/e[lG4hj"ACWrW^uV0Te+#-"sZCI!\+2.&b9%0B>C(ROsgEgLST_\"sneB,m.cfO]RVO
%&l_q`<s2OTH$'=>)UK8h4j8G8Hn.KMP(DtrMBF[i3.Ms,>r?S)5dSCr,1(]>=@Y+Y=H:MERo(%N(eB]A.44"aa?UqL6V^Sh?u-Ya
%FY8RZ#R*u7U*I3+UnO^f[j.LnRMsYBJ6WRtJ-=fW5ugI7WP!9p[fM9c(c7@Gnt6'%8OPNQ)4[W70NB85LaYqRB,[:A):)NLI)@lo
%$3cg"6;^_uOd0oGd&!BX,H3pY)0H*_B2VFT:qN\2.O80[N!`5^GVBu=+B*EI-(5PQ8kiAq!bpjH\@RJb6')M;M`9i6"+*@7V4bs3
%(ecCj$l']G<GUeRY^g,[>X8EU&Z5Zk"QV`NK!/QZJ4]MK]S%us6OBP2@o?'"OiU56GN;?<,h1s+('Pl0AJ-#?Ul8^.];G)CJ[o3.
%.dD<pGQF^G<ok/#<>X2-ZpH5K$"tb&)+k-W<ab(7g5$ADkU<Ye'P6DTFTLUL!4`3_-"4Yh7S"=,("A9g7i`"tA>%4,1a&KDe<X&j
%+K3jZ(e[QNORO[#&o'B+!rn(FWG!OXkUg4#d(j27:uJ!H"sY:a$?CZ6Tctl+"W5GbbVn'2'$@h>?r3biMRWXWPYf8J[KDgrIAjG.
%=Yo@n+t#K\XD8$JM#7G*$p#I>)ds&!*ip-'&qH[1dq=2r!Bi^HMQ!L3Qi\*aQr?CR"9Sa0#Y>.5!%Y&E6q/(r8+d0>#h"G*U@(ik
%Q?=4TR1(DH6ldj*i!r3dIM@2<$p.F*TRR!t%=/[m#$'/!i-G(t/7bE'!AY1c*BjHmW&XlFs54./5)Mo1"mSVj]oK#q1dJ*34p+KJ
%$3S^A'Z%r-J5AOI-l([Z!;8Z-F:LRl+D7BE!,iE'@(_YWk#t-["jR>A+35*26\/W9*.0IR<NsJ^_Jh1Q%*UE()MkR&%Zh4C$KauK
%&6UpT'')k3h%,GI1SJeA"UQNLFp:\F?O%h[VEC`K6q;BeA/-!p6)3Z_b(1&8!IW+r"Xm2B6R_F-GQ:]>@]2*p"@Eh/,`n2=@5&%g
%-:A`-,g.ZoMhZ*T'LZPu:f;EV$i7rGToeRE>#C.O"\cW[_Xp>-Yi.hci(6m$L`<XS$9fA3F^6/V!YU@RJmaY4MO?bX#*M61:<H8k
%r$\Kl*9[opK*EpIYXajNBF[]\!`a208:Q34`$Q#s5:H`_79%tH&k%_[;c#hBH:?100Eo!U,4MF^C^8c7ki/<n.A4YioE3;;UW,_8
%^4:)HFC8uCjE(\ULPUtJ6H2lS'8:=r`d8:pf#RofeH[CY@+7ONRS`c)P"Pi@1Ih4or&\FjUk4=JQR\c$;$<06%+%Sn80%\/.@O]1
%*fs(F/5T'=DEoT-<&:\9!CnPHC*&alEaF9p)N#^=!E5Qe-=&@V/cfB#g_P]:@rbjD!G,T'88!Noiu/5g"Odp#"Xd?W'UN3Xa2>S<
%o[g&qFFA]`^e^#JaNb'Cd3D(V9E\t&.?aSDA42Vk"F:6Z3m\sZf-6!1kL@:[!f<_p"]#Nm/"%!3S4-$/EsBjaKAaSMFe!d\SSnNk
%",Oe0`Y2.!AlCR@=B#?%$0iD%BZ4C>4s[ZaOq7VB+PO,>?KkE\T7P?Si1m#P@Q4gqM_sKA;NQ\:WX+\.:c;9F8*)@uf*sbZV&4S4
%%=0<T"3ma:b75F'g^G8,C5\N0fAM[?fR`R$!XV(HJ3dikV8;<pTSA((<l*uf6gG1f=q('4`]skl0IYJe^YH^2X:02I^s*"K#Ik'L
%$%uFedCC!V1"t("1;Kh6@DE`n+#NJQ$I]G$0NfY0(_8h24n/K5"q9N"m[o*&<"r5MW%h:##!YE_L5:EoAg40W'OI=tTPNJ1+q1Co
%*>q=J:i?G%5nFH%1!,3\TOd;U#lu@tM:1o/$&.RQErtLS#7sm(2ZY)[/i&%BkgesabJYnd!M)IYC8da:6N/?!'H%`&+c9Zn&Q(l?
%78;iaY7Wu!?AtU@@M&HONb(0tJMpD_K>A"/$BQ;g$0D>DaTg^JXsq0p!q$98>I?!^Or4g08OP*P6?H+4<_IMIR7JIdOsQ60]#h=r
%Cl8_X%h"*l"[a(O[B.dJS$boi1^4B(FO]^o$ipQPK[n:_?Q94Obn(_C./66d@%p2CM5H*F"sQIQ3(jJ["8^a@fbJ?0"h^L$aSsmi
%!`?mO2`BP@`s!])M+aX4N'k[:#\g(rD'2.j50:Sm^lLZ\9aaA/)[4Gk$is%!>\u(VZYI$G,/0dC7Td^4#iH=!]>rI!%7Lha3-#>(
%Fp$2M<^m!.=Tg^;S9bjed,?ln="EmUE@enK@6+G>N<'Y!p.Hbq5YoG!G8n[j(u9bW"jJBmA..eY(5sdd=AoAj3Hn>RWFSV,:!Rm!
%T`kck`p<jW(Jp:iH>:cb8O3G4(RW*6jX?:1m&Fm<GW:\>):GT];1oOt>n,*RD.84`!/Oa=lf"%8BI6a]aopF?)a"3YA9*tueHo86
%>6T4QRk4uU7WUN!TQ^bs9TsHT"fq]Pl4Fks2,&%A4YX7tfUTRb$*0Ms;In];.7f'LD/l_"$S;OqCQXAf"t2#h$55907\r-_GL91B
%k_]P=YTI+(:l_j&6(04n&5As2O@1B\DkT-&9OS!b)Wk$96k5Ca:/`#N;sm:VF[>"`N<`N%4>Xf1V@!Mme@A>JU(3bCGYi!sLM5s`
%J8fgV%,K;cJU'$6=Z4WY!4%Emb,^/.C8NooVF&g$N]Vn`<*`#?Sp4/R1a@umL27`kSEMRR1aXo`\tk\r<RGm9A/El#"&$kbP.I]`
%0Z"/S\Y+c8U'Qrp>Fas5RUpG9EI,Fq0^b"q9IN`&EA5C-jQ-^_e.]ng4c(kX];5Lk9sY5/Y%$ga)F\jT2^M(_EM<jR,<BlA%J4h#
%*<hC[A@o:K;;Z&F..KTPZXP\rJBeM`!AP/m+;nH4P9)c^X!J7@\\AJ(-U[nH?slf1hB%EXL'^dU<2hc*8PpW7Y$j(!`sD[=`/#%^
%(Wk&Ec"pj`;ap4!6hf+bk8;%(B[3N,kTNKpe0IcpbSH?DSIp^;4!pa3.gZPh$cK;L)u*bboJ)US;FtiO,g&5W$D&4<L<2-kMugEr
%:*g(ni&k/B)k:J-oP#$r,pJ9DCtAm2B2%=F!U&7rHAo.p^n=48RFbIR)@UonU1X'Mj$[Y;2$Gdo=DDMRaPd33o&*pWeL[+SD*tuT
%^s`q%!gacA5.];TR):asfYE55[5kWh&C9o4+2gH?5m3<bG-s9d[HWDg5>^@a^cW<m^5"t@:)+KEKE6TBjYrj&N:A"-4<jV:,,Q,I
%75:@m4A$J8joR7r_e=e[%RgPdNB.YMFp_tFe4PlrGstD>@'kK-+l3o%:$,)")Q7Ss4&PneAI;*\atBR-2&n?g83l,?ArP@Vo_99#
%R#l>Jfci#Z!(=X?)'KpD2(db-]")X.8flM5V'mM0n3MT!UI,PtlBo<5I$d$hR"/TL=#Uq.0_(4:$6CbB!=VptFs405U`LAm@R(;N
%,69ia`#>tk"pu>pn!Mkkb9FNto.6pl!G3HW,'n5/;:-hcbQSK0nK-'o!#>a,BT07*TVl?-KG&5Y.%NmZ9:A3#)%=2Yb1L0(;rS02
%MS^3cka9,<IXqAs%Uh%fMW5CmE?sBc7(X)U*%oeR%[:="I3>/^8@&]F$`K/+.R>KY[%X20FX@^R9@5^e<1nhnX("UGU5f^\,h>?i
%LM;i0Ph)6*ba%IV`&gtm3DALbp7deTN!g;(<QhldL:Vnl.]QlMVBAVnE_q=;5O*-F`FsSR2+83sU,Qh$b4*Gb+cKik5m\8S/h=6L
%"UZU,.@UGi>bifL@F?H*CSD6Har(Wk!e+*'q12]gPMVO7_d5W=.?k)C)A;;^UZ>;RKGRK5:uG**FV#8X=Yi/N-0^(86IG>M:`n[%
%K$`cmJ9^W)+blu9E(((7+9@AQBMs),JkLqIN%^6LBZ%om@;R$1^iCAZ=A3i3+;#sB(dau=!!aGPJcrYe6[_<U:$)p!-5\0K@^n%)
%0!c/'<N]GkUf.1%N#5V\@LT=N+#Ea=V",D'Ht7gWfKEUkdU!WT@L`Q)3`8RH$N+I!8Lgl\&;:^rcrs,%S6P>HQVgQ"-lO@:3pJ65
%FOYjO[*H]K%*luR!oJh(\]!P:\dkD(_)X4EN6BFM^Q<Dt6rW&pj+-H"^l>jM#p<KTV:7RRhMA96Ure!u1Q'?\P0$#tq%)D/.c>lW
%>bakYHNBD,UmbK4&-ST`'Q>(DfH5735UmM8.3r("6't1d)Qa:e*$X(=+h7+fT6V$N,Yf^^/*Bn$:)$C]fi<S6<(#cXBCPL$N27@.
%;hiIbW/Cg_kGEVUW"57Vi`@BQ8HdX#3l`"d0]+W8,Cr0L?48\3-sidu;@qu4\X('rNCJl-+k$O"&@uR:9a%G%THM[:nMMSZ<g>Hr
%$pu-Z*uBkM9[TQK8J*,pE/k(O#QL&K-S\lXj%K2%0Nm!R%Q"m(%FBXJ-%_&TjMM-eN=VKU19ug!/j0d=Tn8#M$+X?3>*rHH:V`GL
%AW7Rl#5,-dRg2o`9,Hed[*%U)8<!-hOe-A+Xo5!$adAQoMu`Lq8E3U:<Pb1*(`Gj^Qfl6qd-!+)$C<ua\QiO`5"gPK>"s*mE<SZS
%p7m$K\AX#+KuRdT#,G@`H%$cI!%o!q$r/"F>0N@C+r<%_!7Gif*L^I>:Z?uEdLrLupK0Zi;5X:0,3J>>>$3RZ_(5lK(A+XN6cs"^
%TPJee5Td^0L]p5=+@`M$SH2uOTdJ?]Fa1D@Ug^oEcn_Y^)10KL%ET;C5l\p"AC+=D+UIoUQrUM*)^-CT>\"M50=9]tY^lB`Xe+I2
%$oH-W&0;WHd)1]lpAr&!cq:16)V:e$Q81:`B[:Zm&g4^6$cWVr!X`pUat[cZ0#9tV"+>3DFp)2F)HRd'0$3=I;]#MO-__mUr<'VK
%hOk6Blh\]l,,6.]89#:G/;2[g)7/oQY:CRIXb]S/dsU`gl8i+2^mu="aS.ZEX!EiSjicu"Ll5t-^8R'0Ra)_P79kb0JfR_P^R1N<
%B+C-\!h!ALbP$lF."t]U'u&is61YXf(%aq.'8D67pp?*:o#J,dKXT*d_$/_Y;'.9b@55OtER]-F,mAAb["O,K++4N39kC3`KM[8?
%.&Ie0:Eu'47/Xi5UoYs/3EfWWO<g5$=i5qrh1S*(jCX[!,:<J88<?tR`<%J<V\Bc62BsB-ENp[E]1;Ws$s`WA\^gg>8PA;uJ;+9"
%L.ghk1ukM`8LK(nn\$6YQ67mLRfKAE^i84p\_RD17\1:]Ipo_JV..l4(BdqkTRKor3C1aN1/Gbr^FCQHcq5DpU*u-29'"@?I!l9a
%M%XFS71PJKF*16sn;5eP<WGs!U%V<FhOrTt@RX84n/WYVmG]f;K,3BF^/[b"9d1]DACpm8;*7R(Le^*u64Ic!Da=ViM&)>4S8W*R
%P_3X8%R!;8V1g$G_<*?Ve4]#,,LeEo]93SD4UAM6Bs]FA@@>26_3G5LbR`Wd/nXKZ_E\k:153FLYWo8eMn$:9BX\7"2tI=g0nG-a
%5Xu%`e0K&pD@$m`bS#KdUdP6H)*JG#2Sp1p"W:>e7iE1XJ_D=8,f(2t!EZaL'+=4U6dHOWZ_1V+6j+JQGQI$2TT]T":;R0'BI62A
%g:6*,6Gul_YL%Ysq._GI'a*c_#h)fhj@/DKe?^Kr=TBbdG[hRX0o;nsV[CZc-rmWJRLab<h'aa*]W&D)J8<rY,H.V][P1GhE,AY:
%5d49QL+a\pj+?d\17!_.QU6$h<-3OBVo'=mF@.0?#<JWEBXg-^Fss&&L)(2%PY'u8kX"dY;%QSY';>e$*K*7bBI3k0)]^(q7.l+m
%s1bs_l*VftY4Glus2169O9Bd.nl;)lO//'M(a*5([U@DaigQMH\4NGag!IKXI:#D1F7)3Y=`_qPLq@HkWiUTdA$$JW`g!#:jW)1\
%R;P`sS&9LE#b9ZtW4XRA3qUbCbU<[Rj^HhnS9jm\rau.c3<C&_=]OkVo8+51h7p165H`";:!:lks742eDf^KJEc&`g^9\#7./JTn
%'TP-D:cFC<eor/?cUYI<#>s!B=,G+%`2qn2_D!dmC:gC1%7F)V%JR3<.(9T^7a"W7h<lZBo9Kj3$oZj4Gh7"HiLf,*>QN2\;>Nib
%D(b`Y7b\K@jdChe<\+r_RpOA7524A(.d2!UqA;QB!.?h;"8'N(N0<>=J9$hFSKGNi-LC9pRYK[pVO>7F'q&fI5/:<eGf7WGCDfrT
%0bg9;lAUtG!:'8FJrCc.YGW8.Tqf'a40o`aGL46N$U_c(4R^EYB7om..A,Y!3WnfI4)6QKQiNO-mt9!#Y5;I1WSZGC8/H(5O$CT9
%_W;nMXC5/<k_S^L04ME7:ARi8&g'>1$78XqcU@hpIVu0W\r8XSL\]Uf`cEuU,R4"9+*\Uel'GL<Eoa)L.cp[.s1^-L.3pB,l,A=$
%JX7UHNHanK^O>MWN:4_%J7.`^K&5%aT!o3U\=*,`#_Sf+rJ\7$Z1V(>LOoWILA;hW$,7`A3_"!h:R#8'91Yp<_K**A3mDKPJH3h"
%XNYatJW>V9jf/g+ijbM):EsegP+=2]-)Ck[!&5l\AtGucPMqE:JSOnFNN'8/3i:/!dC/>n(I3!3!R1h%g+7&KCFut0E[,l&1D"2;
%^kW3&,I('mncl7ATVG!UQ%G8<J0AO"jS<iteCBC'3A17#=^hV\MHdC8<l;8I\D@I>q-:U%f0-8BM>81(h_KX%mV*sol/RQ$(neoH
%3tKW^X6Tm&[g4>c(,]0`S&8/Rp<>MdjQpmKqP?OZeK@uJ[Di7U%tlAF3#ed^NSaj1;n2Z7kG<Ie2i60%Du;Nj5<,pJ,Pf8Fdh:;X
%SB9$)lc!Br`+oc(7`J9WW]3C_O1umoBP+4agRZ`Jo<"BX)@OWP=CqIeE#mf'EsT"SZ^!!Sh]5db/4,A06[33OMlWK+oa]a1Ym>m^
%HEM0`3dEUOn+[>Nj2VF"?!M:1)9m<LYiT8[ISH4%(>)X)4K"S//^gf_7pE0*)oD%=f_^-c,]PZ59nV!^bhD+]*o"W0nU*plU;JlZ
%:Rpus69R,Yq*JCsk\EE';bi?aEJHOWR!lT>QJf]I0bqFWnZ2r2f5L4aG<gcskadiKi>$56qs]D[IHJ-?gBNjd5e)N2-_@Sq/4KbH
%29A),`EaO2\5[cMcXFQRqpE&$bAk3>%q>&W07YAAN+(YU[;ReA]:VH"jn--0#Qa"fQH-CVIj_]Fk71Tn;b.'o<I6s)Q@"k.[)HKM
%30CO+"Z-T(fS':^7'p#ebacupkL88+#XEsf6=E,IXm&3:/G8uB[V$hDEeuoBEm?t%^mlt%VR'cA?IjRC1)Y9O%6\^T(I"n[fmh"%
%EEYKuTXpe5iXYe:4eTp%!^OTfT'>!KS7>d+GeW_aFSGB^QlhmXWtZ`h\*HK2.:0pu,]GVlQ+u-pG0b)6AoTQWfW@_+Qb/!S`5Y(T
%c!2uAEK:NO0fQpfI.VU=<KL!RX=,;#EnVS\-Z/UCgGS,2Z2o#N0lU)MiqUMr*Vkt].pM"(Y?.^,?[i.SF<-eR!Go[-WMdL%?u4<F
%FH^H#7ubijk@R=ZO2g-47EnI9+);`h[]nRtp=HP7_)!a:J'$Sn6B(P6]%c+tHTW">oAho&'c^Q)VlYn)FduA$JBsa-*Tj*fC?p7[
%"h]$6i1"]]II/&`AcdZ*HG$0Q[:/fI?EkD9c+L^->JhVRH+E&$Qs$i1%ZAA;c)E^.%b4k84C',*Y&cpQGcdLe)mj`-<Qt0!'5h%]
%&)*.XG,M]Xs6QZr8?p&L@=LkmdGlnOitq3?;T#cNM]]X&_lOqP`_knR/kMQt8>7Pr)KR@;!0qkg=RZnVN#'4%(3/B3IP>-9QC.&C
%j-76&Bff#+jGp)sCpp:.]XW!\\M:u8lX%fRMp7\"hG`;EJ:8*B%J_J,LOg3.+2CVNH6Tog8#1I>kC:j0eo#\Jrrjdg@I$um56cSp
%E/5FRbUZJh-X^%bPI:Q/@@[j^.*W4f$,sZ_8c,L3K9&]p1Z5S]rIZ0b5<e&pgL's1gOK6A3UN04D_i<uJ3TWMEc_);6\F;BlB]E0
%F-O$onKd1_2$!oN26qu:3(L91/edAd5GGZ'k4^VMoGds-T%[R=[W@8J7e4%I&WRk:k&'<B`9=Q:lL%;g?_:2.5,Z]q9I/fJmT<*^
%6:VM]]A+@"`hM)*@A!"B>(s!eC[3^'!&Ou=,I9GK7Y#Bj#l<@nkOJYc:-TM%KMEGgTO&]gf$Vh;q=U]$U7VXr,.F8NpPF@OS_!^H
%2BnU-)E1oe@^^fE:60H0\$K`B+qQk#$J!1&'LKZPbHe?@m*p>$fg%C>`D?CSHAg%Ia$EJ9'G^.IJbY6Y>dp3B7Hu/i=#El3h"l0'
%H55;34!UW<fYQG.<gpe7RNO55%`K]kkX4ccjpfS?gg5N'e;T.:e]'-+H]FU3_683CldcLhiaM:g=@$`]RB1$FkE?Rsm;uI%D5u`^
%]<_BKMfF@\FrZuCWAlL8dh;?LnE:o,>`0=7P^DK6bnlrun%5#0rV/AZ!k!G>"$TGF1QCn192@Z?@n6DNEs?^Lmi6E$*)&-Q1."00
%I;E82Y?jk?nGT-7iYgXgnahg6gO_*kj"(hBk3T8#_4!fhPJ*u8f.:]6=5-2#Q"\WnSV39HU5lQ.Me^5&ps"/1f%"rD;Hg\,YHe8p
%;ducgm)2Vr@t_B$%t8=m"Xj)5TS7j)S;Ks+&8H"&J\g,SCug:JpJ+q$9<Z@gCWFc&X;+eRB?!L!PP>`^guLOc[r#0LRS,)DHYp-N
%"__9SF*!,;A?oVq3#VhBXuQ9Sm&3'2?;<]\Z`B*),tT'aTtQfiQK-9VDJADPHRSoTX/(r.OkOkfF"hJV!J)K`.X5[tQ(Qt1CHb-%
%?#Sr[m1Z]$gheL:KI:s];EaFfq:V@RU&NgDP@AkYnXQIUj=]s+&k_2Z%$X\Wb9NngH9-rLN:&f*$\\Us&DYd"#)00IFN%9Bi[\I0
%A`0lGE<J96c&W#Ta5@:+gkqZ%Qjs)ngh/l[1St6tpSB2bR3_YM_<0/^B0aHFLPW7oN]S.(@T'kpnbtcu8fNG$(HM-Q)9Z82fUU1m
%%MLXY5$$Ge\V1[X\ZYJL<bu9r;Z2O[[)_/OW\T`[".pZKe$nEgr53/.=Wb?1=8h>RoGG%+OUZDr,G9>-T"\TH\l@9%%(XEu0-(hl
%fAlSd^q9sr9_Ao/5(V(-b`nBqo"ck*[<d'e5#=/H:54?$6Y?";EQOiB2<,sn.e0R+'9aW$Oe%;"1!6<"Y-IPW0T\RM"rpX5i.(k3
%5$Kt'GO,CFZBd?A\bbhN4@ZTY`>c^<n!;jUadoW4%a6(Z[K6TiLE+^^=^('N`,<]T8$NHYhWXcu[V81:FB#N[jA_)F0<WKMVP?ig
%/.UElr%?`[^h9s-fBW]Na,.A>OgS==kGNme+MP3l_$#,Im/?>5'b<W\+%gQ0'ZHq*@4G2/LWc$cRaK>^Ak#RFlktp'=Tnd?o!7f<
%W^&\Dns-UCJ4CnECNe+,?&9JB(Uu4FKP_+&F1ke0`E(+f<h>T'h-%j-&#$TiRMM;40Ca'F50VYhZd9"\lO#2ul_C8PkF&S0Mgo?U
%T;=5aVgD+-^2gghK_n/QRRc9s*ud:j]R2C]!O6N6gV``FIis2SGE0)DiTD7s;SJY_J^&\RJVd1ddRQ)S)Qj85ZR.\7>gjSe1\Z?i
%MGqT+[uV/E(8$K$Ye8o7@ssAVDX_ob]FNjCYkY@_J9CtCkqEXN9HD#SCi88R0b-S=_W4`JTT_m4\H6!F3"^I(;kP/6-7ElJ'XgFB
%*8`b9'K9]LarEYV\>+:C=eLhnMnlu3k/X=t9n)=^1Xs%N@/\/Kkel-5LjPS&W]FD!P0U.q9:>1C<^eX*:1d6\hhF,3SdI$Z>)ao,
%>PlcKURKWK]Km<Y;ntdh'b3>;X!r`HEHCg3Ns-3RaQYs@`g)*H!?BeH%WbR4!N:*:H\U>Tif!j;Puh;t;,TsU8d6T=S6L.eOE/8'
%6/pFVJB:`TWYjg>C-o\W843mi7.!&%'*)*7/"Uh(+m(a>H/PZgINJR9>-7]Ye'*>m(ouM=QcmL_.ccia\3$(bh@Gb_J?LFEXM3E6
%eO$>5'Yks#FHNuoSNe>Qg6l;mWniMQj)922(FTN@DSY.q^j]m4jJjpN_5cgU<JQ#i%OUZg`uMPTU*8RYEVk4X0l^8Af%@[n5D[G1
%oDSPMs)QuE_'QZP3uLV-$,N2MJ7JOQ*?Fif`h]*8HGB0@\=k9*=)6ssF',SI=m+O's(pO&5-84%NiJQc+Rc37?6'TW/S^C0NesDR
%#]Ti$RAY%%N[+?5G]?Sn1)h[%KThVOa,(Ld?coR?)gJ!V$]iEkdnX3V*71Od$$4Wj##mRu;Zf-$nH.<;A(MS_H^WPl05#pMpQcfl
%mF12Og]2r^T0;:GGI>"^hea9D*4W^ij4&//0l]#*)6lAS&8u8d*BN*Okr83?-u/mY=5mcq`XnfnF+fj'UDEYZ*E]X*Q1lei.3dKd
%@:l(DIh5QDdc@lcqU$t<q7PDV6[Yrpf7FQ?9nBJ5q;8=s<OhJ;2<OodRQOTX%-uM<W;aN;U_C[;_">-b>NVCr2sNk-.;2Q(q_=#Y
%;C6)c!ah?h7L)3fbeBI4qM0UO6lI])YCc?if,r6.[!c5\rqK@)s(YuSeWM'2?4@mY/UZ:pZLlR=AP9Ljk]LkP1@ZO\2)eVf4<qpf
%cNu[.jbEFL$rHY.;f*Z'%*%6CKsK.gat?7^RO;I[0=pnqHKq.k9lJh89GZ"G8AB#LC$m7KY7im5nmJ-p!'Em;)M2U63*--j.C7tG
%`%38R`LAD"?A](u"VPP:[n;?_2GG<B/Ui([Q?N\d8Wb:AC;pCLIb2.D3"a"`i:Dk;A8M2OILqdU'.;amWM1Zq+HkF;:8B]p>ufq*
%M[;1Z3U?T$"ItUqpi51o-$0-*KdDVRq0ar%&B&9QkXT<i2p&LXM#hEG*/]>G@P*.<ea(_C7m\GlZ";O0e["!;1kIY3/SCI2`8Tm#
%0s=9=eh!&pN\$Sg]9#;nP1WC1P<W)aJKJ6"GKa^[o#0(G"+8l`ZFE\^.TX]5lqe_)nV%UP4Dm)K[CC>b,+e0s/Tnke5$'tk\9Uu&
%TRFI10.5qQ&$B`<OCjLqr@ug!g8+nf1:$9(SBAEQEbA<L9,GE+8+3:4\%G#!8`-M&,\TbR%KaS:\]R2K"2WX3SQS<&ED:G?i$8I'
%ZdoqTTE'nnEGGRJG]I3S2*fRL+;s;s3UBkn?unF\Wd^SmDG(!^O0E9(,\+:6aWn+/OL8G>cD'(aWiX8E2`,(fA?Q9Z#XpZ6Hu+'V
%a+U\H1JQpY^aEDFd4E7q0n'BWouQPD>([!qO!b6&XmNC+.05`eX2$9(*cpD:/UslZ?2\>MTjH3AQtGtN?okPSD6c-&-?/8k^WfM^
%8GN!W36<=omW-c7J?^i8<l5QSYl->4XckKnD25R:=-rBB$H%'96sY=;^\T?mH+&P??hsNLc[Fd@]4%D70f^sTG(:$CHo-T_O!mbV
%PNIm7_!CQ$Mn/r>)p-b$+2p,>3WAltcbFqsbE.NsD$!<qD<&Za%hl8(A%"^k,m?p]dk$\o)bu^?RDRMC-_CQeg]MM$`:ND^'<OcJ
%QZW<M2&V2)^eu@Kf%-le7,#pR(U^P>6',V27D7b"RmJ008VMs)b!QJ+Vu#mFN5%d?I:Oq,"RZ+R?XdY"VRh1/&>-VD03JNpXlOQ[
%`mai`NAG=5k:qbiH0!8<;K6?P9oa^.qafYS`6)OA!KOtK<+Z8;F#K07(1f]r(:ARRi:&ql&cgeuN#9[5mca!5Ral+;J>KBL/UoK&
%0Y+Bl66bL\Tm<R@?,[477%Fmf!2A=Vn,5X+$:n=HiIs0W'69[1+2bP@c4k<j3+2)f3sEMG'rm$FE!NV/r/l()*k_fimaJt"8KAJ]
%#lil/)D8srP*#l^AN(QI6c\B(o4KK"i?egu>[d^D4WM!S[oR5n*]j8s*Gk(SXVbnDV[IjJ5Y?Y3PjF?@.)h);i,mui8F[u=8uYJd
%N9!a:Jo3]s\s=74S10$%f&M(nSFT-t-U][[&af)\SpaB!d<#>f5BI`JQcT6'f@0pIMc1h8JE2t/OZZB=b704<(R$7o7"'aKE[gVN
%Bjbul)qt14^pQNHq9bB,ar'#$p`(3Kcap;9/P],14GO*(F6T"s91l^3;S#@$%F%!_5Q6%7d1ek/WH_ALL3.2O,J;%Yq$B#QEBGcR
%O=R]E5/+QALWBAVrAU/r\bYbj5!SG&Gi*l=i.^#!rK,?fVQi?&+[mUH(X=Mh-:?auJn:Oi/VV[hWkc8SN^G6&/$J7Ig!,'BL,a-a
%.`jl$BkS*A`HBT/XGb]-rXCfHd%=OY8PU5[PF,ph9qW2dK;mGe/C**=%AKfC=@,6VP6*N:+u`W-S9ag%D,O](Oa`fpTWd\K2*App
%h#]Gjh/J<TjCGn-m*i211hE"UmRJ!E>;,LJ4LUS2/.,HRPVlNU(VD@a2A\GN/e6t&8&5P9YJ0Pu:VXsD!=U$k9]24I>+.]$4'4h@
%%^&8t;lE2:[ojGm9iB'+Y^V@0iX"ZN3,L\1A544B2o2_(F[bk6f,+g2=\%ur\`>1?!<d&I4KAHhNJ,O\N?*csI\Wn%ae_@BVAKhg
%[o(rW51q?\#Q!DKk<5dcW\C1IiGt2c%,VX,>*2.PGj?`Af_L]a<i8Ntp(Dqih'b'>8a+U>0;f(l)A=6V49YTV8DKZeG,[;ih=YG%
%NW_Ig)$u<JO;3s9SLqClFHO+!ZD6?bV,sSOV'-psW>bCt,$<=k:r@Sim2WR%4,@:@VWoaD?M-;tKga>d]_>V3j)%XCf]1kJgAA7'
%*2aO\<10CDI^3.7jUaW\-ed1LX(EC`hO]QdR.fZO,o4&=ie9g,rQ*4T9*fPf:8/f1/0_(Nb;BbdT\lHS**%,]fSmG@lCN[bXWZLA
%C=r+bAW#!CmF8=/O2mV?65#acc81#!&_aC,p<;36=cMhLW"Prum7@2;B,$_+`K^aAWAHA`cR*h=o$OI/0K8Oa1jXG^p6[VeFZU):
%cW,Ctqr>/6rn4W+"hE*N$jF2c!u?$UgBXdVE`pZi)q%a%HGB=/@Yk((hW(Yt@LF[<lPi(gp:2]$'ELk&2FluU\tX)C\&TDa*Or29
%l22&.+5=?*0#%/!7o_V^eGf<a:Hs9ql.HkYp*;W<II;sJ13C&USr)LI[NnoaAKf]!>h:2OF_9!(`;Wjl(0P*(Nq9d$7fcf;gkeuO
%T\<X@VR>3OY2HIU"m!3"&bF`P;9qR&Ws!bpF!:).QAoqG\f3DK=_5TOTNe+Y;e?*5WIFTcPIfq987-IE\N;^s4en*p!;[ON5;R%-
%6j36CP#-9%$4]Hl:HU;m&X3?t,,Y18Cg2@^(;!NXZS0)p:`>LR0VK$toMT)QmYP>SWg_&UVFH\o7M`(k%lNho!ZMi*pJJ:1H\(E"
%7gQ)q&Cge&S;0"1;l`Wid>!?"nq`X"qE_-\oFPX"JV*.Tr'Md#%/\DL)+Nb9j-h,H:'npZj7BLgWkdQ+>-Rq.)/>HiO=^S"AI_om
%(0&*B@=):NVCu)l)n$man4@F>bl$E=^]!QOU&cV[63GRlC<F_jdaPI9$BWDp?L4ZfIds[s.ffr]*7apVZ'G4H(Ol5BF,4hDZ3`)]
%3tF'1R+3d8=Z)'0T4kF/l1)>A/\3<AV!Ees$&mB7Isor3+$IeTWt"Ws(Al'c2eM;^[;*4t[o.O0Y(lgI_TkK;RNX8ch)hkU5a<RN
%h,$T"cMG\b2idUQfJ,$Zkq<']7$KdGd7WrHCaW3OYXHu:]j$o(fd-[Fp\k[aoc_l[<N+E4PNE]c8K5Z+<n7JDjgG)R_W<A0\g9E<
%dl*@C8YB$P=4d;QfVjJQpt]AiR[Lb44nfsg)^5BtGLcPq/mus.,L7r"`WdJ1VRoG]TARt](Km+7Gi.eeU?Or2s2QrLe"iA3D)\[n
%dk]REIN>lO<%tb0J;5*El>!@OCu.IAgYS*NID56@+91<$3M=[f"ZR*<mKAe':h<6F(@Kd+(r2?i1ctO)?`ZqDTLf]iS$t'd0N'(m
%KCa>A941KfNh>S5W*DQF@YBI`9FF_[-ob6rH70NaH.;BHeY8gFFe'Qq]HZ/abTR.H/Jt0sZ,3Wc2mr<KfPFo6Nli^8#]mTtIU9/Q
%U6MIZHba,!rml[%=,pZr<P-si$[!59&'g8W`:/)%j#7)?jYJZaeAkHVDi7^]Y6QG(KpleG^To;ek99_OH.p!n[l2D]?[oFP[eI[@
%Ier_=<g>817KS"1o2onD+$We#U//n3n*!mE](VN$-STQbYhhUcCQ@3Klg$b7DWW\3abGK:'f;=#.F&Eb:ZT8@&s,dh#]dC)$<r_7
%=kpU;FLUd4/SsShZB<J'@"!NS#C(ffr&?E"'p:XXHH41r5A!H0e7^d)5OkV]9.UO**P564/GeY*Z-0:$&7qoN<o0dbKaK>p.<++8
%T/)uZ7'rj.'="h"P!,UQ5!Krc:Q*43?tLKfqK:c?njWAE-@+Z`Zu(E^,L0A=rl)C2AlG3NlJ.M$_jd3j1`\I_;MZdK:4/i2bDt][
%3^ba+OM4Cu=/WF=J((<fH\DSK`HS3=T?!4aC6F"LL<21[8`"=Dnbqa>/Red^8md&^S#N7YDuBOf#:o:3bj0Q?(YF7Nf6_[hrk)<L
%G3rJZfsU(EZ(n?(n,OunS?6jDo,\U\nbUK`6#e0b>E:NP[>2<:]fl,P1K6dkdW&g\[0BFL;9[ur,B0]t>H"/*kdK82j%@b6;21jn
%O2i8o)iq.]KS%GW!;2&M4^?E6h?D)?-'qp:1A=S,f_QZRiJW:MqCJ5tlS,!!M_tV2"mm;]PbNiXN-.CP[Q$%=\j4,%fFI_Y`Xi.m
%H]B:,K;('A_Wm#]Il"I8;V()S6U>VX,Dkp4`7fd=#(;\7Q9qn<M%?jSZ<OEYX1VQVrUfecAnA:#H3q8TG'2IJat>lThA64M;<=K]
%cPh*d7'RmF`T?+"B!pmJ%Kc1!&k^ajc#ZX.^.').IFG]\VE8r*#rtG0K"aQ%GWN=AL*JnbT%K<Lm/ZRRoFq`)$)LH4>dK'PI8dkk
%q#M>P@_fEXh&Y&"<hi"gI-k=I;]]@k?YEUb1^H`R[r$'V5HN%"Kj`^#2)_4WpZ])V>X,T.Ob:S<CZHp:@9Ogu60T]l(n"n>+oiSR
%P#[LeM-1K\(,?==&(M(r$VYKf@O+W6HH_4S\"j4`h$f3>X/B>\'.Da4YXVtGf\(HXRsjOS%90%R?*2#'+)1:HN"J<i<@*HdVeUe1
%#@1ft*t#BN$QrM@&Qq634d1F2:+$_<QEI-QWVM=A)7L7qdG.80bh^[bLfA*3"<Kp/"I//EH#nk^Rt)IoS49GneX['=A;m,T@"s24
%pB2eU')J"JaRgJ'%$LEg7B>#0foh,A$J#Pd/#\.;[ZZeS1u4WI]&Y#!Q<s2I1>WFTnB\mQ$_QNumMaN&kF(#BmUSe[2X2i,p(*>G
%bfn@sDiEP^UNI'"-ftR''W8_J%De\6FB@2D<!chsq`+jeC`sTRA(KKb''OWNMEa\0=HQa2?H4@i$iZ7q%j8hmb`E#(+s2;(cP*G0
%,+gHF7'LY#2IVH_]!!6kF5/#HKm:L0"HH!nSi1nC-m&]Bh]7RjeDgH=IlJkZn2tHU5p9BT]O2JCP%hWT28V*&NtT6Up;k0Cj(\g"
%YU;:@gMP5?RplWT<Xk3&[oVo5(qPAG%3b(u#;=KT6oiRJUB_%jP7eG,1$U8PhF%55<]4C>F=6i"XL;*+l!f&ds,D>"@EGM*NhVp=
%/n(ca)mCbH^coHpFEQL?reV2B!T-kT-t'K4e?j-mF@Ik,2OBchh[k]Ehf_R^YaaAa7g5q!#9@hnT8dU-R^7ac5!"qkCcY-aNN_,j
%LdM@B%oGX="^ncu](rAB/LYrb_Bq&(\IPb,.r%6tM[WA?/%>i6GMD.tgn_X-<cYVOi#*P!;fb4E:c5hLZrr53H]A^I\+%p]^=H*;
%U;;0p$M-E5FX%oTLLC5W#M%\TKBg\c+Kh@1TCB'8=?=m,,*k]71A.bch3^.3<`c)#@6j''5cQ:J]Vs4>O^KY-mk[Mtjt38eF[;3'
%.s`+RX?XH^=ANs:Y8Xu@,[)DR81e^k"je6nI*rCENlMYXk):U.&a[5=M,P&;;i2Bl-$cV36o@d`V@ZBk"EHWK+P]9G%/e8MElJA;
%S!%e*bYVs[gsI=&7L+.!Hc]^8;(a<P@Nj`ZCcPV[;+mkkp#"']aAZ>;qF`D8*,+ose:fNoKV++C[Q1>XZ>JHFO[]Mbd)";CD0Aa?
%3q%6]M^g)>)C:?XiDc5]K(Hq)'EK_oOAmHIY!GMNb^[aR=7kA'NfE1%$LlGTY=bWXa'Rc[16t\/Cj].(Sm4ATT[+]E6C]C>.Rf`p
%I:X;+=a,eo!DgD'Bop!Q`'/$P.`g"jZUsS$-IS<ZA0MlT=-`Mm+1sO:!Bb9s?jl:3Aiu15EJ$B&<5%VEnN\3O5?;DJYjX/r"5`?8
%1^!dAQ9`'\V<BYa!^WiEMJCY4<2:4cHc$cIj<SjKHU6'R1g(94e133ugEb.D(Rs0Tc#,s,dA->k=;5Nt,k7#<p\b:HZAgFl_G<"s
%lq0CA&&O3@2Y!VDUZXZ8=ns[WU:",dcA]3Hc[*Wc=8#lcmW?8Ib%HeiX_b[dq-2;%6o^*>2&2ARS<LRCC?[O'Q5'rJT-/H)`WAh4
%8GG5jA\#orTqeDtH#asXrg2i(X?=o6s7n30KUGHj06#fc_*i*N$RRY^,usr,:[8m:oWC==SHMn)aL5$$_3+s(jZlb.=HSE'T"jZM
%\0JWTNXfJKDgcLt.m#4=8J*8MW]K'=hWI?X)=e<ARnRZ07S.]<(g2<<+/hVJ7M+.ANj:l*;bh@T[dZ/d4S5(B]F>1&YNY>r,+PX>
%(tERh$='jIe-!'Or,U;(-nq&WBK#H68Q6ZBVi;Ej]o^Ml'+.t"7gk;FY>S!1Ts+eG:VDOr`X$gRiZPQWe4O%/9B`$@;`tj;2/(f6
%4D*k2O2i:XpWJ.F9o]a`)2G"XOdWU#FHp=E-*'5k'#-kL.Y8L.\>:0s+I\$NrBbHhbQOJp">.g00S6Ztgl$L\jnOI=(sZg1di_kh
%+A>Z$OS2$%jRWc&c/@#c,\j"3JFj)9J[A`jRqt(f5XEGIii)EF-N]r6Ylrob?NIurLS;1OCtP\oc'hmNqZ<hP?F+&N_=O4D1P2r'
%`XmlAO@*g,&>p]+55N*Q>lek!)5[[%4!6Rfm$5R[]go<Z6!o6hYTJ%dB1hkBKpjq(;qSit.%.eL%#Ou-]=b,h+tN^10O$%n<#S)R
%&C%ptq\B_SC'2lB]*6XIe&]7T)oQOQ_/Ms"J-$hsc0(!VY)+rXg%,*3dPPg$L0jLQU\5nZ#X*6MFR]!B738BXjsf-,SNrEi+I:7#
%I#1a,NGM4L6;.jrmD"d>_\W4JdL6*?dV\IH4+:\/XgPQ4gr?uOX%fkpj8F;cMFONp$;O<M<sVDNC"1RRllj3Ci#e1We=[K0j4Fi!
%$eoFN=S\5#5]FqP&Z/]/iK<4W&lW'=kL!qSN.b/;FrXHp:lOtc9;fL)(lQ`@:tl25Lg'(RUC8.0b<Fdco&MYLCDf`A`=gPA_r!?:
%A)G#MZRX3+j;FiO2K?r5R+TT<AY(L.Rs;^=Ab(eRn/^GYo0H(D#_.9Wci!'pp[.rXY85*&9*3M@8ZH[jDj7X0GYh(:WC.h)nRD5j
%2El]=rNOh;<u6MNaqXq?;tX(Sp/M_D]Hj\tN%!:T;RAo2]DHnelE#jmS=.6pFssCL/sW?oOa)uMF;Ner8Erd'"[=).eRi_XEgEru
%9%7Wi+FNStO_Fo$BTZMYXX_`K%>DeBDSTWj7)@4erk;9/"n:4\$D3F:D)"B+Z(\6MrSm:Z'@?HtYb1^lNmpH2kpMQ90gCQ'J$s#r
%+D;T=-XieZVVK=KgN%YjSbll[dNsLp`pkV;qm=RDNuoHE)PMqp%=BBddSJIAcMJtq[EVK(+9;JNfmD\^\6duBB/iT@C_Pi<dJ1-`
%kOQRUOUn_K`_c!1Mr6U>g-(s7M)Tr8Mh"[U3Je^)&U'!@9qE:]47Fq5+T`(Z:ni\e4^7CGfMg,^o=2O"e>,,P:?88@Ai$$Intt(c
%(PN"_DB4N&$M5pB.:fFgUN*>^EsF,#!Y$sAM@<b%,l%PB1uF8(>=EiM"3AGm!XBiDJVHQ;Ei[GF,[SPs$$jP[JNt_;PO;>j`_3?W
%gWskaLIe2O$,NUHI]FFsYalYHosbY&4qOEn'W<j3-jY^bZK8G^"/Qf*1s3XgCUa2+=g$/5H7)K#ibu'D]Q:(;k*.H$QnANQ.57#T
%mRRB4Ah/`hZOWO:_/Fc;g6fA5#9r?6iWSmX'`q6K0-f,!T3at!l<jS?hu)k;J,]=0I/3@Urq+7grq*C4rta?rIRhB:M4aNL^&?3*
%q=@C3puCi#rpoOWmVfjfq3N3'o:Q$[><_sdDuYQQr]C,NX2"GqJ'!W`gZjZ.45c%#:i$n^UOJ"n\I^SHWa19%3>nA/>Ome2KB!mZ
%F^g8TK`WBHXmO=A0GV16"_g?3D9YD0r#d3^_*ip'/L:E5G^GHgHTn2o:a"XnVJ.2-:d`IMBTAk7e]9eH@uGcmosc1:Y`cGcB&9')
%GE6tWH0(-,TcH2(6QF-m-"Bitasg\i`CYH#`Uj/*Tot:K&[3#sGn8j\Gj:]s83oX""auQlRL8rFOmsJ,hn\pKfJL56cnc0IC4MAq
%SN?]mC#=KL[t#CO]L"XmB2<Wdp87dHC3h`n#_9F;)JW5]]`:!?hJpPo$kO$C-m",=e1H=j^*#PGU;b3I&6-W$]H#Er:i?npMSqa$
%c['%JeO]Ms,o;c/X55:P.<.:3!qK!#*s/-W]L46+*o.-R%]Q<6gJe=[(k\gW"bt+VLCR,S9R/?N&0W$!BV,\TE(nDlM"C:M-UA>J
%$OW+?3ji-V[0M-8oF7\SmhC98G6g0gm"sA]`IsJ;;l>:/d\ZiA+\IGZX`NJI)n]nNM@i[5)KVIJcee"OpoVg'h=q/I:lh2:8GXME
%F-*32]o.mU(aB/&USf&*cL5]Pl8%S>;(rS3-N3T"KgcsIJ1^rS0Sc8t;3<S?@\Q#I96qZb3_tHA$I=AZH`^t.Z9fmA?&o_YM4C\d
%)d:,FLQO]+/"S$HLk8;^Guq&SR(un-KAsNR64L97oYN-]7@R<7>=BY0bVIZNJ7D6J5eHQq6W-XFEJ:<77HR1,_H<*MA?(4dG[/7#
%Df1Kn+JN$-;/LGAM>behV^>Y8MM&da>n=re-G>m3#1+%l&cl*tkKdIm>`ajXd?.g[0\$:(J\n\J-_?7<?p&oSV5Qfu/Qmhg9lDo:
%9C2m9ONG(d_e2TT^6.k$!Nr?k.jaN161MiGH6en/NWoVhd=&Il(8oOp5f..YQ0-k]/HWQ:<.3Gs!)u#F;0R3HJt?C7X@)A%Th-G-
%(gtt[*$Q&Nk[g:$$:^/.TC/Onn(S5BmjC9,UL#piL!R7)bDlgj1L_B""&'8\.D7.%@]pUoLo8A.)BR"r5g*39c3dI2nHZ*Ye\k?6
%Zpbdu>9Y+G4Jt1"6Eqnq"K,9Q<>Ra<'g^RoF#-gjL"nis+0$e6E31\DktW%;":d6=SCo`;TWF6Nm[:I^lE?/&+)E;=m[:;Ya3,;k
%ioKFm5K7-=Y:Q'-&TU8tI^ShRLBgq;@K4Un<Lt.p(WoD="@Gb?d8"boBEbdX:TD(m.Zm'LNSs6r]D,sp[Ge"Um=%K_(sH6,PAT#=
%Rboi##-I@4%2=##+RMN3Mm;Pi_Ed=gb"+n"=d%["N?Qh).T5lBWKcd1"fs<33)b=Ul6/Jr,rG-?&5!.<q#mPs>e&u)6_SM0@.8)$
%E/X(9_3o^n-'31C:-4]>N2GBBVkU_^(ce=ML(tcmMBkcr=&GtL"mS&Y^E'djp:YEh.SoD?;s`.sB[@SA>_Ji.egN6W@eXWtpnt%3
%p1$I:j1')n17Z%=S]8@Od(lb=:h4'IqQ:5blqRh$EijCTiK;jrcL0NJkWHp:Vu/mTei'9_VSPcXDI-Wn$Da%`"AI+s2UW+lN_O%l
%8uP7EEhqT0>b"Mb_4+t*,hfDD*E'^HZ7kE_'l?E>ac(tl!^]ht!cQuUrb\%SO0;Z[CC`A-X[H#WN^qEe4iE/'LO?:GnTR$i_&T9-
%B:6E3n/'J`WQ?H%1:T[&l.&CX>dXJJ7,F&7BL"#X`2.9Ya,t4S@YHq9U$Sc*&rM9+hJN$b'pK,5-2FcM8gN^U`G(J+%WrXE_bjC(
%[RS>[cE10"X`7`=nR*RghkTc!!n'\<CW0>/TS$,Fl4/l>'tNbNfMHpN654Eb<A@8''hr'cm#R@dC.A_NZZ5d+^hBJp#IG2A40<l9
%0(7*nBN>;0h+(fi;FKP%Qr5!XB>Rp>q.R.:,*a0SHrMT/8!q:[?!n4k;:VC^g_q(U=q\HtHHDNE0h]'i8LZsgl;I%,.hp'qh^p,0
%KG4!^77U'g:N2ML+b3rEFP)=_DP&$eHkcp4#0=an8SXQD^:@#'K:`PqI)H7Xh%lKN3Y1_`[STqLW/>22?B/8=a='OP""!6.GSC>A
%>9r>4EJ=s0XAWk9h1rakg4</Hl09l94/!L;&G\chA"k:r%bSB.3;Ja4*a<GF><d$n>t<iUN]X6I-4&i`g.gGQl#/84J&nY9*RQ49
%0sC(==kP$iq-cNT2.f67Q1X,$Gf1Dd"2sL1L(As^es"F9DHbR]Se*Njgmh7*15>J76&15_Su5O)M6;Aogn('`bc1Zh]:IjmPQf[3
%"2t+MjP;39>3O@Ia449noQnhGWBFI30U8u"/WUT6>>dp8fF"EpB*dAbq@Xf?7^WBLRPI>th[""!,_niedpsI(#0QX#LBWa5@!6(r
%h74.3^&@V.ks/T:;l0esMsa2m(eFMo1;D[Wf'_T1b5M^KW<dslHJ-q`Z=^V8m55fh/??+kXH9coQ!4d``UB(3;dgQS&&t((U9XS(
%Nh8Qd:D8Nb<91!q"hKmaCCAW-J_:b--+iC:I^")DR=R;!1><2-k'6QZ8[0lkq<BsNraLHQdppYS_PEXJkX1%gQQPbo#h`kOA"FO'
%/tJ>:4'8#rAq`+MU'\U;L($OS/t]6`\SN?7+.:FR*%[TRWR/@iVPm[R$=Qg<mhWn@hBHXp_00L$U^I^OD+/3;#S`+jk9cU73s=Gu
%mi^XR@2BYe3OL,X0;Bc#UE'CJO\ML4k)+nud79Sd"opkhlZm@3&a4c8XERWfmLYUo8hX*sPN4UdA`t:*hof_#-rM!Qp7qH7W29_h
%UIOPgL%0IQYKAnnl4rKl3[M3AT]7cBS7S*<IWQ^p!iJft^8Vr>d(*1U`d91boK;>`L%R43T"o=L``$`5(1!3m%">=?BM])(T[C(%
%K^EtddlO^leO)jN-)0<*"]$DTojm-cN:=i5B(dH"BOS3n@T6]%=k=G^9<kfoQ'mS57R0i'+Zs[OW]a;3qEce!Tg`A5D++)pP#1Ye
%e`)k:\22o%<CkRoaRBU2qHFOV9dOBCXVqH1&X:amW8O21=+HCrTK#I2KY&a/eqGss+>Hl4K`XdMOmUg5Jj&T-b[*%XjJ4C?"=?t3
%?)Ue`0\40BJS(u@-tcC>,/p-#_LG&^*FMOE[\nq47S&WY?IH`t$fg@gCQ>&WW!c3$fY_p.UHbnl@Sr#FKI#m(R$,/&r6,rO,'jD<
%PS\tUCC)5^*4Z-&79=82O6R84$B/g[@;:M4GsoTM7(&4**VM<fV%'OeU44?'dl4tn?<XVN9'.Q5<<,'+aIF'O,6r<H_Gsc.!#$S%
%?5WX+GsqoO<6,Cu,=&R4HU1XU=eI`$J91Y9+D>db>nN0bG&#A2V*<dmWqdqj5,a:`<q88fqIL$Tctm>$oJ7jg$h>mtOntg=hI_uP
%#%**;GB@9-ULGnC"&hAD>Hl*lg.2\$j`f,Sh5[CjRW/D6A94+tGt3#e`uN-F;<WP,U:=[$q?Y>tP#^($B'.&lk-@QLRIk0sJHB=W
%J>eV"\'OpZLVtr'h:cP-*l\/pfZiJ4P;m+OY8Y>jf3't`(b'"BBnbL.LF<u+5aZNsdE&Q5HANF3<%F=_,\09hXU**q@9nIu0LNIS
%pd$@3=@*COEhS^AoOoJH@`RcFh\c7hXARj>%b2ea._ZXY3P,6!g:_.$M7>fU)pikk._n2:,1FT0D=sf8qLp^p,W(.C6V/325b/[A
%2NmdLn+ND3Ct1P1i]Efp>9(O)2G[W"3Kb?jQnu%o!4LpP$.u-E&2s,RIIEW,+5pSJ3FD,0$IAkR0t@:ue%,p\9&N$q5*%l9)it,G
%X_$^5q!L.3GZ(8C_7*5;b7<]Bs5Pd,>p#KM+92>bh`_#=\,Tn7dm*d#J,JH<s8'@"^AI=Qr;&YVp@l?!Y<W!Z&-(s>5Q0k#IfIa/
%rBJ&Dqs>L*a>a.eIm<u*pA:J2pWn?gdnd`*qre"TVuM[/Md@4tqUbc:+92;Cro3qYdPsYC~>
%AI9_PrivateDataEnd
