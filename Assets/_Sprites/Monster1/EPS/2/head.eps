%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: head.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/19/2018
%%BoundingBox: 0 0 356 410
%%HiResBoundingBox: 0 0 355.4530 409.5685
%%CropBox: 0 0 355.4530 409.5685
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 112 128 8%%BeginData: 23158 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD60FF7D2727277DFD6AFF7DF827F827F852FD0EFF7D27527DFD57
%FF2727F8272727F8A8FD0CFF52F804F8F827FD55FFA827F827F827F8F827
%FD0BFFA8F8270427272752FD54FFA8F8270427272704277DFD0AFF5204F8
%27F827F8F87DFD53FF5204F827F827F827F852FD0AFF52F8272727F827F8
%27A8FD52FF52F8272727F8272727F8A8FD08FFA8F827F827F827F827F82D
%FD52FF2727F827F827F827F8F827FD08FF7D270427272704272727F87DFD
%50FFA82704272727042727270427A8FD07FF7DF827F827F827F827F827F8
%A8FD4FFF7DF827F827F827F827F827F852FD07FFFD0427F8272727F82727
%27F8FD4FFFFD0427F8272727F8272727F8FD06FFA827F827F827F827F827
%F827F8F827FD4DFF7DF8F827F827F827F827F827F8F852FD06FF04272727
%0427272704FD052752FD4CFF52F82727270427272704272727F852FD05FF
%7D27F827F827F827F827F827F827F80452FD4BFF0427F827F827F827F827
%F827F827F8A8FD04FF83F827F8FD0527F827F8272727F8277DFD49FF7D27
%2727F827272752272727F827272752FD04FF52F8F827F827F852A727F827
%F827F827F8047DFD48FF27F827F827F82727CF2727F827F827F827A8FFFF
%FF7DF8270427272752FF7D27F8272727042727277DFD46FF7DF827272704
%27F87CFF7DF82704272727F8A8FFFFFF2727F827F827F852CFFF7CF8F827
%F827F827F8F87DFD21FF7D7D527D5252527D527D7DA8A8FD17FF2727F827
%F827F827A7FF5127F827F827F8F852FFFFFF52F8272727F8277CFFCFFF52
%27F8272727F82704277DFD1CFFA852520427F804F827F827F827F827F827
%527DA8FD13FF7D272727F827272751FFA876FD0427F827F827FFFFFF2727
%F827F827F87DFFFFCFFF27F8F827F827F827F8F87DFD19FF5227F8F8F827
%F827F827F827F827F827F827F827F8272783FD10FFA827F827F827F827F8
%A7FFA14B4BF827F827F827F8A8FFFF270427272704277DFFCFFFFFFFFD04
%2704272727F8277DFD16FF7D2727F8272727042727270427272704272727
%04272727F827F82D7DFD0EFF7DF82727270427F852FFFF76764B27272704
%2727277DFFFFF827F827F827F8A7FFFFCFFFFFCF2705F827F827F827F804
%52FD13FF7D27F827F827F827F827F827F827F827F827F827F827F827F827
%F827F8F827A8FD0BFFA8F827F827F827F8277DFFA7764B522627F827F827
%F852FFFF272727F82727277DFFCFFFCFFFFFFFFD0427F8272727F82752FD
%11FF5227F827F8272727F8272727F8272727F8272727F8272727F8272727
%F8272727F87DFD0AFFFD0427F827272751FFCFA15176514BF8272727F827
%27FFFFF827F827F827F87DCFFFCFFFCAFFCFCF27F8F827F827F827F8F827
%FD0FFF27F8F827F827F827F827F827F827F827F8F8F827F827F827F827F8
%27F827F827F827F852A8FD07FF52F8F827F827F827F8A8FFA876764B5227
%27F827F827F827A8FF272727042727277DFFCFFD07FF27270427272704FD
%0427A8FD0CFF27270427272704272727F827F8272752527C525227272627
%272704272727042727270427F852A8FD05FFA827F82727270427F87DFFFF
%A1A152765152042727270427F8A8FFF827F827F827F87DFFFFA1CFCFFFCF
%FFCFFF27F8F827F827F827F804F87DFD0AFF2727F827F827F827F827F827
%277DA8FFCFFFFFFFCFFF7D4B27272627F827F827F827F827F827F827A8FF
%FFFFA827F827F827F827F827CFFF7DA17C524B764B27F827F827F80452FF
%27F8272727F8277DFFCFA7A1FFCFFFCFFFFFFF5227F8272727F8272727F8
%52FD08FF2727F8272727F8272727F87DA8FD05FFCFFD04FFCA4B514B5227
%27F8272727F8272727F827F827A8FFFF52F8272727F82727277DFFA7A17C
%A1515251522727F8272727F858FFF827F827F827F87DFFFFA1A17DCFCFFF
%CFFFCFFF2704F827F827F827F827F8277DFD05FF27F8F827F827F827F8F8
%27A8CFFFCFFFCAFFCFFFCFFFCFFFCA52274B27514B4B2027F827F827F827
%F827F827A852F827F827F827F8F852FFA8A17CA176524B524B27F827F827
%F80427FF270427272704277DFFCFCAA0A1A1FFFFFFCFFFCFA1FD04270427
%27270427F82752FFFFFF7D27272704272727F8277DFD05FFCFFFCFFFCFFF
%CFFFCFCA51514B524B524B522727F827272704272727F82D272704FD0627
%FFFFA7A0A1A1A151765176272704272727F852FF2727F827F827F87DFFFF
%A1A17CA17CCACAFFCAA77C762727F827F827F827F827F8F827FFA827F827
%F827F827F8277DFFCFFFCFFFA8A17DA17CA17CA17CA17C764B4B2751274B
%27512727F827F827F827F827F827F827F827F827F8CAFFA876A17CA17652
%4B524B4BF827F827F82704FF520427F827272752FFFFA87CA1A1A17CA1A1
%A17CA776764B270427F8272727F82727270427F827F8272727F827A8FFCF
%FFFFFFA7A17CA17CA1A0A17CA1A1A17C7C51524B524B514B524B4BF82727
%27F8272727F8272727F827F8A7FFFFA0A17CA1A1A14B765152FD0427F827
%0427A82727F827F827F852CFFFA7A07CA17CA17CA17CA17CA14B524B27F8
%27F827F827F827F827F827F827F827F8277DFFCFFFCFFFA1A07CA17CA17C
%A17CA17CA17CA17C764B51274B274B27514B27F827F827F827F827F827F8
%27F87DFFFFA1A17CA17CA176514B524B4BF827F827F827F8A87DF8270427
%272751FFFFCA7CA1A1A17CA1A1A17CA1A17C4B7651510427272704272727
%04272727042727277DFFFFFFCFFFA1A17CA1A1A17CA1A1A17CA1A1A17CA7
%A17C517651524B524B524B5127270427272704272727F852FFFFFFCA7CA1
%7CA1A17D4B765152FD042704272727A85204F827F827F827CAFFA8A17CA1
%7CA17CA17CA17CA17C764B765151F827F827F827F827F827F827F80552FF
%CFFFCFFFA1A17CA17CA17CA17CA17CA17CA17CA17CA1A07C4B524B512751
%274B2727F827F827F827F827F852CFFFCFFFA8A17CA17CA176514B764B4B
%F827F827F827F8A87DF8272727F82727FFFFCFA0A17CA1A1A17CA1A1A17C
%A776524B765151FD0427F8272727F8FD0427FFFFFFCFFFA7A17CFD04A1A7
%A0A17CA1A1A17CA1A1A17CA1A1A1517651524B524B514B270527F8272727
%F827CAFFCFFFFFFFFD05A17C517651762727F8272727F827A87D04F827F8
%27F827A7FFA8A17CA17CA17CA17CA17CA17C764B524B51274B2727F827F8
%27F827F827F8A8CFFFCFFFA7A17CA17CA1A7FFA8A17CA17CA17CA17CA176
%524B7C7CA151524B51274B274B2727F827F827F827F8A8FFFFCAFFCFA876
%A17CA151524B524B4BF827F827F827F8A8A8042727270427F8A8FFFFA1A1
%7CA1A1A17CA1A1A17CA7765251764B514B524B27042727270427F87DFD04
%FFCFA7A1A17CA1A1FFFFFFA8A17CA1A1A17CA77C52517651A1A1A1765251
%764B514B52272704272727042727FFCFFFFFFFCFA7A1A1A17C5176517627
%2704272727F827FFA827F827F827F8047CFFCFA77CA17CA17CA17CA17CA1
%7C7C4B524B51274B27512627F827F827F827CFFFCFFFCFA776A17CA17CA1
%A1FFCFA87CA17CA17CA17C7C4B524B5276A17CA151514B52274B27512727
%F827F827F8277DFFCFFFCFFFA1A17CA152524B524B4BF827F827F82727FF
%FF2727F8272727F858FFFFFD04A17CA1A1A17CA1A1A1767651514B524B51
%FD0427F82727277DFFCFFFFFCF7CA17CA1A1A17CA1A1A77CA1A1A17CA1A1
%7C517651524BFD05A1517651524B514B512727F8272727F852FFFFCFFFFF
%CA7CA1A17C4B765152FD0427F827F852FFFF52F827F827F82727FFCFA876
%A17CA17CA17CA17CA17C7C4B51274B274B2727F827F827F82727FFCFFFCF
%CF7CA17CA176A17CA17CA17CA17CA17CA17CA151514B764B767CA17CA17C
%764B524B51274B2727F827F827F827F8A8FFFFCAFFA7A07CA152514B524B
%27F827F827F82752FFFF7D2704272727F827A8FFCAA1A1A17CA1A1A17CA1
%A1A176764B514B524B51042727270427F8A8FD04FFFD05A1CAA1A17CA1A1
%A17CA1A1A17CA1A1764B7DFD06A17CA77C76517651524B524B2704272727
%042752FFCFFFFFA87CA1A17C4B765152FD04270427F87DFFFFA8F827F827
%F827F8A7FFCF7CA17CA17CA17CA17CA17C7C4B51274B27512727F827F827
%F852CFFFCFFFA8A17CA17CCFCFFFA1A17CA17CA17CA17CA17CA151767CA1
%7CA17CA17CA17CA151514B764B4B27512727F827F827F827A8FFCFCA7CA1
%7CA152514B522727F827F827F8277DFFFFA8270427F827270552FFFFA77C
%A1A1A17CA1A1A17CA7765127524B51FD0427F82727277DFFCFFFCFA77CA1
%7CA7FFFFFFCA7CA17CA1A1A17CA1A1A17CA17CA17CA17CA17CA1A1A1A0A1
%51764B764B514B522727F8272727F876A7A77CA1A1A17C7651524B512727
%F8272727F8A8FFFFFF2727F827F827F851CFFFA1A07CA17CA17CA17CA17C
%76274B274B4B27F827F827F82727CFCFFFCFCF7CA17CA17CCFCFCF7CA17C
%A17CA17CA17CA17CA17CA17CA1515276A17CA17CA176764B524B52274B27
%27F827F827F82720A17CA17CA17C7C4B524B4B2627F827F827F827A8FFFF
%FF7DF82704FD0427FFFFCF7CA1A1A17CFD05A151514B524B52FD04270427
%F87DFD04FFA7A1A1A17CA1A1CAFD04A1A0A1A1A17CA1A1A17CA1A1A1A076
%4B7CFD04A17CA77652517651524B524B27042727270427517676A7A1A152
%7651524B2727270427272752FD04FF7D27F827F827F8F87DFFCAA17CA17C
%A17CA17CA17651274B27512727F827F827F827A8FFCFFFCFA17CA17CA17C
%A17CA17CA152767CA17CA17CA17CA17CA17CA1767C7CA17CA17CA17CA14B
%524B764B4B27512727F827F827F8274B5176A176524B524B4BF827F827F8
%27F87DFD05FFFD0427F827F852FFFFA7A17CA1A1A17CA1A17627524B514B
%4B0527F827272751FFFFFFCFCF7CA17CA1A1A17CA1A1A17C764BA17CA1A1
%A17CA1A1A17CA1A1A1A0A1A1A17CA1A1A1A07C517651764B514B4B0527F8
%FD04277651767C7C51764B522727F8272727F827A8FD05FF52F827F827F8
%2727CFCFCA76A17CA17CA17C7D4B4B274B274BF827F827F827F87DCFFFCF
%FFA1A17CA17CA17CA17CA17CA1767C7CA17CA17CA17CA17CA17CA17CA17C
%A17CA17CA17CA176524B524B51274B2727F827F827F82727764B764B524B
%4B2727F827F827F8F827FD06FF7D272727042727277DFFA7A17CA1A1A1A0
%A776524B524B52FD042704270527A8FFFFFFA8A1A1A17CA1A1A17CA1A1A1
%7CA7A1A17CA1A1A17CA77C7C767DA1A17CA1A1A17CA1A1A17CA77C764B76
%4B514B52272704272727F8515152517651524B51272704272727F87DFD06
%FFA8F827F827F827F852CFA17CA17CA17CA176524B4B27514B27F827F827
%F82752FFCFFFCFA17CA17CA17CA17CA17CA17CA17CA17CA17CA17CA17652
%4B514B767CA17CA17CA17CA17CA17CA176764B51274B274BF827F827F827
%205127514B524B4B2027F827F827F827A8FD07FF52F8272727F82727CF7C
%A1A1A17CA17C764B524B514B522727F8272727F8A7FFFFCFCF7CA17CA1A0
%A17CA1A1A17CA1A1A17CA1A1A17CA1A1764B7651764B7CA1A17CA1A1A17C
%A1A1A17CA7A1764B524B51FD0427F8FD0427524B764B522727F8272727F8
%2752FD08FF7DF8F827F827F82752764BA17CA17C764B51274B274B2727F8
%27F827F827A8FFCFFFA1A17CA17CA17CA176A17CA17CA17CA17CA17CA17C
%A14B514B524B5151A17CA17CA17CA17CA17CA17C764B4B274B274B2027F8
%27F827F827274B4B4B2727F827F827F827F8A8FD09FFFD0427042727274B
%7652A1A1A151764B524B524B4B27270427272752FFFFFFCFA7A1A1A8FFCF
%FFA8A7A0A17CA1A1A17CA1A1A17CA77C76517651764B7CA1A17CA1A1A17C
%A1A1A17C7C51524B524B524B51272704FD0427524B514B51272704272727
%F852FD0AFF58F827F827F827F84B4B5251A151524B5127514B4BF827F827
%F827F87DFFFFCFCA7CA17CFFCFFFCFFFCFCFA1A17CA17CA17CA17CA17CA1
%51514B524B5176A17CA17CA17CA17CA176524B764B4B27514B4B2727F827
%F827F82727514B4BF827F827F827F8F87DFD0AFFA827F8272727F8272776
%517652764B764B514B524B27F8272727F827A8FFCFFFA7A1A1A7CFFFCFFF
%CFFFCFFFA8A17CA1A1A17CA1A1A1A0A151524B5252A17CA1A1A17CA7A1A1
%527651764B524B514B522727F8272727F827274B4B522727F8272727F827
%27FD0CFF27F8F827F827F82727524B524B524B4B274B2727F827F827F805
%27FFCFFFCAA776522776A8FFCFFFCFFFCAFFA8A17CA17CA17CA17CA17CA1
%767676A17CA17CA17CA176764B514B524B4B27514B27F827F827F827F827
%F827274B2727F827F827F827F8A8FD0CFFA8F82727270427272751765176
%51524B524B52272704272727F87DFFFFCFFF7C27F827F8277DFFFFFFCFFF
%FFFFA7FD04A1A7A1A1A1A7A1A7A1A7A1A17CA176765176517651764B514B
%524B270427272704272727042705274B27272704272727F852FD0EFF52F8
%27F827F827F84B4B524B512751274B2727F827F827F8047DFFCFFFA852F8
%27F827F8F827A8CFFFCFFFCFCA7CA17CA1767C767C767C7676517651524B
%524B524B524B5127514B4B2727F827F827F827F827F827F8272727F827F8
%27F827F827A8FD0EFFA827F8272727F827275251764B514B524B4BF82727
%27F82727CFCFFFFFCA26272727F8272727F852A7FFFFFFA776517651764B
%7651524B7651524B7651524B764B524B524B514B522727F8272727F82727
%27F8272727F8272727F8272727F82752FD10FF27F8F827F827F82727524B
%51274B27512727F827F827F852CFFFCAFFA827F827F827F827F827F82727
%7DA77C4B514B524B524B524B514B514B512751274B274B274B27512727F8
%27F827F827F827F827F827F827F827F827F827F827F80427FD11FFA8F827
%272704FD0427764B524B524B2704272727042752FFCFFFFFCFFD04270427
%272704272727F82727514B7651764B524B524B524B514B524B524B524B52
%4B522727042727270427272704272727042727270427272704272727F8A8
%FD12FF52F827F827F827F8272751274B274BF827F827F827F8A7FFFFCFFF
%A827F827F827F827F827F827F827F827F827F8FD042751274B27514B4B27
%514B4B27512727F827F827F827F827F827F827F8512627F827F827F827F8
%27F827F87DFD14FF27F8272727F82705274B524B51FD0427F8270427A8FF
%CFFFFFCF2727F8272727F8272727F8272727F8272727F827272704FD0427
%4B2727274B272704270527F8272727F8272727F827052750512727F82727
%27F8272727F852FD15FF7DF8F827F827F827F82727512727F827F827F827
%27FFCFFFCFFFA727F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F82726512C27
%F827F827F827F827F827A8FD16FF5227272704272727F84B4B52FD042704
%27F87DFD05FFA82727042727270427272704272727042727270427272704
%2727270427272704272727042727270427272704272727F827517B507B27
%2704272727042727277DFD18FF2727F827F827F827F8272727F827F827F8
%277DFFCFFFCFFF7D27F827F827F8272627F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827042D5057505150
%27F827F827F827F8F852FD19FFA8F8272727F8272727F8272727F8272727
%F8CFFFFFCFFFFFA8F8272727F82727512C512727F8272727F8272727F827
%2727F8272727F8272727F8272727F8272727F82700272657515750575157
%26272727F827272752FD1BFF7DF827F827F827F827F827F827F827F827A8
%FFCFFFCAFF7D27F827F827F8272651265126272627F827F827F827F827F8
%27F827F827F827F827F827F827F827F82704515051505150515051502DF8
%27F827F8F852FD1DFF7DF827042727270427272704FD0427FFFFFFCFFFFF
%A8F827272704272751505150515051505126512727262727270027272700
%2727270027052704272751507B5157507B5157507B517B2C2727270427F8
%7DFD1EFF52F827F827F827F827F827F827F852CAFFCFFFCFFF7D04F827F8
%27F8272651265126512651265126512651262D2627262726270427262726
%51265150575051505750515057505150575051F827F827F82752FD1FFF58
%F827F8272727F8272727F82776FFCFFFCFFFFFA7F827F8272727F8515051
%26515051265150512C5150512C5150512C5150512C515051507B51575057
%51575057515750575157507B5127F8272727F852FD20FF52F827F827F827
%F827F827F8A8CFFFCAFFCFFF7D27F827F827F82726512651265126512651
%265126512651265126512651265126512651505150515051505150515051
%505150515051F827F827F827F8FD21FF7DF827272704272727F852FFFFCF
%FD04FFA8272704272727042750512C5150512C5150512C5150512C515051
%2C5150512C515051507B5157507B5157507B5157507B5157507B51270427
%2727F827A8FD21FF7DF827F827F827F8F852FFCFFFCFFFCFFF7D27F827F8
%27F827F8512C512651265126512651265126512651265126512651265150
%51505750515057505150575051505750512627F827F827F827F8A8FD22FF
%A8F8272727F827F87DFFFFCFFFCFFFFFA8F8272727F82727272651505126
%51505126515051265150512C51505150515057507B515750575157505751
%575057515750512727F8272727F82727277DFD22FF7DF8F827F827F827A1
%FFCAFFCFFFCAFFA827F827F827F827F82726512651265126512651265126
%512C51505150515051505150515051505150515051505150575027F827F8
%27F827F827F827F87DFD22FF7DF8272727042727FD05FFCFFFFFFFFD0427
%04272727002D50512C5150512C5150512C51505150515157507B5157507B
%5157507B5157507B5157507B2D27F827272704272727042727277DFD22FF
%52F8F827F827F852CFFFCFFFCFFFCFFFCF52F827F827F827F827F82D2C51
%26512651265126512651265126512C515057505150575051505750515057
%50512627F827F827F827F827F827F827F87DFD22FF52F827F827272752FF
%FFFFCFFFFFFFCFFF7627F8272727F8272727F85150512651505126515051
%26515051265150515057515150575157507B515126270527F8272727F827
%2727F8272727F82752FD22FFF827F827F827F87DCFFFCFFFCAFFCFFFCFA7
%F827F827F827F827F827F827265126512651265126512651265126512651
%26512651265150512627F827F827F827F827F827F827F827F827F827F852
%FD21FFA8272727042727277DFFFFFFCFFFA8FFCFFFCA4BF8272727042727
%27042727272651505150515051505150512C515051505150512C51272D26
%270527042727270427272704FD0727042752FD21FF7DF827F827F827F8A8
%CFFFCFFFCAA1A8FFCFFF7605F827F827F827F827F827F827F82726272651
%2651265126512651262D26272627F827F827F827F827F827F827F827F827
%F84B2727F827F827F852FD21FF7D04F8272727F827A8FFCFFFFFFFA1A7CF
%FFCFC95127F8272727F8272727F8272727F8270527F82727270427272704
%272727F8272727F8272727F8272727F8272727F82727514B512727F8FD04
%27FD21FF58F827F827F82727FFCFFFCAFFCFA176A7A8A87CA14B05F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F8272751274B2727F827F827F827A8FD20FF522704
%272727F852FFFFCFFFFFFFA1A1A0A17CA1A1A75227F82704272727042727
%2704272727042727270427272704272727042727270427272704272727F8
%2727514B524B524B52272704FD0427FD21FF52F827F827F8F852FFCFFFCF
%FFCFA17CA17CA17CA17CA176522705F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F82727514B4B2751274B27
%27F827F827F827A8FD20FFFD0427F827F87DFFFFCFFFCFFFA1A17CFD04A1
%CFA8A1A1A152512627F827F8272727F8272727F8272727F8272727F82727
%27F8272727F8FD0427524B5127514B524B524B5104272727F82727FD20FF
%A827F827F827F8F87CFFCAFFCFFFA8A17CA17CA1A1FFCFFFA8A17CA17C7C
%51522727F827F827F827F827F827F827F827F827F827F827F827F827264B
%274B274B275151764B51274B2727F827F827F827A8FD20FFFD04270427F8
%A7FD04FFCFFFA1A17CA1A1FD05FFFD05A1A7A1A17C7D5252FD0427052727
%27F827272726FD0427514B514B524B524B76767D7CA1517651524B52FD04
%27042727FD20FFA827F827F827F8277DFFCFFFCFFFA8A17CA17CA1CAFFCF
%FFCF764BA17CA17CA17CA1A0A1A0A17CA176512751274B2751274B275127
%4B27514B514B524B767CA1A0A176524B524B522727F827F827F827A8FD1F
%FFA80427F8272727F8A8FFFFCFFFFFCF7CA1A1A17CCAFFFFFFCF515276A7
%A1A17CA17C7C51765276527651765176517651764B524B524B524B765176
%76A1A1A17CA1A1A17676514B04272727F8272727F8A8FD1FFF7D27F827F8
%27F827A7FFCFFFCAFFA8A17CA17CA176A7A8CA76514B7C7CA17CA176524B
%514B524B514B524B514B524B7651765276767C767C76A17CA17CA17CA17C
%A17CA15127F827F827F827F827F8277DFD1FFFA8F82704FD0427CFFFFFCF
%FFFFCF7CA1A1A17CA1A0A17CA17CFD06A17D517651765276517651765176
%76A17CFD04A1A7A1A1A1A7A1A17CA1A1A17CA1A1A7522705270427272704
%272727F8A8FD1FFF7D27F827F827F827A7FFCFFFCFFFA8A17CA17CA17CA1
%7CA17CA17CA17CA17CA17CA17CA17CA17CA176A17CA17CA17CA17CA17CA1
%7CA17CA17CA17CA17CA17CA17CA15205F827F827F827F827F827F8277DFD
%1FFFA8F8272727F82727CFCFFFCFFFCFCF7CA17CA1A1A17CA1A1A17CA1A1
%A17CA1A1A17CA1A1A17CA1A1A17CA1A1A17CA1A1A17CFD04A1A7A1A1A1A7
%A1A17CA1A1A17C27F827F8272727F8272727F82704A8FD1FFF7DF8F827F8
%27F827A8FFCAFFCFFFA7A17CA17CA17CA17CA17CA17CA17CA17CA17CA17C
%A17CA17CA17CA17CA17CA176A17CA17CA17652275127514BA17CA17CA176
%51F827F827F827F827F827F827F8277DFD1FFFA8F8272727042727FD06FF
%CA7CA17CA1A1A1A0A1A1A17CA1A1A17CA1A1A17CA1A1A17CA1A1A17CA1A1
%A17CA7A1A1A17C2727F8270427F82727A1A1A77676FD0427042727270427
%2727042704A8FD1FFF7D04F827F827F827A8FFCFFFCFFFA7A17CA17CA17C
%A17CA17CA17CA17CA17CA17CA17CA17CA17CA17CA17CA17CA1CFFFA151F8
%27F827F827F827F8054BA17C764B27F827F827F827F827F827F827F827A8
%FD1FFFA8F827F827272704CFFFFFCFFFFFCA7CA1A1A17CA1767676A1A1A1
%7CFD04A1A7A1A17CFD07A17CA1A8FFFF7DF827F8272727F8272727F827A1
%A14B762727F8272727F8272727F8272727F8A8FD1FFF7D27F827F827F827
%A7FFCFFFCAFFA7A0A7FFA8A1767627767CA17CA17CA17C7C4B4B27272627
%277C7CA17CA17CFFCFA8F827F827F827F827F827F827F87D76514B27F827
%F827F8272627F827F827F8277DFD1FFFA8042704FD0427CFFFFFCFFFFFCA
%A1FFFFFFA8A176767CA7A1A17CA7A152F8270427F8270527F85276A1A0A8
%FFFF7D27272704272727042727270427767C4B76272704272727F84B2727
%04272727F8A8FD1FFF7D27F827F827F8277DFFCFFFCFFFA1A1A8FFCFA77C
%A17CA17CA17CA17C52F827F827F827F827F827F8514B7CA1FFFF7DF827F8
%27F827F827F827F827F85276514B27F827F827F8272627F827F827F8277D
%FD1FFFA8F8272727F827F8A8FFFFCFFFCFCA7CA1A7A7A0A17CA1A1A17CA1
%A1A1FD0427F8272727F8FD04277651A1CFFF7D05F8272727F8272727F827
%27274B7C5176FD0427F827272726272727F82704A8FD1FFFA827F827F827
%F8047DFFCAFFCFFFA1A17CA076A17CA17CA17CA176A77D04F827F827F827
%F827F827F8274B5251CFFF7CF827F827F827F827F827F827F84B51524B27
%F827F827F827F827F827F827F827A8FD20FFFD04270427F87DFD05FFCAA0
%A17CA7A1A17CA1A1A17CA1CA7DF82727270427272704FD0427765176A7FF
%5227042727270427272704FD04277C5176FD042704FD0727042727FD21FF
%52F827F827F82752FFCFFFCFFFA1A1A1CFCFFFCAA776A17CA17CCF52F8F8
%27F827F827F827F827F82727524B7CA752F827F827F827F827F827F827F8
%2752525127F827F827F827F827F827F827F827A8FD20FF5227F8272727F8
%52FFFFCFFFFFA77CFFFFFFCFFFFFA77CA1A1A1CF58F827F8272727F82727
%27F827274B4B5276A14B272727F8272727F8272727F827277C4B762727F8
%272727F8272727F827272704FD21FF7DF827F827F82727FFCFFFCAFFA1A1
%CFFFCFFFCAFFA7A07CA1A1FF2727F827F827F827F827F827F827274B4B76
%A051F827F827F827F827F827F827F82752524B27F827F827F827F827F827
%F827F827A8FD20FF7D2704272727F827A8FFCFFFFFA7A7FFFFFFCFFFFFCF
%7CA1A0A8FF52F82704272727042727270427274B4B5252A7512727270427
%2727042727270427277C51762727042727270427272704FD0427FD21FFA8
%F827F827F827F8A7FFFFCFFFA1A7CFFFCFFFCFFFA7A17CA1A7FF2727F827
%F827F827F827F827F827274B4B76A052F827F827F827F827F827F827F827
%52764B27F827F827F827F827F827F827F827A8FD20FFA8270427F8272727
%52FFFFFFCFA7A0CFFD04FFCFA7A0A17CCAFF52F8272727F8272727F82727
%27F8274B5151A15227F8272727F8272727F8272727F87C5276FD0427F827
%2727F8272727F82727FD22FF2727F827F827F852CFFFCFFF7CA17DCACAFF
%A8A776A17CA1A1FF2705F827F827F827F827F827F827205127517676F827
%F827F827F827F827F827F82751764B27F827F827F827F827F827F827F82D
%FD22FF7DF82704FD0427FFFFFFCFA7A1A17CA7A1A17CA1A1A17CA7A852F8
%272727042727270427272704274B514BA176270427272704272727042727
%27F8527676FD04270427272704272727042752FD22FF7D27F827F827F804
%7DFFFFCF7CA17CA17CA17CA17CA17CA17CA12727F827F827F827F827F827
%F827205127517676F827F827F827F827F827F827F8272776514BF827F827
%F827F827F827F827F852FD23FFFD0427F82704277CFFCFA17CA1A1A17CA1
%A1A17CA1A1A17C270427F8FD0727F82705274B524BA176272727F8272727
%26272727F827044B51764B27F8272727F8272727F82727F852FD23FF52F8
%27F827F827F8F8F85276A17CA17CA17CA17CA17CA17676F827F827F827F8
%27F827F827F827264B27517C76F827F827F827F827F827F827F82727764B
%51F827F827F827F827F827F82727FD24FF7D272727042727270427F82727
%7C7CA7A1A7A1A1767C52764B27272704FD0727042727274B524B7C512727
%2704FD072704FD07270427272704FD0627FD26FFF827F827F827F827F827
%F827F8274B767CA151514B524B52F827F827F827F827F827F827F827264B
%27514B51F827F827F827F827F827F827F827F827F827F827F827F827F827
%F804F87DFD26FF7DF8272727F8272727F8272727F8270427275151765176
%5127F8272727F8272727F8272727F8274B514B765127F8272727F8272727
%F8272727F8272727F8272727F8272727F82727A8FD28FF7DF8F8F827F827
%F827F827F827F827F805F82726272751F827F827F827F827F827F827F827
%F84BFD0427F827F827F827F827F827F827F827F827F827F827F827F827F8
%0452FD2CFF5227F8272727042727270427272704272727F8272727042727
%27042727270427272704272727F827272704272727042727270427272704
%27272704272727F827F852A8FD2EFFA87D0404F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F82752A8FD33FF7D52F827F8272727
%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827
%2727F8272727F8272727F8272727F827F827277DA8FD36FFAEA85227F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F8F8F827277DA8FD3CFFA87D2D27F8272727
%042727270427272704272727042727270427272704272727042727270427
%2727F827F827275252A8A8FD42FFA87D2727F8F8F827F827F827F827F827
%F827F827F827F827F827F827F827F827F8F8F8272752527D7DFD4AFFA8A8
%52522727F827F8272727F8272727F827F827F827F827F8272752527D7DA8
%A8FD54FF7D7D52522727F827F827F82704522752527D7DA8A8FD2EFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-19T11:25:48+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-19T11:25:49+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-19T11:25:49+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>224</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADgAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Na/r2k6Bo91rGr3C2un&#xA;2aepPM1TQVoAAKlmYkAAbk4q8T/6G98p/pH0v0Hffo6tBdc4vVpXr6NePT/izFFvZ/LPmbRPM2jW&#xA;+s6LcrdWFyDwkAIIKmjKymhVlPUHFKaYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FWJ/mv5suPKn5fazrlqyreW8IS0LUNJp3WGNqHrxZ+VPbFXwhqGqanqN89/f3c13fStzkuZnZ&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:164e0c1a-b3b9-6e41-a80d-419c86d5e001</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:164e0c1a-b3b9-6e41-a80d-419c86d5e001</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:d7886bab-91ac-7048-a0fb-9440b5348aa7</stRef:instanceID>
            <stRef:documentID>xmp.did:d7886bab-91ac-7048-a0fb-9440b5348aa7</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:78ead596-65d4-664f-9311-ff5d6a6a9ec8</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:46:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:170ebbf7-4b79-5343-9e6b-0d3f9d7a2ef3</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:56:13+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d7886bab-91ac-7048-a0fb-9440b5348aa7</stEvt:instanceID>
                  <stEvt:when>2018-02-19T10:52:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:164e0c1a-b3b9-6e41-a80d-419c86d5e001</stEvt:instanceID>
                  <stEvt:when>2018-02-19T11:25:49+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>355.452978</stDim:w>
            <stDim:h>409.568420</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -409.568 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 409.568 li
355.453 409.568 li
355.453 0 li
cp
clp
327.104 169.094 mo
336.14 148.727 339.567 121.33 337.855 99.1761 cv
337.287 84.1551 334.308 69.0697 331.298 53.4178 cv
330.282 48.1332 325.848 44.3416 320.806 42.9486 cv
320.478 42.2772 320.151 41.6068 319.617 40.9525 cv
317.951 38.9183 314.16 38.8138 312.386 40.7445 cv
311.475 41.7337 310.915 42.7733 310.487 43.8392 cv
309.309 44.4637 308.208 45.266 307.25 46.3236 cv
292.082 63.0619 290.327 81.9373 280.199 101.046 cv
277.28 106.555 274.073 111.595 270.805 116.466 cv
268.604 112.38 266.233 108.397 263.569 104.598 cv
244.852 77.9178 211.241 57.6913 177.945 66.3665 cv
161.444 70.6644 149.65 80.4666 142.916 93.2118 cv
132.677 100.323 123.824 109.996 117.731 121.54 cv
103.922 108.603 90.7494 95.0418 78.1722 80.6576 cv
73.4916 75.3045 66.7328 74.2367 60.6781 75.9403 cv
55.3832 69.2621 50.2787 62.3895 45.5853 55.117 cv
36.9212 41.6878 13.515 44.7816 13.5199 62.8182 cv
13.5306 108.157 24.9398 149.484 46.9066 186.832 cv
52.1566 200.935 60.9359 213.578 73.5658 224.308 cv
78.5453 228.538 84.0384 229.807 89.0629 229.142 cv
83.3734 249.405 80.8236 269.694 81.4847 290.919 cv
80.6625 304.261 80.5961 317.754 81.4671 331.473 cv
81.6752 334.756 82.7621 337.689 84.3714 340.234 cv
74.7074 347.151 74.3226 364.131 85.2191 371.993 cv
141.059 412.285 213.004 416.607 273.881 385.086 cv
279.091 382.389 282.081 378.466 283.454 374.158 cv
309.292 364.97 302.136 327.101 300.479 302.818 cv
299.133 283.09 300.005 255.352 292.602 233.592 cv
292.541 225.831 292.368 217.851 291.997 209.777 cv
304.806 197.227 319.253 186.781 327.104 169.094 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.737255 .603922 .521569 rgb
f
284.524 190.08 mo
277.638 179.323 259.424 184.348 261.504 197.335 cv
259.242 198.443 257.185 200.164 255.676 202.237 cv
252.962 201.95 250.284 202.421 247.971 203.565 cv
245.64 203.525 243.245 203.876 240.702 204.993 cv
228.452 210.379 213.427 211.453 199.538 211.062 cv
195.611 208.2 190.993 208.195 186.919 209.952 cv
181.598 208.966 176.53 207.423 171.392 206.298 cv
166.789 202.594 160.807 202.837 155.911 205.38 cv
155.724 205.408 155.546 205.398 155.359 205.429 cv
155.07 205.476 154.84 205.622 154.577 205.71 cv
145.401 198.174 128.669 203.143 128.838 215.143 cv
127.305 217.725 126.646 220.949 127.544 224.748 cv
130.889 238.886 136.743 249.316 146.949 259.714 cv
148.322 261.113 149.815 262.152 151.363 262.891 cv
157.897 270.006 165.855 274.1 175.423 271.304 cv
177.802 270.61 179.74 269.624 181.493 268.521 cv
183.999 270.767 187.32 272.311 191.517 272.616 cv
207.995 273.813 222.323 271.808 237.698 265.769 cv
251.593 260.313 271.457 257.405 283.409 248.364 cv
303.701 233.014 296.05 208.087 284.524 190.08 cv
cp
.419608 .458824 .0901961 rgb
f
264.596 252.298 mo
259.612 250.022 255.811 252.483 250.99 254.119 cv
248.84 254.849 246.643 255.392 244.444 255.919 cv
241.222 256.203 238.011 256.535 234.789 256.622 cv
233.372 253.931 230.288 252.099 227.269 252.066 cv
224.076 252.033 220.898 252.292 217.722 252.621 cv
214.345 251.037 211.016 249.279 207.528 247.852 cv
203.373 246.152 198.892 244.301 194.318 242.964 cv
192.953 241.882 191.327 241.027 189.165 240.824 cv
188.111 240.725 186.204 240.61 183.985 240.432 cv
184.63 240.342 185.218 240.268 185.839 240.189 cv
194.899 240.318 203.888 239.513 212.893 238.448 cv
215.509 238.14 217.622 237.22 219.362 235.95 cv
220.063 235.869 220.767 235.786 221.467 235.705 cv
230.292 234.684 229.89 223.585 224.296 219.097 cv
222.611 212.402 217.47 206.546 209.503 206.513 cv
196.134 206.457 184.786 205.227 172.406 199.806 cv
166.037 197.017 160.306 200.687 157.343 206.016 cv
156.544 205.681 155.71 205.433 154.859 205.24 cv
149.478 198.288 136.475 196.111 132.324 208.041 cv
127.565 221.711 127.157 237.694 134.799 250.36 cv
136.043 252.421 137.546 253.868 139.163 254.858 cv
139.173 254.925 139.173 254.988 139.184 255.055 cv
139.893 259.535 142.556 262.285 145.882 263.601 cv
146.548 264.778 147.463 265.853 148.988 266.579 cv
162.295 272.927 175.643 276.679 190.441 277.013 cv
193.517 277.082 195.825 275.935 197.521 274.244 cv
209.262 274.198 220.999 272.862 231.297 268.839 cv
231.588 268.726 231.809 268.492 232.074 268.33 cv
238.968 269.021 245.764 268.448 251.682 264.827 cv
252.38 264.4 252.869 263.8 253.26 263.148 cv
258.375 262.097 263.946 261.122 265.86 255.681 cv
266.247 254.583 265.735 252.819 264.596 252.298 cv
cp
.329412 .34902 .0745098 rgb
f
340.711 44.0794 mo
335.333 28.7748 314.537 34.1048 316.473 50.0165 cv
319.879 77.9925 313.894 104.972 314.965 132.332 cv
312.586 139.526 309.671 146.447 306.794 153.356 cv
304.97 150.472 303.019 147.631 300.847 144.836 cv
293.819 135.796 280.938 146.582 284.259 155.313 cv
287.207 167.999 292.754 179.329 298.228 191.173 cv
303.951 203.555 320.386 196.694 321.806 185.51 cv
325.005 160.275 341.235 137.52 345.2 111.846 cv
348.738 88.9437 348.43 66.0457 340.711 44.0794 cv
cp
.45098 .34902 .294118 rgb
f
278.584 156.094 mo
277.025 149.181 273.381 142.302 268.778 135.846 cv
260.748 105.11 232.399 79.3582 200.593 76.2542 cv
196.479 75.8534 194.021 80.7401 195.795 84.0868 cv
202.76 97.2269 214.715 104.543 225.531 114.113 cv
237.601 124.794 238.891 140.1 247.13 153.002 cv
249.657 156.958 253.142 158.893 256.654 159.256 cv
256.705 159.384 256.773 159.52 256.822 159.648 cv
256.629 160.806 256.517 161.971 256.381 163.133 cv
255.332 164.022 254.211 165.021 252.882 166.159 cv
243.804 173.923 234.087 178.313 222.393 180.926 cv
203.437 185.159 183.535 182.974 164.765 187.935 cv
161.101 188.904 159.39 194.87 163.354 196.755 cv
184.839 206.974 211.248 208.665 234.263 202.917 cv
245.887 200.014 263.399 194.025 272.768 183.738 cv
276.539 182.622 279.829 179.943 281.224 175.489 cv
283.2 169.168 281.126 162.192 278.584 156.094 cv
cp
f
104.075 137.222 mo
108.773 127.526 106.739 119.003 101.757 109.495 cv
97.555 101.477 90.5482 95.597 84.6898 89.0311 cv
82.3695 85.3758 80.0902 81.7269 77.099 78.6966 cv
71.9447 73.4759 61.4691 78.1585 63.9066 85.8758 cv
64.1175 86.5418 64.4623 87.0804 64.7045 87.7147 cv
64.681 87.7284 64.6586 87.7406 64.6361 87.7533 cv
64.8451 88.1014 64.9964 88.4725 65.1888 88.8275 cv
65.8363 90.3558 66.4632 91.9071 67.263 93.2967 cv
68.3519 96.0081 69.3441 98.7606 70.7777 101.353 cv
72.2084 103.943 73.8959 106.128 75.4886 108.374 cv
74.9994 110.348 74.8578 112.53 75.1156 114.817 cv
75.9681 122.385 76.2826 129.203 75.7308 136.081 cv
73.9486 140.491 72.4896 145.109 71.14 149.697 cv
69.7601 152.331 68.3236 154.936 66.8509 157.506 cv
63.4281 163.483 59.4388 168.748 57.0609 174.801 cv
52.7455 170.139 48.4134 165.48 44.2054 160.787 cv
39.6459 155.702 33.1283 161.801 35.2767 167.276 cv
39.3216 177.578 43.8929 186.719 51.1625 195.173 cv
53.3617 197.729 55.6888 200.508 58.225 202.979 cv
58.222 203.013 58.2152 203.046 58.2103 203.077 cv
57.975 205.613 58.9779 207.605 60.5541 209.001 cv
60.4564 209.41 60.4681 209.894 60.3334 210.28 cv
59.6205 212.307 61.3119 214.357 63.3295 214.456 cv
67.1263 214.644 70.2171 212.797 72.8138 209.906 cv
73.6429 209.9 74.4486 209.96 75.3246 209.802 cv
80.3558 208.896 82.1332 202.526 79.3783 198.673 cv
81.2777 194.169 82.8002 189.537 84.1664 185.896 cv
94.2982 170.43 107.449 153.39 103.193 138.483 cv
103.536 138.106 103.844 137.694 104.075 137.222 cv
cp
f
293.746 306.626 mo
291.73 298.047 277.073 299.014 277.826 308.315 cv
278.378 315.121 278.283 321.869 278.256 328.631 cv
277.274 320.796 275.379 313.139 270.472 307.215 cv
268.108 304.362 263.077 305.029 261.281 308.132 cv
254.595 319.663 257.632 335.343 258.702 348.055 cv
258.926 350.723 259.331 354.783 260.344 358.66 cv
259.766 359.253 259.182 359.842 258.639 360.464 cv
255.877 361.658 253.163 363.093 250.843 365.541 cv
247.284 365.981 243.732 366.657 240.181 367.471 cv
239.327 367.038 238.423 366.726 237.501 366.594 cv
226.177 364.961 215.811 370.842 204.717 373.079 cv
206.031 363.76 205.114 353.265 204.311 347.079 cv
202.869 335.968 198.314 318.98 184.088 320.76 cv
182.004 321.022 180.491 322.999 179.81 324.798 cv
177.71 330.356 179.826 336.918 180.4 342.648 cv
181.329 351.928 180.864 361.083 181.288 370.361 cv
181.367 372.08 181.603 374.577 182.05 377.24 cv
174.127 378.151 166.195 378.965 158.257 379.739 cv
158.411 378.309 158.253 376.803 157.661 375.275 cv
155.43 369.518 149.518 368.133 144.197 370.299 cv
139.482 372.22 134.088 371.488 129.688 374.265 cv
126.979 375.975 125.517 379.536 127.27 382.516 cv
130.41 387.855 136.307 389.605 142.244 389.481 cv
142.989 391.378 144.698 392.91 147.57 393.117 cv
162.182 394.17 176.819 394.452 191.439 394.006 cv
191.731 394.071 191.988 394.179 192.295 394.223 cv
199.959 395.327 208.827 394.518 217.418 392.353 cv
218.239 392.27 219.062 392.238 219.88 392.149 cv
231.866 390.84 245.753 389.7 256.344 383.827 cv
259.126 383.665 261.699 382.941 264.242 382.109 cv
266.913 382.715 269.829 382.54 272.626 381.275 cv
275.325 380.054 277.334 378.146 278.728 375.536 cv
279.973 373.202 280.338 370.909 280.235 368.745 cv
281.036 365.818 281.734 362.852 282.803 359.935 cv
284.056 356.526 282.582 353.188 280.101 350.917 cv
280.035 349.465 279.946 348.06 279.837 346.815 cv
281.369 351.017 284.255 354.45 289.327 354.125 cv
307.205 352.985 295.988 316.159 293.746 306.626 cv
cp
f
288.151 253.796 mo
278.209 252.985 268.502 258.297 259.449 261.904 cv
249.262 265.96 239.012 271.521 228.251 273.696 cv
223.886 274.578 222.503 278.699 223.423 282.217 cv
213.245 283.503 203.022 284.371 192.781 284.93 cv
190.427 285.058 188.901 286.511 188.248 288.263 cv
187.858 288.294 187.498 288.377 187.103 288.401 cv
178.339 288.917 169.241 286.678 162.143 292.709 cv
160.153 294.401 161.754 297.257 163.974 297.512 cv
169.077 298.1 173.898 297.009 179.032 297.063 cv
184.244 297.118 189.37 298.266 194.588 297.895 cv
198.842 297.59 203.18 295.682 207.494 293.994 cv
214.754 293.519 222.007 292.942 229.259 292.19 cv
238.223 291.26 247.481 291.844 254.619 285.944 cv
254.902 285.71 254.981 285.406 255.152 285.13 cv
257.288 284.601 259.423 284.04 261.601 283.286 cv
265.181 282.048 269.111 280.827 273.06 279.537 cv
272.714 280.401 272.406 281.281 272.154 282.171 cv
270.397 288.382 275.843 293.042 281.19 292.236 cv
284.912 296.351 292.971 294.256 294.813 289.005 cv
294.822 289.009 294.829 289.013 294.838 289.017 cv
294.849 288.969 294.851 288.919 294.862 288.871 cv
295.073 288.229 295.211 287.552 295.216 286.823 cv
296.672 279.112 296.511 271.02 297.03 263.202 cv
297.371 258.081 292.933 254.187 288.151 253.796 cv
cp
f
119.528 279.32 mo
118.489 279.289 118.441 280.904 119.482 280.934 cv
120.521 280.964 120.569 279.349 119.528 279.32 cv
cp
f
142.414 284.861 mo
137.814 282.765 133.393 287.763 135.59 292.178 cv
135.686 292.37 135.782 292.564 135.876 292.756 cv
136.679 294.368 139.148 295.673 140.947 294.992 cv
141.13 294.921 141.313 294.852 141.496 294.783 cv
145.846 293.132 147.255 287.066 142.414 284.861 cv
cp
f
129.382 314.036 mo
124.187 313.887 123.945 321.96 129.15 322.11 cv
134.342 322.259 134.584 314.187 129.382 314.036 cv
cp
f
209.29 112.444 mo
204.027 113.749 202.791 118.73 204.221 122.673 cv
203.892 122.587 203.593 122.468 203.207 122.456 cv
199.014 122.336 197.86 127.224 199.946 129.686 cv
198.296 131.112 198.764 134.528 201.58 134.609 cv
203.828 134.674 204.725 132.502 204.195 130.854 cv
206.207 130.335 207.195 128.456 207.177 126.61 cv
208.701 127.607 210.632 128.073 212.938 127.509 cv
222.591 125.148 218.954 110.045 209.29 112.444 cv
cp
f
222.881 148.655 mo
222.388 148.64 222.366 149.407 222.859 149.421 cv
223.353 149.435 223.374 148.669 222.881 148.655 cv
cp
f
202.911 154.936 mo
188.249 154.514 187.57 177.298 202.254 177.721 cv
216.915 178.142 217.595 155.359 202.911 154.936 cv
cp
f
170.01 144.653 mo
165.506 144.523 165.297 151.519 169.809 151.649 cv
174.309 151.779 174.518 144.782 170.01 144.653 cv
cp
f
218.375 138.534 mo
218.061 138.344 217.744 138.155 217.432 137.964 cv
214.994 136.492 211.751 138.167 211.668 141.055 cv
211.585 143.941 214.727 145.8 217.244 144.472 cv
217.568 144.299 217.894 144.127 218.219 143.956 cv
220.291 142.863 220.381 139.745 218.375 138.534 cv
cp
f
64.3412 83.8973 mo
54.474 67.9456 36.3949 58.4315 26.9212 42.3265 cv
24.3216 37.9041 18.2455 38.8529 16.4691 43.388 cv
.820662 83.3216 14.9877 127.864 31.3685 164.586 cv
34.183 170.894 42.9281 166.493 41.9877 160.464 cv
41.7572 158.98 41.555 157.556 41.3314 156.09 cv
42.8158 154.771 43.6527 152.838 42.8675 150.547 cv
39.9525 142.026 38.1019 133.333 36.3656 124.588 cv
35.6957 120.841 34.9222 117.05 34.1 113.252 cv
34.0902 113.208 34.0834 113.164 34.0736 113.121 cv
34.1429 109.479 33.7308 105.797 33.3822 102.132 cv
32.6908 94.888 32.388 87.6234 32.305 80.349 cv
32.2718 77.4769 30.4193 75.8338 28.2816 75.3216 cv
28.2494 74.6771 28.2494 74.0262 28.223 73.3812 cv
31.7425 77.1786 35.2611 80.9745 38.7826 84.7718 cv
44.1263 90.5365 50.6214 97.4417 59.2123 95.6712 cv
61.6527 95.1673 62.848 93.0038 63.1761 90.7635 cv
63.2181 90.4832 63.1693 90.2245 63.1908 89.9486 cv
64.8548 88.4681 65.6722 86.0492 64.3412 83.8973 cv
cp
1 .984314 .909804 rgb
f
198.503 79.662 mo
195.391 79.037 191.498 78.0687 187.287 77.1952 cv
186.222 76.1903 184.727 75.556 182.791 75.8148 cv
182.26 75.8856 181.753 76.0062 181.228 76.0877 cv
169.871 74.3167 157.818 74.5374 152.893 84.2982 cv
152.379 85.3158 152.225 86.3939 152.36 87.4154 cv
148.702 89.8685 145.197 92.6273 141.888 95.7494 cv
133.703 103.468 122.542 114.872 122.253 126.996 cv
105.712 153.419 86.8353 192.135 97.1429 218.618 cv
96.5941 221.954 95.9818 225.347 95.3871 228.723 cv
93.848 229.001 92.4486 229.832 91.6605 231.5 cv
79.5716 257.068 77.5795 290.005 79.9564 321.261 cv
79.305 329.859 78.9252 338.494 78.9818 347.191 cv
79.0052 351.023 81.2562 352.748 83.8002 353 cv
84.5726 357.697 85.3959 362.293 86.2699 366.696 cv
88.0716 375.77 101.423 373.195 101.514 365.021 cv
101.561 365.035 101.607 365.049 101.654 365.062 cv
103.607 341.789 103.436 318.419 104.325 295.092 cv
104.765 283.481 105.819 271.958 105.844 260.483 cv
106.312 257.896 106.679 255.281 107.057 252.667 cv
108.081 257.634 110.097 262.313 114.188 266.53 cv
118.008 270.468 123.448 265.814 121.531 261.192 cv
116.778 249.724 120.548 231.811 120.65 219.631 cv
120.748 208.023 121.409 197.228 116.851 186.527 cv
117.641 181.744 118.565 176.996 119.977 172.402 cv
121.338 167.969 122.871 163.597 124.47 159.246 cv
129.123 151.851 131.978 143.916 135.019 135.598 cv
135.807 133.445 136.67 131.365 137.538 129.287 cv
142.452 124.181 145.857 117.381 150.25 111.706 cv
155.729 104.633 162.462 98.2381 170.048 93.2586 cv
171.166 93.1844 172.286 93.1043 173.397 93.0355 cv
181.101 92.557 188.698 92.12 196.423 92.2977 cv
203.443 92.4593 205.859 81.1361 198.503 79.662 cv
cp
f
164.372 181.487 mo
161.818 175.459 155.298 172.306 149.58 169.785 cv
144.675 167.622 139.451 165.386 134.087 167.176 cv
132.613 167.668 131.465 168.846 131.422 170.476 cv
131.262 176.703 135.567 181.328 140.02 185.17 cv
145.62 190.001 151.976 193.774 159.542 192.446 cv
164.759 191.53 166.135 185.643 164.372 181.487 cv
cp
f
155.746 130.048 mo
150.583 129.899 148.735 135.752 151.539 139.428 cv
152.091 140.15 li
153.542 142.05 157.263 142.15 158.815 140.344 cv
159.012 140.115 159.207 139.885 159.406 139.655 cv
162.414 136.15 160.934 130.197 155.746 130.048 cv
cp
f
166.41 114.47 mo
165.915 114.456 165.894 115.222 166.387 115.236 cv
166.88 115.251 166.903 114.484 166.41 114.47 cv
cp
f
175.474 113.11 mo
172.166 108.94 165.341 114.019 167.986 118.552 cv
168.82 119.982 169.659 120.872 170.965 121.876 cv
172.934 123.389 176.657 122.075 177.114 119.579 cv
177.626 116.778 177.257 115.359 175.474 113.11 cv
cp
f
130.373 276.658 mo
119.868 276.355 119.38 292.68 129.904 292.984 cv
140.409 293.285 140.895 276.96 130.373 276.658 cv
cp
f
118.846 319.222 mo
117.772 318.228 116.798 317.617 115.417 317.119 cv
111.563 315.736 107.791 319.665 108.719 323.444 cv
109.673 327.333 114.138 328.401 117.146 326.207 cv
119.77 325.04 121.273 321.463 118.846 319.222 cv
cp
f
117.498 326.033 mo
117.391 326.122 117.254 326.126 117.146 326.207 cv
116.987 326.277 116.873 326.423 116.707 326.473 cv
116.972 326.327 117.234 326.18 117.498 326.033 cv
cp
f
119.181 335.748 mo
104.52 335.327 103.839 358.11 118.525 358.533 cv
133.185 358.954 133.866 336.171 119.181 335.748 cv
cp
f
152.454 331.492 mo
152.517 328.555 147.872 327.577 147.191 330.625 cv
145.309 339.014 140.848 350.966 144.473 359.261 cv
145.242 361.017 147.542 360.631 148.502 359.377 cv
151.137 355.935 151.322 351.147 151.868 346.949 cv
152.531 341.854 152.35 336.625 152.454 331.492 cv
cp
f
211.392 312.018 mo
209.948 308.521 205.106 309.87 203.987 312.77 cv
202.394 316.9 200.585 320.732 201.203 325.287 cv
201.737 329.202 202.856 332.728 204.697 336.217 cv
205.663 338.049 207.899 337.732 209.035 336.342 cv
211.729 333.038 213.724 329.051 214.311 324.771 cv
214.943 320.163 213.109 316.173 211.392 312.018 cv
cp
f
294.305 101.556 mo
304.557 82.9642 323.991 63.8441 320.488 42.7733 cv
319.607 37.4652 312.343 34.2606 307.831 37.1942 cv
297.767 43.7386 295.659 57.4867 290.708 67.9105 cv
286.581 76.6019 284.525 85.0121 282.85 93.8202 cv
282.826 93.828 282.799 93.8343 282.773 93.8431 cv
278.761 95.0433 275.982 98.3216 275.743 102.541 cv
275.185 112.486 278.965 128.627 288.269 133.854 cv
294.327 137.257 301.748 133.465 302.154 126.41 cv
302.539 119.641 298.332 113.612 296.339 107.322 cv
295.806 105.639 295.145 103.579 294.305 101.556 cv
cp
f
302.354 273.94 mo
302.335 273.744 302.317 273.548 302.296 273.352 cv
302.1 271.334 301.566 269.68 300.846 268.18 cv
300.885 268.17 300.926 268.16 300.966 268.151 cv
300.874 268.009 300.723 267.882 300.628 267.741 cv
299.868 266.32 298.925 265.044 297.571 264.03 cv
293.493 260.012 287.803 256.833 282.557 255.936 cv
276.217 254.852 271.207 258.718 270.791 264.168 cv
262.926 265.001 253.446 270.145 246.887 272.452 cv
236.603 276.071 226.378 280.869 215.503 282.141 cv
211.312 282.63 212.234 289.276 216.272 289.394 cv
230.185 289.8 242.621 286.665 255.897 282.761 cv
262.184 280.912 270.848 279.99 275.781 275.621 cv
277.065 277.12 278.479 278.56 280.007 279.838 cv
281.268 282.065 283.203 283.894 286.062 284.769 cv
288.04 285.374 290.1 285.337 292.037 284.842 cv
297.467 284.178 302.915 279.706 302.354 273.94 cv
cp
.356863 .270588 .231373 rgb
f
332.661 130.595 mo
334.588 108.107 351.016 81.0819 338.436 58.9437 cv
336.147 54.9154 329.28 55.1273 328.068 59.9964 cv
325.488 70.349 328.439 81.7889 328.42 92.4642 cv
328.4 104.41 329.062 117.917 326.519 129.582 cv
326.331 130.447 326.489 131.139 326.779 131.736 cv
326.619 131.822 326.436 131.871 326.294 131.978 cv
323.188 134.327 322.692 135.175 322.01 139.126 cv
321.072 144.549 319.361 148.16 316.548 153.289 cv
314.101 157.748 311.54 162.104 308.939 166.441 cv
307.398 163.401 306.052 160.181 305.295 158.277 cv
303.802 154.523 297.257 156.164 297.545 160.138 cv
298.165 168.714 296.967 179.101 304.096 185.37 cv
307.543 188.402 313.712 188.899 316.234 184.16 cv
320.463 176.212 325.667 166.124 326.684 157.121 cv
327.32 151.472 328.975 147.177 331.205 141.949 cv
332.742 138.342 332.529 136.46 331.087 133.121 cv
331.904 132.69 332.549 131.897 332.661 130.595 cv
cp
f
212.09 70.2279 mo
209.396 69.0902 205.103 70.6844 203.788 73.3314 cv
203.297 74.3187 202.807 75.306 202.319 76.2948 cv
200.047 80.8685 200.068 86.0042 203.679 89.9256 cv
212.825 99.8558 225.937 103.06 235.668 112.368 cv
249.196 125.308 266.035 149.981 258.449 168.547 cv
247.175 196.137 200.878 185.295 176.639 196.68 cv
170.854 199.397 174.625 209.634 180.76 207.3 cv
207.157 197.256 277.493 209.492 277.06 164.651 cv
276.685 125.535 247.462 85.162 212.09 70.2279 cv
cp
f
198.232 339.719 mo
197.681 334.603 188.959 334.436 188.026 339.425 cv
185.279 354.115 181.836 369.275 187.655 383.691 cv
191.145 392.34 203.571 387.615 204.138 379.731 cv
205.1 366.395 199.652 352.893 198.232 339.719 cv
cp
f
179.069 346.249 mo
176.725 336.783 162.65 340.335 164.422 349.836 cv
165.266 354.36 165.687 358.864 165.567 363.467 cv
165.451 367.975 164.394 372.441 164.744 376.937 cv
165.005 380.328 166.66 383.28 170.066 384.363 cv
170.696 384.562 171.405 384.629 172.061 384.689 cv
174.408 384.905 177.66 383.366 178.676 381.145 cv
183.555 370.495 181.812 357.334 179.069 346.249 cv
cp
f
239.234 351.175 mo
238.808 344.919 238.905 338.199 236.624 332.304 cv
234.838 327.686 228.341 325.46 225.355 330.499 cv
218.687 341.747 219.29 361.064 223.043 373.243 cv
225.939 382.642 240.907 382.057 240.937 371.344 cv
240.956 364.621 239.692 357.886 239.234 351.175 cv
cp
f
299.845 317.88 mo
298.924 314.393 295.986 310.488 292.199 309.779 cv
290.375 309.439 288.614 308.971 286.749 309.462 cv
286.569 309.51 286.384 309.558 286.203 309.606 cv
282.707 310.527 278.821 313.468 278.102 317.254 cv
276.175 327.393 270.138 360.827 286.891 362.185 cv
294.327 362.788 298.953 354.173 300.285 348.175 cv
302.395 338.686 302.325 327.258 299.845 317.88 cv
cp
f
90.5023 110.182 mo
78.1605 130.167 72.2484 151.324 68.4584 173.247 cv
63.3138 183.311 56.4418 200.275 58.7552 211.184 cv
59.2035 213.293 60.9086 214.467 62.8275 214.941 cv
62.8031 215.146 62.7796 215.349 62.7533 215.554 cv
61.7816 223.528 74.5668 225.474 76.6234 217.84 cv
79.6302 206.683 81.2679 193.984 86.1039 183.474 cv
87.4427 180.564 87.4154 177.693 86.5257 175.206 cv
91.9193 156.433 98.849 138.111 108.321 121.298 cv
114.935 109.559 97.6371 98.6283 90.5023 110.182 cv
cp
f
290.224 351.131 mo
290.157 344.568 290.091 338.004 290.024 331.441 cv
289.98 327.017 288.34 319.644 289.867 315.739 cv
290.366 314.463 290.923 313.481 291.543 312.651 cv
291.329 327.022 290.808 340.076 290.224 351.131 cv
cp
255.71 340.514 mo
254.737 330.844 254.539 320.218 250.793 311.196 cv
249.228 307.425 244.793 305.543 241.043 305.224 cv
228.507 304.156 211.389 308.952 210.056 323.155 cv
208.366 341.196 210.627 360.592 210.902 378.729 cv
210.917 379.738 211.059 380.667 211.274 381.543 cv
206.623 382.196 202.291 382.815 198.545 383.445 cv
197.181 383.674 195.918 383.752 194.577 383.949 cv
194.429 367.273 193.977 350.352 191.756 333.812 cv
189.68 318.362 179.811 315.871 165.269 317.769 cv
152.234 319.47 148.88 327.72 148.42 339.863 cv
147.866 354.525 147.538 369.202 147.146 383.871 cv
128.488 380.814 110.626 374.314 90.9789 365.01 cv
76.5775 318.434 84.4222 263.715 95.2015 217.462 cv
106.327 169.724 124.465 79.7157 187.076 78.7733 cv
237.766 78.0101 264.515 119.073 278.24 171.424 cv
277.56 171.655 276.866 171.869 276.31 172.253 cv
254.035 187.648 240.594 200.51 211.506 200.215 cv
186.511 199.961 156.448 193.471 135.706 179.262 cv
128.005 173.986 120.37 179.779 118.799 186.873 cv
118.303 188.177 118.03 189.666 118.102 191.389 cv
118.913 210.817 113.808 244.055 124.364 261.091 cv
133.526 275.878 159.697 280.753 174.903 283.408 cv
216.041 290.59 256.544 280.47 290.539 257.603 cv
291.074 267.188 291.38 276.628 291.533 285.799 cv
290.379 286.048 289.202 286.438 288 287.143 cv
276.217 294.039 267.517 297.781 266.877 312.46 cv
266.159 328.931 267.211 345.698 267.377 362.185 cv
267.41 365.285 268.485 367.728 270.107 369.575 cv
266.168 370.98 262.063 372.283 257.716 373.394 cv
257.417 362.41 256.811 351.455 255.71 340.514 cv
cp
233.849 378.219 mo
233.713 369.348 233.577 360.475 233.443 351.602 cv
233.342 345.008 232.202 337.002 232.486 329.868 cv
233.381 336.462 233.196 344.044 233.638 349.616 cv
234.351 358.579 234.723 367.55 234.902 376.54 cv
234.911 377.062 235.011 377.527 235.076 378.015 cv
234.666 378.082 234.256 378.154 233.849 378.219 cv
cp
170.085 385.875 mo
170.343 376.873 170.602 367.871 170.86 358.869 cv
170.967 355.079 171.076 351.289 171.185 347.499 cv
172.396 359.806 171.538 373.371 171.629 384.311 cv
171.632 384.842 171.727 385.314 171.789 385.808 cv
171.231 385.813 170.641 385.877 170.085 385.875 cv
cp
84.2347 170.392 mo
80.016 184.022 75.9466 198.414 72.3412 213.21 cv
31.3871 175.964 17.3187 101.834 25.4798 45.6336 cv
47.6107 73.7826 73.6703 97.5247 104.477 117.071 cv
95.8509 134.479 89.516 153.327 84.2347 170.392 cv
cp
279.022 195.207 mo
280.517 195.824 282.097 196.168 283.676 196.205 cv
285.78 207.838 287.363 219.766 288.555 231.703 cv
287.299 232.124 286.049 232.724 284.848 233.659 cv
258.49 254.179 226.097 264.768 192.591 262.45 cv
175.145 261.243 158.307 259.506 148.7 244.611 cv
142.061 234.319 141.331 221.331 141.247 208.532 cv
162.851 218.306 188.243 222.911 210.845 223.178 cv
224.655 223.341 238.743 221.368 251.684 216.486 cv
256.681 214.6 283.322 203.261 279.022 195.207 cv
cp
318.736 43.9188 mo
339.418 93.3558 339.182 140.08 303.722 186.937 cv
298.113 158.941 289.758 132.424 277.52 110.629 cv
296.211 90.6288 309.934 68.7303 318.736 43.9188 cv
cp
313.699 211.083 mo
368.867 145.164 365.65 78.2806 325.757 5.72592 cv
321.389 -2.2189 306.605 -2.24966 304.692 7.86411 cv
298.614 40.0233 285.85 66.9037 264.32 91.0497 cv
243.981 65.9349 215.761 51.6073 176.669 56.617 cv
149.406 60.1107 130.222 76.2118 116.006 97.1556 cv
81.1537 74.9222 52.6254 47.2562 29.7377 12.7816 cv
24.4964 4.8895 11.6712 4.8436 8.67222 14.9207 cv
-12.5006 86.0829 4.42027 191.702 66.8871 238.102 cv
57.9222 284.337 55.4447 332.971 70.1879 375.368 cv
71.1498 378.136 72.8304 380.107 74.8402 381.425 cv
75.766 382.612 77.0502 383.667 78.7923 384.493 cv
112.252 400.339 145.409 412.589 182.977 408.91 cv
219.068 405.378 274.861 400.07 303.907 377.076 cv
306.028 375.396 307.212 373.466 307.694 371.492 cv
310.348 369.741 312.314 366.881 312.566 362.802 cv
314.675 328.58 316.11 270.829 308.358 214.572 cv
310.214 214.125 312.05 213.051 313.699 211.083 cv
cp
.129412 .141176 .129412 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (head.eps)
%%CreationDate: 2/19/2018 11:25 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VGp`C$!WIlG7=[5H.VD/hWdA`:ZYFS*=Uhc$A&0!=.!DT/0p`*6h6Q1phtMEQfJ66o@W@Mnp99.fWeuuX)9]X1q3.Ej
%?N9N[S*-uh4hUdG?gQq9G<aD+m@pr!TDLW4q;Nbdq6/+oGQ7X<Z9+[!YDmaLRW*niRp:'JlRpE4iRZKDB0X&AJ+`NY2m8k0J,fK;
%oo%F?^Al1?pt)FIG/&>!XaK\]pP8V^04+ZiGBiZMftYTkqd90&0@+"\?XCKmq=O&,geI.*^ZNf@pq>H/"5nCsa01!c;S'TRJ,<8Y
%-Y)3-TD\,DL[gMTbP'D7rn[O^cbFu,k3:X`Y@%6hTAe5sYC[8_ebs\fo`H)u(HWl/Vt/g7FT88:5J26AceS2ojO^k*gL5p<C\QTP
%d.9Eh$M#=_gS`JY[a[?QqmjPXIbFC4ptbB#S^ZbLq;hq/Y^/U&G&deQ:Ku`-#PoksM&lNmrQFY94FMS&1\AN>9g$>WjuXdm[aA)n
%Pk3g-`n@sa##'Aae(s)UgZ@MaCdt%<mOlefhUN/:rl=3rJ,.(O^YV3Rk5J(8j8GIV?TnErEgF'+GL"AEVgRYpEoloMrUAhGbs/pg
%r`42"YV5<&rT<c3pFg&,I@SK=V`ac`'DR'fiqH7+I!blo@/0DQ+)jogfVPQrp('C#r:SORh?,0#H,sp=]79MNfDggd`\Q_h1^R?Q
%.%=^OgeE"`LQfEt`mmG!@:sD)169/.O23MLI0^GM9**]&^3T_Fo2i]JF4gFR79a0qQZ&IFdm6"J?./a4oN`BLF8[_tQ9BKipAS&t
%L9Y)-Ikr4dFSD9.atnMHk9"%0n^Z+OfL$mVA(*&=<X1pM=/Vs7TDi;4BB,0qf>$_`Isl\D]mMl_f0&*n&Fb1pq#>T?^%72To8HK.
%)5#3\IX8QoG.fI1>S[D?$3?KIJBL9h>j@tBj-lKX9pRHhShi"B)40;@r/]$]7pL4"in!-%T,`p%k&S;9QV.UsrGo^XQ]'^rPL_2K
%N:`P7.;l8[ca2De+1MaF_Z.+Sl`.#9c`ehqO)(sJr6Me&mEh?-0)UdFYUKF1TldV_BIjMjF7&`+h,kJbWdCa%^h$Udrl6m_$i9-;
%EUp]i\sL!.pg7siea!9YqDp]d4ss]uWa;E,\.!/krtn?=;HL#nQ%Qt-\.!/S-`pUJ2e.jB++I^M$4$@@9HIL7+.$Dqpg4P1_*p:a
%B7OVq=Q&6j,h8[=.I,dM1>TUS2nF<@!%4sKdjOJ6p"8o"qLr^h^^?i=+E,kslc3*Prl8RWlWBqMMr'EmE=E[3[oXu]R&&K7cVR09
%i*:i1_At#-+JV2!OeeSNm_6tBpKjJnS&`Y&K;n1cl/T)GHlZMud*MBc9O8<2+^<9!2b8_6n4Q'XA&$kF[o_q`GZHc(j+0OC`ISMU
%]Y-[2`Vb2=Fg([V?qti+H$eG33o)jYqICUKD`).d(Od,tC!)dMqGI9l?d@onrMP+dmG;V[s/B?[lJMQ<I\iiiVpq<0b1D*G+8)9&
%FZAUBrMP+dmAH.koq2)'53q,)Vg_A-X3c-^+o^*be\CEWq@dYOmcaT1'Vm7NCda1/q0S1;0?H]^p@`Nqc?bJZ\AC`W&8o90qK&:i
%1-$Jf4AG7,Gk9&Sb@TRc_DhJ7mAK3!O7;>nF:^RV]6,cUii1BJK4AT*]oU/>c1Rk%8Y#Q^B2iN#Dr-N=ap4sXLS^e-O4Eu]PK0eR
%`,TX?.lM0JJ6n/E@co,pPk>4Ta_/ZU$&mc'+64'fV43fjh(jZ]n&Aqts0?c.^t&\cknM^hVVbMQYYo\n=_uEZbQN$a/.fVMeg_be
%4`bfecf'3)3/f63@UHU:L@<6(\:[!8k2b87b9j$q9U<#aT@a%WJ[ql&afXkNHb8&k:=AAn`j==<NMh\tL63."BUkfVa"+BWR4?))
%'-GT_;YO\V0Ff,gebVitG8Yie#^:l-bNF0Z@Op'.X2uk3>D&X/#pd>k2#TS/p=rmdqiJ__Hg17d$;C6&`'qoCaPM[?oqP+lbRn6?
%BBsiH.6r5@-H8X%S^t3$1DhBlNXbo(Ha6bc4S>GtC07^o(R$RbrVL?q[_HYn-p3o3$g3'/17>gq#D)3[7s],UK^r$N,gi)cf?_$E
%>H#/Q$g0DZ[ZWk<iq!eo$BbHu64E:dJ@YfFpf^EWeucmjEk,O%1CpW1g:Of`6"3915A\_hb\\FVD)o&/\m8CF"IQd@j$#-T'=4"Z
%NN&ST7:dS?=XN&%"ut<,8H@P@5__3PGb`V??sJ9A`G4G4:AhWBcf6>h<sH>Ejm2B;cNaY;&Al<;Q3=Jp1,,r&6+jdWTB[:&1_.^e
%J4m]>c8SLE>^sBdAeIt7%7g?B:I:iJ>:@mb0h=2#1BheAXH>lT3#!Z4r=Yjkl9oU?hAcnoWT^t)o:Tt9'!>f,iS7#j)L.F*T*eJN
%mG$nQoBG#2?\d;RCmI.2QB-(hVHa^J4f3Y_RjH3VXB7f<_=oC\A]p)=Fn^1T%U^h1@od!D^:CCa9A3>2a0Kr/3&5k7L[[6`9l<)X
%d6Z`+XC7S1naQH7lR5*a&j;$=4m%D\pZ)I#\j>X9Lotb<*JYkU=]W'<Z*;lbnGmhr6$/<_*(>.h>!#!#mO0s0pOG#Qr:-h.g,8mZ
%#M?cFf#]D$Sn@rX@T)dkWT*cM#g:,A3lsu*@p%T0/[@#@Q<SDmm^_q9@0f@D@#O#QTD$kuh]Z=@\`9SKFSuF/kX"2n\TR]?+W=S"
%0fKZdIZST^DUhWE:dK3>/?C$RDQM%;dnGU*A*)HL$Ge,+eUAeuA`kQJPu4G?3`gY23gJ_^j'3Zo=;;=cTg3ZQ<9Jglc7_+P-!*@L
%Eo6Q%6iI:Rg-jVCS7WbHDVaSgoi+#QhAWs4jIM;NgSpXD,6d]&U3j^9:R%+8>F]I,)38@XbQDnAaAFU=V.P'FKpK#f`NtT+])!?a
%gni=2HCRb"Zollb"%_(-KIZ'K/B[A3H`q4uI@QKS9^9,kk<n,do=d2&\F[j;YFhJlf5Q4ZUl+nJl9IM_NWXS79/NY5W=C<[0<8@b
%TB5NjPf-8faoFQ6c#H7j3MJ%BnihGhHt?&Aq"5XC3m$`A,+e's2N4D#PA]cuMLce5<[cEUm^QA/=iRS;K:9F_+A'`=QcQa%8ei1b
%WM$d2htmU`,Nq=.aEs7?Bt#c&7u;*K`,RAKP$tpG(1O+_J3nP1C;?SSkY:=%"7Ys0-)EJVNl%MS@X4bN>3&jTS=F?[GlIBmF6t1f
%(&#*L7_;3AI9G@.ntU6/!Dr'C[U*:ZL\?Q!0S;!I$1WN28?pMN;l<DkmFsn&TQjTUX.%OgU0U,N?5h2a!TFiH*pKb8gOQ/udbJ8S
%[c5$L])@L(f[8'>(G>q]KnfiUDs[?qe>_AJ<(bmWn2?9V%9!nRi39[]_)7BVILg,DH`m-jYu$sVTM.phIn^HS=;XNg>]S817FZD+
%@@!),aH!Mh?ur9FWqb*Naq]QKP`M/.Ea'XGW-WXA7YCMb*9$8X0eOd!@f!UsA]G&/-5LZT62)&,ITi'c(ZI_Dan;KQXeW,#S=Ohn
%@l_%L3XbB#,M^;Z9"af\Q%SK`:ioo80IlmMbNMMNk\Wgc_1O^VGt6tI=QuY@/@4JB(gWe.7Ei1/#mso/X8sN*_r!EB^%8o@&r244
%L#--ES=R+0[9OWQ:Ocs8mW+7]:,f6%^TJh7PgIQ)0*<$.s$@i-!1L@X*ne\$9r^fX,AZ.&:Z<^F5T`B_XBrIPI]Hg`Bu*c5"i8jF
%q65jE*Doc:?_%"4:j/Y/CGABATCJDHZ5RkoT*k)KfnV.Kfl\14p=K5=$>:Y9XOtUl]>H%/qIXEnA<B;KI"9XOT/;Y+atrnDqT-[L
%og@83X!Md<bN].!G$,NaUJe9!O+VUS=l`acXG0ior(T%Zj05]UI=9;;MJY*27[n5Iq;iq#T2*#+oqks9lBVq&a;Pr$\!;>lI;E=t
%TsRmsqM=`sh.2`?`iA@(l/PC1"bBW'hNG/s]s(G^SR:(/_"4umoNI_;KXrr&X4n]lDKZu*'R6cUIpl+iB*tT,<$,s6F_).)c0_9L
%$'\VtaALp-LAL23))-'a`4.[RX-gbra(l^(S`\f$VcUa/5:]0+cU]X"[ee[DVGtpV8fFiA1'=db;U[-)]IBq&ntSJ6DqYaP3A'.;
%e^KdThiMVL;m)q'Jh@WNd*oDqDL0]=7c3]%TBl236-"5f#V_(1ml7h2=`;*\IWSjQ)._GE-t@sV=9+G+<6bBYl.KV$l@Z4Ufk=&C
%hB\s4bkeS]So@eP_=;=G/TO"ZJYR:#UM$ORg`dL`GV7PF'o-K=%4Hj1(@iu0^N$l3*e9:@8.27oJ(-iQ?K(Fc?\,XFe!Bc0c?b#W
%2)nCGp`e7JTaV$-dNt<U_;-dN&`tNWD3Ds=jDAsRPGiEZfs1+!"TfDi:p=*t,8QfF/0H"c$;*B>'nE:fXrLO`^>!\n1V8`H"LDr`
%,^AZZg?dd%T_g6j>Yhigf#CRtWXPj;Bt.H"F25-\E"9qIHdHHLj@9if`2Tm-rn3`:F&gi%[C2]E3#@V*i3Kh#]N)GAl?`=emf"?T
%?iM)^[>d^9>oWGa!un+A#Xt]H<WS(]^0dAf`Z[&3'<(`BW5].5,n+mF`<M6JpG\N6ad@rTbo9dHlMgF@#1]doa3/&;R5g_Bl12dC
%ElPkp7r4/9O80*.5]slp[8!aJ@U#;iTe'T6O4ptX.,,mq?LZ`g.:F`(ou_`p3&nqR\/J^TLJj;?2M76-M99Bd*9Uc"*IlXmDV@LT
%/<rbCh8n6`Bs_0K:kf88\)Rk*G%]kk`9-dpiCAT9D;lI5p#F<O)06QMhI-_)8rG4LY;Bp8Bg*ScT@>j$a$VmJgqceVYVP[.;1p95
%8")"+SnQ>>htqQ#ejE:^mnIXY_ioT\_8f=j[hmuE,@A4YP6]]qd,k*>SF>1MhL@^l#),85F.*@e1*EL?T=B<gOuW-PmHEC=\=V2X
%U#UT;f0LUF9Pg?:UNV*,f]De84fuX):A_DY/fhj8Q@?qB.Q\*e]j<p[$])@o?8pE,*Te`G-@L\pcoiG"$Ci48UH!Ncpj%eGpM]$!
%q[p'9>a^#,\%_7/mQS?F6iO7d4`HAaNjjLuZf)\;>E]iFaRWsPA#.Y(KsJ:hKY"n4r-<\bBAZCd9WH!Lrtu>)ZF?$:40:Gd5q7dd
%\\CQmXuEa^ra"F5+PYI2rja3m-)u4sQ";Dh?De"i.h_fJD8bLRmd*;*(SXdg/:FfSg:)m@lC0gWCnYU)fZ:e#HLC5%fP=*sRG&Ci
%lUP61g8;Oj!BP%F]"&!UI23i&qbQ!2G&:-!`jOQ:R=e,q&<qB+pqFFiMXST$E.$SJB))G#*iD%#CQGXY<u&ptTMFR=&)]IMV[M^(
%pjN[>FsHrn'HkQ/YB(m'OcB:qUqnG&l<X16Hl+1<^-=0#e>`.E'M_p+pI-WMfV6%5Ydm&6$Odrg+IbF0[BR:e?'(q8(p+Qm*B:W[
%8>^eD`ijRbh:oGMS0XBN<)Rudd]=@<p-!k1Y?M:/[j_(kV2D3p,0#UO_+GE@,hm2M;+al;8#uG"B>;_i=Dt7cFVAH#0^u74j2%kb
%,^lsJKFFBD_5GuqMcb5J96RrkOq-uiThRXkC]?E7TX9psSZ6%b2F\7SOZan!8pueDA)CK2=FT/?IG<g_)!RhGg1'GZ*0#7M#-3$N
%&aW0[g=2o>YEV2L;4XIJUB.K4gH#nhOl)LHh_o<*Ws"n^Dr%P_*93EqZSo>"UHa"FnXEJ7Oi&60Wt7b6&Q.BoKe)K*k_E8WW9O2]
%%+@rjFrS\kX426u:"NX)hFGnJ2qO`QO4qZO6C#+sXr9,=!nT1'LORm=%ro,gdC[XFn%5Q%Zh;K.rbCb8W0XEZEK)=?'8@N;,$$.)
%3jlA/F;5Eq2GuKC!:B!YX+&'KE@$!F0T"AQ`TT-R='_i=2([-g]of1<`0N-b-*"%#WU<HrKXK-A/51FHjpmU]"'`LaPsO;fgKC$S
%E,.#;CdFhMQU"_d7J1RdT&1'CFW#E4$B)Csg/!bS4X`e^Po8,2dpjLl1[T+,65:WO+e/=NPNjY)X4u>RX+`@1"UpYM\Pq8"eWuN'
%l_2RU@qG$LMb<qcn@7e4?#Algg,J\8.g19YmbW,$4`Hn"[n1^6+n,<^J`M(?o(9'"R@=45[stP>G^t)<H(.LNNGWa;#1.oZ%J2MA
%@Pa?IpY]AAhc7f`p(QR1,0*?LmHdtc@\2(og<oNg\8<4055),E;M750pDA.ao_ksU,NI'%1F5N"l>g*IDqtNQb##<T)re]pFa)Hj
%JCi]/Z-mg(n*Xk:?"UBA\*q$8$]Uh#^M5_@$$MZpf5Oi8*d$dX8`CL;:_)5o/-757U-ZSflS'BihKm>@>0)J$/e,&!]j\cl6[*1(
%k.[,Sd(r_U@S('P9:onqr8l?S*.-I@"MG[]:mD*Aoos$b6E&Mp@,k#k=>tGGE>7YHoWN-#mlDk(J[e/?0),(*]iKEK0"&R5%@L8-
%a]3lXe`O#b[`]4f7&[h=7.m_#C'prqcI(#ZNFGr^>;04L*NK7b>7NIc%6??`AZmJMe>\"r$diq)%]5?$?4i?cog$E91tLVDi%cM!
%(3SPDJoE<^[bT5XO"n9+kL+KaTC&dn#55uEFLpjp(cQOn#hYk['q83qmV#SM\K$BTQF`4!P2-%u'$:n6La9HRkD;[<;$hOR<UIA5
%#99:^,67UCkeZb4?%QG1@f8<c"6u]#qPn%LRrii?D`[7XV:asH@uDALW[V]@P1!C-lQPXfkGfCM=(_Em[jLugIl7:Dh:p2%Og:,H
%KgUbRD38:+e^Cplr=\L0pVi9.)>Tpi'i_Xkmq<EfV^m_l@0pEpfdI^([u7V0mAt-i"!CgKX?8f\kXsi*c5P%ZiSRGORc/aqFS0lY
%b@q&lCImT2Kn9(69OoEIRr2IgZnA&TgTHD'-d<I*oq2s""kME`Hk"o.P]qK;$*<9[>H1AsqZ>?_ereE7880'<]P__4<=/DQ^hln#
%40Q6T[EMg(<kJ$fo2?7%2PGoEcs+"e[VidR\&h#kQ#^s/3RrD^>:IbZ[^?j"+&sJt76(]nD%S`(K#S1c?ZL,q9O.mW%M7=U[Lq>n
%[_SApb?$cH`M@<H9+'bUGAUfo*o+ItVWkOC`eL]3LjK\D:o*FiN?_Z1Ri"dL7PQsS99tpq_@SI-e-LGhc<#@T+-VR'>(('Q)]2$:
%^nhR'b$N?3/h2!\rG7#o@n>lPe?,II>0YWj=-U8;c0J/gl5!n0+NbDo2<[Hc\TT=*\p&)Bof'8b,/J7Jp,j&RZm&P3]6*B%'re8;
%K3Q=a<(PEkeR/<!Y)VsUk;'ASf$^,bk]>Y\\]H%^57;I=Oe*F*"OH![%tMoOU<Ka#059t;URoBeRsoB`n)AbE%VsZ..D&HHFgaCa
%p6iSFjO]=:8p[StVq,+<kEcD>XdpQKq_7nN1"*[;YOC0\%[7lMWSgIljsT=nhk209q=XOZ-0g>^*jo%Lrpn>"(U(S*TCtMEfiRod
%J,&Gg<oIZ2fDk>DDKu-f-*a(inIPJ!qYJAO5KJVpI.R2imsarp:TpC<n^IFqYQ&j^qeu5ThS+I1r.!OPZhs,3s/5ebZe\D[C4>pS
%2c$'f)"Mm_k3hL*msatj!A?*t^:E.cVfFHjX?ReJs69MYYM["Z").0!eW9GX?@OmBXOfUI`%PI[IJ*6WNZYV/J,T:8q;eOA;]cVg
%hS9#e7u_fok54UX>;utn=cNHs"iEikH.9$i^Ub>8I8Ab5rQFLcs+1?"n_se>qg\S,mf$S^h_jCps)S/5fq6l+QJN,nouj7Os1CG+
%\:=1rpMC`=cb@<LFmXP"b)]>*]QjGCS#>0Bq>%AQiQVnjs*=A9f<8Pgd5O7-:DuIX8%A.F&,kds0E:hD`UiP*[`==i?cr()J+hn$
%X1s,`pAT'YLP#2;?N'S_ma(PUap%)7m,,J+HerQ3s0b^=GATK755^K6PcpZuB==D:r2;cVFT6:SP^:F6Dk7@-hB5W*?Lu]SSdI4I
%p%(D^"&Z>JIsV+Z)k$G%5<OFBhf88\bO=pQQ/,MkIeqk`0rJ@R<?KY=/KAWg=?li]_n=4'h;Qn/aY2O6rT:Y0b?kO5H2<M>Xk11[
%r-8g!It.Jj*ja\;Rs+DknBI.MrqXYPe"*rsgDRboO<`U\@IV<J9]@_>]Hgps$U,lL0Ec:tRBj&G\,4;!LGti=OC9oV3Xjl&TnD^s
%(qViIY)KTk4$W,V1gqB:!TWL,*9Qbh8'Su%P)8spT#W4HL<edtl4@0NmKOe_q88]j?JPS:m^I,+^A8UmF5=/*^1j$Q%eso7_&/6j
%Eh9DPDu:ijfaqCTZEkna9mJM(WC"o1oAkgXfR%=M5OUIZH-0c6VgQR4^;1uSOF;:tc8HVU;`^gT3[FMD`>"J.2OSeuH%6k</4FK$
%EK2ANUn+;%Jd`5(hi?ZJ$Zcl=1mfs?C/<R:T;3M+6(0pY-Qf11n"a(h/;hl'O`kn<Bei\TSNOam>i94.<ckrf^<C5(U1d)]jii!F
%dc)eg`'n]I<kcg0gG;Y!_KM4l8uo=O[(V_n=r#sM8T/0R47fi_7bWN-0'4_P,jc]nG*#F\<=;>cBgE1D7NR1$N0u<HcI5A=;8*Ri
%?<Ur6dK5nnElp<+,G';Qs718B@\u"Er8a(YJ(L`ug("pHQZhNc)%\5]O7N<JgAZ&Qn,4COj?O5QRQgop_dSjc/]!)nH`2nd4cHDN
%>Q@-5O[-u"!5hhFlk"L67G:>kk9pcU!_`_J#XNtaKd&&hMUb:+kpYpaGhVc.%&0%"Y!V\=5(P>;00iX."No#a$(VY['bNA,;h(,%
%,l^C156>d()?PC(`t>4/"jrV='$nu?)NXH;_"8RN7Y/`*O9sR@cjBJ("[4RC6LcXH>#/f-`*_sM&[.H,Z?:reCaO_:+HUe$B*"B&
%+>q>^SS,U'a31n3kECF[i/VlaXR$GblmG"*_Bct%P<[7eAm'8@>r[Rsm*mS2Rq+0J!gZ<[3oD;%E^CR&Y?B.($:Qpcfh4?i=\_-e
%,TQQVrC(,4$H,>`U:n@l=^]P]$9Hk?.#3`4T:?&^c"WJ<%&1fiI](ZoF?#gd18:GjI.hC8*/4=Wcc>WKRXSNFKrbgc*!V7WJ53fu
%L3C.u><D@s-6<_KL<BT/!LTAWQ'\>h8dT=%`;pJP_@s`t@o"@lTER-fecSYI`_X;[E5pL92WI%F5ET3F/>S#j=JCEm;$Dn5PZBJh
%mhR?VFqS>sE8tJt#=CnK=`V@m!J-%5%j5m6LoN_p1JjOp$\Y.q-MsR.+L`8Y]bdEJ`sp[EBkKCn6%.eoK[Rsc3,-)H"V*kbJ18TK
%i._p=rIc2^5imY_$KmN2&aIR"_#_Y9@F9*hQrH:"*7T'bUoZnBgQ;g!dZBVF>]rOX_,E?*CbU],2?3k$'?&pMqc"1Mi,kLr^A&>N
%-&Y:sk)?F^`X/D"&kPlP,s3*qeI\F*fKaCO<"BCG!L:LKih-c,$qHJ:1LLWe6QcY&"T1O[#RLk[N19Wh)%rN71;kk1CoEGn1Dd-S
%2o;.OT+EqWi`>$A6Jr-%'adGjS-ar[&kQ13M#rkc1_t=P&8<(ON\FV0EeMU;RItY)&rm#,HPmG%)e<0D5`ZX>RKTM5!\?imZFr@Y
%ajPfX]b?2),FZ\i^g[e-\\s+k*HFQ.CrML8SE4Hm.!r7`W9g=9+d8u-6HHEf+^cLh(]sCS1R6bto@V5u,Vff^HT[L#<+^-7P6$jI
%EsQ:dar2V4KG0ciSnoP/I:u>?0bdC.753C2Yp<-sR9>JrU.B<F#Ut?rP);fi.$,8\84:sX5]S:4#_Wds6kMd07)]ZO4k*O$Mo]=a
%W,WGlLS0dG"aN-:_-[A^?'PM9<=IqmnPfeL<>faW7DLM&s!%bHU&-&=nOEAgq_U+/KB]Ij!t#1Q,sjBjRe1HQGLALrGYaul(^hu-
%,\=L:!^>uMpJ_.ln^X\<0CQ[/I9X:eX&&mVqdk"ZQ%:EA=HO-,:ou:9IhXq[6q2,^^E=gBKdoGbDusEMJF1isKcjcK&.h!_]O1ke
%]n!@!'`mS5AHkf%$W;<_StY5pOaq&d%O@B-/3tU'M.7f&4HLPS/,L&lXmB,WDe6R+e#b1Q(K+>V*%;Uogo6Dq6*3K99OYS+k`jRG
%Yu>\@">;[=f*Pf2l'F;jD3PT4@bBGGZqG7DhEs*R9`Vt8[<]*h)pL#TaloiBDROf%ab[Di9-;_q`5c5U+4Fc=7pYlap3FS\<t)["
%&XkIRl_meE/9GG9]lo.bS!<"W$jsA\;@A>W/k9>c(L_9hYe!(,,8<Rsr)BW=9W]R<kbG(X`&icuM#uLaK%udd7Oa?Fbt4]l'\.k>
%=&I4=5c`D4Me.YjP,U^Di`Hl6#!n3JJC(5^&]ILN*@RXa'uoA[N--U-MIa-V5rdU8!=eGKg1d?o<G9iNd;<VJKc);/V>f$"r'5>(
%k-#]&,Af]T>'tEb]uc)p4^3BFab]DqidKRV7ssrqN;/7Erc=%n/rDF2PD&.$Bs;<=6!?:1Sqo3OoYcY!SHK+M>=3-;/^oNcm4#Li
%8hEjZ%@'@P7<+tJU(Woh$s#7T2FXT%AY^f&1<*g$o?Jkd1,l5--3i,.WgR:k/Ea%o2;4eS74"UEGj&,(WI@02i^*[i9g5S!k*j;k
%.F!J(W#W4<3_R&jU-KZ77<sbbn8VFlFrMipN-J(1*cAH$g:O?@#IVl&r`bBWmp^c(V5Y,9AolJ3!i_U9Zb7ahYk)4HZ,ls@D6?^E
%9RjlU,UT@,<[\quVF2>HCiY^kRTWHZ#J$g+:84/-YQ^_C5a(.mmq1!085MPO22#6`5L%0u)_%jR+b6!H6K=Aj.!,qu/lHc61h;`[
%d=_\'<jfA,iJ*Xfg&RCYWC3O=.MagSH2BOig'X+J</OOm]Uig`?pt_J1bWTJ!Y`qk\n3g7:88$#e6geTmI2Eb0YU:$mC_8dB4\DP
%H>=SVggce3po*Ll!.In2&KcGgs%+G9MLt'_b<_M(]_KZt1$?aU,Y+I1)8)W83F,B-!>1\e_o\H#9qeKFJO\!O"/qp`';j)Lh)`pH
%$'Q_FShPB*fVt`C20>GR.oR[jRQ-4VF(*iTVG31$Wc@VbVTlre8^lg8gaqU4-XRF-eAPLLS8.1c6`6A6e_$k`c9q-=-5o$Up/GD#
%;fAba-l>3Dn]FnIm&Bbl%lB(0Q#%-VD(L->5*Xo-2sZf!'3UAK<@,80mhY%aD&'IYRAH(8.T3+o9'C!\nqQ/imEH)W?F9BlktOW`
%52p-0QQ,>i?on\h3'Fhn+4Fc=7pU>VS@-aT`(+23J'Nk+d/?X85#[]l']h,>q(s=FVC8&cb%HV&RA,)?&IV$ATub,9;u_:DLQ#)d
%Jt`SNHU2WDPQu+n:@P1i0!iSlLn``#AKt15du4P3]Ni!'1Vs;BTl'0/X6t:F0R$"#G-edgAdDDhqQ/NeAINLpc;&Sic#IaLqQkLo
%,5e*VI!e&-\IhVF(;[u,@h-`p;n5ZhB]31OpX>j:2'b^rm1I2T(`+,5h(utrYFe$C\NTP'4LL:qih.CgI0Gii\kF5=_O1ZtF#8C]
%iGhdQ4f%08QVF.N']WoC9!ek:i`O'#q$T.u_HkT#ZNKPi/ad3CMh(S]&^iG/rmQj0kP2=JrNs32#nY%bD$6"#'nRt<DA(4.-T\Q'
%!-=m&(N+4[2jP87?JONa)AjB:UPKXT3lL!kE]!*^;3rV8`]^=f2pm%23j1XT\St]B_DtB1;&,RQl3+R1KeQ0[D4oi'mO,TQo@1Wn
%@L94eENCHqE2I&%QFKqS=ZsY.b<QjQ<q.b6<F]"YE-c6GW>_D?N(qPC0""0GScsPgN(qjte/G#AQO$U0W/a`T\_)Sc:9.abdOlHE
%qW*S+,d#-nkIEG$RW!bs)U#^.l)J;4;.EnP[]g-X[aR\r?S^WlfB$&F-(4EQ9#8*b5.YI(m]+Bb=+)1B5*,KQG:oCjl8FF(.2@/]
%?lX<\X,AD\+@h(_:(5sM$M@9mPNcNho#O1jW45fNHD7]dU8-u$!WbZ^8-dS=F/)>GLE10/%ca_<N4,m_3kbb'C0\0$#[4)C36"aH
%<^AT*QJ`aBPBQ4P05gB0EAUZS\SVgr\=(k6?/=:T@%6.`R[KhA0&R@IdKCD?p9d.Lb/(*9\KUqnD%'1o%rqBbl6I!W=QApe9R_uD
%YLH>sTPlR]g/;_B;dY2)rHTBt7\Xp+[RN8I$>LJ"Q1j9se%F)`c0!p2JrCNfh;UmslR!i_of^[m]:4cSLo]C1rT>6,-Ho/Ug:Xe"
%R[4l_IpAA-/5sQ7\tMUhf,4O/M=9o\rJ^+[l7b^%5:3hR)jf\1p$g`M\i*8U<oa*^V#Q`hWLK/0m_9U(7%RVOQ.AF$C/PD`UpMs+
%?($k/DKf%-dZChI7#IhC9h0i`84L6M)0KH:/`Y4#!&QSPK-"[(\Ii7\o!6AnWudHGh;VJ13r!,8Cc<7%`[;k^r\KVF11VJ\%Auiq
%>'$*"%R-'0,a$@mkfnAcdJ:^S,ig+_((tYL1]qH!k`0;cKOu=VgnU$X`,sS%Fn?_87o-k/au[*jWjH-o*S&B/RX8#uP8_6e">4eR
%l-Wp1;CuU_b\O:/Wp9f<`6]N!TD%S-eL+^g*+CdkT*q\`QA"NjM209.^1hV1A>##^3_cu)`L&hFiS#'B]"S_g.Pst+<Mc_Bd,RrK
%ej>GWUW=e3:nnoWd,NEhWqfZ,qN;HRNFm)eo8Z:trRaT^rm(5uMoT+)gA0Q!7XW-Sn'h7lO1:i>9FVbPK66'8j'@ikBcuL<=O1N`
%L=uF5pe6\G8889]+d47h7Nb5O)E^j@O[=UNK,#TR+'+1Rl.(XD[&P\DR73Mm^II?`#3Jk\JjLY&M"IRG*Ge]U"fRZ8-Cm5\efCf:
%[H&a8mSL:t&t>V*#kA?\oZYG,2E/mV(Ci]G`<'5:JD,<7>^<8=ElTnfXrE3Hl1MJYn6(M,/^fe1)m5Bl[Z[;l;l6]rX)(A;HJ%gD
%4f6at0+C'lO*5tRP7c\tc%GDjDDL3OhoE.N,JHs#+'0A/&&O7R`/IQU/S83"8uEA>KGiW-Oo8trf?DYPDo7?j0K?b9?i.I2kAT^=
%Z8YZbV148'Fpn1Z[bu-rc"\[APfYPYFG_fP!X1-._R>\dAQm&._4i8t/JB]+OBuq"KIDLT7NBl.Y0sg`8qj6Y(#rqk2UB%BRXtIO
%$B+g67PlDV^03)Zb$sV6Ttsc4m$)Y[AQQ;Ja?[SDV.4i08RNF1,(3D`51)!EMo6'U[h^5MZNSLD;Dh(\fM^c6'(`i&*YKpSBu(t6
%YXp*<B_OulZkF+6TYj833/n1Qd)PhNBFjK5"G*=]Z-YWSMuTI2:S&b'r62Gs2g2Nm/D7DRh%'D?:)Y1:BOo&H0YV;dWl;$I&C+k*
%/J7qb8:S*f?A.boVQ#8XdT5-Fk9>eSMA>b["L9M?25*]I(Wn.lZ*MSj_$lR?Me/YS2O?`HV?p]]L'c!=&T$>mY?6Zhp`a=LGZ@24
%Etb4tQ'PD=BkI>R_GbO4CKZ^@;%Lp6WoZ?`F4S`E=#)*L)Ruik/dtLe?<62DPa$/E<OZEmV2WV9`b#f[e[2FG\PV(%=ubY$'TI[u
%c';HrWK`6"df";;j^GMQ9Xsf<",sP:G6fORhTK8=3-i@+Z=AGC\Lt]M%B^K.e(H<g[XIonV-Ls'/9n(\6$irS[5-r6GBAflah`hn
%^;ZU,E.F#4XuH:1p<%m@4J((2=qO<QVkHr=D1G"XOY4VHH0XT=^ek[n%1![e6<+]X$DA4r9cc/06+)_V^1f:mTYY``AZ`4:SY^*N
%Rf#?a,ZP6*dQP0Z0c!$T7F7&^_2(6k8Ql`Y[?-cEf&TJD4\%#$Dl$]BHWaL8%8&CQaq<e`+]K=FjUZcIs6==]EG.e0.5n9p[`&hn
%K)=>,1G,Xa,pQ1:XiY$P,$VJ\SN<k5;qphnp?8Lh2rr#?BKBT14,QJQ<g(5!Ga)<$D[`U.dcV3!TU+QD#G.DdR3l4L!sb,kKU2d!
%`)De-&dp0mQEiTq6ha#i;:u-H5(IN#Em)[9M1WN0=cZ!p#qV9RMYqL(Gsq<iBI+kq0[r-O&>QT>&\S4^OYq5Z6jZIDODSABKS)V7
%)kIh!%:bND*$mjk9BLMa'`$TmT1Ah:Hc3[]L4`C7F3uj#'6)8K7AkhC&/fI5'VA$l&k?:GP&='tZp63DOp*oMWDU3aOUr(';6V=O
%^qcPll:QakQ:L4?kqjUD0GGJip#fTLX=b8\fn!=Lm`8qo;K%T?PY-"#HCuVIQMfK<f]8^o2dTIS]<45.>P5P;-1Zdj9<A2O1nd:M
%-J^7'4OWm+eK69lg%nXW7HYca:tT/[$h$-$]%'o:n[a-:23:k9V<do39iq.5$&'>#kcpbal%jth85cN/=lfpsDQ6uDV(Hi;eqc#&
%k,NL3I]<420`L-kJel'\NR`_fiM`?B\soaR<,Kc8k+p#RWQY-9JrR.*dX&2crT\-lD_8=3CD3N1d+fq3;7>c`iT&;)pm8C0@GurD
%3-s.NU8@R0m=)(<WW%%B-2T3*=(!VUX]@9!)=^m'hiuqhHY7%%eouIgHUJ3%`Jo)L#9o53gC7B.7l61WSO2-)`8/9;CNs&0kb/6k
%%HLarE&Xdo"W;`eKNG3OKcr"VeY4NNnTqm93)k_pp6p4?Zq]uM5Js3BSsgji"_a6gJT^ck3Mgj!g-[GV3tL:glN4GK(AP<j6AqiK
%>):`]MUD-Z?e(O`^u&'"Am5H<C?R<U@6G<A$mZbo^sqeT]&'\+XrRUr0/XjhNBtB<@c^X(Y[<(g0>iEtJ7,_s'`:d0n9&..c%+`Q
%T\u<5^no!;UY816n4,Bsf^NOIEZYO?Hg)MT3sDfnJR`9/CPQ8@mVOrQDReLlGKt2AUW7EQ)J+K).bV,Eft')dZJNrk^oj^ZXXb_U
%j^1J^QiY48EYihq_7D4O'VQGCL!a;/4]DLP@I\#FH?eZ>V>tg=KSpr/>$\3='?Gs:@[$bD%3r#\Kpoi"lrM\,%r2f2d_At[]9MKm
%ZEpueW.d[MgOh-]V-bQf'Y7%sDG)jT\-r\W/mS>Bd`'hWMsCeT!\et5D_+1G6h'1]oPt5LXJ7L8lp>4CNH3R1.9?Br/C@P&;Ye*?
%e-;I4NX3_NMBXXJlJBe2R)Fm"c=;t"ar<i/1VQ&#N0<-G6AJuEQ4"k^eW)3hQnZ<\.kmli,IYn^qOm^Med?<^V@d(E=!$Le1SKN5
%%Rk6G'I?=DF+p;If1D6r;P)'//]gsONg_oSC`Af<)$`bmB=11$(g+u2W!SMn;%u^12D0W><bAQQG>CjN7R+A%f40m%*f,>Vag&B[
%5R(MW%KKkQR3'5D8!\XCfW!h.)EJTSGfK,+o8>!(EA^#I\/O73NPAf=l3VSb)eIQ0p;GEoNY_."nk5@?e_9'.K*/"]I`b+9?Xpml
%N1r:F?&Fs$bMEL:`\5Ud/d^YULJgL8C!LlXA,;sTq,iTG[t?kVQ8*Rc7[=n"\;k,>goKo7!hBP!:G$d\]">A+Q;sIA6KB^aZ&4<*
%*,G[a(&GqeQLd`HX.ip[/?Z7sq][$!+r%CPAW9*lMF.lm:GA*iW0,-'6l_g8h?&[[J4b-$rW8($3:S:fM+lJ-HNeHo>=F2IhH<[g
%"*eC?-'MC709@U_N)6AmiSaNpUIj[r;.pSKB(S?I_aAV+s$Ui[f3^CVca-<@`kpe;-rNHokqZ)p7:O?*(:$I<);\XV^:gPDJ^af6
%3V+V*['Ymcl=$-7f&(&h;`/;.7STQV6h09O<mHMM?JfTgeh`RM>b0VRY)\B>`>sU8X(>MmFOaYaS,rm36"%U=En[au/?LCs9r2&n
%BMWpE7CB$M>Dd4b(<CdYCabX9qWt\ST3ERpURiA>E>1Qn@MqP<MP.Ho4b8s%Zl#0q3V$eR&%']QN#3<^hJDG-2CP4Ri_h)9*=I4=
%TFI<J1?*:@.lsb`SE$ki3QnG@XmY\W[5?Kq.>b2=fX_jX>8tej9tiSG>>%\fQIAs^E>?p+$u.cq.MsJf,S_iHP',Ej=jD@*")Y#g
%*D6EaP/+,n(>EB+:(I!>=kudUU,9N20'V4E_Q$(,D<O1*:JoZ-8TZ^,Mr\2NDh<2:FHn/M4-:GuW;(b]m7$&+:f!`=bV?0h[*TYq
%2677L]u>+6+]o>LbWP/2+#-C<I"J8\'SOupAWIhI`8FaR@[<-cU;Y&Q5jAX;%^2R1kW^.QMU"S&g70#")hdL13eDpUL_5O*-:2;O
%)[b4&h>X\-?J#tc!bAuAq^P%!CC0+Tpu6:e0m.nY;*K8V+=s3;#d:D1U8]a:['\?4MI3jU\.;=7(/q(D5Z#Z6?JSd]\\=59k%ep*
%<])Y5cE7A+p#M$*=$V1(f_VEY[;>b\nQ)m5]BLG$XrIQ0pX=9"j^mtR\uce2W/7jqd%S2QTOuL$fA_`B^o8uokqB*:YFI$ZoT[4n
%,@O_sq5h5:-3)LNgD)c8nBiMZ![AqSpd(\4ZNSiWYFZ!$5'N1D(kiu5`>6ZOmnD\PF<7",qs)D`6lOlPh2sP*Op$XHO_4tla72lG
%KCI@/TDmu`e+b["j@A*PeO_<7(&Am4`YT4<h_mF+L5Eq#*gYMgCP8]67!5W1Qf@He$.7@C<64@O28E=JM,Fbqeu?a7Tg"]B5?'#4
%/^@F)S>gdbe#1$mB:.LW?$o!SMgd]@9f?&;bN\64N$;sL8m+F8QHBtW+e$uK@$uc2H5?H"PaUDDbE!%Oh^G^h6>Jf@@m1=[_:9,'
%llM^KQEOht-SRRbCXDQZ5J@<j=G:)H`Q_CB\-ri(>ZlQc_eZLCco^rjZ$cF88lU[g/C)AT6g[+&SnN#U1;K0>gA9e/eHn<KgSA]1
%>MnFkSYkL!mcW=T"=h.<nqsnUJcLgYadZut?d`+VW&1@K/VSVPhdQq?f*YIQP$"h;Fk3!Zj@4u+=jEfKNYPXr=(cO\8%t),""qj[
%J/?1*<N.H@79'sDH`8Qe#58@n+,_+7c1'MtlqUnC3t9/72&S"UL,Vhuo&NU9f$!TSQOM"9kdOlYR4mZ%aWL?0bHW[S:rcB$f$!TS
%QU8MQqQ6+Fm#GZ_@t7e[9'mkJ%%.<S:bljg)AENPHn6hM%,_OgpdEK%YY]#i6dY<Dn,R.[)eM;P49-9&-9`kH0T>=G+l\^%6oi*R
%%*)9dcZ)(hnLV`0KK6!'k_S-VR1?.+_".##gW9d;28e[=k<$E>G!+aRN5njLk:@7ge?[tlXgUV\mHqJE\(n9j#pHsVT)*^"rT)#*
%+&@B6$gr9=>2Q3o^^(+QSB<'%N3H]'Oq_"0QoH_V@>'FH'?d,C/k8R`6'NVPlXf,;q!Q`r)<Zo0A$c0tqqbN6QlDs!H9$KU/fD6U
%Rkk8*]GnH\qq_"o9)WpF;/fTO]mcA"ZhLlm2AWHRV.f"b3FRgJ<5;sSs12+Z,#s8DM=NbFjaOATrJ&\/'[#4(Aqokg]%i8:LGn>e
%i,Z6mh+fa,Y8Sk$TqVp0a"+X%;j$H^Au<dh*lQ#p<(s.`hnJHRcE,@[!mill1UCqA^:f"GQAFK_OlsNjSVU*'58>QJSHjqg-^1S<
%+(YVdO-6MD&mq88T3\'rT4+APVRm[RJfB*P4/K-N`[,hGi#<X.7[A*7B=FDgGu\],NH9L<7ENS+AOi*Y*+ujQX/Xcqf9FRXajCPK
%6n:&p;:JI<%UkeSnOk`>$M>+EZKYKjQsiMd$X#<&CGNBliQ'BP\4Oj&HVh$5^)P=]Q'*^$3bgXrbkV%;VHp*kFJI=5j><<pQDHQ<
%W2U[j;D/\G6n*'Od2qeQM4i4DC"8^(N>:o.BD:tVh)%h[)Y#qW-Mj4C#G^;gPN-(*3M*8p@PBq:nt"f&[)]XaO70@A+cbBQ:u;F8
%QM+Rt")c:I=ZOS"*IqoXGHUB8*,+jd3/7^\WlgA,m>#tY.p3H'-;)#(@LY-:FJZ,7p+aF4($#;SM]l5;1eKskXii4^UgK@1*R3=Z
%U6ZD[UM5)!MBDHLc^Hc(C"cl[fa)6`S\t=.]FCa8Kh6=FXmdD<'AK3g"4^Lu!(Vk/->Ul3feQ^f2Hou.L_sA;Ri)a[S;.F`mtQ[C
%^Gg?=/d*ND4*,=$5,PaZUDp.i@<>@&Tu96(]0<YGUqU\(%*%S5pKO!Y>&V(nqEL^*o%'/<10mppFC%M\E=(GVib:jO2I1NrDa)u4
%=e8IbXmj,;EW!'uriqkACKZ%5Zg#]P8\E=?bdWu!%AoQ@+D8Epe?ai#BW0.&n*#HOmX6li+u7ke<:h$R_.\jHTNkL6TRh._CnU]B
%TR;NGnhWseL5F51nJNYpJr+ta"6I;2HG9?DWb<0qicR8_f>R@GDci+`cX91/+i[QQnO%5r.??!EE)[1!JA3EF2SXkO"UgHc*;0I4
%+4^,E+E8F)pHc9T0Y-qgFX'ZM6Z2pc-XTC+IE:gKaj-5764L(*qP'u(]k9UfA;/%aNF/heUcuV.mtl#`rQigIhZ)F"nD`]=IfZDu
%rr-^9qeQB3C]jQN"8cm:qeQB3C]jQN"8cm:qlJP$[Wd+RM9dmG)(%Q%^cn"m9R=GPLY&`DI.R9dgZPcSrV=c0<IOf+aVY!H*C$%d
%ZS.rbI=)"VQ"]]C+231"a4IMg^t2q;`qm:qHI#>Eq9F]9m@;LH=l<jM#BL\$lD.n/Hi<J1J&0GQoT,0,\GN2=lJMW6r;JpWpFif]
%]AMuSq0u)MDk?I$hslsSoiZFuh+Mis4`L/]7<b6SY8;iHk["bi$NL)'rls3Ho4N!6^OGkJc!P\0d+=KZrSdG8(V?=-IoSDjlgm']
%hnFR2p#5/AJ!"UGqY/<Cgjf:7qe'hs[ei/AnUKT6[eTmnK8t!#Q2e;,OkaRO^mLu=%,Q\USHsWiM)$8teFqgtIsS,)/@X$Ol#*)%
%fU7$!o-'s9967a58Qb53_8h;$+Pbe+<*<`&S\Uq@Qod*:]u5_7^O)i%:9m_\Z.mM)b(?KGo&QW;mM,J82s5:<bbgqNi@a9GmuFmm
%h.DhDAU)%DjQ47'-`CjXa5+imXRq1X1l!VFo:>(f<c8_!E+cl.5.`nM&U#N9im(9hELuWh8@H,PoeM"U"22"RRmfElTd.hR/u-E^
%ZMYY=X!urN.#e2-hW9qU]+fgKR=cl\J%HD**=fR'GGqpU9=QagHCqnB6BcT7h$&^"FL#Iq%d8EI070)TK$YEXfG$[._M!sZHA)dd
%10O5p+3X/n\0r@QD)ZG9<b>1sPNQIZZck5`17=7u7pt$olo(Zq+*=!SClR%a.sceP-hEdiis>n5Ga8dM!7EY:Tfps?6HZI4:ThEQ
%0&[BB0K`j.3=6SMNFk+-`(XJYL(Q64H=`#rK^U88,5@*gLp6MRR@Yk>4_'iWKPlELj;HT^$f$sfLWjU4'^hVpCQGgh<d,o*4DVF_
%.OR(S8D,5#J=\`ciE`[jhJ*2S"AR5`AWFA_ju]9KL(h!Os7UHPN=kYdmZUu1l^9gIKdH6i$H:XY=^]qU,`@Um7m6>GO3GIRfTT$k
%F%@^eit>/-M*>9ih%sfNYWiHkgPK6Z-TYH3Zs-D*b+AK5J3*h@"^tt!D_R"*KWJiRLWcee3-ef?PG8QMbFid['9ohJR(]gD%g.hq
%_f:kVW%</7\Rn5,MA,\`E$>9qAPP8U:I-[q3HO*$?*ZDpjau(:$3]@,_(NR=XH8HN@5e1!6W("4RfEGIqLB7`J=+,$AYWcb<_/,9
%Z1PmC,Mi&g`"*h3SeMfa4R*6Ha1I_l,8;o"4V%""(<JrS"1QF(M?%ZU#n8XZG+G+?":P:Y7Yo-i&P4lZVIjB5]mp9P0U"gpO2s*/
%$i.lsUdGG9WHT8>K3Mp@OU#E]*/NZ!&.q&a8G%"#h-#'$@36.X9/]]Y>6q1K4@3mVYbTQZTN;i+&TN`Ye7+<H;!AJ8BXc1U3I6?q
%,UL(OX?Al`oU9UX3I7aN"hguK(_f`7D8Km2p)'#b;b3.fPR#h`'GD0fIYfj^-=k!9?Hg8Q1Q!-U-OIoGQ(c3e?7>+NEDnL.&Po_$
%nh?\gAWLf(9GS:oHrP!;X>D:f_?<iF-uk=]R@C?QDA@>F@jVA9oiAUjVC<X4#Kt*se!T=?E'*0;0p^/q<5Cms&l)Qt%#%<(On.'O
%7g<mj&Tiq6!2dQ/*2$QM';61Q%re4]0[N].FMo'VOoXG7!6narL[G;\'*K-8Nr"PL&!\2SF*T09'RF;<'rkh.,#?B<Je/WT3.j^H
%9Hu5+UXG/?<"G$"fPPN<*-RcjX2Dke#@t;4HBr1Hn3K)-BD#;VEZ$US1Lf>g6nfD#M)Ya$4%":,"A'CR=RMCu<m_9:_B&WI"X_lc
%^i[qu<*=MMQn.<L9b@@LE7,;*-^!+oq1-AnmC=mcjHEDS*feGi!/)fiYt'gQTReVc]KE7]S3RKXaU5GJ&LB'pKRe`B%UiS*&@&Z`
%K'X[_)oe7dQUF?JdNSLN!BG2B"<kbl6'tQF]9&XM0J2@\,a1_oK!W]/Kul.%-*r\GAa'5>XTAfP=O%a"b2`Z/8\eIM(8M0\0^.*0
%__QT*1f[or0_KZD+1`iIdrsA;H!'!4+rl.>:O&8i;f-$I68*3H[`gZZLSPVnK!64klb_n`4-VUbDOJ2C<r!Y:](F3F2WT99fL_-b
%Z@YE5*3]m&,.pjaMs-#'!<L4@bf%*NlkD=B#;\5n#bV;U".YC%D<@BU@s$=63/lrB+R=cO1q-[&E?C[QBSdCn*,cN>_`BA[+NlPV
%Y#:+\FGItaG#&<]%Uib">V!u2WXei7<os]>il[<^:^I[gd&dQ^ajC=[JJ\lja2LX=Pb1rFQKpLlP6JCKM3^5SDSfBUQM"b$0IEKQ
%EqZdr4G<oi0C,7k>eIP1qg=@dYptOp_M!UJO*WJ-/Z^3qlHZ-3b;85#"aAT4P/gKefjc<43N2RX+Ge3\Wn\Dgb]R#(.Zh`H/b1Rq
%!5e4[U>ctM>dBdGlTAT7iE;dNO[4\4_\\kge.u5>ZTpOB(beZl>(qAJl9b)^hJuFqk`l5`'j=Xu<k,,b6NUVL*>B>jO9XJ1RD"4-
%\1E5%77CX96g52?P)(>,P,(^NTbIepFp]^le`]T_V1;X<0(^H8K_/)ID\#Rb?*W]>=U?.l&Z[l)N/E7;W-]NC>mC[k-3c%N$(E6/
%o,d*ARZmlJQYYWS,RKoKcfM_L1=[Du[*5-&6e@K1mEHd<:'<7$n>/97;V=tK>C,GR<g?2#`(o#,NF8<0fS#rOJ9fg^r#NK1K@&Fp
%)e:Nmpc*#E3P<Sg>h2YC!=CYpUWZE`e6<f-TJW66;tQ57as>CYU(]R3`+2C+O9>j#=r6QGfWDHQ5W>Yj=L&Uk<AtoRTQ=5Yj?pHh
%&tM-j3*,:;G2T&*jb=;VTXAE\-d)l$/lXq=0knsM^q:XDCL\ia#L">ipEfE_IRaI:qOCtadhbFC8JMMBRBpWH!K&ne9\@fBha$nK
%f(s[PT5N=8Ien,u\Q'^<I^].NYMR!=rp&7o:Ci6ZZY)M8r8$\J:N>pYE&"?"!^N8)+N`aP?hA)@!"eHS#_WPhGiCq49Q7]i4G%h#
%\Tj=&2<Q=LM'aO+Rt?A"@=sX`!K1u[Ol??Ne5D;6Y#7.A1o.\/E(Ks@p`/?(5n"@q1MNi0M_gWN!'0%A-!!?`<NiVN_%S\+Y_%Ou
%-gb'>o@%XBJ,.,\3nhHL6r"bcem1.:"\fi5[j>n#AF!"0NeBbjZ9tWo6/QoiH+skHiIDMj;,GG9gehr=H^liNLBlqEbZ*5#1.2gR
%#m1Hg:f&g(918sl"`P9fJCk+ddE%cl0Pi_C0,=);FGKu,.3_)M"VJ2A?0`q@(mM6f<[H=-cjgYmh)%ECK:6J"L[n>/YF1Sif*MN#
%Fp1W0[]RW\^.^niU'`s.1EuT6k$l!$G\ft)?r34u6u5"?6J/.WZ5Zu3#S@qsg2o$1^][:1DoGX`I\=q5LG%]QoTH:7F()?WC/K7S
%0is]F449eRb;;QML2BTW/d>^M**a%d</DeWH1E)8Gd7_4oan4`1IYJFH6iVF*W]tnNnqo,HidOiP,D0P?GpWQXXuH!+"QTC!)1u'
%pg?H=>)j>//44B-N'PM5635?)Okj068YfG@Ff<k/7S!f#<*-^rF;!f%*W[';fe1)Hh3ckYK3=kf@KXt%6BG[f/1p)TZ#)NM46k@!
%*"(2*-Oek,Jf]5+QP/..63+YL]X@(s:.,snc*Hs`l*Y>$TLbCm$gEs=@6_-,jfEJ4/;tc8H^2d;9GXKsMl8aoI6p"71Vl>t[MS0D
%%YYpL"A.^S&W3^3O$?[J1BXh72@I7=EZla""J`7+AdX`W11ENPk"=n]L<ZH:9=O9%a#YbN+;$uBaLf;BAU6=-:eC:UO=7SaO<$GN
%kc1-d-*A+@%=3O;cK7/KN2PMC!Z+8r"E;S>i$r@b)^*3ibTo3!9O`kVVHI&1d!"V*Ai7X9giak2j;V[^7@XoLPeEeO@?34$"?U9S
%(?S@b%XPE#AsKhJ2$tS7()2YgAiUk>2+>#]R&<AK6G`P2E^mO"0H38iM\))+(^O.M(.(9\6*#2DBaCVoRFKC]i\Y-_-P%5F?Bs9Q
%f9^dQ7I)dNHHnZMMA!cW`uhk5BW?(#H%/>,(OHAH5!!B+@ugX2OIe:'M*6=]`=aJKV2-K]Qg/(B",[XG72-H45mY-?A=CZ85]"8c
%d=]+FRScI8k`_>%%IR+'iZObqYR8t&@V)m9&1_Kqkb6o](^k1='B!ROeQXgu#>aOpV-K*"``?c6ncY)ojj\uHdEmg)MA0><$:-pJ
%0i?32rhhoRP?LN1):C<YKeXRfPicSn-[h1I5WFKNl6-"*]h?kOU-&a=<,L6;Pidd#Kq0nH`D?[MD:ajk;:93cPAWl0'BgFmZ[eVQ
%:D#J,K\_nb9rc.R`P/@D*^g?mVPUOg:=tK=7@P',,ljIujUKEd3/lOkTubttfG6cDa!1^fc,UZ:8tjJSgS/tDS4BXs4g9FO*[daa
%rjHRW'9#tc^"d;E=]hVlZ>?4!d%`b7N/1u+4VeDoO!pt2eV$K9kHs0_X<ksRW!kssL0l4MD:`h@>XX^OpapHcL/VO$61t[,+d.u*
%0V=5&_aCT)=][R-kbbSV@Nn93o1jRuokDCFh;25,!dktKJ-Xe+Bh=P/$b2)F#?t[^PKlJfhF!/1O@MTr@I;Yf:FSYAL4]6T3ua&%
%U4_0*+%n:SVWl5jiObaWfphh7bRTXY_+TtP]=J&0M-3ZQ//;>^m<R9k"R)]<E+r`:kn?b[)pVI-J5MGPD+lS`-_uNnd6qZ[?k%-1
%C,Z=BR[[P1fVI*53#-[l=-MJE=V+08V]q@*F`sugQg*2'hZZE`b<"R3KST[iQAjQsBn0@;7AZF6<iD%_`5:dMNRu&R9;rBu)hNg#
%b;'Ta9(ErF`YJ?db7Ye(n7Ii+AR_*3fI64h2W:=IQHQoJKV;Iq:*;uu;D(B4h.@R6eRB+5OTVWDUo)IieQ.ZXR#C"A-DqUeHD08?
%;<XNJp%Lr+f[rPm!c/h_)r,=bH"='II8><LB3721YV:kNO?V>bOshU55htP)\Jc04Jjq!j3hdc`a\Ff$(U-6T$rE&7'PF-ke&#>o
%O1mP07=^9k5b9<XW[9UOV.4'i!l\#BGXBEk9ghmcoNhm(T.;"8p(utIMKj1PY/@<%iP&b8!#QQI_VsGDbsDHn"+(JnA$Ql\.L:>.
%d0IJk)ftMa#hG_;KV!?/W/mU3^p/^ta#lZ?(a(I&^>OoU5J]$N%?k0(c#Ym@J0XLiR"J2MhPcnJ1IhM?(DVkK"_#GM?'Ci_G6U4k
%Y1sA8XViK5@>inK;EB'u<G%d5LL@+o%`Vt&#@IhRRaEj$))!?pe2d[T=u6o^1>gYj:j#qIKPZKA65^mEAI*n9+j-HK.+>8`CtWSa
%V^b4>dY,[bPX#@X\I(N<Gt\E6Kej3OjhXi+joT>$$h%#EM?e&Q2%,O*7HgIU)o[Xn']P/&q;#ZjTn`OfRBf(HTQMP@?]8Btl:\+F
%Hjf\A_[&LSjGWFUqYc7Hdc4a)Cuu^59e.F;@tFk=iY6&!W43$M1W0+nNsN\8A)7*B2l4mDP16:@@ShuFRQN"LW)jm0G1d>;I0k!8
%'GL*A>.]+%kWaUlH>NY,QbC;R_.rQ<Ruj<;W1t>A+]//L'sC')Rn3oSgCmESn?2nW>E=jLdF<3O[9uP(IO4IpC`n(4>8+_#:_CmQ
%E+;]YX:B`.#1R&^0fjA9O$qO0ojGYp!R"\e8<.N$5(c!`UGe16[=7shIE7B>!M_6k88]'U#n0Fp-@LqWVR;Gf)(TV>.qP$^aI+EQ
%2C/m#NBn6f4KPi^0<8dH5db#Z1([5Hc8G;"nrLSX9!fcd$"?l]Uc?ZXI1S#*-4KRh:j7&D5iiD:0S,k+U6KmAi5S\oWD+6CW.RL'
%kVB"["i>%s5W7l#9h0,m)69Yl1!ZN5G^<'"q;Hr<6*,$'\-PY<-[=84Vo(/*r\k*t<-=tUHaIH107;/&]Rk#C9JdIO+@>Cqo>I,^
%niT<a@'6jS+ATg?+G3o])b*FC(m;0b-+!jInZkq(e4XHc=gf&S1*aX9j>/'&l(Ai!ej6HAmXm)L.SCD-dd&`%LpDLRLU`A]3-n$G
%PQcop5edeP<@G';1];EW=J85A4TodGogVbiL?_$I#a??_?^'II=EQU'G%Q>k#RVme\WlF<!e\hL!GW/nL-t:c/^P0+/J0?2Sid7A
%)lYN/%:JmKiamq\LhQ'N?aOs+qG5(,JK?l/aBKYW=%((SjYe;i<(\h77"SsH49qS^,`rsK?mZV\U!pT/3'=^FVQ'XdWFQ;>6O*s2
%fpCnH)IEG?V7;A2$=NouA!c04VAC&r-Vb0$@pc3A_S"BdM8q@hfHS6@+@%:`STo1D1^Olr;(a"=#&_=X4>72=KTE[^h*Es=:an<!
%Rk[=X7A-?rM:"F@;.tZpBBc^j0h[LgnY&!IcojZ[7\G^]]T*dH%L0kuYW[^L#)8YXC3er//`pLC]"r?++s,#JlA2ASbhl2m*2H)$
%]Zh7];UdrGYAYc[Wcc03+O]FXGMO(ggBi.n\Au>!*?Aje.Y(f'oEdfS=/Aj:&D0%^:-fb?n<dt3#q4Y@.2*ML,a>&Cj?+EX<kCYU
%_7S25Mkd/j!Rm"=5eIFIc`0i4`)p7M)\)EGW.5;+U&T"RjGt2j6g%a]>f#ZcQT:e0ei'U;cEhiI/@7nueS8?DON^Zq07$3PiD^3U
%0mc7Wa4\#iY<&h^#AHi]PSDZu$TWtX-A^08O6YL6Q*QjAU)J$ubIBhcCt@'S!oG+@PS#rZ<[Dag`a*8K)Z(6<dQF]?.kJk52d\X[
%pjp:jE\jg@E]>cX-YR1RA)KUM;,HJK^_[\u_B=NLVM8Ol!JY1lKE8pi(96eP(aCHf^lZOF_GE5HZ`;MOBMU<),iZ2$37d>Zh%d_a
%?n,:V"BPa*<muhZ//&HVLuOmWcJW?#Nhh2E:&l.uX'cuH*>Ao$$9WXm6UO@o_H>(j<`hI@K3n\l@!Q6m*?nEV2'YsKnlS;Wm-1K/
%.5f1LKd3[jfE'GF_fQe?24c]sKM5sR_4h#9p<Zh@Jkc=^[s%X5.)/%^)%>^;5GcU9&e'*9`!Pk)_*R"Me\_Z!1=:N/ph':O4b<d+
%FT`?JS&5)VW]@,r%u_g/aXdV_&_IWr+d>m,#(^2l<QH:)0KSNVKH>\7@-C^\$Ve]-+ABeN]lG9$k8=a1:!17*@>rWK$`9#,A,TGf
%X#N;ql=@=36(0Wj#'6X;MB6fm`q^M5Kl/hZ"W8l7BM8nd)PT]ofb9ftm`%>NGsMfM+qYro_42;s$?8i1`_:.A90/G=D8(icPMrcu
%#['>XnMugfj$2$`=:4sKSe3db&#ECKrO"p58oZ*"l@s'eTg4\XdM+"kqO/YhUI^Qq6c0O_EXO?419#"IXHJObJd!WX@-Q*;M?]hP
%omO5U/!ugU.W#bV+G]7@:h?Fp:h.%+r$K8^&X-[F',(u+iAKi<'=;BI-,L#pUkiHV9i[9NTp"AZ?1deh8?KmB5t3b2cjNj4#*4Gn
%QG.S,U;pm<U;7!&:>cVdTHt4c">%C?ojaQK`)$eL$M;rs&kL[bC]\SD.92&\j_VqafG<$,"+qr9%QtET(>&h*\V@Lh_`R,L\!:(3
%--n0!Y^U'i&:?F%O;ULhrLmEQ1gCk@+V6oKHQ)c)@$#W]Ag2dO-`TE5>E)*3\jH>Q.ONf`?VmgIT#%mDL%ICIR<]r`;jc+BMBiLh
%TXkFj/9lb\(<H\R+/0oad(g7g[pfZMA;UJ8b33d`pptctl+D$Ud!3?WeOVL/+@@1VD4-8<_783`)&E\c:Qq8u-l0!@Ta7_bgsdDq
%R-Vk=7"A%b2=r$LcdDIJoN(@1hdNP98+Jb2#fKriWQJbK&jZ^QZZY0d!3%?`)%GSY*Xs6^&IeeM+]a8fmAMpO)aPMgUPZF9-QjeP
%e=^AT]HIDS;6We/3m+Rd"=BB_(%^rp^!LGaM21Jd#QaQ,eT['sWQYI-#7%ns6S>;[Mi`>t+i1/qgZ-=:K&8!2JNa@9h5O72B[Dg=
%MQ&tCg5=h@8%8T-8r,':dUS%&8\#o!A7&naeM`tA]1A(kY65:!&//^ALbPB'[IsaEE5u].LN<R06-XtCHGVY8\0?#**>sBXi'?2O
%,l@^;&1V@D#*2#C"+<=E5l=gQJ!\,!@)jW2hV4+plD:X9K_GHP?e2p?jbi+^_.Totkr"tl+<(=!;,<dHA&BnnSK^eNT\blQ7ht\/
%P"NR35YtM7PSk4^WoU"gNpuKO/0um7WLA*Q!\e(P%Zo:SE!2rdGd4d^I"D_AcnDZ<f.6glS,/3aklXCZ73bO4<AYbRd`Z$oBYdGW
%=+Z#-LLNho'8<I;p_Nf`'Pe=L6hR^akR`X%&<rMjO@:9Hr4&Du3!ij2ln&M,A7p]S$*j;$&^LrHdXm%eK1<=#"))*h\+FfUjfS$U
%PN<V:3GE0=Kb&cIDf?OAig)lG+]1=ZN#hRg*TufjOp$#.SV<1I4lB6-VTRq7fI!1Uf`KPr!)Yk2":SU;3]tbF=h'hj5N6)#1l1;%
%1Z!H(O9Vno/:%FJ&V!r6N'1U*g_An6fkZ\+6DFNl+kX[hEkmnkT1]f.\TLg!']WM7?pt.IUd#a*..dcd=t\>anYcV>@S[WTIa!h,
%&oJbBIK*-Aa':QFUGr]1;bdAu/Z[8<NXPH?8ps^P&SqXD_]imBfD%u[ON)q'UdB_<bm9Sb%@pN=/1:^Gd)aK\'e&;4Bu*i/"J.<6
%RF\g7;(d+j3]cbb35uiFB@>1*!bRVLnMq>>]gE=k./&0'TEg=rls\[I\M^=Hf"0i@6'"if5d;hO!=X]aG$"nHVPu^YAd=*aLsda`
%_D%]>4q_:4Ft#.%U%m,'gHjWAUZWja!^iW5nHnFCH!#lUdeG,Y*4-T:9SK,[#Z3.B%`KPFDPfnb+I\aF&7!N-"lLP5DOr.n1ugeW
%5c_TFdN-Q>N0G-(1,(g+7R*iM(.)>@2Ll*lJSOCA)!t92N/Fk?&a5\tmmMtSor"IP2Gd&EUdg*X_"aKme'/"fTnXEX0P%<@)/8J-
%Dku.2'f2fu--ia]\5t0r,"bhpFiC?$:`r6kYm3?)OB[uc*"K??jRkiOf-03*5jlZK3#DAe,(r\aF;-WtFp#?>KM7/'HWZ!l%*$;\
%LZ.MVPVgF$X(C.X&2]X`0pZuBbtc&*7$l,VYK?b<OLX;CHm=+J;4q"kI5d+pRB:@)U6\KJ8?/pekRLY*26PaOJcc)_j/#um<m\bO
%eN92h(,Wa]AlBf]aq-6lM!<53kl@\EJBJ4K-S@\\$[Nt;Ql,2p]/;p8#,`0G37jWlE]dg71+&23:#V;($0as5'MZOuINBh26n$J4
%#BGVc)E@3t(IrC)k0(\W`6Yi1IAh4[jlg5_.oDg[&t#Uh=?u9lFNLc$d%"6.e"P2pa=(o<TN!U`JR0,-N#E@^j&35uSNp$gk=Xr)
%L`Q,;-r3Qa7P?"CU+:4o:_fZ+0k?Cn2jZBj"?e3r7_5]k6eT])E2s*Y`_)`,k0X'/$1NTRo,0G/8)GmsI#R]*[9shJ3UjL"\DHR/
%/o(Y/_FZK"%8lI*2Vr2)4Xg+gPlTc`@gV$YpCqu]`J7<Z%s/qZE3[Pmlj3sF.^oJDd9C\D@0-moLl;Ub#emW-XoR9+g8LOr+>=O]
%#:`%7_CT0$ckfPh<o%PgD`fQ!&)^9O$Y(6,X;?I8@hfo*lKRWmo!8KX6[kDI$"hT%3IHZ1QpK>9FkP3hO,h.D+BT]DM+8(trgPXs
%+M"'!Liku,+qo!0)DN*P0r\`3B!tgCf"c%"SnWqW>M,tLKEZ<5[*S!&GEWe["=F@p:sc*7"@E61)$r*1b=bSb\"#R7k#8Ho5Z;MB
%[)"Id_D()_j[bs6JGk]h9T<ImaFTghE$J)/hk/<AAl;!21Ft>4Gm5^gMBpAuM:p+A(eY5lCg-4pB@U<`NF2=6!d$8pEn=a,KkH@r
%6p1d=IHn;i+MrcU%$q@%4pcp@`>dto"gC'P^+FK-Pe_'0/bYN2)h>XNrh</AXFq]RR3:3-.`5q1Z+Z9!/[,J6CV%KPhL:BU:'RoN
%]E4gl$WhJpd/t&H>DXEW@S?iq!0A*$2#.crX:-Qo[k+I/SK^50LYN-^q_6R:"eqM'M1[Bf*kDETL+jf*65,qO6A1d1cp8T]3G$7R
%Ct+9"pgk3TJA7:G,1_>Oe)Ke;8iP,!3X-SF3%N213DcOl24P"9L=']]asr_L;&hVAL-Rb)j\_$==tgQoNL-L`;Jo2_"Y&=](WIZP
%+cR9R4j8l1!mBBA-;W`+?-;B.hMiPKJI.IE'BG"UF^FB4:m>CY;CDqaT4i$T(`;7!@EtD^haSA-"Vdg8d;'-,_bb!@NoqLbfq2CW
%QKei@_l7TAcrjFrW-G)Xq@5PhbC`oq017.S2E[i-=L%o?6d$GQC?+$^-hu$jeOO4DX7lYRfe<D1_P*K.`/2$&m%O6%1W<gJ88$:D
%Y\,'bY+)+G5T%:';(M^rl98g5*Eh*W).[PV,''&-j.QVo:F'\JZW:RMnr/B.aK2TpTLZt)+M?(5:,Zgd7Na-"/*J\:c#Uqn6+Ap1
%)puRF((*p=2.5<TPLkV0"pAR]187:VX&0A"qr`L4Q5Lc1D'e\%fnl[OF,@KBZ3\+d-kbL('52^lO<p]h;ea9)iZ)=V4]R1UW")$G
%BE\jm_"gPHOl4(FMA7?52+>.F%>5gZZrD=-/F[d+W"5>5;!`qoBl:Y)=;[3Y^!Q?#SIK:hnic[a$?^N\-U?R<e*](]T.W7]$?rLM
%77K+EZb'Q.Vr-!Z/5>Rtg<IGlW\j\>qlbM@o_GPkO0?=qldr??`2ZPHI.R2in&h<X\,>[n]DJLEn%\[%*jU6@hYm(Z]79\GpiW@=
%dsG]c+_R@!`^SGI?Y]%'S^B6:K^%n2A;e1lX>L&gK'supKE4s?Ef>%/1B_Cm4Q'u0#pn^^#UkFC-"cg.&S"+g,8/7_8ng,S_*FMV
%N[A3fW27dCb@kXi*sd(#-qP[Q<PJsLVXjJBH4eRTqB\U:jDZ1cD&3+g]I+\[B)WEE_:fUE"\h\jf2+a/YZOR*%e/$]L(Iq`Q$#G&
%6en^P,ZH!al7Xg:bG^'2P^U6K:('A!PL6m'Mb4o@Bct-m%3__789;HtBhBh$SZ:BPVMF@:,LRZUJ"_l0%DY=S1gkqR-I7(J=k.>]
%1?,ZE:cAf">&hPC<>.Y_C#_MG$`cC/O-+(kYW*o<6R2d0Pg^)#FJ3l;*Xt`1M\Aq'"Vk;O_ma=A`(2)r)pL)I0Y&@#SIr\oCUM\9
%6V=MqSDkJS&&%Y;Tn5lbkY^6'oQ9O-%>?LO0Re^fQ8pGL7h5^p@I+>CDB]G><mqeB?0[M;OV+OcTTKP[@uU?.2;s'p9Je&/bYd-e
%C(3M6(1Ze]'/?0_;*;pfcs9.rH9uicKRO'GU5'IYMKM5Z*'*SKF%N%4Z!><6/ZH[Xe(BqR1/]A'?%nnD^-:TaB\fmqd0kmA&c-i+
%6[C*(rCj3Q0Z,#%D#n&]oRW1/-b.M7,cTF3lgS&0>kHV*9!SXnF+Jhig]K>f>dVF=,!P=#&^a=bQ27=g<X50l0P-Jc&"8<RgCE*e
%ggQ0+1FcpNiWjeFmq?ECLb8`GI*Ijf=sC:"Cf2"5a2:eb&4G<\ka>Gtdb1leCG#Vih)ILIA;V\I#l05ooj)q:<i!cf0)#b4hBL0a
%0P'>=SscEDb+6o((njde8rf0/JKr?@`#?r=[$FcrBlt:f7B(qMUY.M';"HZSRd@C&)uWaK'm^qdEfq?g[h"1S-;12SZ0'iI^kLBf
%)s2pL-U=iT&Q8Lp@J-sWF6qIW2=qbDC=M?0X$mHiQSckfM0SMSTWXH.K-T`<k1rK]-t,h>1S@St.V_-qT"oHNR=PT(gRc<>qGSTb
%GkIuPS>&/D;miUoU.5<o@u3`.[t;s1V<cpIm*q0?\4u#o-t$YjeHeDNBH=K/L'"'*e]<P<:lQI<iYbafb=O'U>!k5?NgAdo[CR52
%K[Gu\BEC?(=Qj`Z(WRsZ%EMU``@hU\!7bn?(fVRbo;#]"#+*Rc!**e0nSmPGmngc)_e=+n1,pNL@D^kE@i"B!O.;GHmq>T\m,'+-
%a7[#<hW\0FY=]`!d/gjU,7?,IFI:`1s.Pf^DD[eK$L]n:h97!M'XA*MN(E8Ocler<OuXJh`R-`'4E=5mg8kR1[('(n>pUmMNguH$
%+d'*=Oh$C1(4q.<&jjf9lU;g\L?0YC)?MJ5+W=d;foEK+&Bg,D!I<+`/QPr+Ig*2=0tCcE>Si'j#M3uFArSp*5o!h!D'5Vf@I\`:
%&H,SfiUf%R8r,rI=P^,S)s.@SgX4OX.b0PlD%hFkm%qsBf#h?U_f;e6(@59So;.#ZHC7(t!/).UCmc.O/\h`@j^K_@LTGI0,>//A
%+p\fR-:4Rp[S]30$N3I"?"?!s=DZohU`Rh*/si@+6('R4a9](]>-hp#3tOYGj]2?o-;b]LThkt/.8\NNSkJ9,WN(%r3*(\;1b!c<
%oetMY6WC%>-9Xm2Yc5F:Xim1\[0_B+!)_-0BpX!@BOA:a'L870FVUW'"%)\E%)ZON[LB"<SCciAJubtJ"B0]ICr[$M+pdIXD"jX+
%J;^O+Qt*]f>dJBkTe[QmAF(Fm6P1OWOd_&i==e`d5SCd$=\uCAi]]+!F&hhJN\Y>W7AHj3QK:DdBZE[pItBfiJ!Ipp@qdqO)3-EV
%b^BXni:IRmLqJ\`:;!U9&QVYkmm8^:K\[S-9rRV.I#(4"_<t#ZGXM5t%^gd/9Z&>Oq`a"n4]fU9M$Y*K4>@^GDkpZehYiu'\rP7c
%$IOU;#1?c9*@7$(Liq4s`/Jq&fOU)>6V'sUTW6'^:/-ZqU#]kq/E+:dopXEX_dMiH./59g\.YYHO&*p`6DYZT:]gDAMJO+ePfb_G
%bg9\7P#WWY[)^"FMKG2QnZI$.#]5@7Q$%R"Hd!nrb3^pF#97MU395is(+ZH63.YiM,6T$T#]IVZTT+MoGnq8_G]dcl+JK0q3^[R;
%>.2;b]O6]P"Z75=M$!8[PD^eCjkG"h@"Wl[@D=MY,!ro_haU!#@j1j8&DW=.el?g,6mUL)OsOIG\Ola>0I<2t:s!,3OE`0cKi7o7
%%_J_iYssAIN$X2qQjL_?VK8YdU9#mI%2cKFCXN3!9!fpLV%]r-(RUYh:jJn*^WS+t_:`gMI6m4O*!`j"=f#R0@sbR$b=YDf@Tlq?
%MoXOp>JYmmZt'7M_pJMb@>7+#%"@%k1L#^D`q2HTmPV&./gd+hF'35g-gK^V:7MXk]0--7#cD?7=>00mDrok5,OXSZR6V3/_]Zjq
%`V-[kdSriB6)P6XP3M^mYR54eKct%T9Gl#c@?nr$-5#$"EO+YV;Q>_R'JQ"*&6fn<(`#0a>]YhGI<jD^#=Rb'[1Z+%2P@ZN!?djg
%E0ONt]9,BB$s>u85kZ>2(IG5pTZ*&0-\0sXe1*#CW$WOPhbm?#n-G0414+=4NMYJ=4_"-MpSZ<$)9N5r!:n1?J&Xp;-"rt7Q&=1"
%MsGoCLSSC#;9Qa)F"%bACX!T91ZO;5Z;l)`@AFTkKen=@H"I`9,rq^TC?``GrAM[NbN.e'auf<;ns/HY2-L2,To(+d;C,e=cc.5B
%'S0odqG[o@0Fq_*jiqKS@rsEg7tV4[&W39[1K=NFc5JQ10d<oVbL6XqCDhJf)9[btB?>%)#aScuW"lB6XW</C5UT&Z++`8mHcp*8
%\m@<=@gYB*RFE=P.;UQi?K72_HM/nB(Guq)UM?1#Q8L^UK;GY\a&i>B4dEuhRBpEp(8k??&2kJ3G8u&:C+:BAcmG<%H88&h#<f.-
%Ur=!aj7KbsLO@5,KLs><lEo#FK+Agk'q'AID'$dj[U*m[1p\Dm(_rj6N7:H9U75j-/7a<V4TrW9nRLp>:DtiV_ZU$<D6$3`DC11W
%r%LK4@U*?I'jV]f(R,fC(2%GAO1F=U1321@eu7G@Ucb@MSFe'9E^:3FK1.siKd<_TU:<4@8NrHAG1plX`[;b&g/X*X>,d9g[:j92
%Y4OEC$6G@0?0M?+bm0#jdD0hb-V[LS1Xo$Re3oV<6r->3)TKc8`^k<-GDpmBdIgXh=BY]Uq.Ws!Vt62l#JmEJ`r`Y&<Fd"7rD]h=
%UnRc5\f#79m[0an-^h*6#LLnT17Cu(IFtO]:pHKY$s3gsSlI24V'$fQ'g7N"1pt,#fqh8]P@.R&q)Mgn'iQH8+KGI^C+s0EBQQ$P
%QQ`KTN.\AFY&bKrR2;:X-q-D%o/,@K]$';Gq$1"]R2^pC\_2S3-^6E(2A=#C!r6R*,Y<Z[,&#LIC,^5bc<>q"'cpq6S//nK2,0o7
%9K5SR&fB+p_:d:^)Og_Y;Hl^7:h]*hd4[IXe:dihQ)JA;^i:fD_WRl*rK9JMXdHMDEO:]k(o7bEpnq.RX/7^WL(Pqi*eRY#R`gj5
%r<Ck/Rbs?mdFqCu&<;TD#%dK8!A?1BRPDd;_--)"1YF7V.n7%K<j3V^+"H0o:`1ZmOEbB+F-+J^YSYC3V!5CQqXh*DWma^p-STV-
%Z?cTK9Ed]/K6LV,#K8aISQ7PY[4!Z;"Pbe,Sn.*H>1&u8i33K/Hdmlrqdt9cG*Pr.*;'u+hIsu2Z'GTriQ=L7)Ctr!b!`t>q$B::
%$T0&Mb/M)U5Sd^aHF(C-`J@],fXI@r4IWi&ZE7_/`ggg%.22f%)N-q[S(12a,%k+S6t\G8?0L7K>`Kk/3,LO&iL.AY)[(-2PgDP)
%8A1TA>:/]V&o]>j4Jnq-A*m#p]Ds0?j&lqgK%$i3k1q,ZESELK'L>^%Z3[<X6eu=l4(L9LH6@K`&9k5<;NGlW0QY\YaD*_9<?f)7
%O?FIq6KmsE3h'Q0@Q@!&Ci\$.X>Xmn=0,R2OdAqAm@%K:R.N%B`t@_^1+StO-0JU<!LG\9A+_o$BT5_uF\CErOKF?(?PtUU%ZBeq
%+N_j8^6GJmc`7r=i]SgE@%np.(iRQ-%jS)G&TX-K+F^B4S4dG:.;4E/_aA@G;8N&s/^<G-atfr`ATD4_Yb/.=MrDic6JE*M-$->K
%"JC:]L-\80,mI+u>:Hb]Q<8%.1ba<^O&G*?=jaM\"GES,E\P`uaf=9p@R3qL?pq9QP\`74FKuNW<!Lp9'?7#>bR&kPc^KEkF>>l4
%f)@-*$b7TujZ&Y!1M[cRF?/Z6$#&NX$q9QK=2E#[M3,`."FPd:XM+pf70_4g-A?2L,iqdPnQZR+>r]*0$fh5VH76-M.Y9=#]k?J(
%6GS7;':qL+!6rIo,]]KG>9R_C0;TR*P&fZ3ERJ*#h+d?11%"ZQNga%m,Xi6E-qee%9eg+RoWi[>WQtbLP@]Yh/]<\UG0_4qZo4`j
%F,eJb$S`XW^rWc+66SGA:F5b]o*la[fgRK;m/(!H^dS6s$n6`^dnV4d'(;GY8G$^H)'uD0?0`KTI$k!C1aCHh<aoGm9>,&M\/ieM
%l8s&iVq$;\_F0&id[X%#a:ckH@slNo+CT@L7=QY33i2>1@'.jPOpP&iDkij/\n-/9bN!Wc,?W'X&JLg^L6=FmV;7q@$TIc2U>QAA
%DtIn!hY@f!l*VA;l`^6e^*4HObU'Zf^,_9lph/*cF_)EbRmf/b#c_)H/mY",b=_4@Us&652);M@VW#]lN,FPS\qm0gDKDK9CL&(P
%5dI6SX-f(#iX2NJ`a2[ioSr*1)So"]2L&6]GjHpC>8=&V8fG^c(KE==?eqB"mm8SFD(:-"7`Q7F(]$.bl/+%b$1:J"R71+q(WqZ!
%C/JuL=A#qm;/uMEqXmrhS4UjW<7R/kZ.([L'ufE[NIFl(*%"Gsj/<.#;5oDU^8pqFF"5^k(?NKNS($GFQ#L76-Dm>pe\mS)TTK>Q
%Q\>c5m'XbD]VcT&Q4h7(%m8`k:eQX@]nZ<h.NYa)a19e3a5%pNj^(%(;T:Mndc#$u[;n7()bZD$$\otf!7cI`Ku:0?>0C[:E7D[R
%s)M7#4@:QW\Q')oYiW1X7DjBr/<."b)@e'1L-AIML;R'.<4#*9n5-t\C;k.a9AjeA(f&m!V.gb=_@bT`Q+/&bpD=30#=tg0cIX7c
%].+Rk>8K*q9!*'PbT`^nQ3q8@XY["UiA@^B5]3P8Ngciuj^'@*)<l$=-9Uif?D\MG8,Nr,OXplo)nm3qJjV+(Nfo)).W'mV;,E/,
%nn"M6e8J_XQ!,OTKTlMeM_a8<<dff7-TgDDm;O&Q83#JQ8"r25#Y26564R1QE.J)'9"#NAV_9&Okb:7#Zk!r7Y3!Lk>f*:0F`<XU
%p3p!]4@f'u\)Q<o0aXn#Wst*f@=e,@BlNF$6]+.2%$"LqV;TNn)'#K]4KS1W1,rVMB@BZq*$qfthJ0;H%F018_*QmLKC_26"40\T
%n=aJG%BeNqQLp2@#u'sJ9$qRk:l`(m@r6/f?*O6@]8S&sSE\#/HdAEI\99[/Z'5LV=GWP_jhY)m$X3>24?0qJes9>YS:qRe\'XDm
%Z]Z-]l`dH$:0TP+c)j/hMeYtfnibP/f=07pr%Zb--_irSgK#Ge7C<P^FUnYm.7R(Pp&a3#`u=PFCOpF1`XL:"e-BX"@$\O0otacJ
%MXM4W"iAZ^YPqZ=#`%A=MjKe,i9]ClQ1Ej\2]K)h(ZiJAg256toR'!lZSSY-O7g=,8>]"(W=R9fc3Y9B=s"`E+2['D5.G$qSFO9V
%3-n]]XORPg\_g:=]U&j.ZXRXO<ZW6.9$=aub(J0-K.O?0*h4QB7erDAi3_1VP,@*ZK7bJC5[CE#DYRZV:rHNZ*(E&V$sV9f#J8BY
%W:dt9/&B,<;X8t17s!],ot_*peJ2o(%h?VlF%M\j_;Qc9\ZF?eB*l[R<E8@;CM<(q<qX9\9BRYZl@W<,<ckD5i%-(jQ_W)KE&mbi
%>Bt2W\VWb9(ZiJ1Ye[Se?S)dpdNjS<i7_\cW]mq9e,3P;KD32sI;jTaNR)*_E1J%mgeo6,0;2DKf;/rtch`[/DHC(\DOsqk_7@Nm
%2m#2%*J0$2E(bIqf'O_R0?Sp::b+ubo&*Q,6CM4%*&^j[4>"a/_lT_in6-kQ[Q*qFeahY.-LleaMt5ela`PYuo&-b=Z>;lY&'d5A
%=tk=T%h@)@"ij8]E#J_Rijkb-@qH/i=k*b4AkC0QWt143MKc0d35P[YC4GI?_-'&VQ"#iV&'goeXEh+M%o.h>[?G?RE:$6%f*CcR
%0'\'f8Rni?XUi^/;u.ij;BMFjkGG!OpA3],!A.\]l@Um9ER&Q(+.R6eV5q/X#<.%:5g6o*3""E)C?oAXE%hr;6FZgL3)[aG/F.q`
%>@2)J$\\+<=<VI2E3LhG9#^qk@!!(!P\YhhXh/:g.hE3;Qr,S^;57,Af4nmuPMg\=E,F2.iJ(>r-F505c;I3T`EjZ,Cg$jf;'6k?
%3jfH>/J-4uU+tb9+PabO3gX&TJagU%ReH=1Be"`"U,k:+G/S(EinuM[V@ZsKE!GL!&FNY>3sKiPf#lpuC6aQX(d)?2X$,#;-\0I8
%Pm,2I/t?WE_*a4P?IT)gYZO5A/1&,H1GZ@!.lr:%QS&Yt_k4ebgKG-CYVH@bSY7)a\"7a:90I6K*V4tY[2q:`&@>dB=:ZD-1NfX"
%&"FLGqL5GB%idb/\u.t[nAKP"c)hsFj:&a^TiM8n$r]cVp2])_0c$Ha"8C>#?`S`bl0Wu,E$rQqDdukf^f_,5p"O9HDjKU]T%\Oc
%.L4/Ng;"Uk1H)r]iRT%hH_G>j'rSI<k`'6=$\iH]Dk.,l=T:U4n(Jc%EFk&WGD,qt^,TS6_PA^>RA3P)rO?pPCb%(6*%Oe>:d?-O
%i<TR.5Z"cKf:Q;`n'%fsD@csX<-L\ESrotrl?_N$kC0Sa,m6)Y`h39qD>\kR#R]AJ/[iCca9nPg!YdVon>&Wk$3^p_K8aIN"]!-,
%3'IcZ*0qPpk7e8nh/4GK32o[+7FI:5%D/TFfg#UOqF;C1'aYkR%AeSU,]GZt3*%M'Ohb[/LHGWh6_Fl/;]p%"VZN-h6%MC29a:_Y
%NF?K)"HN4fa(9l)-Yt8i72lq#?PN&")&,'"H4Ug):uF0]NBi:5$Cop7e`rTq1.]'nR;>FPm-k%u5XPTcN6.kU&3,dp#pS2U^hH?G
%$t9PH:/jrr&iCeNVAQ:t)A"k1_MQNA;]p%B=qgV2!J(o1Q:A_"#b8jipu$l/:9/pM>f-RIS0Rq2k;_BFfOj_G_Z;,i)msV%!@R.U
%HWk#@i64W#7^P!!5n6_uBQkG886EPh`rR!?E@<%A3$d%s2Br^A@2BdiRMcSpT?<ooEPNG;(SLFM%QN3Q,h\nOi7'N6q5cR60F`_c
%F+sdWNC2Rn"p8`K<Ju[q$jI]f&69*[(i[3h`Fpb13,AiZg<=QPH#b)@dW*&3lG%&'2B6[,Lik_1!B5ZXVS[4>H%XP^Fr52r1*Urs
%K)t-k$";Oq^hMH*#Htso)^;DQ%2<c/Vpr.3'QE&MZ;GCl!m\A&ZEQ/"E#(HReMS%[8d9DW7MKgjM3Std38Xb5(**RK?GBFS`t8KF
%>riAt.ge7*N*mSF"l,1i.rBfe':G#E<"*`)i':IGK`K.iZ*\fe!R=0I')`(:Nn64Clu*Hn7N`f4*!2X.Wo=3`:'kX.)?`#GBN:Zl
%JC@T*9%h-*&mM)ld@!@Pe(/Mrpe;09Nn9p?&d+Z6QRk1d@Y!J]?j*E<J;ZTHB`nJ"2.1^$K7MEk8rX)/Gj0["MU5'+E5H_&mU1bM
%:@(KOAg&nEiVjG#Y@E)m;/"A5'Eak`MMf-AJ?tV;Qu])Qi0'O('-(u?!*2,j\,b:KOGl0W&8R;/EPS"+-O3Vg!Cp*Sd*62gi-9#a
%X#gkP^.^HZ$j`B[O4Q,mZ,4.NFjPZSEAR;]b](?P!l_M*7rc>D+5,3!E53cl4noI+E/4[WX5SS%BQ-??kLkCPj;\=CCRlIL*<hr:
%@k94'Tn'I?`0L]:3$VoYB4r^O/>.o)M)h;\,F'a/-k-?M\LM"uT;$il+Hnf<U"R.WlL$\A37CHX$dW4rBnm%%\DVnDs-(:-L'0-b
%R^B](8DkgFF?i1pB@.fPp_jc)/.KF,S0<G>.mt)CL'3N=Rdg85,]H9WeSg0F%Pd:d)A5"NU%IkR,]H6K#TVW]^fbABZ`YI&o:`NM
%Ak:i^Q,:kuOMETi`7XHJi68\B$tb4sN[5n-3=Q97o0d?.NWdWg[?f8+:mW0U'Ls9bPV61$DKI.CW=M?9DMA;>H9MP/)\fej6Y`[o
%9Mm?0Tkg&^J^a>chMk@iL08L47jr<lG`du/"pHU[0(&Jr.Da.k.dS#e3,@iCL2=9Oc>/666%N78+K9E1E/oY$lmC\K1tnEp3Y](]
%)@2p%JRd%^LS-qa_rf6)V%"hl7,*lEAV:-Jkja?1$Cm;U^L.6LNYGfV-(T-+E"mWA\sYg7"')]LgZbM$J[:+^%'l3'[kfH+p^@M"
%*FN]uDG]7>3>SoY"pN:91:d8r$63>b!bJ$,i+t%k;cNo%a'1sJI%Q"Aj)o(Z2(W\tFD5Wb@=_p^bLA@"E027Ye?Haa;isbY^_-KG
%j9ER)a&"86nV@?$.8i)kJYNLAPR&9:*"mDDVGQ3<#N>/c:uJG!(HcVi!lm0?'kU"pW+qBH`c"E+Ht\B^&3,gjZ5mOBi:n_*Hl<PU
%P.)':=!VbCjN8IdTYQD86$S+g"jR*ekO.S2i)mc-->HB8oICkm\=ng"Q-X#r"YT5?.3fTfF$)#=C09DUYbQ/t"jXHKna/kO*\fbA
%_\sFQ"RPTHTn,!]KYt$fJb/JAHo*tT/`6TBYfDgE")#_$IErcP\7+26HW(Uh>R$ETHAVq;IHXQb,2<)0J.,0:&It=rKu1L$E8W8s
%-P4<,%ih'![;n=fJ[6=ACI8N*"!C;"#+=G$o/%p8T$mgAC$T-r^ph)NnH\a&n\EhOKV8;a&"KLB4R\:8NhoN>duFZ.!#tVYcLAV(
%hK1>2*]VWMCk6AHi2.6\bjiIl7PpgVJR]WRFPl&mZ0_iC5DK?]0;ZV$_1>P%io_1!3$5ufJd)I?B@(\dE8Z>c!-lF"*&p)LFP1jt
%E2N/HZm-PM>k>PHr#?1dIQRXS)]C\G""\&$B]+[NA/_*s1iS8-i6frfiE$E^=@30L,aN%GG_u\8EAf)><]"d8p+5MHVJ+n44$u-d
%L'DNdDGOq,70CSW#ZC!t%30r2m+F\#B]+s`e7/[eN]]GnYW<OZ1(M]+YeXD+1?8lmE$R53$mQBEl;H;*d#c&$182sD^_$s5cAssC
%&.C1P0]7`fH6N\k;8Am>OGN9Hi9^<dG/OA6b4RKE!&)Kcd1O/+'+ruJL&c,Df+@>*!"Ok0M'@HhZA0)CHAV\40K[i32#qSt3GA/V
%"+VaO;*3ceUN;>':kSd[dKJ.:%/h-j26h*8r>U1_KIUishnV;U4R4!a)tm1hblml)18<DZVrN3XMDb_=L<i&BYi"NOB'G>MI\Y&C
%9l;c6n)OV1\:]6?W-gr=)aV4f-6u:frJ!]_arBP',tQ\56,0[NfcT':^Yrmm$04$a5@@F8&\hP^A-`$%0:i3eAAe;!gZUT3^2\,>
%;e]Xs=\6XqfJi*99&>*p-DG'",LSO-RYdGmoZ\ML5_Dgo^+!ZnLa%7GJ/D*QqM'ZXa;jHV&6,on5i6PWS1,C:ho/.!Y/>X^B/qt:
%U3r`M=jUHP+Q#/HI3'QGOf:Ub7g&MjnZIE\5/[+IC--NbDZ\m*q_i\;jHckT1N[Q>@KL2>K6q,"1A9,"]qKQmbNPhMhFO.LrOtRE
%9AGiS]i/T_M"qW'g)C[!mr`;^f#Y+)B85d_0p;YZg`)Dc[G>1VC$6@BQdQ;t)f63TYTpS8'IrIq)6u38bRq<fJ\@Jb5f5t,oe&k;
%0a%,]HJ3*!&Mjd0GX<gf"+)9\:X)!lp1Ee9PrB`:RrSImm"k#Q-pJVKkK)LN<X`BAma0gLNs"!K%df8IM]^??]lDD!?dk"]hDhM!
%7*hR?E?WJ:40gdKKok+hA8d:'D*,*`,YXYKCi;?eKr?P$Ci;e*;$bOQ]jY2#;r=jn@=^,/50*AoOd)U[Z+Ua<*tSbFf\V]\kKOFi
%>=-[pN7d!GhqMU%[PtH#UEZd8U/WZfj30!a2m&dHJEeAj2bc(E7W<9p`F..#mS+@RSHq#jDZmqRJ$"9KZUW/-4+_eug+6n<Rt5o"
%l+m-P!d@::+%s1rHd`Eh`PihPgP?)A7W<8PNk,hW>:p4$d,$<F6FsBgHaBA5n-]ra)qb@7s%SWhR7LcXIm`qLi3IC3,C=L+P4C\n
%f\R$he*_)*hXj5?6"Gl?NK7WNZX\>$`_5(mm0u::;<'[D2hSnFkmHee!Sah?Zo8X?6eFZtAmGmBRtg8=qjqpi1LtE-r<1eQA8fC&
%LbdVE]a[QBN8HnoAt)#GTSDgXatoK71MC\dNrhK$TY9;l14%NF]`jE`46oCMDhN+`h4m8_CJZgGd,#1YdV>.8Ha>"&Og,D`bp]9Y
%Jh+2ehMh")3OC^hrQGjtBQ":[rLb%62l$QpC;A]=Cf!S5/SZ10)_hTk7at!<OTt0sn@VajQk@u?;0nPh2dgPpj;;^Kh?_dBg!L5\
%RrLT7%l@[48-3m*#PMb=c8&K\"nlOMMK*5rp6L)XcQf_S*W87%h'oWgnQ,daTuc(]ogZ_rG%bfkjB.L,_tI^!(aVQjgRH=sp<O`5
%RjsP**K'5YAS@hVZ+V;h&98!Bc%9H2ZnuT;m!Toc*Sd.7il8J;E,S5=,j)&`hV><%W"/5)M*Q=2^qI9e9eT\8?PZ*])n,LLGCNtM
%j%"=15m9lA_@51gFbt[h\70fk9on3@%GRB1]7\h@,IY&q*kF+9HddO?Aq]l4>:R![1MC\D>XT!7d,'q[[UFj_VK\P%H8C9KVCfXL
%q?H?3RXUR*2JhjL07Eaar<9UGV)kh-0k=8aeUpIb`;9cT7&:[5!Y%YjH>SH_Je3I&YXX^VQB!rcPMtAl\X$kG-u%>0-LJXb9Q]X]
%NXE\X)n^,*+\'TI?l5SF?6YIWO9Je6m?"nIf%hL;d>L%/Aj$b,&)#e*:reH0)F+X42!g+j$pcYe<oX\XFeSXs@uq84Hg(p7%hhY^
%p*/&u]alVm=U:i9WrRrA8H_UV/SJ"O[GM8u"7^1nf)XWo[>frq8U(P2Ub1o^>E%F6BX&th:_np4,FED2-jp[5@s(S72`ba',MWTU
%?%K<`-D3J7lNqY&+Hhp6+aq>T)o?\%]2ks"`J$\eAY6Pr<c!?P/4s?kL3=8W&2+_]0BObe(C=KCoOT0P^>i,.#Gp)Ri)r_>d6Y&P
%[V.MU]69kV9Mr8?'&cGJEH)"U,Ke%HS,@hcf-,ANnj\*/qIY^3;CT16iKFs#nP_]<%Oau(,he9WMB4Dlm1@H:0`eK`.&kB.P!g&j
%8:5KR*@rtL0GGD05mKKM.'=RbE6%Y1`)@p2Rf!kc'a%J_9;i9FOC`:ZQBHf3:R_i/1'Eh1EPGSr!<=B*^fl@b'bZo*1@>0_8hXQu
%(<7m:EfJL^GpHd.g]K*Fjm>B]%M3Z7g+d@Y_"lD(FqQG2n?81/!3H_98d@9)!&kkY99(;e7\"fp*;,(Q?l8/"j'2SkE9%p,RNBj)
%8*DQY/_QWurM^V$#6<ioJk94VS\U&#n`/cKK?`iP"rN1uO_2k4&TpU*9IL2TR](s5$d7'uRohCRJJ65(!_D6t6U2?7LB`L)NcHPZ
%7^iP/$=MLG<$[Te$^!0133p[B'dS(Ua"\t3%='qm'A,B:YFW/n:;HK>'BhTS5]:481,2?%VojgUJ3Ppl-Nk[4(;::!d0GiRG7[Cl
%5Cg0^of5(Epn:M]5R2Ii'd=_l#&,;kqDaKlboEH#Gjga(_J>kG3lt1"VEYBoJBD+e(.eQZYWH`[\\Srr,jE#EX@58U]LYjk5e)h@
%/-g9nFJ*!2;XHe[U&Y^UIJs4p8;Ro6!/+9qE!CjcVh6+ZE=1qB1X;'c2-dkS),_]?+$8cW$`(i5Raq<Fr'B/$L;QUX&HIgs#8f#O
%gqfCMmZ&\,$r6ed0VcE+GLDGH/(7'WP4OPB$jg"@DdXal4?ujKoi\`R.SpP(IY^/(-[YuQllfdT+XP(EL)!or"Yur.6n[Uf8iLae
%ZHjPlfu2Hfj4J@,7q:)5a35<UhE*L+),X3J-7)L&$.X4MI`b3UUEdhJ7Ka=X)j,L,:6=6@:IXY@DnQ0T1"J#d6EmPQ&r2>/fEL+#
%N1m'g)PqeHe4Cs$TpRE#=KqtN)]dZi]/g5/R)ffZa[&lFcO-+JEb$UD#.^.P<'$od]/3@2m7rq`K2!l9qT(\(Vtr^FEek$S7#4@h
%15]CX%4d0(mb%\kE_7:G>b6bR3HaOV:5Y\k?A%a'T^a#5Xb%_!]+#Qg_0NrT,lnf-!=FsaMp_`!>TPpa%6H0N`>7Pm>c6e&_)'a:
%M)EH&1YuX.)o5.S7&B#RB/qb^R:+i]<*JV(2b897N[KJQF<5K_j;g790WnRSf-*_ATr<;.P#ii(2rh$f.M3f7Rh-4LX:l]eF(=N?
%lg#_I6(1]I-BL"C!jk5thB?J=Zu6`XitL]b[fqKP9V"7aW%p3n(lSGJ,Et.f1E?NTOnV0hZ[#jga2%t*BH],k!,mMFK*_^:67*\J
%Na*OJU35f1`<H<1%_$Fi#Z;q,X2>YBBontL%PWGAq0Mf<ZWQcsCcW7n`.mO]0r\kqN\Nub:mtF(]Rr>+!:R.ta:8J,WSTE!J38P^
%15HU(D+D)_/1pLTU+lt;#d4j/=\Jp]k"LmA&pBc'XcY1RM@>('k;ADD3K&/MoQWKW]8QlT<\X&HKa11Tc]+V3EU1PCTj=LdEGJ=;
%O`\&&WES8@#1p#>aakcRLtFJl5\_YF\IlP_f=>T5Qme1'iDr]Okf%t/13Lq`a39NP"YED"F!FAU=;8VaM4Mm)[3U0+7&<"1:m2Rh
%d&^k2RS!Qni!@io`O(Q*\dUr";HtV*H>C#H@:uP***$(kQ&#DeWf4P;`?'FUEfqfcojJ`!6duRAceXdW9h_d=E%Y?OA5a+3W>aOF
%/lIk8*`8'`)P5>jZh_23;2q7R>jU1!&*d:$%dj>@267g)Ab\>37:IAX,9?hL4Ebbo7d(;&=-uK4%+pW>)Cp42,ZTkd$k5di+%\e!
%7-*h_oF_p.f-b[5%X:k)9"%X7SYF&[KZR=gi%XY^+6bC#k-jsj1F.lZD$6"I5f-,N8B:h)b</Bp)B,4q(cfO._;tAVlPr%Mk!G.;
%jK*Y%FMq9Z!Zkq.3T-u(Hju#[gTc>,_D;9iIe3'34%EC#g+5^6JoB?uQ@WG)C_e<2*Q^\LmZW@76:a\QKUT3%QP+FL#W,[^i\!o8
%&YjlU*ElQ=KrE!d6Cpm2JdN&?1pf>pc%9hLWmsd=g+mVlf!H/@[qH+6N3<ir$\gG,"h25;nV?ab&[*9r\"<`2jHr_d1/J,PIa\^U
%&/jYf![]LjYNuua:XObqPaJ=#r'%;]3`5-@U=mqh1Hn5b'S[_<So>cZl!X?]p'Q,qnLEbIAc)b]$''*eGHA@W'lsC^'<DRbCqOR:
%X[/[#?52-kZ"-Cnd0*(WTtO=`FeiN%PD/R/:Lc'CZ&.)rQ>R8,=1eiTJ[(h!'cXb?(_UKpKQ__>L5=e]+c#&:e3U\C@Ec#"7\0ni
%`(3_&ZKNr31tb0b%sIVTJnXMnLGhGeq"Q2r\>%V)M07l;$W:4+GoQ>u%)U%/m).+?Aq@B6RYVfY69(Sl(ECX^(.dL59JA7,4O]Bn
%njYu(h_iq=?nlq-$:.f/Fa#t#5u<YtdusDN38\$1"+uuAag2KdMhn`aGUlbZM>7g]arPYVlem%R0*qoB>"@4J#V611SEe1,6%[_s
%">$kCb+<:qj@b8l$r`?$goqlVNse<:'ne:.e>r=2IE<->/0Q1:9"UUWO9KQ$q9Y*dS%oB+SV-EA!WXsV/-LM8\.jN21rbd0%hj2j
%8uKfi,tJFeWC_m2>(ne.*TET?:Gnn$SJT`$!O`*!i&nVY&PYu[8u(&mfHM2Da%GBHJZ_X0;1`NeHluE7fTp5>kV%QbG'SCN6,q(_
%nlGp$@7VZ1mrp/3hIpg2Ts&&U"BK:@I?\C;3lW5P!!\;CcL8F?%!j/L*Au1J.mZWFJO,eE3pJE!?sf\8!NQApnQsKkM(6Ca@5nL3
%9\VmZT)9]jC_=K<'"2D@d<k8QR7O2/!$[03K/M`?JjH[_SEDFVn3Q;=\jVOO,jaUPKos%]HE6$p!?]u'GEE)X25)P(eq\'),)h/P
%>tQjh2f0WCZM#i#jc&t!"H;\5_B*2"[h%9UMXD_(6tKH^]X0d()1,"#ZRqT1P[A^_DdlT^&TrU9JC$4Z2=QD0`:^6K@.I1]0(pEC
%c;J4=$Kn4CJX2cY>0"r(T0(XZ475BE'bpcg9[m_epI'BO+h"g]o6!^lqh:Cg_q8ab^&THiX9WQ+ChNY[+`am*Ri^1ZG&nX<AiF];
%hu#+(gcE2*rE[HY"XUQg:F&U\fg85]o/&cVG3EkbP!$[0&76beFUZ^[9@G8O&0'f!3cQD09n8CYUPXDYV%Hg`#mt'Rb(_bf=D=8S
%[mIGM=H.E4UN:S[\GQn0p?[$;?9ka[G#2Q)Es%P*\-PZM)6B)O*fc91Wd#\PR6\ek^s>iDP=71TD,,r,=$kH7%VHE5(/6KQ69#<\
%A-b<(7b0As(GT(npI=0^'q("UUaTg44t0,f%W!4jZXSGl_UpIV19Bqp3`?6?+mJg'coQ<]3.tmAO?0l)oDuqNFBWYAgST?#EpBTT
%`6/,o4<Pu+1_g+GM#E5Wd)['/<(2[#NV0/KRuOn/`I`gZGp]7"67LZN&,C7ul%H>'bI%k2Pm"HOq,2rS<-$QF"M7=FaE4]$Q*HN=
%Wqp8Y;4>\dG1?Le8>mI>\RDm-VFI;X%B\Z%gIr4],aMV^4![!mHfbJi--urJi\uqnf7>qFH?W4Am/]qe0M`Oj`Mm,P-NR1u/!8TK
%$E0sk3tC$P')`$Q@;2ti>$+d/!94fn")1!-4CZ)dL+X)$PT.l*ZHNqQK;F3c8IT_##WH?k80n@l493M@TWs;`i5j"Y74YYc^l_I4
%[=q3G>'q)N9DDYB2W2HGA-o:fbTXH;E"ZN;''9f<A3k)/peu".:>ZkDHC+hbRH+u%`Y4_&77(hsl].6Iph?d)pZ,5ZJl0eafLP=Y
%67d["!8X,6dYgFn$$F=`Ba,`4ct3UiH56gpd`ZgBe0UWL9bX5ICo!KV(-r;T1WVamaUeMbW"?mYNYu<!p&dqnVjEAoq*HB:MbW2u
%Zb]6?)(X`0W[h3XQaN%2ZX>a"-KU%S!#*?pABgiQ!)%8TR?u-T2ZiA@f:JZ34ZJ;i?qb9d*XQJ:/G9(>_kJShKNUDkd=qL^a`[5\
%)I_VFOOmkYh<Rl$?hXiFOFsc#;;HM,Y8LbS@aUV_Q+iM'(Vt?k79#.8(pKik:Fm;Mkc0,fC%MuSX&:2sSV<=[YXXgB3eXnXK>UQM
%g'HjKM/H1ZLle,9RUK_i+>!4WWX6TbH[.!W"9d`B_>7]$`d8kJNQC/=B#K*1@b1OmJ>$K\B[Fb@6s<,.k^oO#W;Df`#e6EQ/8%B5
%&#:[G@^/7MRgdJ#k8n+YG'g)q,<,]L`+bmE_`Deu"L+%9l)5u"T>E:3'S8f!=GFXkoJJB(68M+Ef0a2`7;Y'#]U7S$)fH4T2p5)r
%\fD<k0Dt@8ELbql8M3.e;$1a*]hK+]BEs^N_?d:KJ!ro9PGM6uTB^TV/_cKr6mdL.=_+s:a=i\/^k^Y!%IU0/>.A<P)0cSphFEEb
%0$TBJ\gZXEj"i)LT!Q,MesAT"TH5SC;a:]1Yi5l4X3<;W'*0'QBE=8a!WGR88fcPO+ZQ`G=U3\cT-7f1:&61$=pW&_at.E'+SQ15
%TS%KO*7EKgE_P18`0SXBU.d;7kWCUX*$i!+(e,gFC61-1r"PtJ8:L'`5^dW[/sSgTbd97&fa6+8*;dQA?KQt0-OD/%TEC^k0VfL-
%"^i)a`B;/l>>9/Oc8ZVc=)rLs5:HZM$O]WXRH]kLS(X42Hofj-DQ!"_5F/=G%o4t(M$?5p^kR-cPUL6>+?!k0[QW)JeR@&31B==Q
%oaU"LeepLE#*$8#(XcQDR'].u.jXLlQ!UM[eC&k;k)A`*Gk.^?U8qGS"8bD'b()P-\H4oE9!ZffZQf_kLJ[:Z6\`7TLYp'CZSJY9
%JK%/pGK_S</j3#8TTo7N=F)#[^(Q+QAXkGM\E]0?1`Wb.N-C,)<o_^%6EMdD:`*BrSS)FCMTnaL-"*f6G%(kh?GkkNb;!.f)e'd/
%aoc*LncBYI`8P3h!+FR,S#+.hEQ=M`N:Ht4Die4I7ON$QA/;jS`)Odp"m/.36EeRqGG]>Hj$OJMl+*XbALN3%#uY9-jp@1Ns,[t@
%ltRt9R+K5"iiBkM@fX;[B-S:?d-SU`QY3@OOa:F6WKWopF?kp^%MH[KTiXdBrg\KoJ3,%M\29fb#T?gC"C9%%Q%9]eOkLV!!L[RD
%+b=maKdH)*QD:+M-iioRN[\a_Eh`gKlp.fg2()cO,[>RFUI=_[''_io*$aa[#OHa,;W'ij(#]Ei7+`^6`*OR@XOR$)&\Gie-P8/(
%Nmg[b[?tda+:-gpL*VRTEn8)k6j5iOR;HLV:*Q`LE+V,%Tgn?[:d*02DGS?B/-0G(j7!AX36AdXpm:bV/*._G/kF5q$*'Y$A-i`b
%8><!J8D1sj@V3e609o"rOsGZ_gP-gbN,BhHY](kpmQAE(&a"Y/onE`(''r\_LU?]U5etcc9RWV15nga.CC<Fu>'-+(7\X!Y9c>98
%">@]9G[AB>1TPYm'_-D`(E`m9hJXWI:BD[o;;6M!Hpg@Ng6&N<Z""n,7l;j:k"3];%1*QVZf_,2V?a4)S9K)C!3I%^`7%MK-G$-8
%*5qTgInP.l"R-b1kR?-b?B`?@9pLf*!FgiV$j&uZWj4.kAkJHC@$a8gdR;U*6]mrb6$nb5;]&=30LOa*O08b=,jgEY"P69<!N>p,
%384'kXb6?]<GEA_5guSiFDt-PQ5q*:iQ:fY,a-j0"&SqA-Y=eZ8d6,2A3po!3b+gB*i+I&&5#RnBou^6a$!W;0Eo#,qVZ@gB-4D,
%N-P?#2e#<08!+@r4:p>G8GNBK1Lu+Lim5[r>L]316KD9s(7UQ'CU$!DGdG<gLCgU5A.qU!coMo/MIBIG:V+R9dO`.tN-F89bVH"\
%$>o:<FDpCfjcmf\T9Wdq'+Q`R1+Gi)U]\f_),97VD5N1&!]eglU_"@H">dS6@_f&`UijT%IA+R9XW4'n,;N&>Ilp&@F3rq-ceC6,
%*J!&OO+C*'NQ2X.Bn[&#-l"4*drk8dShl+$I'On4g;,L%..T>C$p>d6@sTSEE9`WCdtuL)`2GFV]0+XKobioV/N#FeA0E3E@;AOs
%`[[WZQDH.dU))D'K8;a2]i)<VKf)p==1Gg]dnWY1T0d)8eW`@/!\E%EmGL57eOnX5$tdAYDunFb7YrAl]<'_:Du-aE`Xl+3@`WjT
%+NR#aDUtI)l1J>/\Uh.(#b)s1_b_M/6Njmk0^t(i#%U#HTF!>o`eISQ=XO[l_P0!o#ceS,1fA'R8^6!t%WOkAN$5nA_ZnLJ1MB&`
%l\%H?5rttnp.@"W,]G*(6?_C!VThC!(^(RF"ot>:WIr]tjT')u/fWpd>-DCCOY/0:U6$o21aPO;d9!c]#38j:=,*3(0JJ(=<mXOa
%;'Y96Y*,URR-^#e6uS-,qSm[k8@9)kZp?)Zf<OfQcj#:E#8TrJ.F@Uu<%P8*fLu#g;["!<.3Bl,B7g<,;O?Y<K='6g"GMCZ$ciC!
%.MCeh)D#!H$K$kI'p:!M"H/\@!*!SK`srZB//,H)*J6aP%C(+k0Vl.Z!KAqI;,"56.3'ZQDb(4:+U-0D?mO<3&[\1'eHT1ZK:%t1
%s7'(!cq;2J^^B/20Li;>ce=_BiBojdkV6O"Lcrpnc[[j4ocko^rm5BH1"6>pZR(,AV8%P2[XH7i#`/PVoIHp8J^2,hL-I0M4V!?]
%C5`+K30.YB8tl8ffZan9&aap2N(Jj,&P(km$_QH56oPu(#eV[.cZE_!V?][!oNJ#sg?V64+Z6,i$@WRXX>I;IoQ)f6E*k<[8#&.3
%NCckR_(;\+2f1D5Mnr>Bm(/-gORd1)3Rj14mV+oZ%>G9kb0ipJC_[qR@e-;JM<9p4/f3`7OZ=BSQAdnG%fcib@H@lFZlg^tc=GTO
%c:ihPJLafsG,u)]gd,3D=rG!OV2mj>O,NGujSJMiHqYk1[Xm$*'Z>#O%r;SA<YWS+3h9E-$S3_Bn=j935b+21js*_boB0Yri?Aq/
%^HaD+e.>)Xg>T"5:a.MVDI,V.b5rEs)E^YeO9FF#=US]FOf]X9L\qQ`a$9uD<3Ad4\A3E@HFk9fj@Y:qn\^').18frl"-)AM<Sb_
%IZNV9;,>7_9"5Z^O'kll8S>\$01;^#0?f=>08&I1i]FFPWHD'',5g;JX7kC#qfXJ6@L%3U'QM-$cn!;21(s>uVmWcaHSAeH3iR@e
%,U+[JH(j?.NeA`!,@-g"'Q.&?Q4Ga_Cn&FT&Z6M+aTBlL'Xq%2S\;dkT@FDs;JHeZBJ:)""H!fL!hc9,eC-)u&JKOI7gQG9&1JVc
%C6<,O*`7kFTi)*2aVP4S_P/=7;eC=t&jks+:XLZ1-Qo?N#U3nJE)S#_0fmEK$HYj/D+Kg8(Xi4*7s7bV?8=u;_HojhBL;?h^amYr
%a@#;q@&`.3Vj+qOk\+d-!X?[4(s?eH1/J/=.K^f.`j$&r"=kDT.Dd7VrBk'ZU%"=!^05@_F95lSJm;nV2CIfEM)E(O7?HhO7g\K%
%cK(mX<=Hg8%>,90R4S(F6nH?dK05];V>Ls3E7kU-WW;sl&iKmS@#Tb!9i?74QGh)?"L4%`+OXtU;2utGS[BjkDJpGaQg<9GBV,D9
%'\8)C#U>%D">i!<*L1$=@(E[]60>g0P:Im],9lQZ-_FJ+.Pb/lbhWliOkn3HUKR7Yi55[t/Sc2)ma9(.8Ag+D-(?D.PncHLg]Hsh
%:e/;?%38(bBsk>p<"\7'ICb(J@j`3Q8lW)RKZ&XS16_jX!2)F'l!Y_C\Y$20LHuu,V#:S-L.IDTB,1VjJJX:IJa5lLmg#fo-Sp,3
%2#t_]YSPV9dXbE$25J29l+*m7YDduSE7DG[&Ki:+[RJLh,]*BK:l+T]K_%hWRNdV`A(``+"o^jH#G>P3^pUKeh\,<f$>L_dBpcY'
%#R`mk5oX%qd)&RUTdp+nVSdrfiC`$b"ZfP5?WuIK_>)7XdU["nK&!X(O[_c>('ukg6f:5Y$7GHLU9oe>Mi;Zjj@,f#>=Q,b@n$V-
%1%K8mWq?CF4*5QNMFg/!Zf(!;)*lLo?7u(X-pc>lOpNu[\t"jE#;1h*\L6JR7S47d_`D(0+F,)ANB\eZ!-1qE"9k'%&?H%i&'rr_
%l#IAT/LEcFB/0[h'58U]^!)8+b\cFRMqT";Yn=\mj:>pUORNTg3cM%=1Y@hsP8/%*8D2/d9]shHq!+r'XP^*0M5B$uS3d2qN!FVu
%D%#Ug_bnjX_hQf+MF)ir76hAC$#Hm>dPfR0NR\l+Tk&[_&d63F0.uL$,;W\`#n,m_qQTM:G9hN33cF8m!A$,`:Oo9sAf+L_FW8;=
%$ltloi<kDK\cl_;E/$'Nfa8@U/Yg<>Jf7B+P$m4I"giO$=i&X$`"/eo]h!kXq/e1_[ck:mJ;tZ2+UQAi.UT)%ErcG3<YV$TfjppC
%2dUe+Jth\4;G%"O7K<NC#EYWH.00F,4mA&ADT3%9]"B)YNZb_W<#WW-"9iCR'P`S7i)s_gnHHAQoF[ZYd]FRDL'jU@2D@jiV5`<,
%+2E4,_*QG?#&SH$'UoD0!LGGod<K=m3Bo+'6uI0!%$JF7lD!WO@%@iG$>"4)%>6<1^I1ZXRbMLS,nmln:#Sm=-403NhmEiK"3^fk
%mSAbh*C:QQZG49Y'EDr;4COb\0uaE@:GHo(Yf3XFSXClW`:J^^Sr06]N3%hG-^JKnAp\4lU9pKoJ=s;RUL)+C+_J$4p8Jd#;c[\M
%Nb-Fg!48S&3F[KE^'jh"lm(<>%I9!RBCc!e$dOU]L3OIl\,[:`@L$&2:upu(pMH8TSL!k^BK7_C0(U3Da]Rgr,?Q"M9C.NsHHA$R
%8[(,SP(]-%6-^\`UluK)huH[sIqn%LKjd+-JL+n:kX&YpIbof]$B@GLmgPm,@c61G6V!&OKW'PF7=LuC:C<KB@!7al,RD+uR(,qS
%>fH@4Lko*-?'l7lXj&PqTGc70H4Z`Lm:hjN!$\F$,ZUY@M-IhJOm,)!MqK6E:D8L",3UPL5=c(]"0MLl1jLMJ1fsm@`=884^i5B*
%dB_'*#k7,8h9!u2[g)rFBGKO&kKOk)DKX;?':oZhM1o?UO:\!hMiT;1D(2L;3g:)m#*/t%",@#]?-&R=Y<C0m=E)4eGZFq2pB$*U
%Iot[LP!mF2Z,<9U6I[PC[:@#`+l06p,)hHne'pmmD$&"Ym9%/PiKt_CQ\Qrm4G*'45i7"=QE^i#!R9Op+c&DU(1<>NJo2$\Vrc<r
%q_A8-FjQC>GTb`71!!%#g&pF/i0\6iT)M]oT`HW:[D]KU#r=7W"19S>4D<TX/HBW*dE:`QTUm1]7DfJ`0e0cD5P4KdoRIkO0FJ1Y
%Er&c)2;Y_3T64%&Mkde5/h`rOQ5O]=?=6SW=<*QTk]6hZL;H3Y%Gs-K?mQXI*ee<^OL^q-!_%3!Zprc=gG^<O`3>;&Ci<ER:/R*h
%D[nKi@Nl7A9IR2D"K;OmP"m$5c1Eb9H#gQTcoT(_jf+*GE5R>g<q0c61'g5HaD@.B16Lar9B)bE=i<`O'j2\12hP=i]STS0V',9?
%G"VP[?S?bW`g.-S;Ij?dqp61K@,fnH"]`Km[Ogp)=m7(t-VBB4P6[;N!_(!TXiE5S4NQFpZ8SfBlLj)^6@r6jOr,)aE"$`R)NE'j
%fBa%ac5FUWKLo"'6AcB&"VTOT9X>itW4Nd;NJK&XGN)An+(SleQd%$D=>gOA8iL*6Z_P&T80ia^_K+7!,R?i)-`I`YFT>ARl%J[]
%/d]+uF,Hauf:)%3aDHlb4EQ^]B5CI`'O'TabJ@*B;BX%l10R8h5TS9t"@=_EQq,(gU4ALON>?7e_-07G%5nT(,3W\69Ni'4qR^q7
%8EELM!hRKVB]p^QZinB/39LG>W7(tTV]Gab"(>_o=;42m8sfXf/Fj[Sl*CI1o>F.G,c%O0MhBB6&ESPcX6_Ouc&7h!N7Jd!4(-(T
%n::rS&ddW8\Ljcf$p.Ph"HQ&^gi+*n`n.H-Fj-VN(c(6X-=Dh<b0L@WRj\PA0ORmmV\,GRRkH"HjtX;JeE'o9U8Y=9M]Lo$Udp92
%E.WqV8H/]@htV5.rJOir`3OLRr$[]",5_Y94^LYl,ck)(%+abnE>+jOMHSuXf>CSJAm',9`/mTn_D)B9R!u'tN];+hqkMYu-(U,?
%(s@7&6?bhM48^P?b^^f=Zd-Ao1)8d5;4PkSWV#BUi7eG"d,>!6M6tAKBJ?[b_b82j&n94Za\QEI!H<WG-uagM-tp=<_b5_X0)V=,
%AeCtO-a]#9HIhGWM%n9T<"*kEppsti-ZbQ(SOZQ(]g\*[[CZFU%2,Z)N`r9Z5K13k;NB)9S!7k%;W>e>"'M)FiIQLI"LF%[&qMp`
%[R0NVKXhCT=OXBhZ>:h<[:?n-Zkk,i0q4&s;^Er_Z#BW>,KIA3<D&Ks6A8RP<D],dkh=1NKcu\R&Vq2ol\C&nEdFODL?[SDCgSq!
%62_=-FgAnO@^;3#+6eAiAXi>hN*P]8*%>p6=>6Q_r<!uI/IBM-ZgbsH:^e'O*OC<4h?oWm.0N4$D(S9J\-8]2KXl3!;<KKjW"\ND
%@PBkk\84PB+D>f9TLMqLn4!Db->)L[+?_Y04ai%H9&YtI@apgNL7dWh]E+=P).HFs.0(D9?4cdhoR.=WOYF=BbR"2H_EJjeZ?tJu
%0:Z"=d4R-_.>'P]U+7p?pf,0OP#TZI&,C7MNNk@'8/a]8.eeOB.?fZ>3U9%ar?Yo+.!Lh.9L3-83p[?=D1/sZj['%F!6CcL@&1b9
%EdEb1GhAWcd:Qt',2nA"A/n`Ol,6F;?riubUbjU=0r#Q(7:@\kN]\40UbfmhNb\uZngn#+gBJnDe:<ngMb]/&0R+bBM.1Hij,mI\
%L-ga!B+`*@FaProb"W4!-INCB8Jt\-%'1?ten:p27R)$/=k/n9?l0N"0%5)Vhu`*CL(T@m!DrS@\A=&aL63pGfHl>X0JA,^Q0rC^
%R:&"V7*hV2(K,/`2l?Q'.Q=&K(dKsk&E+4V"bp!L=Z6V`V'AT1animbJ;66uO=W0uB$4pUASsdVi:D,@'eE8$)W[ZM9?MLt+IJo*
%qIh1R2M&+hg'u/G*pQau*N75F&RrM1SjG^m[ZH+Sp'-a-1-NiF;!JS";3FScdobS!UX]g4d(r7i3C0'p0[$bNRr<k\[e@=!i[m^t
%Z#l3$LW+j,$'>nd-D@BZPr;)Z!@`oVc!4jPdc7%E]ZA\"]S0\EX$eulBmJ/g@7U`()?ds"'$&3:4G]s@Pl-u)?V9Bq)hb)J5lPM"
%-=rE/r"f6G9R3;B";41?8K(,tD(),b6;,TiEf^?1N3kO"Lfb[r\fN-s-Z#/87OW-CaMB.gkn_gNaO%0/"trJi>c_BXAH^ALBphi(
%:C0ssfUn0,R#^u[ac_2Da[I@/S\-Kdk=kg_b.*C$Mr</1-5Kc25&p?paj9aM?j3;oI1U@8VQO#:i&&Hn55cPZnasJ'O=js.p.IFl
%W9"d6,\p@/MO//u8GpW'9B)Op]/N8`J-8,Ni%XQ[-g_5mP#NCiEt#C=:e%7f688J7WETscqZ7m)\i!8kOHXqRciA!QafULf<[q`R
%d(h9g/jYg4"aL_J/4Hm=4A1XOAgJ^Ygc:3T9:H\`+7r/*5(SHPPI.L*L!(,9hq"^MT43sS<R@?=M'LbAH]QD^IJb6OeAaVk$kBRN
%W#A*4m7jp+*)nnt("fdC13_`PYX1i&RHaZqk3>=;h%`=+A<@GX5g(Fd?i1U8.TSC1fp,gcNn.AiH]b5q&j^Y:g[M'q9!8eScdF?c
%Kj4fp7XF-^W00TnJO]n_RiM$u<cV1#]D/O78ELe'7)A"RI20PO82a2kNK3M$AKeb\M#I#LIYoat+sr'h-q&g7!:!3ho_kLr@k7\$
%CrJ-GEEd9=WPp/k57:2K'uQT^g[&GPLP9BgJPe[M+MP_FL;K3,#V)DtYOQY9l;-YS#\g+8(__T62De]lVu[E<W5;XaK-*.<V%mU(
%@4/)j$6Vo7KW,hY5D<W#8;[gFML,WB9C$'6;YKRJMau*S]Z<K%7BAG3G?66DM"`u5.6SQl?sN"B+;6E5SDidtQ'a#/,"T_jhhhc>
%EQ1\8i!@8[BX%Ip[o:>p_+d7099ZLN2G-tgC1e-RAmW%^R#n,O9m@s$82Itr5*Y45>#CEr+BTP]pQ-mZX]0l8JruKa.!?FUrKusU
%hAWt)#a$(I8"0WR<+>smlPLnQ:-a"MEgZ/K$6_#K!IAQaJqE9!<g>sjU?7;$=2JpBL%,VJ>oh>LZIT:g#8]!CV\/6EE!3E^Q`2U:
%rL-Tq_H]UZ8[t+P*Gpn-PudAj><*\/BK\JK=B;L\D5;`9;+/=EH7=6X(H=1M!R&$kUsVU581cApp7qs`XtVYlbf$SZ2c=V4e>FO3
%Lt1c^,;ni;M/YD@6J'2:WbinqeE!k-U^@R-"9T[F/%n21la[8-j<2ptCcW3<`7a'2bAjG&1W&G0Jgq=5XVVhO(Qr:,,bKdNOi;]-
%18S@_?!Z:<`ljU_$:?%*Ed7V12G36;0F[_O@te9Y`Kr74pkWfWedZFAPR,H+'`X7>`69!#,s'gEqN)PH$eg["=>420A^i-]fIG$S
%[?V(dUm11"*&VenrS0rpkUYd*(sP*,`t5.V4q(3?TLn39^ff*s"V#BnTOjq('3Pd0nW`8+9E7S\k^0+2L\8oXbO2".Lhi*J/6Ub)
%_Ebt:J??ZA+hndl\;bq=gAueZ`bBN]A;ADL'&V9]WRpeCcP:gk.?kuI9I0l]2hGJ\.KrN]T/AQi@"&Y#:l+M-:qf5@;;&(nX:8pV
%6DHt[08%[)#=1Jn3p)qJp(,-M\]S)n"ji&*f*f:3e,jCF8M^J'^uGRkN(E]W8?,tkb*)CQd$J2EKA<_/HD&:]JKu9nd`+=JL(]o5
%7'Rrk0KBlL'OLR[T]9,YVrSP.=V;^(en-3gB6;Lq@ZeI^-U9=OBrP[\MF*Y%1]\Y$lrFHA9T5=I-:TR4"5.n>QdT^[Zpb]bk%P@*
%@)!M7HY)ngT_45:jCsN2?9/^!(u06Bij!(D$2YbMnOQcDAZrW#?\`h@Qq_`IB>O3U%,\nE\q[$n9]JC^e$'nXlm2F^BI_0XLsS`e
%7"sPjJt8Y>,Pol^CoZEP,g8A/Y-I6r\#([q"hdeA;$..n2YT&JfQqu0+ABm%!Yg2bEc0DA;=U\($o!QhN\!T\a_[fs:[L(5a:VK]
%<!L1<Wpd;8L^K+^\XFKW$aL'#+Ve<L0P-'V#tbW7Ube7\10lDA.g.EOT4SO@%kJcgL,;]g0=JI2%`'f6&:7uqJqHrd$[?h7AGM*?
%:#L&o==HTbKKq)"OICM;%#"DOP0S\j]Y81=<3hk9*9M;Z+/I-c]Rf:#Ims&4;P9T6&J7OrK?OAd/g(bQ*HH3>D;S&cKhq=KrM<HD
%1I?^_@CdS$"=oCVNtVS9;FDLhJrdghpB=8qA.el]+]ON0"LQPn6(AY./Z8/La/1DU@G2DjND<A',>]$V-44c6=ea<J.<M!a[LTEn
%J@J'ZZse\-J;f#\Lb-52$MOjS,i0Q0>1^#!iO7Jl76gpn8g$^%:^^q[+:OjhngrBC`<cB;!/[?p@p%qGkXA]R`uQ;s$"jKn$`pe3
%KI"o>=PrmHOVhM[f<I,`ABOHMoWGID'EoDJ"rYFS6cWi%b&'EOJ:b'X/ge6;UI98^@N=2>-h@@]U]h;jJ4,0gQl7Mic9bH[h$,Aa
%p?lhN!g,@9ZLR`]\Lb$NKokfZ&_Oae^6Sci[!.I<h6P:n0mU,7O@TAN)bu!AP6s+S+sVl#)FF!Y8\hhAh0QFK^R_c:)Sd(c-9.Ah
%qN,Zjl%t9t++t'oXEgO8lACC/9=L+Hkd2"?&crNge2h:p9IEmIEY`U^kW%LK1Hec@XA54`M,XZ!EJ2WQpQA.:N[R`FKZf9[/aB8L
%qg':r\1\imUKd=\2Bo<%_Q:FbUFP.1<q8NgSd<)g?ml=kRCD3+#^3N"L^9=aH\N^l,EgdX34d%!K#(+_e49\]=Yms+pcVQ.7Npc$
%;JLEM>Qik1"F'Ec4ERF.b\;&F*.A?%BPHu0V`t*Y5&P;qB&V0gYR3]i2G)^;$iu>K!<iY:T\:#[2$R(oTjG"91tI>;CW"0F,W$0Q
%RZ/aRUduXRfh5pa(gqk3&E`$rM#pk>YpY&uLWll1(%=o>"cPeB[j:@&Q&:0k^Ne,HaVGUaA/o$E8CdjC/Hcq+1KjRJR:#DIAcECt
%E/g$AZ&o@G('@e9]D`5UW?M760-'n)ba;SQ#*Bg1,AEPX\XOWa$cEW:@JrRQa:#?ffs$<H0aNN^LqcWA?7=``i(?XU5d&Q;"6=EY
%ng&p_44$_Pl3IgOW\@=O<[9?J@i<@5Ca:q!,GdAa3U#BIREJ\=#;.t)A\=H`C6FmQ"eEeN+1_hP2=@\eR)[FRJdePm4XgLXSMXZ9
%C<Kr\Am;#G,Ot,kob+]!Yhf_TOTaO7a)U5LpJ*N6=Y:+J0o?j3Ah>UJA1tn8Q?\lEE<m4!3Qo^<,.q,rhkgN70-t9`J2\qX9uup[
%`mDrpgn;bO-:VYV0LLcj$R5b`=Y<<KJYTb?Q1RI`12%I:$;J#k:jceX_@DQgbdiKSS]K$AbNtmI.V(,ZMdD6-HCksj9rqR&\7KJe
%CA^a@m?]Tn%]_Gpg5OPM+N%oGr6t`kPo:>*kmT3<mQab)'%6q_MGZJ-K`2@(9.o>2B93$oVrQ_28m\CAl>8Q:[d@.oh3g]'#=tWF
%T:-[0:E3K[%6G?0,cH%/q1?P(&gKP1I@DS+#$Io:B;WXGelqmJ-&F\N=jUUtOe\2&R?6u7Y`r*RW$$%l`Pu^I%6[+01tmQeYAV]c
%7#LA^\jQ0-8B*fOiF\uZ*!FQH`h9.GU>.Ymc=I[uMIH'eJK33L1u\X,;(qa5@aT_Nd*QLMaLhR'48i$G;hWk-qu6fm_J3R7>\9]<
%k8$piR"XO2J4LUGb=]^7Jeh>4@W;k3?H6^jkD'Vd/:M7#"#L("I&P-;%YZH6gCSEKBO);A$/iqPb,g?<&1'D0=5aDq?5VNY_K<:I
%>tG'h@$*NDdPmPf^%)EU.+;i;W=dg9,;jQUf4*VpnY\J'%N?MnpUNhXR_,(4)N]bmZ-n.L'nEQ%\I]b*nc749K*E]4P44\#i'FAT
%=@pJkM&I-Q[4'`\M[YYeG>0!$!EdC-caIO<Um!>IAV(072teRPVFm)=dO,EF5t9e"#-pmKM.-PFLTPa"]ra+^#S`B?c:HeZ&0Z.C
%Z;MJ3.[dlf@h5UUbqlU#%7sgpp0!6dJ<qB)_ho/ORL]ifCQ/iBiBkm:1#l2W-kl2A@S@>pV+,rK'sk-O#'cjoR\HTd]b)Usr<hVb
%Ti?8]'D3YSl-q$JrD9:<P`be`l"@IZ8^^_n%9caQ<OCj\e%lSo24(%+WpD\l*4c_s#9"26>H8Es1\U0,Uh-s-"UQd^;THoI`Gbjb
%&Z^C.EGYb.6HY$7k$i?.66_+(7B:q9?mZ!['!okPnY;I+%U+-KQDLZg:c-'%5jSM(Lbgcp;=qrC";<8JZHWZNPZFfgq,m8T,$2>)
%2Foj.FQUAXA(1Q9$q0*A/Tr`THK6&RT\2rF[:bi[+;3\$cp%t&dmjr%#WW/.aVipSU4sb^"UHi@YM$,,M!6#k`h%%FEJ0/\-_"q@
%KD:!7@,!b#+njj"jLf(+<u/&u&DNll:=)m*aX'8S[$"u9Xp(fe'KA]<gBrPKB2(),b@H*:lZ7[J/bX4&HnGMPMA*lt'2mdTP3O;8
%nF@/BOX8[$3=a`jLR2E?;="CZZmlJ\0p[Y1'smtYE"$CsX4`K.0MZ+(&<@qJq]g(#kVPpBM5]8]lq)q%*>Set#9cbiI>o-jJ4.IG
%EFALBM39;WQ5P#/<!,FP)?q01^(ITSinVDH8_Q*0H^ZZKa$Mj<LcqiS_J/%#1/oN,$1aUf7bj(3G>^aX"L5'+*+W'u*RS5'7I.&J
%$O9!4UF_lj!PB8T!Q@%'XB6jmH;4TBLEn++PEsafe9D[R(EG(G(,_A#nfe#WV,U$t\V*;PPL)5#35TS?/A-&$AX[\@KL;-!SH5rG
%ajjrA"XR&Bc3P:=]l,&9li'$!-.p8r]kf%rD]l=(\@c;])L8>.,[Z`D_I0T/R>LNepF1o-8B.rK)@:'ij#TVcka>eOo6%i2oTCCn
%j>V$M`f<<ie:3YtBUWg.=V;du_Fs/]2D,(E),1a92si!jO/U8[W[?h;@(?c"']2_Y0G[PiYr'XmMipsJMC-[@J[Gc"#"!=@;4'J[
%Y3tpJb0_n^&u.sEP^+-".7XZ20`Z70aE`^2MLJb<Wj&\$^mkh\(rG(^Y\-7Qqr/f=r.[<B&$KUq<]_N;9?0H7C"g:VPTlT*ao:GA
%$8k_\j:oEf.f%Or4(Ern(`!\L>.VH'.4B^Xj_P,O7M*J+lLCqn@ROn,?-E5Zgh6k*jBF'9U7[A\At$KHpeoD`Un1Ul$:-$QIpOh/
%kMQ.2_tq)de&1YJQr$UP&Y:&pN/%NZouE":O3)JifbRmU`:nj$3V%utB]B:c*qC7;%nG2b:Wh8=$1\KsBZP3Qji9a5*3ium59;:h
%Jk[IQ*fO(!1b0e4*_tNRKTYmZ'?.n,OQ/c!KC('UQ3%4kSJofeO2]D3n^n^OhTj-"2iNuG_ZgpK`"LlsKnj$U8<6HDn179mZb_=H
%?_n@nnT`J'-K7?7eP(.d)%RcP>ri"N"qPEOeC)ZGn7YUq16US3M"8NF*-e!968H_5#9KBg#ATPoJQMde7WIQ!GZ!4R3WU:1Ic7"X
%r]>F[!</S;ha&jAj([k(OVPEH,el]J4.4Qpgiq0T*]is7fsnkuesPnCFRWmpq2PJ3AUIrVO(][j/fX7"TbIA/lWkN&-<iP"SUk(j
%T_XQ@c6*WcY0Ft5B4)2gRf:0NB@&m0IG*Plb>,j&47+&q,71PdXEW>iq+<$Jb?"HW46IX\4\.anA\?2g98"Zn_E4JJ_7NRY4*X?\
%Q^cI[_50DT@qWE+$^AHJf#[8M/>b?I+iW*Q"qRbSh18$-ESsT7LM]bs_&:^-5pIQ$N/d&HR*KY7-+Ym'6R)0ZM!b[,fJZNmm]&XW
%=<02p45;Na252h]EB6oKd$a;KOt"kNLi"&umeCh`l#$oQ`agO_Sl=G_J:)qU@_@fX#?[OVlY_s2aR2Gi&9qWqj1Wgne_0@!E.[=Y
%:YG.Y'aiqiG@t;T3pT;I4%Q.K@RbQCNsdBOm<!Q,+SWupd+pu='LRlJc2dLP`AmGE)04PsH>^lLB+Y)2qS)RW!G.,$*1cO.kXd0-
%Ra^'nnB$m:XjPr*-;)?6)rI20Nu!$9VL3T<R1_8=V7WLQ'<#_kp`W;8kA5>BBHhD1Vn4_bLLU7(7X&Lti_/04l0\sO$P9+NFE[pA
%%15A`FE`K;O=#p.GG[ZFFLjP)ZLZn4Cj0R1-B<I`]-F<lfa4QmGD==o:bdssNp(@+Z"n0"lk'9M`glE+Bi\3-G-X1sQ=4fO.bu+C
%Y(X9VdG4ip9dW3kmKc+F66,7X#T\\LgH")\+n7\QV&S6]EQ$Qe)g$:YoqfrmFEb`='2,78K>^E-?qPWU8HP0p89`+EZh58RGN^Z"
%50$NZUd",4451dL&BWriA%Ns0"fWi5m>fhV9U7ND4-<XO6$F\c#1Sq+DS0&G]9A#i<\Dmk<bt-=Dfg3`(Gp.oq9k,XC`JQi#0`lA
%@.622*QK"(g"Gd%P8toh;RS[29]Cr$Z/&iL$*LhEh4aj;qSSTcc4V3,VU1:h%[G*Jg2:_N^uCH/;Id>F$q!HJB=e6sPUY:GCj3[(
%A9i6+]+Zm?ZH78[0M,^!e,Csb\4M@ZZ/$:@m"Dl7GA!Gp=C.c7K>a"JN-'8uXY@,+Vf[,Jit?rr7X%?61P08akjAGm+?88<mS5%;
%YgM9d5Fp3X!=2$e$6.eAd+T`if')OpCB^ha7X#*V/5."BmLFQ(<&/O+4.KVfSEk9@L)?YaN-'8ud%DP#d+oRo3u#np88pO[fU+Ok
%]7X'4XW$(;Y@B&\n_N/o,!+hUmgeNN!/3>F46(19\glU.n]Fij-PeH_A;XgV]AlSjdAufn)$3tPAqTO^lCZjMSaR%Y[4M%ihjm(#
%5+0V5h]9o^a/[5#G@t<848nEbGDB]uE[0<ZE!.GV1*sPb8'[!l`cVMV+DYZkU"rV/*get:S^:H7Om!8`+@aBW4En$o@^6q0G?f&=
%N\#B.#eV$8mUBilF]4/ZPg#htV)-o#kEY+(NSk;d,!2H1r,tW!YV3Z:gR/(i$]%9tkj9L)_0r5jK>`ji][>K%Tl$eI]cG%O5#nAe
%1IrYpq7=r-5p0_#1O;,V#]lYuh%"T5M*W)k*Gl^+`YmIsJ@C=IY>/sO>3`e`gMOLkpI.Q#F9<P2*L^qgDECt>Ua5;#Ftb_+<I'fS
%/TIDF`F08\7jJ<_PnS^C,O_0#P25%pJiZ"<Q0+*8;93Mq<7N:raMT/Ts!^7ar8\G(\FClR^@UlMoM?LjUd1*I66ifWEV9f>M99XI
%a[r441c0YXjN)M1)7(>lRjPdkQAMMI7UeGGqEft]M="\h(*6M9fFE=?6J9kEm9mO1a+C*9YoUZQ$"BXAFq?&'actE&'I?fHb][fW
%2C#DrBe7tZ?9>eT8ZXtZ*U=D,CtNl!?C$S]1M/^,f#?Q;Aii:l<_bcndY-r3FS+qt5rg0:LE!LhiLPgpW5Nk6l+OI?CM0#f@a\0e
%6YL2?n6s=PLC7g_G@!?j&44IoGjPq(%U@fI[=a1rJ_f41L^\8oSD2u01FuR_,HVt<$^c10ede@aFX#TFXds0+rghWc&7H`IOk.g2
%6&R.([!!!:p<dUA+K8^_7p7uF"B])%CBr=?J0^]:%MEW_;-H%Kr1fG<4V)og%u*PhB:)+DG(\?Up7%p^Ph$<W,6VUNCId_pbk7LW
%c@F:o2:,2/$)s8CS[7#n<l065B=4M;6mG`F[=_c$#,=2\SKV6\8L(@.!="*Plr.BO6K0l;4-o#t6-7_>WuWGeLXTAm$uo^>h-dYN
%6cmEu=RBep&3m2"g)4ALRLN.VI&W@;1f?D$Y@Yjk8nnU90Fg$>4//?Ufl^1S8d=r>7T)=sM8U@4*B\d/s)h4$7KqS/2b<=D$VRG.
%OkSb2.tO4;8nr!0&"ba>m3)'KN0JM*P)*maZnhhm2.;-bc4IfQqN9/8mr.cY7RfIekTDEs;arj+WL4^#*@2stDiAk('V@9#m9it-
%X#/ps1E#!%'DZ:`BEp7jd%/V130!KQ8im,9@TFGm..%EV'JYQ2G&T\!T%?!iGR[ImkF?]"onffRR@,cl_^XW9A)*no1Ydr;%aKW)
%c88-Tj.4\*G"Oh`LsBZl..,sLeC/"rC55ONJat`I[=_R0&f[qnoKdTA"]#mUW"S(?SC-%VXQa;m[=^l7cPru,6(+-[RIT"iXbe^f
%GjY!/m"1l$g<i(S>5l<%(q,hf8u'%B\/0_fB!c^uJDs_qUU52DOTaZZ[!!e'SG&2u%akuF1=FlJk\qfTj5IeLjG_Ru9:aEE8npk@
%I23LB8F:ApYs,+Mg+dV;WmO:NB3<7pm09O1;"b@/&0%Sh``JNCB;B\t24D1tC58ERZ!CkI6PPRa_K/a>]X?2F.BOUe$mZ\AM!]jd
%^kN;-4-LBhZP2(*`;m&F-anZ@iJ6@R`-/@X,1U*H[R7]'#g+'j*Vh#fP;a_p@kS%E_&BR!*`;ZRg*!h6+HR"6NS'8='LDW[f^d%[
%dbpK)gVMgR"NkMuFpR8m/?0B<YrA;6j"k.+FRmoVm_j8S8&^!>Y=<>@ffZ;QYE@HId3lr3)m:9NcH0/8M=&A/Ohe:_,IW5,,1_b,
%c4E`FlT7rm7];c?_?R=e%:S_]aD>LV$[6T$[PJ'LKB5"$[Z_gN&aP\7NYDt&f/%##6K+)Q]J8.q/BBeIA%!W[Ggb<mNfJZEUF#eK
%A%%#CkW#-d:>4hJrgP[t=ggh.!0l/s^^fQ1Rkre2-c'KBW0e\E3kfKA[c?G4*d>V?7uE@0d`?7FAp:DI)7(@;a1NA>aD=?LTqHh%
%Jcq*u#l4+)b]ZAs,(<p0[Nj'6a]f^j*Kc<Ap/>QbdP-bUZr,S_=,1VYNS=s3&V\5Db&,1J[phjB4"PQkB:MiROdh$qe#;Y%P2&TF
%a.J6"8o7'H*s!E_C-//O$"qkSg(*+9$9Vn.6hRuDI5Y\!2@56/2J'>7Cl#61b]Z<)P0:p_LMO-Wk/;EkB92,#CrCLE.'HQU4-\(7
%VO6o-YoA\b:ZJi-gc!(?NS'7b;k/R[ZQ2nJM)!_Om2.DBPgmD4'.[4[8&B(4:U:YkEMD]\>-38nWU7V)Ac%EagQBd979to,N[+cZ
%X.E2C&[eC=8.4Pk6"ejgX5nFjO&as>\K*q3fONCPm=]4):$Ct&ir\sD7"04g*J(leL!JoLLpb4*DY/*-W7]6bD[3u>;DTWR-6ig/
%Mq]/^*@Zq\q_r[[&eP^MG"-C?<XU@T;gLM<n)W%,1FQaom#i7"*I[1HEBBJ%_tDV5T_*E^?i'PMqF'T8lAPS6rqgp>jhCN-eLUS]
%"Ta3.rc3G[C&Od\qGGS1WVja2=7p\_J+M'krphZ@c4'91TDag8rUJmQhWgkCrO2_D+8FT?rqVbm>e`>_TBG,2T"k-sjPTt0k45PO
%jg4f82]#i8]01YeO/bQlF1QYAg".%,YAVWsd-\qns6Jrnr(HtJp4mS4q3Q6F^A-OG[pPbV@4$%S^%AqcbBJ:"`N))'\N5-`Qdg5p
%7DIO)`sf_ss!.NNi#D['^J?Q$P)oD7r8Oc\D\mdm]C:npjG*orn\_'HaS-LSDSKNI+aVtY53D^bs*]?>qr7J.eZ8P80<Xct%?iGl
%:#5K'X,G`A$bgP&ol$.Eb+\(<gNPS`^:QMB3]k*+FQ?Nt%SOS4?9[T<qQnq7gU"NCkN$^@o")SC>b3U:m+Kp9;_cfi])T[^4FMSU
%a.)]#o<(jS&r!Z3rOtH*9C`"B]/bB<mW-Ehcn=,*kLf[Hjm(Zk^Rj8QI^`tk:+oqPD!lUho=c$U?V-jhrB@&4H11J<s'B="ip-NB
%\c2=#k4JBDB#2EEQgSXgI<PSWk3W"A2lGP^I;u^2[_;#(B=@3XTkf7<X1Pgmr&a9%pWLbG2r@rV]sq@V>s?V>crdjY"b-@Go@G?3
%+,qf6=''9^j]5INa3MckaupbHme+h=[1=qjEddJ$Fln_$R9L5X>^a.MnDtEf)65F"qJrVipL?(slHB.#ICU0Whjn,'p@[[NlgLH6
%Epf?D$9k#1;EipB3B;2bDUFt:goEM+In*7+L4Pr33OurDI!bbUpZLF>BT:+8-YIc$^:rpVbBJ0$<'SbDfV]JRVpfj.hd2gZ]t!t*
%%bkl-YhWP:d=ndtW!o#?_ichLeK,7SA_Z8'[Fb*;f5JuRhm48^Gd%.4hfb6rg^FQcQ#G!phHc`0r8D#??=071/X`!nTBsfD>5iq'
%YHQg>Sj)B8`h2V`q\E.X]R>"qqXj.PZa8-(,luitjnnnW9DAQ:1Hi@a]Y=3fn%ZTkTq3,e5:l\$\Sfs^5Nsu.$i^"jY5RoI..fmU
%VU^;=L'8Lg^D@<tJ+(bs%ZA'\^nVRhbd,>mma1FO`q]3&ip-6$AW`57I(7f'9Fnj5<';>"dIZEs!fIf`_&k*:%,!`g-ZI]oF)4%d
%_m18;V?%HW"lHfnPC\W%fX(Bcao;'IO5"0\nbgX;6(HUepr!)c]B3l%%;(+IE-cSFqt6HMgEd0fUH09b>-e&,-iLlRNL(HjT:TBE
%)/iXga5_8n*tmgdaF;n,K`:fFk,WQ^jAB)Bb;\/(S<"3W(2K2]j&Pof]Y;+-EH?U.h[;caLL9$SIXUiC[&6s`ZflH?]u%gkI2fr&
%^('[]6*'M"l)T_d91G^_\?@?2F`D]<,aW_.IcaQX2-]PZ8(3m2A3M&B9'k*n]tX=9lg)a[Y83X)#O$oDC@'m/fMbUQ:T:I48RouE
%]RCpRi<e#O0']c(o^0=7mr^biqiQ5np:8##\-dE,1`ZA3=M+HkXh0(63IIXYrEh1^oT)F40.=+).D>Zb4$go-n/OGR_;?#=$!r(/
%H?F@Zq:YT*q:RN1Er.6]>&(fV&933ppMKq@?f-'/S_3RV>2";-hk#`R@0S=3Ckl@;oAtR8FYkK0P)hVhe)pB@DnitJ4Ze.7IWbPN
%dr1<<a;Ib,s%^$%BP)b,J)9t@-"]rbn=UTVTkh+rVtG3@P,(V,hL2pWVKP'_mZE&ipSm1ZU?D*nmosO^Xkso=`M%5C-(W4LM>+9j
%T0AiP^YiTCHe0@nDHj>A?f,,'=]2?=bP!f[_d-<e1`clcUEsn>\SbcHEd;YII_)3O])%n/J%f5e7Q\/&?QZ[`X5.)80m^"sp^IV^
%fW-<S6#tMi53);+qpQW&HqIDb\#2.m'tIS[Y>;a@^06UV3<bDs]D#9R9YY:fn\.3Qk+(;nJhMKDlJhNs]1(W-0AY5]/MMRLT@P(_
%(Oj=$h`&<!?Q])i@3tj;Mp':TQ*?U%p+/tB0&A/53ktJeDt!m[fq.<5''15U['QZ0M6c2PN[9'm`0Da/VW#l\``e4>Cm?DEQo+=!
%.@$VYJSRBZ>*L<hF=]r.>)T[r?Ii;ETBl@i\->H$Mt/,%TgbF;n7tnHSl./_P)hVhe)j6QU6o:Q/]seVGj*lK8_'Q*4f)>H,p.1Z
%3ptX9;&7EqTl9V%>)RFpP\O']I*Ak^qT$h.*+M^fU:GZ%f%B.j*]J?#U'e)H-B8V,iclg0K>,;ghr(Km(]L"n0OO/i_Jj1@Yp<ec
%,5pjKYj?uBA+*F&4q)"7eS>]CCN7m?$\i'>CTCcGp"E:,[6NGGa_ItA/T^;!PIbM:<NH)([G#As4XjlXeS;-cqaG;.Bh%<E4lj'_
%D+GEN_,!eI*`W8\h*qq47VU[J$\i'F7dDt$XdLl5KE]n^o$Mqk<00)MG$ig&<=YX-r9O:Oe'$2^^3J^V^qG-Bat9u.O=m\BS\MnK
%\soa@<XJHdq<@;8(Vs$DY2._-59W.U\).87jo3Rd.QeNRA:di9PSFU<"[dQb]Ce=1`pk:Igml-i^2l&Y!YWY)eD?&XfFB8Ue:.rU
%p&@7ZJ$/hN\GjIhLZrg3T*Oou`0WhINLgo`hp:6Em\`6m&^gC$'_*jRS6o_Cs.8#@-^JgV\@rGYRlr`RFSJS]f5JC:ITud?^V7<Q
%:]3\0[SK?]Z@1P+C4QQ9Y]&qZTp\X[0%ufJ\_nEmCm&`1\47;;?,*p#0/i\3J(WXtf3HS7_<`o9EH?-sopbR--*$^<:</,=i?L?/
%(OIi+F[gg&nAQbp8027bidl/t1rV^qVr*sC4hgj_,=D%(q;4P>]5.E?)"PF;P0[X_s1ZMp?1YfQi3V#4n!a:4HiBA_,;R&XpirJY
%\`S8M1h(L`nXh]%]B4LmSF8hCj+m6LbNnWcT9.6SYJ.`Q(Hab]7-0$Bg&/\C%.C$>kHfkEiNoQqpo@_,]RKhImJ4rkX(l!K/Pus]
%^Y#%+YX"Jg]6R\agSL)l^\klihk?[L\k\jDTsXTQSpH1E)Bi<0AG\F9<k?p@6FKA)*^Me;Ygh8Yg%?MBai"SapoBnUo;dqQQ$E:J
%4btc*])MK:MsJRXgQ-9u?[[<MF*_tA?@.[(mGl.-$c8=0s*aG"h<eKQMR/;mY2%VYN!hi4r3H=R_YDgFg-(4*IXaYEp(OCE^"0(Y
%?6"r#<(A%nZ<uU_IsZWF:\U>Cr9N*P4"Q7QD#\$aQKWpKd,+HsiK`f&m-j;RbDgo_&\g2NFO9!A[L`)cqf-:AFUc!bJX87`Z3FXt
%T<nf/f"fHIGknSa0#B.PGgRoJj"G3+jcDXP2=U0e^ru_AiR=dt3LBfpBBhT"FTgsN!DP\tV*0&.rMaqf*^mg&6Rd]K#+J]r&9-i@
%'2-&J"e.K-R`H4[@_ZQu#GJmln;>'"59DO3DEg:t\2/oJ*f^K,cjp"n>`kB`j)A7cQk&n1>crSfr`jiD-[[a`j,1YEZk/TG0X!#'
%dYbcGY@[RBs8(`]Y>8M2J%q/rr),e;SlSql!c5!H/,s!NJtm6s?U,>$C&q6^0A>%+>4N,HC!PBjr9M_=a2)Ppldr>tT&4!9gml,_
%W033Yci99fpe15[Ia%.B9kWD2B'-(UAZm0/'DBeE!fZJ%'7PB0B.U;Op1Sgj2_=`[YKrOMF7fnOHVTl/[<j`FNF+Fghd=$"<3`FS
%X`9:%[]Z3&*$_V+N$In-N]rJcT0OB+aZ$;@N.^eFO)<4HEJuc8EG./7`\H%(`Y$0EDGM)!<ZQQ%A+e.`%+<fRQbMgA%cZXCm.U)B
%0@q"5C9clEpO5rRrLS?75J+V=4hE3Q135Eph;9k<(NgbEY27dN%F5i@o6bi[pABt1kPs`$q:4.2-YMK9I=9l'JcP;f+<iJT^q+jd
%k-&q%ICEnc9eS]k)-RWDNu)JCM/mliF8]^m$.$fgod*BHB4uP(J>20!HH?29]t^aQ_344MYu\*)&+E^t'.djSNON@CD&u:Y.qsLL
%T812dIAjs-hr!7;q<kO@SDt"b4ur8!7:u4d7hS!.kfH"U[1@'D=p(Vq09kAmf,(1`qVn[WlXL9g/ud&ToTHE:8X4ZTq3XN&pf]L!
%CVa)]m#F9'E-n3[[RT8+F%DGgiTZ*VYnWg,0Rc;6ePD%@n'aI+IC[8djd,;(eXP=>DHXZ`&*qIl3"]51mSJ:deXJY-)-OY`VrQ%(
%PuYlecRlql=P^MTE9A!1eEY>]mbI*QXmY!0c99gNqk)KlYJ.S.?*]_+hNrS$Sq8m;Ss21CCebJrT3F-"X$??#r4/^p^p(V1?3(r;
%n*;N@TKa&-\>.*0=Re+I>_s]DQ.Y-;4WWYW2ujin#tA9&VbVK%s7=FWe$EsV4qZ38\#3jT[m0fRU?LdpgE/&77&fjjIBC,8o[-18
%Nu!2jZ#$1"@c8?h/p_Qcc(urV.3>6S^n((mXb4(cI=:puFPCg,jaI1%U9=2_V9XP`54pY$R*?`>CWS0jT_e$AFHN7Q]D@&m9$&tu
%?=/hKI>MmOq29ZLh1CNi\*n3@T:VT,S[A4SWrr6_5%?=,ld;4qbDBr*37*M%$hiHAIp]j6[j];EYM@aJ`W_/\kEkkV(5BFKfC%sg
%Gd-T:PNP<$:VX[&C%KHP9]g7WjGQh@I%lA=;-J$6&?$N%kTBfsmIf$*,0OBk-O4J_[$Q2kjg4oLI=:!O2of"Km\!:d#;Hg?.'W#i
%;lZlqF;.3lC(ic,MgVDui2DX0-PsXL+CG%tT/e!t:AOBlkL^%bN]Yn,i8FLp/o[QLADj21/[$JXY[ifBZc=Z'j;[Ne9pg?]5A3jb
%S%GhkI=p512k8`0gj]4aHkCqG;4WeEX`/K0JGSc]a30Cq:JWY3N6A;XirL[;6U)QWI)C7i*l^.?LZ?3$i.F61+6X$7BB/NSNQ2l%
%?HEB^e`cf_]'st,j+G(b;6G_Q7DZY]&fhc4d8L7:]bfko(eY)u2!<UWO-1^m-8Hs$rbpD\]&`kdiuaW3?+]SCG1aVQ?#NL(m2!K8
%*6"WEVu#_gn#9t]C<u>=qW?,mS#jM.'2Qg0H`@W!+2/t;T6oec0f#=P0O#&/,idQV5fre?;5V$Sc<l'uIb9):rZ_W8G]L37%kuM)
%jPDnK,RI?Tpo(rW0SJI6OXN5A\N0F*A<sHp+/M+`SYu_JKZCNZNo$FX9'6c:g-8r:hu*$(ArlJC6^qM2Z647:Hhujcq>XP8J"0fX
%YM&&24FYq#TA&@en#jt8G*Hb&Grcg<en'"ebNr$F\]i9tb`6D&^"@+?#[JG.#lOY`o]ki0,tnXN\E9Dgki6)`g;.!a&+0HYMSP!p
%eUB+72>".hG$+>/]?ACJ_tgS'FY0lr0I<#,kRAS(K(SBdrKeD9pqtX_:52/>JEVp+>[Mn_mm;i!B.ACNrmf!<oPZqieR-%-pYfJ.
%p;<@QY:o4Re1&03roB:7f=1eZd;\ZgO+&sVr:BfHIeBlBhf/-fr1d9lr::0kfDf(ToY7Hnq\(cUr;#E'rVsdWX8;.3rp?If4\O2"
%kC*]q,^C&qkEt8N)p5jDSruk_Gnl)3]ZA'0G[=#9F.pq+*NhNb*Cb;_c]a:_A9Q^,qJF8sBL97^)4h?k]%P&rK^IMhKX5lia<rW'
%hKJI(gZ.eoUL1_0&d'Q^Hgrsod_Gb@$?Q43jK"d!<u9Dq40eISHrf\qR).L?iOK?L(5n'NHGdQ8SIPDXM`SDo553_lrqEbm+8Q2H
%PkkTmITQpMj@,Vsf6Doa00$ZFJLRbR-_'oW(P2tgK,LtS-[:Ibq%CN!Tk+(p`$+(Mp%CS:PCK0Ab^(:42pT"Nc0?<=3<h4HMsH2r
%30^tXNVH-anLf%JH$uPORGHGiG2)8;Vo]s`7"!+%IW8XegUA2WZZheX`tt?&G5S]fj&#467niRD2o[9WdrFs;q2gK'aRRp2*ujMQ
%.q('cGfMG?.l.qg];+8l0#AXh'W6-l8mVEKc7[+ghn&2C\1q&n`s[s;SUB/b34un6Hp6MPrJuGUoW*J_hYH?8O+%g>rpAT=rqSd&
%bG_n!YK@5+:u>hT#'2O^:U(B):qrpr9:8aX;W=&%q$G@Xl$9?pSI9k6.>'7V]?V`@Eb"C_1t6Slr7o#:bY4kD=N<7Rq8IJb=Vic"
%ei]"9$WC.B<ZP$Cj7<na6Kj?^"Q$[q49StpmqN*T8+51QBB'JepJ!_m.!LHW@u$Xmm*Ie*-AkR"UK\I&dEsiB%U1`_.WLdnN;h_8
%Q8(`]cueq8cWpmW.RBDB0j@8S0%l?UPj"\DLDQ!Dc)]tgH"O)%c@aZ8XBH>lQ(FmM?gjV0/XWOn6Tmc-q'pL+n,+W#E<oZ!<CPJu
%5IcmnB0Z6t0:"d[e85bup[u!_>o#?gWEk;Z"(O8Pca34gHTURXao0>R5Jh073[3MD]WE^@#MgH00!'_;&a],*\tWrKIKrhY`;K:h
%.u>c4i$[)5FY`BgH:;*Y]RtX(_a(&T2,lK!V@$mKH<5T__u/N@093c<`HahlV&?kd0Znf,8/$2\W12'@fO)?&/lWL;5sNttWjtIJ
%WqCTn"f#"O.D*f6U;#5eW;.SVl7'5Y(sh'F[cN/QcDJP!m@QmM8&\FjjIFt2h"BlTFWd:OWXqk;pToZq9Qa7uVR9!>Q`jW=@j5r>
%?MB8@ea;WtlAIg+)FQc4f5KssP8WZ2%/'M2os2klluQMbI;UHUYX7CR<Mbu?`qo]-(Y(%HSbl^-raJ_$)[>]O)4]T.=0GBUIXV([
%q8jSe(VddtYarP=o@U8d<pd%WA8BB(i;H2IMm'0L?FuYT8N4mBY9-u'a>I<0YBYM+RN02W1/<M&NpErK%tj\sFl*?RhC<X?B9p_c
%#ZVrLDT5rKZde\S]f=+CI+:rZB5g">,&FoaIG;:nq)O=8mplmt9W9+'X]fjSaNhr5B'Rd;gWj9e-+Pq$HnlXF=23m.k:F8YcR&!>
%;bB28\`^!kSihts1uR71>HXQp2T$?08iaGUNaalMS?IkJRB8Ln3n7h37]KEHU`KZoE>Ik&@^FQ1SZA$el_dPqor]anqq#o&E8CQ8
%LV?mccqs")&UDs>WkrSX>GoS+]:rV/mQFW*XgTkk(_tlhZD6OM7/k;_]Zt4Iqd_;9,Bm]K+7F9Kge=?PrLTY:A!,:@'t@_j5_ZnV
%C5.pe$!+YcT%'l*1bW;:A1WjhS_q0"'n$D4b*#uB\FW`<hl:bAecbHmW;lRmDR6nb8t<gG?G-'hg"EtrJ%NE8CMp^a^";Uq`+SIB
%EmO(J:DU,G;_c8_&(NhG#AVdb#53ech<D'Gl8EM42]M`d<HHUmeE%k!(8A?8mYBWm\P$7AI3RQt:[s2]EHH\rR59dPc.pg:"$CQD
%o5n@eE\eZmnNM0=-hk0_l\j!/DdQaV?db/ET3hH]r:8>.S(Hh9[h9k]Inm1R?#H,F5O)R)\3`g[S+@`oG/NB]pZ^r0mJ5"l>k=k;
%(U#YBqs,p%B^>;krq5[Oc0aCm^p-'`T(n9E1QcJN[spJ(]p-edr:TEsjg3,<6%,oBpSXL==8uWWUTj]q^R]jsnb2[21HTm?k3S*O
%8e!?>MDbD/h:mjo29`Rb):pS&)J8o$Kc.j(gB]UT?"(`t8!l"P;jbti&S<$F]Ap05N9TL81FA+U_9Mh]@E.g+0]Rd-]-GP0qlq&O
%F=k_H)2ELE32?;+ECP:FS5D2s4O.'Zk2,-W6[:qe0e\PC:5AAW`>O$H0(4VjR3(hgP;o=lqeXsa;hQ%S<pO0`[k#\4pouIf5$"D:
%<-8gbb\NI5;50"`8!Ga1;8tK9pioY*DNE&K7o,@@'X7FM[a'$i#0&'YXY2e+%:,*+AJT]a?17&nfe&h&+(:^5PV$"4E`]^OF%('a
%gMp_"mLFM**t#HOb"&e)-ZrBub86b!*l1(a4^XIf.)&t)Jno_6c?<Yd#'VuIlY08Cs!4@>O.W/`]!:@M8TlfJk-Td6@WL&=/2tA]
%*d#"nXcrFkdNAc26XHa[S?D+9.^/l6O/Us.Gukh#eu5[13:C$&cMDGG##u_C\f`Xn]0VqVH@/'HI,6Jn[\8>KhM0JN+g-U*JXsJ'
%YGZ'VeUp]o3:q@Xjs"$'%XgrEK[q!D-WsGr=bI"YZFi*>j(Ot>=]D_MD2d`keu]`g=H/"_T+YULhd,=j0l^M).=4)IlfKtqDfe1C
%-*H\O1RB6h],DM\\RY170Chr0D6@]NTj3@oW6.YbFeWs[V)!_O=KcM`M`eW(_@ITtmIU5!lCe\g*A3)j&]]EM^*@0+SnD9bf>01\
%=X2UnY?#>9qN<FJ?9bh9YIcGW"Pm_>!pIgFr*mL%Z.&%<.W\V`'8+YAOLQ?>"cDlqL:j+0FhNG_W9iF\D[*+PfCOOJ.A'oglP:%W
%eR*;q4Fpgd1c%9P]%_GMBm\L8^Z&dFfs^S>`"^cWGUo[?KGjVZ0+>+dYNcGDJ*N#QG^>1]3FcX)l4WI"OXLr(<=dWng$[dl^N:+u
%fF4Jh9efL'd1CBMpIaF%+f#9GlDuGtVSDC[`^YXnDP?D5Qpo<!YUV=W)nCE,^Oq(=1FgFt76#1Z+dK4G`]O;HN?N3h,W`UcmS[$>
%\LJ]A*p3%O<*/l`/WXm+eu>oT'pof2JP33C#@fQg@S7@4X?Kf+BGog"aXO18H[6m'7N;YGUI3()L"B5Sb_`8e;cSh@UcK8cLW7R0
%R%)EG"m3Du_hmYq$[>(M/QBJV.Z@+]:kD>Zeebh0*EoKB9($6QDYor.=],phk$IWm^Y&J&mJ33B=ORq!H=BTEr5-kqITLii=WOj@
%7(=I)d7P48,!Fn.V^I5i@F>g/Ds<*?K)HX6JilV#jH_0LbL.&Q=*e??@p^d8XJRB7>=hWc&!WYFq.\LgF%:Djn&eDP52C:',!R23
%OVVRW-DUA"abeZU"Sk2`!eu"I99@0S"BQJi"R\G+M;4:.PMF*oTDE$];^FH_a5fWkP7s"?SD]AcOqVh0:9;Qo7kK:Ho3f/#[4>*/
%S:&k]>%<M;C@mNDaRem>eh4)U/U<R7QH-iJ/c/qr:_C^oUb-j[W4fc;S+gjiZWRr)O`Q'63t/PT"%P=&Hk0DtWaU8b8#<DdfiA4`
%VK8%*YW'aikJh'hQQ_*!><$=2=&/q!7%RtLL81KqXO%k3Zlo6BhnA9+lLgu>o*YS-peTUVACJsMg$:`LkmR-YlR:,sRLA:sf&cSJ
%S4;cUHEr0e@AmPfcMRF!^#Y!p-DsUo_f>Nb6]Uej)(2%PP*\'UDpNjDbrp49c]Er2f&dXJB6R?9mY]9@UE*qU6Gr$Ag8Hd9aStrU
%Rn&LXhfZ1SYVSnTDI7SM(CTYiP9s7738_mYEG$Q`@>F$=:2;_8941L'=[+j4k!A,*VBWLu3C2l6:5gUjTkF*2Kf2e,CDN%h:[Yak
%rDRC"_h-Gg1]p)'GKca<(duKca8r2WYq^s_0!Wr:h0H-Ge[nRb3e@%^p;R!>e`hurRWt/f1=s!reccW_9I5a"pTnU^/3d.VS+>j&
%7Zgc;]VDUJi^hdh8,0NdCu%>"&iSM5q+4L-e]'-B_rAaVHIoND[GM4DL8kk._I0kD!s,E#$lc-_Wn;hJV+Rr5W`eA'ccV:-Wc@ru
%<V*4K[\JH#>oVD7O0eRlqgHr5ea+0n;o3Zo>Yqu]FD7VY#pku)FD_BIDq=%CbFGFMWoB#hkS[I-^>%e3NS8W!poC0,9%n#a6D20U
%54>@_j+<eVfp^c@Rk]<^Ql;qF5UEXJ%s^9M\je/T,J!&cq4VT"H:45X*r&GS\a"\R9tl&QhKuQUf<HYuId+t<:JX9_rh6VFk)Seb
%=dhLqAp<qofcA`Z0a0MA-iFMofb7])R6=,b8+rb7@9N;7iuOTX_e)^B1je5+A5@UPq6DC$m*;3dLsNCT/BZY)c"=:DH_M\KNU4dL
%LoYK=p8"h'mFuMh:YImHAku)NC7&U/G-&?"LV'l?I@N4$-ZZP=p;HF@SW%JHc^dT^BJXk<]e1\-[$a!iHXlBMS%4`&VS^pMDIcL#
%a/B;gAkoY"*5.Du3=3;Z4*$5]:HLXsR1"G2BnCVCLMq;BZdaibPr^XDUe].:e;<(J3_?q^-P@ubbaj]&m\bDAGAG7=roDq?GO3Z3
%\WbH_-Y$qIbkq*=4EC!<CD+P@J]GVQ#35X*@apsrP:&Y[(_$&nR6)iLG@KR!4*gU"?S$T)VG9lCEtZWNDX?#H3U$k9=luM+)eXR>
%H$<VN"A@p+*GITiRs%8?duO4*p_Xt?gLtcn9I/`)dF$ptG0VA%C!L8;d?/Y79]F0Snb[87*FW)`7GcG=EC]"U)EN2e,eb'Qk.[a2
%pN,\Ml=N7NE^uNQl(QRcP_g<To9>(QHh3KDBU$e@-9[_V9pnNmn7Kfg:K&URT;2%;8T3ee=n\<F9(K,i8_T:WET)pg8_D=S+P!];
%%N[W=P+:Ye:n]9D#e-A:^_APJOkh9kOu7G\GOho/9#AM^`l+?#AkX9Fe/&LbWYlI%h&PdA38MJ--L^9an7.IR/4VHES"8Xj7es\R
%H+_I/o#Z=JWF6m=+3_h4q\$?NVr=H*B*Km13"9cZab/lec7Qa;)]R*#k&miP9=;Jj[X.u@?G-;]q!NZagY#gp@j19c&N4h,#TLC&
%,jcTs^O?+m1r@i2*apVTl&^kU)>B^7hS.g(HZ$<6K^\O\*[+WKNpJ<!mHg_JP7;f-6ctenjDHcpCptJUVF>?G5'iI>+(=V_V="0S
%8E897XqA^H/)lB)M<Z\/iu78-`u`"0^:di'\(Adi[;pVrh#<"-DQiic.t7/K?bPH#YP?WuIe?VhhHo`QfAc0.>eIb_EgroB;BQ2J
%;9qIL%dFm!qJHn/;>aPeS-mMo3Y#`*%7MOFB`ta%`k_P?:hmk6/W+-lF(/@)&m)TG-9&3t\[,U$m>sJl3f@sOFIo3!^6r2JQ!24?
%PE;\$#,FasbPb\k]jIZ-B@F`P\q7J6k<`C,fhK,G^6e+jg)s,Nec#otT?JA.!^X/:CVlFOAhYp9]b,ZZ?$;(rRgaS_j!I*@2a.$/
%k-o`D.Bgd/0$U>n#,ma9;=3UmZ?+.#e:mbrZ')iHE^oSG]r1ouU9,re&J5bgWfJW'`i61g(LDe=nE:35n%rW6BW<+tE2)a0W2O[Q
%`8U#4/X4rHp6F=lT8[fqX3,N%-Te]ecijH'S=&sZ<U76dc<e[IlQ'/gI6CK7pKMjG3HUs5dt@4@cSi-*@YG<6DHjb2bk$PnMb6sP
%5Si4d0I@f<-LOZnMr(e'.'%,@(NF=>6C\)t7VS(ll7gVUrO/Xros#gooGsAsmU-'j,f](nZ%5Cp:>U6M;)j&\M0s^0n[=WWgE)-V
%ff48`\Qdp,aQL0H+t*#IpjjhJ[cV*OAY*\0fa^OJ/H(TS3HR.KU4?6u;%(s!,-i>=>d&5!7AqO'%38sn>@?O8U`e5&jjX&HX.`qr
%(cRAn9_;3981s/)\^>9e;ns1WA?)1Ffh7FO*J80Oh$<&dc04VCER]lP\$g6h6eQd$Cf;GBr6sW?!DR2b7MF`s4=B\`o^KgUO.XN.
%@4;]*DGB`tb4BoHT/Tn&B%Nb4>:]4)*J:mF)-*TIS92iPHBRX[WMk.IJ]&3dB]<k;38e%7V.HFKePUKq2ZQ#hgQml2pO4d`\K;94
%]V>^DZu^[?=qs[%6PB&qc\=Prr/-`Vg.AuO"U7brg8-H2F$D*?LZ$WA7:;VqD%jX"qHUF-SE2#)n>OkohP;&Pc3>kHmoC!ig8%3i
%`!T*g68_!_!"9R#hicScd.Ges8,V#l(1kn<Krtd'0\7.]X=?;R;fS$h!sOCilAp!pWo*I)RS_VGn(,dS,,K&O35kVeL9fiZUThF9
%O/HlCb9reM#XlIfYT\YD\a-!cP*oE<H=/h7@^[V,AI#b)9ch6'Y/4_^$@S3_Fqn&aVhhS25A".]D-m:d:5fUaVl8RH^2CqZ2N-Wk
%(?Gt4dGRZ<RbsnJlc*\Ci?_5$KWSAK%b1R%j.3mBo\p@kZob4g,Bn*4(qX`DJEm"(44\-%(ch$rD[l<*fra]k`FmPZVFSr4H7$("
%P<Y8@CpL0)ZD=cL9\&PbPKHji#:&Bgm']oj(GFU,j#]*V=c;3@nX-0i="WRu4\flV$Kpk3OcM.XhKJI(gZ*8(L1o#-X4q-jDg/oY
%-?;B&fll?o_OlNf4$(T/F<*A#9X!h9>1I9>daaTo:3CF0d\F:0l<$_Tku$e:X!\!5:VNpF<<0h1>.rCo)YMFRLF?Nl-4Zc@S@]PM
%G!!`a1j\R,@^GAa#g?/B:EDJmK!Ue5:-nANjtCQgEAI,=Y6S+5[,32t1_J#fF-M_1NuU\cANiI`K+^9WGNeE'C9.&RPEfU#/Le$6
%ra+G9R'RLVSKZ*^=MrSKkmrQsY@Qh5_ljqkGd@58=1YkQi90H.qJ\:o5A.aZe#OA]aW4#ic+l\^#!Pl,dN(1IpU)Qs[`@g1JR'j#
%7oM86(iXEhI747K(Ce;QL3q\RfUiW@D64^YWs7.TJ[K6#cW('k[P==8gIp3"N^IM-1@N?CpL^.a-Y3CZAao;<ap)Zt@F>8>7m?Ub
%_P_/)!6:0Q9\WQ\O2ORF;S#Enb63s(.LZcLZ1G)-YdO.8G0AWgQ?:M>;3,!>EEf3H[[2f"kFhojNJ%c-I5/F#-9MgC^[AUV!9.03
%Z\Foqn,-Y:S_71V2bs=DR(aEj.TdE>7@.[dPP\2&Y*W%ED0`b>-S(1lceb#J[4fK=E/<bbo@'28YLgdY[5$b[JkTrib1`5'<'dCh
%0kG2q=W:;j&CVP,>!ku!LhU^"Gqt@.pL*'l5)!#0#2;G$*NHaj;LXIcV?[4)BN/*8"(CsI/:hD,]e[J"H.gd3&=ddZ]".qinC,?j
%kokn@72TjjqEc,8[)tNjZ5l2:M[0"9Tq'f`!4-<K$:Q=pE;U1o%$O(cDKV]cL0gk?[$n8bnu>?P=^.KPBU.i0KB`/p<nEY6)AJ5j
%;E89-B<)^I6!6M>*DFa^"BD[6?FJhJ)!:_cfNfnS`++!$mcAU#%QX^eM^TKc^7h6U2OkPaR=f@,5p1-LYJ9sDTEZ-q_Fk;TiLO=,
%\21mG-l[,VPFebWRTB)LPQoPmas,`MqPn(.*ED4^S9Q@qkVd50DH<7C_Q#7fTpG+8&6bS!`=CWRqdq1SI/rna.]]5.`*&"lC8l29
%.''[+MlWj(9C!H1JR8+KlaU&r/G1^!8uG"XqntO\>NLC;qHu.#"t)g]r/*<Gp*qe`XdNO$&-!>*FgT]QZ242k[++jRCmR4+aJtMX
%eP(t)#2T]Z1kY#&PJ#1QibVY1COik^e^YjNop]!:k,bNX!(*VbV-UjB0j]L]I/]*T4DWKD2@JcujPp#+m5h5h!tag6q1^4ar-4`I
%-ZiJMqR;@+p;/@7cY^"GI]9)Q!!K9B:#L>daod%([T`=BckQQP8a[.keY[qO@*DbP(tDi#h&Z>B9%&DJQrYnG06%p]<e\6>e-Q-R
%jC3c"Ja#&-$=[//<]kq"K8-29>-(cFeg%'Nh>@2geHiOr'ikRj7gHn*pZ5Fu<b\[)X`:EL>mJBY7F/QIjmYI7qB=Q%m7jNp`*P<D
%6+5-hl>5r@XmGEeDRf;lTcV:n3^%i*NF+6HECB\fhpcNCfKP%>@`lO[,G_>>m/Aq<hG3>Y+U:kGmA,b9k,>N3-t%8q1'T,[8Y*d:
%)4N,KUlId`/])[/6`K4&H/;<]W\r$,#<_XB)MR^lP6;<mW(-ejBan*(oI6a3KfDi&(bkHr?a^DY,@)0_>h"3tf/qXbbMISh-^#__
%_scbOBDqu=$%WXa-Hc]5]Y'=/neMbQ$8]"E+.hBh7RU8l<B-sj\n?BPC@Btb'U:R3I&*I&k-8Dn[CG#?dpSsYr2ORDEC2DjhAQ+\
%6tuacc+qnT&fa;oP=uWo`02FClnduA"cP[`_:dSk;Rf)\$Ud+$C\#+E/6bt/91qtdj0S?G@(rD=EKQ6(R&66h:?\ul.k/H38UMQ#
%e-0B/cuD[*pO\fb9=:$!^>'kkT%g]<'Lk(s`>$(QP!U[d5F+I#KE\_G,>1U&$A6j4PS@"&^C;4uO/8W\]X-0i;S'8K*9<6X=q+S+
%b'X_7hEjmb.:u-tI#.uYDY?A3o5"r4)gJLF'pb"Lc,bN/N]EOn>Eo;u.oV.iXe^Jc,fqeG/0tH,Jr/c'W@]EM@4K/Q*_eAh!GYS,
%moW0h4tH>!U#jE[:_^i'7haUoHsjIB)l]F<TLd;^)m1@=Pq?m97G0eN$bB%g$,]Y=q"Bpq:D'Z71g:MGm@d8i(+beT73TfJH.6)r
%P/;5)`e7M@K2X_-"N,Psb8N%eh:A0F;b*g3$H&`!g"'"/ch:IfqCN]kA7M")?Y671ljR#9%c?O2:$l;KG0ENSNdCYr@h8LhRiPjS
%G'q!Vnb$M7f:*dfDg$NAg%"`Ia4He$?Z1,cPR5I82`nb1m.e?hB#i>1jM[Qh>h]qF2#Lkk5'?ISrXmr5c3J?([!bs)MGoEOk1#ab
%KJt\ocDNsumn&$R_Zq;rb6dq\[6CqqI8P(-&";PI8UT\qmh>F\FY/Y0%6p84].Z=8['L&+B]j.er7</&1U3fmR,?L?%Ba<Xp;2=H
%L&]j75:>7YDqbXaM)RHg_GB/cNkOqGGa!J-r$:.k&(h99SD5h`h"3c(_JB1Xq\Gtl^DD@uSI%s`_LHX9F8!I(\>k,#Rq+&-2!98Q
%G7HV2aj'>'K$EeKLsoljr$::o^Y91cLc^$t).*@8Ap>[AIpCo'rEKVabm?KMb5tJ'^$tU*aO@'!SW,bVmrgb_V!A!$aOAJE(#Fs5
%3OZe??X)L([_i'*hIo^pc!5Ns&2hMuIW#'+*&#+9*sj&n`N=Z`s!Ka#CSH+50IRjY#r]90b`A&@K"GBje\4-C)dg:$[f\ZZ'O:A\
%gMi!`k0?/E$-#Y#\Cjd/B>Ft1\I^Ag_*u>sj8TFq,D``555g_JC@K7iB&PAj3LT5+Zfk'%%;Y6FTG-7HGlt,ESHRd&JN![4\B4"G
%N6\m#I\_MIa$,nAOpB'j"Go.s';QM#_CYpM/XSJkc@NU]GP=o3d*>P40(2p87"Hn9$U2*0T,Vd-1c6o7D3tEL[I<Nj`;QmHqqS2a
%?P.(F1iTpZE:^eJI>U!LX(h1aY4h&N05EB=Vg`;@RiDA1-^38DB533Dmi8j<rMfd9Ska<H9ODs,Vr26+hNdr[!jYdU//@4:nEJoU
%Tb\GG32kB]r&7>%9UcPo[@-GqgRlA8ndMi;=Q(V&1p?*Ni6seKYOrS+,3+ODEMl09i"#DEZdOAiO)pR?6WGn2%sQhH59gM"QTi6!
%S?AoMR6?tI^E<2m"(TOLoT*Fo43j?7!tQcKVjG3CP81O!YRF9tWeg?Qs3J*Cr'\`,cnl.?rQ*S%/>XNK,:-As=;5TuK5WWH[UgUc
%:ZR%C/)a'`'<</&ia=Bs6aeNU\!1hrpFm-GIOR_cmdP.B9AJ>5*dA;dFWOdsS>G]U&!>,DK-=lEEZ/BC>NN#-/qckrE$.16e*m[8
%(W*'l6FWn%(@Iog'A#]uR=^.!Grn-'Ba/k<r,7*fQY,i1!4V$IgH(^9h\KXF#/Hna$.E-blaDDrVGJRYdDP#o'!Me(=h(M\]5)/=
%lV*Yr^anPABkU0t-$#QUa>62hN^6CW?0tDj[qb5%fd4.>gUrWG(=4fiN%%)tb_oW6X*o3DPIodY?(7.62UaOIB+R`'M#)M/X8PWA
%ZDkfC@:mrnH+[t)V0Q.nj1Pu+G&4[&4F@c*4WG8L\EVj9Pe&\-,,,K`:X$\X1O;ua0uI'&IUFt%877kg';o"H3QKHs:NP=(k+-TK
%5Bf<oG@5P'YLBLkmLa*q8=ghN_$)a#S[l<1NN971s4<)?1X"ZkO#p@f6*pQ5n"$N4Y?_*/Y2@XD=0CH2m(Xt#s)medf=cB8pYL>S
%HhV[Oh:K>as/'?,f=cB8ao;>-]m$WWFkr@d75ND,@pMuFiu=.;7P*iuHc6XX5.6>75=[g5l5"RdF(RNVjAtaW-'=m12NO_cL^*f>
%Rps5.Imm1\P%^^MD!IAVEDDdefbM/@_uLjH.48nU%>S>^:&2<4jRW"@+R"tP,tlLMPKY,I`Aj?($KEAAgpfbh1[HLJ7:s9t%4E!B
%F\M[5@ChlD'_*q$(D)4bMC$Fm:jgf[n`-Ii\d&FXI+-=JZ?1HJ#<o"9fro:neu^9DQO45T:="`TX)"q7FFGm#J6`QF9<k54+$,tn
%SKjUh6&)>$W0ib[2,eZc=+"I5)#M*ZrA<&T:T<W(q&ds0=H7b8JQ9sK&FipadCOQ106.1KI6h:E#:+iN0^7ba/LNd11+FHlCtM<M
%:r$%EkSd*%ZC"+V$k@f"4rJ:sdkE,TiWWk]'pf`\/!=]b!NdnY1u(@ZH9%WL68-V\S(8T[GSJ?6EDEr)%"&$keP42$5j,W8@5J[(
%iY+u@>0h*H*JihaBFOIQk%5$`YjrLT8`DWBc"*&*]M\!D,o'?"T",^8?A*t^Lj.##21qh0"k1+<(BPEYn>f[3ittthlCu.';om1G
%6_A0Sq3cu"HZX[:hgEK1gXsFRAM/ZmEEf?)L=TXB0"<_EUaZ/SoP$9+rPO<3F?<Ej+_J_MaVAKt<,q(.CaU;mOCm-`<9*rZc.pYm
%83Heq9"#^?n,b,n%7GhBZ-P$u^dptQ7HH"K[1@15e'2*i$sO;'Xg@`c?bEO>kEa$X:'QjNQ^iWu$r6*ip+;]e+[hIM;!%a=LGf1.
%>@q4=M66@EK$C6_.V8lt.Jm+ed5"fY#U\5[^6'a:BnW9uRg=8n(4T^4=%8:Qq_HEt-,*?]9=c)+)RKUJTK'76[^Y<0T\I+a%#/04
%,=_F:g@@eAjUkh^B&DF&Rb3ipGh\d7\!Lif*Z<uCdm2M_gL(2u<*;'.X!)LO?mJ(IDU+`g)Fp`i/&)]c?\ossU?JEIgK1!1.o5f&
%-i1t!r?'2rZ$BtKXdk.s:S]P_'3X):rXjE"H%)>U0Rh66;"^IU#.OH>4;%J9DfF%kp2>;1g[j%f7,ie\&Y!tiPT9]&nW?ZH)tHDN
%Vt3:d/:R=MO_U_.(>L9,ko'o>o5osM8J;]$dFh3=acTEUc4W.#7,Qj:o!?%#,S?N9#W9>Z7,K:^6k)p<M:A^Sd8uLpmn4;HB+_&)
%6oKEB8VHVFEDDZfFsMni>jc;c-AfrJJR%S9-&H6Ro;O!t+kuaXJUiJ$=canLjE)YK:.MU26kUD(F39&+6/P@Xk(o<\QX&Ae:D#$l
%2FYQc5T`$Cphk_tNEP9H(GW4V>1u^`l'c."hA?":5q(;uX"p\DoBq#G`nY1&%E=`Om&T?prQjEMg1_Bn\(G1m*tnW'X*7^?,6\q8
%2qTB=,bkaaU\_8F$4Zmo#q;T_ger+l?,N,HafNl@PF_6%?88T9lIK@@&GE*=r[16ka5<:HUlJ5.nTEd[GL[rY<!`oAmL'B^GpYmU
%>`nsq>>BXEAKKP)Tn.Xho[$QFhhFo1p+bnac(=$]S<k3fJphlZ!lr*jq':gIN]cLsj32aCS-KDsZRb6OUPeJA$JXP]I$.4S-@pSN
%@qNGK2W$[8$n77qMY=Ah2N6PYCibXH`[<^hkGHVW2")Cb[:ollRIud_7D_u(s0BL8F&p:T4Eah62OKn)"g?^mc/%@o)1uYP5ki?9
%36%XH)9nY)5FLa:MM="F.@bh*TtfU6"AnUVQa:#mI*h5?TX/UiKN!-Lq;mtCSFu-9cG,pZa7+#MoEND6jZe;aV,s[CP(W;/iAiK5
%MtQANP8dK$KA]6A4oB)qfPWW6NqXL;Z<=O7W/l78:Oa)K>bZESSLk6/*nkSb!&@k]`EcU9oQ_BP,MOi25-.TENQ[<Lcb,6G,9$2B
%9Jccbh+7AC#[]8X`2aOZoJbc`rh'47U()h<A,_\jbL>:jn:/a/KcesX6Cm._o"Gj"6G49/s$*gPq;a8HQqJRLs*lO7rX@Hsr#5pX
%r93luFnj.0U;u*HDdE2IV-tM"/s]^`3!mUY(^3(M1U*`QH:/Dh2Lhj_7AD<\^X"gm+EFE(W_mSU4hM%*#J"4ubA>J-Q60P5bGuqI
%_e.TT<NfUE2b/eKK;A*,c\mG'U-:dteEK/`0/R[/UO'^YONM":8?iK<--DPf$<JhW#3O9f-X(2Dg@SOBVVAXIIPg8rpkh$g)(\a*
%FBL3i5_`>/X't9,cjS[@W=5R!5X:[d)AID$KBK"t7@hrkM0T0bn2A[71mJSpE`n+YJ4L#1qPI@>82jt?KOS9*0s9j%TLin@rJb>U
%[lPMSG*9$%X51oPa(r3I&I%4q]jli8I_5A:s-$6Lj38iV=K+s!OjTAdN0u#do)_,j6NebI4D,Oj<(sVI\j#l/D.6B='d%F,U-Vr7
%W?eQY3ptBPX?t,5<#T]ab`)]4CGR@_>hBm6j2:_0<M'"IKjT&a0b4k]a3?fsI#r/3P99;>;VI(-$^7t0^hE^`)V]hR8Lo](^O.@T
%1G,0?2fmgW;?M8Na1SOS)ERnlJ-1f7V$do\pII3R"9^aJa"ggsT\Vh&C%GF']*c_dXZ!8@4CFI5Ad.7(]0.Jk[5Wn@s')$I(0rLc
%jPfYU?l#;Wg<EC>>XdY1\*g1j!.(bId]A&6g2QZn/F]JC^.f>55J&E7=Oo/)h_K?W[@jR-UA]/-*Ohq#j)5OshaqW-BDn+kgYm^a
%@5[Xl[@=3r3720P'9`7$X]nmA8IInUd[Ujr3"C>'i<;/<@=Z^U?$e.&>KY=,#ig[RL)@:fgj]f>.%d+2G;TU)OXmM]mfi][:&c<F
%e5.OaheIFqKAdoOM)dk_EP5K>oj7@`5B"3pn*sAkJLphsGO_$Z38^38`D:QV73b+Q8t6%L*ZT"jjQZ[npATt:q!UQQ*_KB@_a*,/
%O>(s=H`cOa"e'U&=5cBBfk9o656)As#Gi/]c(/IULlkt=idG)0H%jgNOS7l3b^]U7XY);Y6F*U@C51tIik6mf`W7'"goNu.7l412
%?g>9sb*V/f'pG3,A2QIj5R1m8"[fPbZ8`l`[PZ[1'/g%k)".7r!L38,4U.r:ZLJZ^rJJF?;[i@mN.8fRJ#4?I.'g&Oli2+EYf%?L
%*M,nLOr:(q-]uJO./"UUJAcnYYl,Z#(KpM?;?,1>:B>:IQ7(?,=$:1rZm^CSOO)hJ]uc6'D)7p3n1ZBehGj!tE'JJ5P;Vjp0J9$!
%P,?GX-q.63d9KB=]j/&H+[VQn#dg9r;Wt8(]H[J_=An`&71p=t?l)])FpQ"o>oU$c/b6XZ/W)%<=U.&^0AGG1As%q-#N,n/P,q3o
%&q$p5#sM=@krM8Y<-n##,6TY<&/\\#@L-Kb!eM,'#sOT0nh7h8AuOc>8K(q1_!rS"oK_"WU'RKe,.b-M;'65ig@n"UG;>Zf7P*hn
%XHLA!6ig)*#o9S0f@-)gGmQe8894P-!E/`cj?NU,#XSKqP2uq1Ju!eA_N1Ao5i=kc'`Jk?po3saI+#.p/%\Hggqn>Si<-lRj7_]Y
%kn*!HSUPqF&=W%"/%/2W1Uu]@fi-l<_sqg2/6]YGc9XLN>]ZQZBUNbWE=2*nj)!ntG',XAnqim'^1HAV#NogRV]]F,p(,*5qnk)e
%3A8^r<8aY$**',ehfQ#mT;S0c*&.k)dT+/Z3%9!\TCcAh.s;_\.dCPL6k!&rhpu:+:@-DQeTMlbL,:EZP,d`07U8IW#M!S@/uaZ<
%?uQ3L;S`:@kA$>ZrEc!.f6*KdCG:3[7@NRhEg4V;KO%p46p]qVG^?FD)NCNiBsD"3Nf%up;5L=MnCABXmg"CcP,=Gg&F`d;q'(]r
%X1/<u";d&SA=c`NT=;BV)R="*7lEKO*MuNW-qFR"T1#kf?k3l6?ql*TNg;kNA`-Q>FI="jImcabU6uH`0SfTI8V`%3eZk.'@F1;C
%"4s,'..U?BV:]=*V!\Ef[_H;XXp2/B6rR/p?lBJS<s;cPliR>,psIg[+O]U(:#[!YHp;.3(*%skRBDX4X(r>E'Q6\.pKN7dLjffu
%.p8*f%]mYa*$5YM\YC"*!TLFG&oU(%7,9O96`6>[p`C\0_Pc4WK\2IpII^pfF^7q52&o3HUop2Cdkr-)Cg/*c"CAFoC^Uf/GE't?
%S15m26P^L\WpRr4L]^W84a\$q0EL?Oi:'_!_;M=CRhIW/m`e"S5a3\e."QneRrX+C3$QU*'j;!DPMFR<KT/rcn!"I<R^\)A"Bh)8
%DA::GPVdr/^>j(XkSUIU3`uakk=Yq)1P*OMX.[gj1.`2t'=iB7BQWWT"J\/ll=pp7a4jH<CkC7e)e?^XCm,"9*29j:p-^oPRk;b+
%Su3ttg<sD+`4?/F0ZZUQ1,4S^35HJ`;J-5i(QIg<MDc&`L.;*_kk#i:)I@K"$=8F*@>4K$6]@3_N_PZ`9W$i5BI\_Q<)m<>;j8F1
%3,DI4E:D/%R&3&55KJ53nNA$&SJW)P]KZKGaLFnTnM3WR1QS3]lY?r*KpEV$P?FY*nI>ptGP!&L_Eo.dQLM+-[Vg)=CkcLpXrsT,
%BnBt_-5<O0N,t>[n?EilM%Ebl$(3`h-8H8[A0bS7[LeO9@=`BJPGMgp,?9EV<1tCc.!)AApYi-`90ue0:Z6)#F.?jaBou+L:<*&\
%BuPn0M(7OAfCA**,SIg3#="Xh(pbragAVT-h/LFN5e9QHqnR_J_f=,R24Cnt7@b*]I%7X(OXtSm:-iW.JrUln??9[,Am97o=cCa0
%lcrd?Dof:>OuQ="P'MdadU^8Rb@rB%[*gM:;%:*3'RiaJRmA=%'6?,EBBT[/E<`I9'2j@4.G+q7,*3H!'[PkK1QO.m#XkdDb)D]i
%F3%=R5,)9NfP%dp!%8rmaJqLYA?.^`"ir;R#;Q>1*%nVdBGb(WiU&A2bZL,fJX?\'9@H:>>8!AT,]OuF[]AGEM6g4$JQ7tF!>YnU
%KA*/`XrrTI+`7$n#CDm">V/nUJ-\Ri5+9Pr=]?4SI0SOL706AojI8mkT5*A:E=%:3TK'R6ZAQk$Q\4\hd\L;OiZ$2X]XsNU!!=C+
%K`dMNC%3e:-!M;B<';kq7CpYc/S.:Kq)NUF.&7YF>oOD(F[ab!7"C`LUbd"*m>uM5!cXMTY[ABs\V?Q=1PI<9:?:%h1$p!'JeQ<3
%U4VEMJmtSXDim5Kn\.6)KI69]dCRE?VNS"]M\abJ>\'<5'96Xee/#*Q\Oa$]2a,q'G8U&FEff_+Y%FuY9%?l(GuA%[JucsElAqC'
%>KPF^q02n"g865V.!Fq,%i_#gcC=[-K*c_[5NU(-Q&$X/TkV=)+?"cMOIf>bM<k]]_u``[=lJu:+-r_@`KQB5*3*1"QqZ;=b0UQR
%6@=0NA<Ms3TmJ35@fFt7]hn+VD11p"Ua8Gfk`CCj$PF&6_?VQkFMf"D50S"@s"KqmL`=^Nef9jscnlqq"[ice8W!KZ@US[.#_UA#
%Y=l.[^F3\@dK#5JOk5[@T"q[^#[f'%'l=CtqM3V06m@RP(&3!i?Q`+b('+'f6=!W&Oc(oT>\'G)p4(nU6'8(qNM%2c"i0-V(+6>i
%VK2'8Vb*b7=D_eXKotfT-3?HNX4`;*?pZ-25^q]]H/oXks0\do@&0JnT#/5Us$UK(aWQ[:JuScLM'm?gL,G^i+1AHjaA"tKQ6mXe
%=EYgLkbO-T<:4:a5HkGm4M1XFG0.ge@(=YSmpr7\9p:,5G-7]6g^c*(P[YNclK"ZOLVYRbUe+Nhi5q.4Z,@@h*l47T2_E-hX&8Ij
%N_M*oV+2heH%NaE=/94`Ob1StKqqCfNqVQK0$hT/*,0,g!M1Ydd2b<'o51rNSMZ*H=/]o[G)3]L@Xa`YcH(FdD`/BMqtcMc/%K$V
%^o%)qgnd+MoR?D%<,:"\H)!;bnJeuU<iYfPF?FB*ku2Ra7&_6KO*Z3U[#;]j&eob74U<h9N]^:@('iqjE99nSEu7QIA>20A.mn[>
%;7\_:dT(Q.JDZOQMN&8,p@RFI=/dhI*:j=4gM(l*5e&cl%@ST1KQT4['Q?tJ>FYF`]f=0")pNP;;!h"`pLeooIn#W[pB(?^nE&9]
%?l3tOMKY<a[>7[:ZS6hF/guO&X/t(R4BBSKIhShSc#*]^/Udn&JC8gfF@J7c"M1,B2h-_,G'i%66[)83h(,t7Ptt-&.f);biiaRn
%>`OWdX`Y;\g&)OsHtIO$kDTB-6=K33c\hrXqf<</cEfVSNd@7g5lCRW'&=HA1&$D`'El\D.J</f)]6rJ2P,C7.h?F1r<2ck&!5j>
%]ZU"VZhC]-6knF4CnCZ1]^DCro:JEc1ON..+,p&0>)fP-;s_PGZ\n_r'+>gRMb*W=kXRH,rDSpWr?n#"XO+<%+3s/\Aqc9:IQTEm
%jA.KlqkfO1o.'E&?tl:OSJsE%Z2N/dB.Np;7KlB,HuD+q=-L/gn)po)5hZ)Mj60H4`<qu:hdJ4Y?QP00@`D)*7<=L;]_]N[[F-%=
%4I=T,Y<=df/(k@X%RncT#A(\s)Y`Kdor-TH%Qrp,.NZu]ppQnP3SJmpGYY<WL?Gj%**!6g5A8*$UE<-N#d,YfnYeYnI8idKPP5;o
%#'a&4f#PaUeT9U5O8B^Ub]u.+1NfTTCft7FXeGBF(!E/U\gmI.!u#4s/[h,aCMK.HWUu[Bl#O[jD_tUM`1\P5*qekk>1cagI#-OG
%R,KJ(7\sF2;"6g&]n&]Ge9M[_$KEXeqVoATB4*g^+1D%U78"<Bqeu\`iJJ!N:<?lp0H(Y;_gW3MV#3<]d]@\J'.c-c_[nsH4aUAg
%?FeSgd]!b'p8WU%7)sBhm2DRFYn$t$Cj*hcU4_kLo\BZ@/<6aW>*\)<ds?X='=SC!Xa1?)s,K408omr_2;?B<V8G$E.beI@BKB/[
%r`U<(?.7s^RVZ'+PtNrOY)BGc3'J.)IHO,T?JKJn9#^L8[6JO>?*eV%7E+>fXP;XYX+Oiq8nS.o=caF<7HV@[M-P$ZPpB)uai:RB
%l*`-LQX96u8L[oWdp?T,70oKR/Y@P3g<FNc1BN6U.B5Fd(;$?=#Iq<XZ#`0n,!s3c&8WX&Zf?5`>*s(B2P:Po/s7neauWmH*u%4A
%rM3LI[S^]JWPEo3DO3Q*9^Z?C<S$uZJ:9(n4br7`+_+&ieu`XA#BQ8a*@H1g/g=kQ:9)'0gPb2!UTajqn0uN;R_dr.L7f?;PLj7Z
%NN(]Np?BiAG4iTmK^-pq/P[<>bW)X387mU+"bHaZ"sP[Cb;4=q<1UbBH+dRcK0ElkCjSbeR>.mX1!T&;2<a]HK5*+u*XjA@(dhc'
%Cs/D:`ltl.<.nk1-SXD1.<Q-Lo@0QaGsEP>>:5bqh280jQYK-!lNC9'R\s=7=(YI/X"Vka3R<2%B=ur2HM_<nls)B9;[S@*AJ2tY
%M^[B9MeWsZ2M#[+Oh)X(1t9cJ1WC`NEU#QJHh&fW&JgZ_9LOp)e19A3KEs`c/q:*ILg.QjeYLaR1s%dNcobnI3&uadE&/_bbulC(
%OC`ZXF!per\Q^7=3q6=HDnT&Ee/WUgaF8"VYt<,A^0g?9+sg2)]im#)SKl<-=]iC:*41GVji'6tEAp*'<e35%3B7jrI\efUKGf,a
%VA)^JKJtc:IYn4t?t*R-6i5f]db]8J]@M)t5JP$cj8=I.(6=V1)K)BT6\9:Rj.D^na@=il[%\<h'aGi?^CMN`fraq5oj/\=,/$9*
%o';IYYRJaPhrkOKpn69Dgi&O/s%J3-,p^N8.X-Zk<Z):)RVdi1-nO_(#_k](dTFp91*&r=Sq@fSAHb`(J%rA48p/dfGF^Q8Bo==e
%)k^r6ZC5E!pA9IJg%ieu[0MhSbKa<SO5c6/Rh(soV/M4ZcWaS_h!7;s&UJB5V*'R/E&cRDOB6;SS?\$e&3l-q?%Ve_K+QX;H@&tl
%+`oXtj?><0O$lpK4,R"krB[RK:eVtYmB</NIj.(@"]Rrpdp[IET6@2j.VhTn4qS$Zi?OMKVT^,,/;[:8cKu=g<;<ViA]k:S\B$Q9
%ktI'"\tLeBeeQ/q07TZpZNHqBMR;N09U/qFXF)GTJGe0@^/M*c0=X\6_0U4(Fh/U_"4A*J9>f-i,S*C^$d$?1e\P/O`8YC>Y04mj
%g2OgtEMNI>P"scZWkE&hF&OYZBua6GZj2V?eS0]Jd+<'BX(5Kr/C;@aEjD*l/cbj$I]dof^O+B2_!PMq5=coWJKi&NdW.s#)-+`q
%ncom6T;PSRKs3iAI;!_e5K=_UZ"[YCOU^mo*t;(3N+b#l@P-#b=Pd\/e>Q+I];CH0M)Muh.,WEY\b!G0^B-bbjER%`iOK[\/@jaU
%1Y&%n_1Fij!c`ZVK?@TcQ=*A.'t`:n@oBXXVc&hq5$V\3n<2gLq4f]_!B1PHs6YH/kp&*A^YpemRiXe5+K*q4Ygg>%5`&g^1B+4?
%\bAsX@<EFlq]()-?k5j1#>>kskNct9gF-+&KB`[n[RG:IMq.rFo/&AL^`BGK:?N?2bW(Lp^mJ3150pF&=3rea7P:<\8O4CAqk.W7
%\]iQV&f=Lt\jI,=`CPd*E&*QC*Ab\p6,G,=EQ%[+7@nj7;7%"S$1e3Fc@>p+3d`hp^e6<efR+M_>ADQpgK(ud,Q@mhBQ:CaA77L!
%4nJ0ddP_><1(T,i*^((J]]cTMm"7OMD(VG!kHmDm-b?t90tQW.W)l"_J(R=%T?6-P=tPYYIC*,JLYM1(g-[RIb(JF+I0lLhEb02K
%7oQ`Tm']$dBADMWA(uS!WA%erfX6,Fo@iL$FOlrn`aO2l&Z7p=ck"Lcami0PBks/!@cf6(aLg)H5Fo"!GAX66RVZ0[9B9$,LUrWQ
%$s)SLN&A&1o07o:Dg']A`S8W^fq/X"j+I;*A#nJZ*bE$SJb<!K(`BKV<sKVn[hZ[3h`YOt>:5KtVt%U5XCX39WP0]7jqEDVqCQ"1
%'NX8!kK$,?Ha>qq&!*P8F;'_+GR%9KUJ\=GE,cNJB%;:/\[,L87j@9lRD)EGGL3%LcE;"up\U`XgJa9kLGom;hT7HkQle1P];fe>
%9s`B>jBHsO?ZAlnKVQuNelFZ'VHmOk4=1E7aS"P!S`R;OinLU%;g`?tl%IKSCZB5=^J]]%#[c9:QeXQ+Hb.Ufm<JMOX-RR\;@W#"
%FCF7\T.Z$Ln+#eYoc)a!%!n:eY!;[=QiB3s=?6"#_tr,&+s6N$q&jR5PqdAj]ELX`9Nen3U`/SG[[gNarLr<*k%cB:>//4WWoK)p
%lQ]a]<\>1mpo>:Te4pppCJfm'[6\m,FfY=c<(XOMp=@-6d,R**P4u`O"G60r;+$(UeCaFm4OGaaG="BhZ)H6!ghCM,FBF_?KCY]Q
%C2JfNPNDGan/=!YX]MnL=f?-o;pcd?Z?Wqo#]Eb-D=,!RkAYXN(/Grgqee0YL4V@RU^nPHhl`:14bpJL.h>i^anJ3jmWR2i9"XAC
%&!uBD]hpGoLoT9A/#\1s!kkb,#i_':1`\/cqm5/+r;aH,n\[/j6:IOdTsSj]k`=).G2)r&I?Q\Rj\qY:=5KBf-QN6lh[6(5h9;a\
%hQ-+4%GgAea!u"?ca9/7LnVLe;R*fa;TU/1#Z$X-Lk2*i/6-6a;nU6E$_]Xf*UYZT?@==O$L,#r\e[GXcP2<'X%B^@F^^fDh-MCJ
%WT8?9Q>aLXhk.@BcqT\Z'j`jdn(#R/k!]\a-eW>\QVG6N]VM!7C,AuWXOXYVg4fkmgjR_[b=Z^$Tq6c&*%,bS)opWRY]@smA)Wl_
%!0Y-r+1V[E>o2DoP]g'?(loD$.uD-jBKSAe.HEND@4fLd^hYfm#7enQn2+#)^9Ue+?FT[W6M<,d'-1o(DJ.E`,9*,GAC#Ll?8"6X
%SVq88"t-%V`c+Ur_V$nGF`ap]GW?CnDRMq2fP<BA4,tS>mD?ON>^bJk,B73]*FB`8Cr"p=VAe`2.hat#A1.!VHuR[^@?]#:OAOuQ
%>oc.'c501))k!B8.plR/[!V%LH6(9Ag=NLI=8"H/c&sf"=c?DS3!J+`$E'.##b,*ESNOGubo8;NFd1XqdqZZ\)+fq`g$('`N6\cG
%o6)[S<plg2mf"^XJ!s%?k#JQq1MK9NWo;_jae"<5E4niVVPC?nNTAimdRgmZf=aSGEOuQp*/EkbqO,UbR?[B"[>2\3Xg&AdT);/;
%FODj3B/!Uq5>Ye$]`o:0RHrT09;4caa%lk!)mA_cU:btMQWW8pEOAgg]$'m_Q\C4'rmhQtPB<;X"mfi!TQ_Yt-X2.N1V:=R"rsB:
%rc4dt6jr2oLZfM-dPqomH,#b\SuJnad".<[LB1HI1BmF&;!`.'"8Q6r.7nO7IRrO,O&G+A,Ol]05"J,8aQk_)K+i`4]H=m6o&Be@
%I&4\.df@gQ&'A+*^19u.NS\O@j\fCOZ;qKlV<=n4m.[YpOL.sGId/2=^NP=+I;qcUQF?M*bs6$iL@%`N5W=n$"NEZi-l5f]PQ"PQ
%-di0Ih;Qnd*`<8:o%"H.iN/o0e!JM+I6W?Q[](t[R>,VG!@G)$fq]eJ%<grQ,An$Af<,^\+ul*6)O!>C"H<PqTpbI3j05o^K@9n=
%@as,-)erk$9@fc6H_isop@;6CG'0f!_ZDZW]a6Tr4:RAsZ<NAqfLX's9'pN)Vj7ib^qEomf(Vrk`mdU_h=+$mY=[b2&OMa%,<I`c
%ae.(Oh=^c;6,_s4B(t=siIe"7G*BR?pRds6:_>6&O+jrlKhq&\:$?.@^?>Y3oIR_"piM@F/<&phArVLcoC+f[Z8N2:9VbD-PgH_t
%DI_!US<Vhe-gdm>WUPT<OJ!sok$$Kp$1Uo=6q1VqbJ``jT%d_-P:D!bU]@h"mH@kO1k^!<,dhGcg,s(?PI#Q,gPCtFMp4nlkbM'^
%Wk'%kd4`3:3"[&mrc@P:#r`KNlf2k@^0WCA+&J/kqSPjG6$q0YZEL0M>?UDa"P"Dc9t)[(n1*'HkuR`%G?%ErT3pTGEpMQ-Fdp:g
%:e'W+h&WCF'"T61#JE"(a$W3gf>GEfDA/T`"s53bcfL2o^A.AI^dp?&QhTb)j7f?j9$*E7ij,'!`UhE.&fS7HGXlk"'-c%;lV)!,
%CklB(^$2`JQ/Da(Wn72CH*\&VWgco=iED,\;E\=Aa;dlI/i')[`l8-?VKMU2k8`?Le$8uR'cg\WSaFt;ff%<p/V@fs?M*m\0nBEo
%!t&jijo2GC0;%`=aFO,FcH@Rt(X!f*#rR[*j,UOj6[ioI4;baP)'#%0E4+7Pc)06j,[%Vj<)&hXf/Xo5Dd+:7_.3=$WNJT!_,BhJ
%rihNt=F1sKWJj_BRtE2gX$Y=NWuadZLMp@9JiRp8&:*CN,e=67Fo.traB]egf`R^a)P)gtOjCj@\uVhM2BV95gM6\<HirSEiZ?;R
%[@0bW\(7RpB,B;>r[>[fc-^uiV.:F:(cufJHa:GBfj6Ukc$gkoNea9RrEUs]mcC8>Q.I_Gftp2nnC:ti":(b"Q7pd5oPVL$?X>8r
%G`':i,:E_YXj[h@.d&[$1WgL0%F<.^[,[^)Y\@FrWcZqr0%H*-P?*n#mEB(YDFM`45Ag2$RI1pF;d(t<3iB1+e`_XgPu!F'([#eb
%*d=/2F/\-2[D^$erYf'_lbgu:CneK'(UVc'F=s*U,OPG<Xu_s8g1&C-hS49dd#Cbfg%\t%\7/[?2ga%A9\>9:U'$bqC.@L8d<Mgd
%4@lbt;@kdjL0iIm4?P!MfQ#RC:giaSAqGAFREbM7jldi!&_pn>\o,:ag8oB^?!V'K00sLYk:4N]9@)Ghbsf^geHk9+TFHl>,'SgD
%SdBNZK[WGDNE;=lB'I=)g#YY>:3O&=3B!2QKV)3f`G@`tA9efc>gC?LOWYTq\(IaXR_u!piJ6p?V/VZE:JE_BM.hF7h$YkaF,Q#h
%0PZX&<+JYO^$$&=K6QLR`:9C#iG5uFHr`g?3l\$cJq4YUkP'XOlG1H*;n2#HNUVH!O1*m2-sP5'J(6s;_0IljNa.IgBYI-J#^!u]
%4M0%61,$sh%l!pm2u]Cr%bN84@8e8h@!-T$OC9-'%]X/6dJKfqZ6B&B5VBdM_GBH15\W0TrOc@,o:jsIS>g+lF/9\W=CN\*C;ES(
%,WmDU^pjAAGb]?W_!GG%`OGTEr9;*oo-()<haS4p)s?n4AKc_ea8XflPEp$AQ%@D7i<j0ERQc*Yfg#r+P)=dkhTjFd^0^<4k-H^)
%s'<2?-qh#Ae]m_`+;c5bB-IN#]Vr$AJ23(K=D]qQR+!Pf[<ajWKJq>K;r?P[oj<m.na"`QaR8m-QFZE`7jlt_,\X"c$+mpRH\K@m
%rGAkM>NJafp[kRggM3luS:[lPRE28o%Q<HDc;dUG5rZ'HhS\BZ;V)lA=ZMe;.MAdG#?qmdgH)CUR[MFW]a/(F&JKF9qm>5uD6.6X
%2d=qYd#r;Q]&g<8c'plhG!C,8]&&o#&2X&8n32@orI,&'*Ii:#NFl*U">G4U[ieQIABm5(J5MA-FXR'8Yao[(-kc^9>f^QM2dOVA
%p/9/#<<_TUjV$D*_qmLBU:!;@bOs#+j0TR:'=k6hEBKQR43_eeCtjO9+Dd!66H9bn;roQ91L?iEqs)6eKi6rJY[.<6i;#"QCZIAb
%Bl9*=XXO&;EADnYf&!*Q<-EIbGoi4fX[K%Jd#:W'-XY<0M]jQa/iClC*r*%?`)AggMUsKl<d2L"KFr&IjqgU*]Z%&^LW/V'HK5nQ
%aCX7$I-[Y5O6cb\$\^A!F9=_a#-A]gdWslZF63+f]9Vd^p1Yn]X6h"%^3RJSh:\hTK@J*R0uSPB2"Kdi?e5Wp8)q5Hd5W/WXG#V<
%B5]AWjUV;)e<Oi/AYs?]^3re=Mjs'`5'/BmH99iZ5/1:bXth@o%W^V%_=MW5hCN4ogVMFJ/"jtqpLGY\X3;4$`<rQMeiamI0eiYp
%O0*sB=,<_hK`Ut$6ET9U`P^Z`li()=HQ4.&Sk&$KD\/=([g)'DH4Z9-\(O_t:S+eQjkl`MTOIV]RpOdugUF%&.BQ'cIs8"%G))d^
%aDLbLIV?20b6AG,2s>cUU9qF)=1=gLOVij#5,+SpOuEG.>oCRu^f]<?9B=$e%,Ubc/&&^OpGnYiZB!jE-0dak0\j<BGHY*qTnJI[
%:h5B'\tN"YeE<o4R&d#`Z7"I%=m89)iCInt^=Es$r\P#KE-Io;-#.u7h#R/0ogN^#^o.n2>GiV^FDJ_]r=mGdW8CjL71<SEm=c.V
%F.o'7UqQ*uOOgIo.GkT!FSqg3DAD$pTqSB)C>-F\[jh8hR2hokU\c8@Jj9c.-/2UNProL3+f]!`6JE?Pkd]CTf<tqX>b/-Wdt=<T
%Cq';F;guH5dN#:"PUQpnlV@?6Cf9@:'('-CEuI59p'?MuhT71ZR<u,>##oAS&)3q!W#L5`]V7T@VrJe.1]$4LZj$#LE-Xe<FKF'`
%qn]mo;^Wp?*38!3jEDq;$]a$o0f3>uR8@ca"?:c=0.XMY$N,.]$=.9ho=BZom+u[?g[/h(BqS82Q=%jdaNO%OZ]+EH$7<,A]Jh0h
%&k+1nC+!s4]L*4l/DB`5D4@u:<@[moNiF3UeTP30X_/:Crc!OIoPc^-'Y[>!=.Nd$]&iCrX=o4OY'8bbA6tFPhCD[`U2ujO9DuFh
%6]h)V^F1.R&_Ib+[;g=C/Vn`ml):A3SRX"h_'m@9B]QuHcY'TS3Y6Xe>c<$D`[Z8RKF.8`:4\.;,VW-):D<QK335i&U[.3"BJ`X/
%YIl.QE+B,H7<OL/5X0Cl8_0n@eEa05CL,[f*MaSaPneDW<oVjMnoO[&G^IET4&8pF4"X\/BB$1o/$MRPMi]&u^6_.LhmYi[fD:?I
%[W:C@ai3$00R13m5!G-\qL-Kb4R$Tt!][sH$8:ElL@+QGe5!TXW%6Vlj2\%.qnA0n2eh;8]:COC6tsgo>>/2ZacpL,e)r^bLN_\2
%8t%X_^dt%p>/&G>7T7"8qAc(p7(4Y2Ea_TjDO`*/@Bm%dH[je([2C8<nNU@@m("su^-7Mq\:\:^S>U=MZbU6/S-psr/WtKMC=2M[
%XSu3Bd4Nn([[_Crq(-YZ.m!B@\D"V#]CpLY34rGt&U,t$Ho3A?-;h;$$5<%LXn^WW9YPT.$?IDg?Z/2Bon?g@fKSU_!i^jVjSF$C
%^!Ve)[l<c9P6l[/&DQe8EAkbC[[jc2qpkh:VI'ODXCO>R4$LHmC]+_t+h>U7Yl_M2q@G16o\Rs6NFq%uZ5KFhbWOc@Y!D]6n)fja
%<NgERDl0a!aZ_=n4<#9ZHC;&W<0F/q?rQA4?A-C.T+5@<J1Y`/>mIB9^!DB#oQl\VaC,;[1nQ_mM*cNuTtVTbpNF?)%Y4;]/\4$N
%>M6gi9rt_Pg.=LdmsGUcZPt+_+*:=l;&f'pWY)Ffdtd>?c'0(g8/I?$Cu@:Pj4^$\DtY/!E(/,R>=LHs7o_=@6:RB!8QXO<BM9CF
%.+2r9;sk)%^Q9fp$Pdl5Ah-f-IG7G;pUo\Bf>*T'9_"K6o%&K9!3O7JSn!PdK1g@Qp8S8%WFelZ&I?[H)b0r6Lsc2064].&35<&d
%Hhu6p-,k*8APPSsE*m8lGc<C@P]mY2W@NIJe[WaaX;^aNoV>o3#8kpN4=:Jqnd%b]s)od%!T!YAdWE[TVfjEl*q2'o3n`.)GT:X$
%IJV1,]Nq!dU@WL#KjRK)BCWU/F2!8JCS(:S:&CI=r&r<7_\$*4m<*d;`h:q_VL-(#q42pia/A*<T)Q/3n-]J/h*9j`'4+!+\4IG4
%r$mTdd_4L<6\Rh4F,D?Q5#M$d=K`cpE-B\[CY`+_l*<nDnW[U[\?+8P"($_YPdqSl0j&a"`&3QJa8(oaT`Jj#'F.XaW)<5TLP\.2
%l3K+-o_d:=G!3b&Y=OhqXp5af8G+OV7FL`@L\Pkp\(/'(,iZ?Q;T&"mOOnP2r-NAKklX4rH<j=30.m]d2d47')k1,>cf:[N9b2>^
%2pd7-Gt'r5W*K!Pl(!(Idk:3;^Z-=b`I8m7T3ol"*1%U(i59H$:5M^aj#rn1!=$Rul<\<_T]XTWm^DV-\]=h9[Fc!n/e=EL&%;==
%Min5R\Z(mtS(6C[Z/Y\ePNL<<gK%JSYl,q=6+<((Q_/3)k#WB"7d\YS$V%o;'BZ:e:D;p5j:p&u!LFlC]9VA`q3e]&UnMq`7TpqR
%->8g'^dC3mQ72ET?$^\F`]kL&b(:<2rqrlWBMHFaB1-+$4Qr&fUQa^+e\Uke.*H1FC2u`&\Cn!3C8Ul\ipTMe\m,RCOrSn=pTaWF
%'KN#=B9j9>oq\@jLD<qJB!#bhIonDa:Yt:jruB@4ABcMloc'"S=J0Rlb%1qkq\C0#TO@cdB'u+[]BS\""eX#r0a5!"D+L?nBPc)@
%%b%HUVYXq^j:e6kK_MFe0+W$T9-9%=X4E'h@]_]RgR>mLI;fmM+g68k=IKqZLW,"sZW_)QnO(BRn\X@M^BHK\?;Itf+-;cMZbnO*
%grGG4UM?JWmZb<%B)=CHS]NDda*hfscurg7&1.b0CG-spUH(X1Wq/L$;KFoa0&b7P\t_ooU!Fjs-%R%<Rs1]\dp.S"h&!URjk)"W
%s!B0Lc\HHLFT+kWDn&j<o2PBa1m6%"?bYr]Xf7"]JDC`RIf"fhRX[c[1-o:d5DS&Mf[A63!$#/j_mN%XFu\Y)bu?#;gs2DhXgZQV
%K3Heh#q(?MmQ@+".Eaes*`?3g!6sj&B#_jd;=_\Q\%=/gUU^IOQ7]6KG*;[TWUE68SU%o$)o:iQ#FFt_>^U'=Z_rk6kde<F,O=5O
%l2U:o+'rmT2=:'SXKQl^JYNs=;_'5`g`Ma[5W<!u5.EQdiQ(3`s"#G&Vg9;2XBiV+/,F]M?JXchni*e''#/mA&&OD#Fo!oc>!>'c
%5@a=u;V#?)ph,U'0&2f&nBWlgRF!VJ55Y\f@,ouJrVWc%^OeQBB)r*ql]K+4r3:gL<\F-u>%]Vgg-!:<R8e60LuP$`<$`Qq$kM;e
%=JW.R<-@\jIpV*+iQUWUHN8O0i?(EY8r_8LroCC??u2jkR2!`>C/6p@W:t&AOXV#uQ0`[?S;>66HQ-u\)Epq2hM5n"9QEK%Hj?5u
%V:D[Q4L25X4s%nnKJgUo#3on+64'9n+f,_2;^oEVYU-qgMjJqkiU<r[ii7=SXK.'Eh7]'CL6L"SB/aA'#untFTnUK4]W.Am\C%nN
%5f_L,!FWsWK")<(&.klEr!912If'WD<mrP2Z@tr9H\!i*Q]hGc6o<#Dr15N*SjgTrjPBcGij,lQ:M-=b7O&7.lL3&moPSFlj6tfA
%lmEn*f48ZtZ5J/,CF1&92/+t(oS+qZ:f-\kh@lGdI@T-=*p-Gp\;Z1Q&%4fmdh<>B%U(9%P!)b*eT(DG5GG9T@rH%)1seoIFcWu4
%+FaPR0P[0!h$D$;[*3qMS"pa<oXGZG>3A2aRMsLdlu732bER\)ET6c==+g0n$RN^1`<4)ZJ"`FBD)p9Mek3*,RIPrhZ>spfI@p-E
%q6@C@8nOmQIR5$-n^(^d$tG&7j`L(cFE`%>bn^20M"qRb0.;Rg^1b(;?)\gVH+iG]#/iSoH+ePp,95s*\R<75V\O.>m.T8IZ"7__
%Z1HM"+t!$gT("C?2UKp,5Lc0A3trb@lT0J%,E[?OhA-(>QIiU654bpLTosUo""s<9j:p[,odsV0)q\pjG_;E3cb"0:Mg.T*.nT3l
%p%,RMr0Vd$7S;X42d1.fG_OH=Ki]7/<Nka.Xa9+!Q0MBIgIGRme+`4Z`0Z$VO.XR$,KgS0>?BZoDld3`Ab,9aD`$qNmSV9AGJ-rL
%`k,^$S(u^gHW(Hh(N7;X=S6:PhrERG[Jlrq0\?&EO2L"2pS>=mi]Z$("hj)Jp!A%_8i46W_c,^2&oOncfAj=Tmqlu!j1Trq_9AbM
%nb,TH5$tZ=]rqTNdp'Dtb^1kLrDdd<Z?tSJoSOl3b:ai[4'QpthHhh?msQkH]R*/<d_Uh8YW,tZool:(rhRlT&np',Xb9T!_Ff'_
%p:;H<(1Sl#GhR^d<g:(qUD<`D4g5RRl9;B;Xr"QKie+l;PuQd!^QO"/Ah/X4L[C@ja+N/>Y&_Zc0&%2uQ)i;T@HC77L)q#qQ'I]K
%pLU2NJZ`dn6YWBB"V#R$rMPq[\UK@jN7P13hb&@%lLV?qL+h11h>"j4otVrtGIgT?b9<M7.1Ud\YHaNLIee0U9:m6dHj=p?lT;Xk
%mJ+sK0:8s4[M/Ajq1@qH-_nH9/"RO^^1oggn\%N7Qq[!l02i>;d%@8?Y2o:kX6Z7SqJ,5>^Tf9,No*kPmo=#NG^OdDh*(1Q=&WgQ
%IJ#j#KNCr:2p1FIk&=u+-F1%oqA?n0?S-0k*`d'Sa,SX#lYsMj+72SL]Wj1\q:GPRB.%JgnbV:7GZO16WM;jpD>VPl]9X.Gq6g1@
%7:Y`WGUL"ef-9am]9Ue2g2jn!^/fMpWbZN+YNK^">.N\f<f5,9hPsiU,Q:Hqca8t)J*U?enAh#T!-I8Y=0I\`Vmie2^Yn#)n_[^?
%Qi':Gao(h3o&/u6D^,1#3-_dt+5V\&_q!u<3kKiuXN)r&O6apJ*a:kQjX]Z[O1Tc)2pFU;rH[0X?*C5OU%Q^QiQM(r(!"37Jb@h>
%D]hq6D?Ho4D?Y4?oMH`pNSOe65t2%ch7PuApfK'P.S'H$5W^EnJPku_-+KPJQ@mRakWGf7SEpISSqiHdrd/r.4HHj!_:ta7:%5RR
%4UsAo$eS2C]r`e(C[(T?7`>>bgJFNjmi-TYXL3$jY?!S7r4V+0?*F+;;/-mh2d4J(LQ,1"jWP<Het59lhKoRJ%TZ2qoW(drSSb7Y
%TpsNc6)_:K>RS69lB0G,j\g_K2?PVHjJJ/)4PSX$pDu4K_eaBM=!%2rn".hdc17p*g$Fr,2rU$>TbS'@m=rL3<]C[dSA!g5O5%'K
%pf_s-_lo+[Vr:\;Z4S/0mtF:\q/@6LrM=Z_hWSH.OlPcC:#u.]HSn\`^,h(WO1O`Bb)s=W%:<G-U3aeV6rW,uk@eaK,Y.=,Nh3"2
%N_8sBr4+'U!f:b[^@J[b4f+M\N^i1qiOYVp&P<kF,'9MgEU>H1].l_D//T+Go"g'*=;4NLX.CYp,r*p`]*INNdb9%(+\=c]+_eEP
%BhQLGk<%pO,I/t&Wd.<b5Okl!_0!CAX"=#qVj,d`q-6Q6a\Tok>^ec6lYPZ0-U9UA3_G+YcF2kJ7sCXAG.Y"?@b&*@+WJS)6RC79
%(b*Ia[\E,d;JXET1`'-6iOY\pDf07R`^XuEe]$,B24KQee\Yns74knLD=u_po4o;+9\#)0"h.0?qp3<lg@_VudOKn+L,Q-+Z8p1c
%kh?=IIJl-jAGZ7BlqD==a57;4/hS#>p%[<5qQKe97Ad>,]N/*boC_LqXc;K!`R\(5`=([@Dh%)Ug?<H4$TiV".(4HWm_r:C59!7n
%f8$UtqWT8+\N*iSNJbTt[LhpWg[WctF8NUI527dUO2:5XgAU>4Gjd8mZb''@m[P"2jdhb(e`35"OWs73mN2s_GLE=ch6Z.$_qg[V
%;^?qMI^AM#$\qZ_^"p$2dpB2,EkYW!DPm.4rLsmbk4YS?KI3nCo78c;][CNe'AhoM<^JE&1_Z;">s31+^SrO9er,OKqKD0VBj?TY
%alC)h83SEqIEDJ]N1%jgjD71Y-)?a\<.6Yb9%?Q2fBLi?E@%aKcA(SY>U5J]\nNG<rR]MG-L0K*As3![0QZpN9k9\3S\+7bc.aok
%M`-O\=g`C;/`fI>IIC3UB3tu2chiL61[J`RBrucoruMLW%KtfOFc\d/ZjpsmRGEM@7_=,Z=ZG8$9E]udLK>#JeDZn%5<'"1V6crQ
%W\8IY0/T8\)V<Nqj$<$@GeA+tI!lE@R/t123B@K1K=d><(C<lRT&eK:)^gX2LUYa*ke019D'i2ZKr_(mqNd(ccU(gKEL'EW%qdhY
%n*I-^rKtl!::%31qH8o#%kH\bgj>p+IP*L8^@T7Ua78uKk]q:/IB&8[oPAI-,%h&0TUUjC8.Al0U?BDTT)>Hk?L-"PbKeek;*J1V
%?fh$WQ_jV$0%_h%<us^4]s+tO38Y)($M@8uFL=u[p0AsdNjl1ZoC7a>5p=gj<h=NRldNlAl#k7CH+OA0o6>lL-;gsPh;%=3.lW+7
%DWXt_G^@!HK`\O6HL%qc(OBB;ma=m4V7WW18\b!8S$i-q`l[(c@<8JnhoQ!s*lQcOj5F+C5<i,=9=p8$S[.uE[FW!?Hn=r7T=dr3
%belW`cF->@<u:[rVd?(!4gUmJHd6p*CX5^lj6@q2Fd754%#EV1q6gl]%C3nACT8nn?Cr</jl5Q6l*7`7^V2/Ra3X@rn_s:4.<]uc
%?Fm:ET9fa$V9?/n2S+W\b5%b+;!o>G(+\Z^rN1*;('^&Log>t+NWc2)^2opJ[SsHSRXFU2Y2sP=a0er"0%XZ+5-3r<rg.qHf^h#^
%Mf,V9*pm2kg9&2aaW?)>k/Gm%6aM,_JqiNZH<rd_b<L_BDuKOk:<W.9/$8,Z6>I%fqSi/Ok!F"DNQ#XFjgMMMM/VQ=SS'Bue6NS%
%leTdrpt./gKq7(t()ce*%cj*cUU7YhQ\:m4J"D.8mIrs(,O"8qJ)+,]D[q[U"0W]D%cWVKlbUc![Qb2'eI6ZaGK-t3UjjE:%S=N8
%J(ZH2(UMmRTUjOQVV>F3eN28!IT3IW*&SKJb*S%3b?>]>;XB\g]tnut\ZE^@T_P#BFsq-`q;SU.drB`am'j$PWB62NF->Fje^f+K
%G3VfP211Z(YKcm^nWYRN5^rNikRh)RIqscD+*3_^I!f!]kXk$*rrf:-7gs]=\eJY)!R5s%lfp1kg%+X\02S+@Wpg)/YO%b)EM+u[
%\p+;V\c(o^s,?J<%UT:'1sp]r?Io=-&X[:,9^cR$JmjHr4kQpbkT[#L)tZn;,)M3"+/g"BLWFC`a1mYmf,MMSo8&"]eFW/TGUgJD
%a3.ih"$K(P6^KrEkQr=F(Hl/\K2T`;iH7pue^]JW(sE*<77;N)5--5[`)%`_aUuN$'gT&Cd03hIUp.!9d</:e.(5jcW^d_^L`o:p
%_G16]!"dX6TNfAHnYp*^.H=g##a@iXY!b)]-E)bFoDtK`8;nCSXF"oZ$t#"r&AB\*r.<`+<.GP]<5[R#=IK5L0Lb(G8N&s<8Ku^8
%FK!@kl;s&l$HrXHC.(o%c(c1H6rPWJA#]YS/Rmpq_X#@5Waf=f$E>9>:1P(N#Zb_/&c(p`T]cLiFMZn!JAid%W<Rupau!<O+rF9X
%#!>K^#O-uG!XO6/7^J@)L8+0D2(\n0'bR5=_01m>.1no[EA^.34:DdoWdk(:7_Ho*Ph11d'jB+[7Ta4Q,3mO4WYc=JeJNl<;\IH>
%Wkbu]Yuq3:.]3<bDpco<MD&U8=Ab%@8?5Q!jp:[C#?qa>)2H3W^cE#\Ft*lU7I1^(),Ml1'YoSY/%Ds.Tr+o;'GVBMere$]8IRta
%j\Zkf=Or=VoS@%nkS+ocOYIi5W5AV/?U]PM'bSR?(SH`.6@mIu:=u9LbD.UJ#Y'L+A*5O2^nLs&<hMBS_UV+LLmg^>`,l)gLKF<4
%,T4[c!AVYh`dVK,*0#drQkYW3T,EYaODrDPg(AF\<^V`]^o\ZT8C.[F)%a391rHP'N>P$9R03=`^J'I1"6IHR]"q>VPE@Y/=L?q:
%"<>?j0nT!pJ3Yr'B[eR%*fS_q7`ckW)$<Vj:/D@p#R?41,TW`^5sn@u8d\Dq&.Pol'BrYA7#J-5'pp1t8`S6Q22Obhb#-@_Z'p8,
%"l+s<f$Ui=R34a:`,CGB&0ES;9a*^m!["TQ'IBLk!"8qc!Qn@a72[h]WEOts5QXVh&QM+@_burCq!+e+L3+DoNqB#S?(b=4"D([O
%1ml#"!!M2@nA@<8#7*n-(\"TC@-G%-"0d@g&_AY:.mT%S:)9n1,)cZU$F$HGI)oIop]I`%lN%03lrM.cgLUL2+Ti25/.@er1jo:n
%pBhO=TE]NC30lO-$k\i[&3s>!NP]L_H:@T0+@(WKm%[*$TE$qsCbVl_"8fl]L`:oF;7alf`^$5J&l8lHOLgt<!IHj9*e6X>$HNC8
%*k9i,Lgab2'a?2h_'95^[\6kK9%R&o-igdcaROds9h$Q;E;0V-$[%,qiER6U\\Yns.7tN<(qKmI!0VoiC8BAaRY@F;#UHB_W492Q
%:^XKNG)K1"+_$RrcCeB,US/<'i!XnC/.i/p#F5ETAqIjQP^u/fBN0`&UDAC[62=)/.tV/tU[qm/[7)Q.&4X%kR]\U_k/h/.%-GN?
%cZR"7V:7f;8<SpX=pE7P#mgAEk/fI<6l6uh=MTtkd</9&coeBn?lX<u$Hk)[1cPdq/]t#QJWaDp;(nU!,UnIaMMa6L\f0'2W%8XH
%8=2AV6\P\0FF]2!3@\TF-.GC,Q8OYf!BJaseHTh4Bh82kCnPI9WlWGB-?:6Q#ZdD4&.K,8>#9/QA.VuqdLlgQR%qZD)[If_B!M_C
%!"+;n7Udbc"S)Wd'2Z)IBN,e67,f0j/-huLi^=X)FqION<.gF9+pd9[X;G+H,-X$["b]MHU4/@1l2sL*"4<6#f/;4a8am,K/4`@c
%,TJK>81#b#'V[lQ7e)2D<rl#E9!Z;!$480]"k4`DU:R"kA2%8m/rFhC(DK\q6:$?,MC<HU9SWWSkH2n>/pu]%!@j#=@R=WK&HmZ<
%(/9knMlNFF:h0s0MPatgjfchhBL'l.<"QEj=V)ji8g';!"Ho2+05*qp?plYu(]h-O!R+3:2%<7^Z9]$mI1kX42@<NcBUkaSLWh1,
%l68bCmR4Ag,Tn3Hejh)/7c]BDA>#HSH&:G+8-4@;J>eWBe?U"6&Hb!m5qU!Q:GAq^Zl6.u&/p?TX9t+d@lQ1[3(&\/Ts^aR^q,Kk
%JO2jlMcf*I"rUlX1"6O[RMUj5<[HCN@3)0bOKejj8J"HuJW4*Z.N,$qO3#Bb"I26]5XCbli/kDpTt3V6&Vqb6Ma6VamhR1K@`W/>
%TO0Q#4G2]Z89TUdXT@^;gX0-S6/,"j$oFmd2+\UHoaAtIRM.'Pnu?(?JA_ZX)sf/X$J#THRV?DKgnZ1M)%:HbWY9%^]@F^B!_$gB
%BeL#T!?2o2BiK\t,B8S@+Ts\6e-1:&&Ya7T!0%'Yc3UB;/Nc<!W9!#i_IO8qSj6gOo_8MX.&+I$1IMh^%O2XtkYtC"$90f.$1Of]
%Z4dEp#q@kI5Z!:_m/Vbu.0Jabpm"]K&0l`j!`k5rObq#;CQ/[Zl(Dh=m#tt>BG4M^BF`9]0Ma\3,QScO.,&cH0SJ^HcnI)>.M-6E
%=r#H?<[ID.G[4]?W(_>&Ztr85_I.lu6->p7V"4`l;O7FMBNKeRU2Z3Ond:/22?T?p"GK;:TFo;m8*"?G?o??CQ:6s)#4@F*-(ofk
%1T6tl><s36'hL,&F+W6360]/0CSZcs+O\@K,Lh?+N)5V:n<rbU$;*c/6cVlbW"<pG_'M#9@17!2cq,>l!'_m;_3;]Un.CTt'\Qkg
%.&8s*`(VgTd@`,nNGO7LM-qF0I,)`gOCNi+L_2M-6i[9Ka(:WmJsn),9a_EL$!CRk2$BV2M9RbX<]N^;6nUOJYqrm(6`1!MJ-)Z\
%1k4S"Ue%l=R')jO%bs:2Y7HG4JN!iC"XD$pO@2uC0M*;?(]Z;_oS=)je@aSB!T-mG=j*K?;Bm`pXGR>iJR'F^U_%@(N*uh:WCT6Q
%<Pk$QM5$B_<,RdjkRSj(kQ^8X"mmL$kM>F%;G#LcTeelC^a&)\TO\M.3/SK(#)==uQt-5u+mET)ZuQGo10NuQknc`BXGJ'eed+X&
%JJCI9K+4Mo@n(%*!>SiQOh2K%:5g/C;fSfk)(t;&F=Bo^LQ"P,<hPkDl9m4a8s7D4)MRGETfNe,a[1sm'M,eAS9l.oO;^J&<RePW
%9bJ&>/8h)T[StP#"tE%P;'q8.JjeZM/YfqO+M/Su`+9NLElb]0\^ESKe#3>m"ZR2iE<Jpo6U;2)`1\_K0o&+c-op]$"`)BPQlq*8
%n/VWAdYJ\OK[p_-X&oK3W^=WRkX178Z+FGT))=Z4:n[jmKBV@OJeSoe7(Q)Z'oX1oi0MAQl:=Dr_pSSU&dY9P`X>IY*YF)5:I-.S
%W`LB-$+>SIaq+`,5iF'n+i=r!UYe\t'7cO-SifJ@7%L?P'oFdInKXb>+l0,5gltgcO&8lqKS%H?X94X)*!eo#X\qhb2"`h^Bo$n.
%UWOQ)/*JL?k\cb!OCoO7:)0a@"bU<TErbT86CJ'XDCpe!L<`(-'G(CZ"Kr02`))r&`XR$3#qDU=Mrm!d68DmRL:/[cFG8Hn@'=!T
%MG/IQPdh&cZO#5$@krpXkbd`8rWATS^f+K(aljOL^DP:*U.IITEUs_P.U>f@N.PQGMY;DO!9!JeUul*F6'>]M'1NG$#Z;Vc)iBZm
%=QkZS$(ti0/;9r$3-E%.MA^E_6rDuQ9e^k?Y#I)O!3?[U+j<?O0FB9>))suNKW?#F9JdG6)@mD]ZY1%1!Po)F$:P5g:=1b;?3DTQ
%CC6([XHNV0j!14cJUl)\5`ZYU"GRQ*-;i0n6oS8qd&\uNRXid$5dQ$V9Q*s/.96Zl<YSASUM^hRJrP<Y63!E/MYpnE#N.^4Lg_p(
%\cmhQF>WkK/gHe?JhlA8^TLB^oZ>M3,R7Sk3$\hM<'$[+aA\ECW=X/;d6Ie^&%mQ2W.r$WTLb@`WA#rB0g_^6ckSZBR1")/ATZ(W
%Kh0RPW8j%;6]jXVRprLM(Cr-o/n)4+h\=J6f>-7k$m*1%G_aRSa4RbX6UoN4,R>qRJB1'PBVLB5lQ!M2^6FQ'(6M!:`c<s/"?Sa,
%WhT#WnT:E-j?Kl91`QfSPTcfqVSEm"C;X+HisH6*O#$P=6t`0r,SE%d-42cM=r:qO5eEbnM`d0$lT@.$JRo:%.mb+CJP_:,$*-0n
%.;KP@0e2K'a2a"LBNoSa63N?h'U26-0=9`M^k"HTd0^eDOO2A-5Q\_9,ps,!%0epk$AMl/Pfh&Ki,?_J88ETmJB"8n;sjZ\/!N-r
%Ofb;.L-eX&Ik495FneQ@$o$Ko%ao@NKIGb$1(Yi\:IYhG0G6\pTH6QFc78mWcmgiP8u.*$=W+f,1eEfG1bd+IP2?747WBXq6.HBE
%Tk?!?V%7TL-/"/A'Q,[7fSg2e*CFlN!kL(qgS@FGHA9L>T]RuCJ?aHdZ6u"J1!kq)hbVk&'LcQVV$.Zq,Sqe4TL"hO?',1*''=np
%Ti]T^,"EZ<4XiqM^n?\6k6iLrJ/O"E&]9,=R6DJI`P;c^!bIf<:Qfk,XsR6T0iW^!'HY;-,R0VRcbWcJ$9+,uV3tc';^+8"VQ%W7
%9C.=9dP<#-EY1Q].Kt!G)J)Y$\eILd]O-LX(7DHIN(7N2*u'ZHU4C]]Z8^/RPBbG?<HSum*X_Z+.!;ba7SY*Z0#li3n87I&$3iuf
%(s-tWo,5[S#"1)-h11\$d4et,#@q:"0Z&A_,S*FO=@H+1?os4.`WOV%kqI`f&JX<hfa0@UOPIYjP>Gt'1g)"Y+2stSEr-;ufESSp
%n1+2n)!hGeYOdF)JM`"9%1JHK83k=J#pAfWL5)RY`3U;T!6AahGZ861\"fYRAnZ,hBY\'fMSQn:KPI$T,XaS15=;&pJrBu`7#Hhr
%.]4O'&?X/5Sn1/8Q^7s]b2WXS-:T+cF+VK3BaB;[W*,CJ97TjCjEVi)5puoDOBtA;VN[MR&E=@L1m3(gaFcP8E!5aJOED9HefdS^
%li[Lo0Ru\/_$4DL_H0(CGR^V&#hb[aCEP9\_#helD@5"rZUH3m62)Q;j+Smo0hVL)%V=<Ifn=FeGa0nNGrL;D\X6b)5qR+D0efYZ
%<YD6gct(%i/V676P0B4G#\GDm0[P=N4B9AM*o^'DqjGA^-0c`WaV#EM15:5pT.;C=66+#4;2d8Pl?&UY6CfF&1g,fI.@<D_/Mpo2
%&B,,_%0hP.$$.:>1A#6ZK+Q6DokImYQ^]p)9-C)K(V=)G6a%?&j\^%TeTFPITkUB#F;iphAl:kiO,Q1m&?Qk*YS`f9!XUph*=-<]
%Aq\#f1j+C`kWHb;M+:0jUY-'QV[&.sb\n>'QnZ`i0p#7?V:+9Ua_Oq2T-B+tOg<=ho`<j-jkqBR3;AkKT_#*D)I\$!809r:+=$E7
%aE6>t;8<4HJZjk@;#DO3HngGsoAUaiRN["m1W]coU`b5=kY7.Jf%&-@1[?M?8PY3j@tpM)e5nKKN3L3'X-DubGm"?eMejRTkn53c
%'P&!s:Nd)FA;/hc8ee"lc(b='<cc^lTp!J%6P1b:FU`o=mL#gQ#R!,LA2>tmkdnl!BN>Bc'`9Fk49[E(Mh-IF1,s\;J`eaaS8eW4
%#oR>#>#:'C76mm3&4=kOA;Gt#08=WhnW/9A+B&LpP0VO3R`(C/!m5\fbA[gkXY&5"<\@;%,d%/jN9X5'd@g;.ka3#.)p%a\\!O(B
%XK#^EL&tBW7^c]-(e,g^aMNoO'$=.Wj>?-f7K"?L'-Hn0-r[\s"&XjU"9G@@*$f$#CfY>"B6+s>e-m'HkT1;t3]EB_PRqLIK%L)*
%`RH4a,7:[Xjs[6dR6_/D91L184Jm[+K?-t]6JuGWOL@XC8JG,@-RTJE#VZdJ;TH-uF:)IA80-Jm_F2%1X^OBr;l9s80rA&m^cIi=
%ghiAQ[MDI`)[6J6EQ84d5>VQX,L(2$WEY=XRpca_+%7s!6&FO^#0b)\o&e&(#q\n/4W/^dq<OuX2=>3&1K#$"XHR3('S^n?Y`;R)
%O[+F<>#jd?B+.[#.Lo'Mi_UXQ-.^U'$BfpRbV8lYh,;>1^g.^*2oV/pLBX?<0E;\V2EIg+""e$TNa\?CbS/_R:iYA&V$/U-7QG8V
%aACWT#tuR%0M&!<>#:nd'0m6?Q>0GS`PCOlPuBQ_J1sr&3X<cac=?2BRC:V6RG()&"]eFYBl(aR>979&!i'XU5$@A50`6U#7+@?H
%rs3QUneL9L_<b$u)!DEt5"Kr-@%m#*I6KcsNtGpOJRXj;dkqR3"0Q>CO$M)7[-^7R-_\4,R8aD3nBd\_dY7g-$:_hIP#jAC6m49"
%h'Fo)dJal:9@2!?2qh*NMPoXZA5RV4M;hON_[>h]5S-dAN#:qL^1RWH0Z]p<d>(d,hCVZJP6-78A-2"_Ig;4")`jt!$3oCqTOD`%
%-WJL'2)%$=cqr*WB*;\B+aMjC_(ZVX5mH&(Qla3@YGUVHhk?\[(l2_@Znd4ioF#nS&*(fG^/81'P/[lmj'kjU'$!\F:idld%p*1A
%=HFAlL.F%H&2pcl-K/ZlG+_S>of&ME/2A_r.M/N9A9DEKL&<is6UWaH'NFY7V",N@3l]1_4E[Zc7h.-o:^*[j75G1)'*G^DVqA87
%i?R'_6-@_OSdH<I![rb?0qo*9L:3=sDPAO/=F4GW&_9g)Lh=F<2nr2G'b"&L)F+>cJ&/!P1s+sVJ^2%JY"3P\"G--/XFRF-]A3IE
%)@?kP[$c^WU@)S*AMOFWK.rnA23^Fj>`h!F6aIOo4=X%L+i>Ho8"Ipk$9*Vm_b[-Kp0jUaJmhn2nZ!34<)Y7JK9nDLYbB=3"m4Ue
%L*iiAnsg$mDiKBkYff-YO6N&T:$6+,7<]&d-l5F=M&?&O3(@Hd]V:Xgj>Mf>8lJo?/Mr</!2*_4aL!<^1AF*;^@2uH![WRG#+Epn
%b)^Z[M7Z>Y:e("U(%Q8XP6`uZQ66V^g>?:GNXuXD;L2l:E;EFO]+4*]KCUY5;&X<@_9a.[mf0KXCjI[9N[d*!jT!R?947!Uq41YU
%BT.UT#mOLVL7Xj"6)&5gN'[AgC9<<'ch>&r%^T4.3O_a`j[[7L]m!?mY<^>\46MJ]H7rm):ok+<dB&:jr]6b%S;efFpL&ddPAJPO
%$0"0BQWVaA9S5ZYM4_Yj[]e=`]U%0_Vi*X]+>oU:XM-9dPic4m!L^4'c&mZ)K&(8Od[-#^>G)OcXcWi31=5EgdtA^_B5rccjmCDn
%g519Aj0N$W,L4Cp_n'gR"D;$A$T!7e&m.10AD.2*3!W:XI4FjR>_s4qoT(MJCji6JpRFp%ISmWZB6/q'o.EZ]!G03IW*=mP&]ifi
%dBgC4gYna8jJY=#ONSc>#V^)dUpj$Ci$$0U4fn(:2b"DuY8Y3l-?Zk>M`sBm,C@.k<$4bXpY+5qo71SF\Bo:IXsi4lDL'SI=)P)2
%L.HRr/tpVgN=F@u"019G[e\%Z`-\=Cf?BO6_pmbO;0T,0#E,CMH_lI&4XFen[k0t\m:TY:\u?7.)*=)$Wk<)E8+&]X,O]a:E)!\K
%(,C$Jkq21!51o+$hB</JYZCj!(AJOlD]Qq&RAN"mU>&s\/AS(-c6s,s(k.Pe,BW&<ak2n`8TZaOGu>I#Z[_DYqkKE^,QG8@'BZJk
%0,nQ"gCn,IpTpV<eS,gce"P8N4t'J0[ULB^,Tc)-&6()m!AISpZEVdXqnV__U<A>B3*n2YgT_D%=7\BkkpjhTjE#rs*XQngnPqQT
%8K+A!CZ7jke!hU>8Y-A+FsKCY(,DXtYMe.:oh*.Yg&U#^>o2kH8ff)H\sc]Vp%D$T:A18>^)(`DZYu=`eK_uX<VqgQTrdE^naGH(
%MU)M8"Gml,nGM]cH@-M4>8i2/#eIO4-%DsIa(R;MJ>u@,j$f@ZaEd+^nr-X*oCi,^8drae8FoYc?nD"bhUoM"_WZY@C"!mJ0^E5D
%eT"%mJsmj@n-I8I4VNN%hV2+e9jXQ7(C\RbbU<dl^f<1'j#pkTkIXUf0pg!:M4>bA$WR625"!1j9ZOuup8a0:gPHYZ&'D^M<6Is-
%f:ns,BLUc^g]V,&]VF'kF1Ir-h>cr-C=+a`FeLF9^F6j?eXt>Vbm>lm1HLqJ\dH7H6qNsZJO__F-63c6>Js2EXX(=%[B=Ei]N>@E
%_)$s5a2[hhF^KN+NPU'a`?3SAg_cKCimK5XK#F:lE+1LrJ<=Ht>GE*GB\1Jlah!MS!L,.tb-ZjVF6U65mq(]8?Ycgm-h_8A*c3tC
%3Yaar!J%P*%@=^/O(+4_SQO$9lYkSFh4/-M:0?$P>u;j?(,R!$noD]\XiuFH#f"\_g[-BuacAqoT7JOfq1C'fi`B!nV4:?NDH:9`
%kTmTiN]T5b?4mS2?RUV;Q*9UXGGsLjDUJf>7+-n6WL2hPh?4f#R@iq$qr7L9^93EO2T,K@]e;(A&B[7T36WE4'05XA4.Utq:RsN[
%&as,&TB!P9k,Qg0+hdrP"h]#6,*TPB@8A<MS@9M](&QW[rpRfp1gj#SfZQBn95:%V"O3a)13h1V0?Xkibh")t@9^AfXPhEA=t3U,
%g5$665IcOT_Ybl6@1Gj90KF^Fq2gaM0/0&#-hJQ'l&WC+V>tCZYXVE]^aLua[_c=WdFpst#q@C7Gj@pID"^Gc-'b:Ic03j0rdrbt
%,m\,u5g')rG#,g'[OM#;aUW"@#OhB*l*e*`NUjCuS[^jP1Y0$.P\chF8D6ssJcpt78hVtWqfqPpP1OT99#sgs<_,SA\E]"8"P&aP
%=7fS^r8_(X`b.7H0;r08`@Vol[ph`;_$E-"Fu1ng<P0gh=7L6&9el\[5Cg#sPW8Qt?hMCIF_=*8P+R(b_S0qS,HOK@h=fgZdLncF
%bI!chq\n?4ZCthpT3tQ\BO>]*44sZ.J1g25<D>@1]75"[<t@[O>W^>[8428YH7+7MeR,]JjRbp.'0oo-+5f[`\W-5.i<!+RkJ?e+
%'Ddr+ht"C"eY,L3C4h/.X@u/!gZ=:gG>fKEmYcA+"r^0I7`:,nZ+3mG=G9&Gin4@(:hiW;[*]7!#G-O_9i\H3Kq22?!dcdO7>Y3/
%:iJ.*(@:YWK*V)'2aL'`BW1E]"e<[)/k&+C/HcC\_LhXVgm^>mZsa2TVAaX+I/4Tc^Tq+jme`Audr)OrKldj5W3&n#65tY7Ve8\l
%JT`.nIP^Q-_,HP[W*#=mF3%hV-\tNoKtt.7'WXF*VOlk_Lng[+Z963iL'0/DWeJkbS+iRU>>>F5&.FBrW[OLO30:WX^cc=3F:=n;
%f-E&Oi9RI:)\$aAfF'NYfi&)H'8V'70VWt%$<Q#bBP9(ABpuKhL'o.:+P9Jl+LZhG?0gb*c=$qsdaPk0Vu[/'MA]8^ms@1l'tYtI
%T[[n;i7\(*)mlrN3u+Dbi[kL,T#nQ5.Up_\b/*:eMpc;t7&/;Zk.)=4D]uQIchWfZDlkr158!0tB(t3&'J8K`#JGZ-i951:F0@iX
%O@5<p):e,S"neR?X:dR\PM#o:q4!WuY2F7%Rfp73^6-I7*X5H&l*RJAlm.H!oaH!^b8K<A<G4PpA;g<sTi.X/`+=;i7R.*Vn$2oo
%qr\Fpq'R*D?1-2drrjA4%:'L"#M(Y+ZnM9qHrDB$4m,,-\:TL`92Fuk]sbmT$k!Lj'A_`#fL-LqE`NVl%l]P]6T1h!*BgenQ`\Ih
%4t*W@:#sA`T]J3Z0MbN4UnN_t)2biC@&_YRI^9:Jl[oB$eHpb`mWe\SNYZ3X@JQA6oi[*k"n[MOAb?`o?!D%Cb.#pp$!<17?8bZG
%&A!MTT3?>W!F%d,.5mscY/$Vuf9(cg!#cRR+n9J<$N[I`VcGSfHltB8204RZ6OXD57*C-0c8*!UN2/?]f<agq>obT"V;uGkcc_,r
%1^^?:o\qBu:)S>`rFs4HC1ZPN7s1?K;OQUWp\t\L*"KS.UStOmG;=O5!C2@!dadl%"+XppOCdf1$^@PFGV2AmISdob(a'c@V3r,u
%JRLBCgN9hK'8:K:?3AsOOoA/0G5NK[[rb#A"WN>M6U4*)K'8f].9OMU-EqGRgaQ2Z6d?_[mCS1c6V-/Mftp&A5ph@$ENb_/(r4'4
%]I]PgJiRN7Fth81UhiK'o<(Dh;5#8H<9S<6pl^:]6bb^!nFB'TmAKQ%Z61N0^GUOjpdL>s`1!WRfUQALoP6R^54G&N$Va6t8PaqK
%cs9`F#`qj<Z^(V6U1ej&dF]BpH+dAW.g,?!]KN5nd9H\p,uj,^L7ikT<Jf"77^ipA&8EM[.nDR5r4-4K)S2*+7`oJ'H[&O52FD4m
%B\?II'jB,[,]^0YlHnF98InO[Za/.<cD%WMr\"_BLb-a8r5]qikW=NL%+lC(d3XD8W4QX3Tf-oJ=(ZV]3Kt[sbDm#M4<LqOF&I3;
%=B(Q-$HeN:X;$_WpQgn?S6/,Z,t_SDjHF'pVbh5MK`f"E9&]ZHp"`Moe)q(jbHE[;LRj&Ze1?:Hgd/,>a=K='MLH6@UU)Gd>X`98
%]Nuk`"dr"@d-(2CXTnsq$J,iN\f.[*l3s;ZD,X7<%X^hRP09kq$Q=I+Q6XkHaYn%pNK\::lH=q=H!Nio4/mAfoVOIu-O$,0nLZmK
%r@E+&l=9s1K;Isq<bgqskr(h:+G,ONLa"-JT/>,$4L<F?oNVEYf#L%;CK_oU;"\_$rTL^W1UKB806CCb+hBV`Fu[QS`^YsY]Z_e6
%P2g:'(O]oJKr0k58HpLub,A<BT=Z7qH%+tKA_0:SY[q:NSeN-Pb=f(D:=5`#;jl#*#-F-h&3gO[-'1^h/Kk;GA:;5K^3D^e?]a9m
%po:EVhkFaJXAg?0(JF86j-"dZ"jp-0V^:n,KH+N8?U>SN%Mu_<J5Ag^E+I^@B>=^II7N^Tb/7%@.qn,9rb@2gbb.m_X/,#kTW2mP
%$:c<ZDSsjhK/q?V$uSG_Iq(!b'nDjRK1D$[7G/;BD,rOK9r5mZ54-5&WZ1G;l,2=]XYqI*7bM0Z"a&.,=0+/T:YM)^Pf?&__)$Q5
%98$d4KS(G#<ecsnnO2%:^eIG`WIRI;#3ntA#&Z;20Ma_=#p@kj`Ji^V_!77Sfpp<qGLDM59AUQPLsTc6LJforF>Vgp#29Qts2i#8
%<dZT`:,j7O6e<&A3:_rC-SgZSl<6)deep$\"?I:YIIIYO%2$!QZ,sE=S`DpFd8]);Jjqf<*?_^GEkB.lAY%EMmRd>6^GpCEOCZB*
%j!57n*nPolnA/[CHs]^dK;2!]8[@K,m9kgp&>(pl1"`]/aE<eV)"M-mjV.ShXA3l.7s.20s2]LoY,'cIOh@G&`cN#$ng\]%oA@g@
%LS*+)pJ=oRqL9#1k9@]ZG_p9jThgHW[0Uf$5BLMO(tS'bDY2J-OI7SA,c4a*I>\T*fGGg]9@aiRmQIo(e7":,eT%,gXdT<68His"
%oVsfj5\SAN.gdZR^@*`PgAC_61^o.6o=71DqCQ`O*b<i9CUKVKoPg)RQ%RH=71Lq$L*.,9!"9Q@fghY3Q+c9#pL?*6PncnG!Z+:]
%LR5J;+Z@RAD"PW$L1k52-Y!NZDQkAn`JdPbE*R_aqsZLiY]ufDleR,n8&Zh2VK/)qrV>ip\guOA39I\%2!*U=_n6+[Li.]49?94>
%BE"O4eH.-Q.S8-3;M-Kk;A$S(m?lNN=$g?hHrVo#?U]J0AXfb%XoTd?K4"QPV2s\=5Q/^skqE&,e$&d#7[jhCj";'9*(.%Aq5Vf1
%L#Z^6gH)1ODY6*D?p@4UXt+3?,ZEGXK*79AL&>H)/(q=cp%A8P?i822WGRlq#jk*!dSrY50sD3N9'1]J@X-or6IJ6OQ1WmboiQ]!
%X\68j.U!!q/e=^gm4&@.:DF'3;RIU`/W$Ve6C>;Vquce-%pIe_G1l!c7D'<-h7X'VGL>DLCL;5UiL:M1%Z*C-5M.\A?c>=OTCcT1
%[uI<@]]WZ&-'h6oM]3];+$?Q)GBUB&P5Pou>@PpR(6+).1ubLVes?5mJtljhG;;9kooJ/tT+H7X`nbQKL8%`%TZlb6TCdSMZ,hQd
%eBmLPe_WqO?.)7(IKu_N&gigr$Fo6f4:epp/f7d%->[r*ee$IK`LpV<ZTVfdR"P@k;8(_k$187G4]IJ%\F_I*TWGE^]-O;8prrmF
%maD:'Z$PF27_0&F>9Y3uqLQul_,Gf&F%ZOlkp!+kM.S$;IatZY0#baMNfmtR:R/H)%FKaXn2#GM:!,%jbVeXF'ZI"aaX&0f<'o<t
%&[sFu*<FATpgG8FW=A<#H5!JP`rN[bO;;L^Ku1(<E2i[HHMJIb>BXsK;RB$$$O0H?%jd_26OB8/E@N]/lEZ]&V*#L*g!\T9N_PHu
%dr,[Uibg(87d\?)Lq29?M25"`gYj=*6e8"EfQ]BnHU#'*ISTgGa1VKBOEMU2eLhJ"^c;._kXMt1#Ga"r>ljg.Z[j#a0H(+0M8LDf
%,AK+51KH$%#\\!ulrUO#"q?>Cr"oWP:jR]Mq9>o_.9-9eKWcu@;=cj@>p#$&f5>U#InC1)?1JeXI1+sJpPF5FUbNTH:5pak_0BW0
%[Q=Z(DbuKEesUO+gM<P_r0G`RV*BeZOWg91#usk*6GWc?Z:)7sQh[^%4cRWuiFpiBTa2VN8;%mL#[u.QX^QE`FC/`cE_'+8:#@Lq
%I6Ab>#X]ut=hh!l%abHN8I@gGW807^qEYHUCDk!o35/$Lh:!h8![#@@ini)3mUS>(A08n7K,[dBWO[$KZOjlL8R`\[`^?[,Q?*$B
%)o4A?[qm7H8%j1nNR2]7rH^\^qmA0MT`6!5b6%S&EE"rtZf9T16>(h68E,kq1*C.Sq:l#3ZBetjf?7ELejY-\9#"gC=Mhi%<3t's
%Zchpp]B97qL`YNl2>WfDq59c/IU:"-GKnDROF!4Z[VR-tU(sA6TcHsm'?%2<l(d<s4XlnX@PLgM&X:`X<Z[\1O!"O6R1!_l<@-;N
%<M.)t6as-'p#lD_F7SdT>$**D0#>a^rn;Tqpli\+GQdc0*R!C>SnGjfPJOc.>9Ek4.+,Y;#cqoQWLSBj)=k?[meF2#C4ZoF$k3W,
%5KBL*<_WktIWJG?Q)Qn>fU[]Bo7#9)Fs@.KC>Kddh2mVn?VN[l\M9jm5WB[:Ca+gG@A(jKIZDX')$10d]VR)Ed$f'[[Z[[GdP;Zp
%+)l0JDe!1WG1)*KD7M5nfhQ\ch9r'l9:)@G#`6M(r41gueAt^[iY:HU@ban"adaO85`8oX(VibSL(]ZmhNd8\B:rrl+"YR#*"1Lc
%#E%t+TnB\',.H)F`!<JRebS%("T\gHYX,gOCjSOMQ:r00f!aAGoF7^Z*\\H[j4:@;0>^M*96M$D,TnU3Ht]b7Wn6SP^$F_T=g\nM
%X"8[I>4T]''Y+?*kVLVJd\3ItoVC.#nTpj](NLC%jRP=<.$k>h=o_"&3\&*ff4KT\?NqOqGmG2^TmmAiT!$tR4>44qr:i(Eq*DX&
%gd!85ik)8q:Nj+A8LU_`W/M4?VsPMWebmdj'qqXGVd^;90>0WgD^6=`86#7@dt*/a`\J<-E/&9$lV6pedc/o7P+J#m!Z&dIL$HXd
%^V_jXALC%>7'G;dVAK"b@ke,Rlo:nJ>pK3:La>&n9dfc>0-LX!([E'7)IOpM<SMs[0Q<2gqm%T(,5oY\;:>\eq,M&7,I'9!hTbdr
%(J%r4iI(j8UBEi5ja8aRFZu\HU&,^`,rVSDQ4/qDs5Y&uVr>ikZ+1ej_@FbZU4J"FkHkps>Kkp'H!TcIa!BW$<D2q-+tIsjXPR`<
%g#c%<COKfE-Hm92An\1dpJ6R'q<S0aU:K1@Y<`@EWT6G@,/d0=^P8"Ve57Pe;Yne%NbG\#n&9gR>S#isI/cb,VV+k.cGRU/'A)S6
%SYga.2a=cDm<h"M1&[o@$D4O2B^F9u(Am-bGkGl`\1TkMeHMq16Y,dJ,ZMq"fOX[?JY%!^'#Lj*Z*ocUO[<g)k9/4tBLMjhB>``Z
%lk1]h8e/;*Y5h-hG#F!B>1_i!C83-p<5?%PS?<W-1UPgW*J_oU\3c99Fsr9(b6N@3X6^C<M,pXiI%D^D[?O3nTW!*GCI;6$6S%n.
%6e.LngJl23X;KXN0=jV_[l-QVO1-fkU%^MCC1r+TfqXY6a/Kt>9am;N#VhKs3f^&#5NK-9J;oIhciM0Y(-6h"?2/]2f;5'4d6o0r
%o)E7FY*u*ZR)!pEGRDE$-[J9YN"IPMU%!YMVY*H(4l;\RO/X)Ep[YpuF%f$L8uZ!9FX9oVqQ=VHc)'Q?Eg]CLXPgk<E=[dB]+:Hm
%2:_V7-/F`#ZfGoILiP3h%*gl:WjDoOqCXr'Zo]Sf5ZTk).Y+XG1HOG6Qn4maiBDKB08;q7aM^Y<mS6*c)$=lBGBMPcnR*RSaOS<$
%r*JKRUs2$2i$+;f&4)UneU`?q`Fj`:\d('V1.W5Z@9lA8e^IK$B85+Bo]t3G(?tQTiCCt/llY1r.c'1uk.+ZJAan1gq54FFpi*0^
%^5(j-:hkiNg@usfPc&SfKanf((?5_NP9NrKLNa9o`G^?S2,u;71E?4m=M63_4m8<M=:Ria'-7.^8cs1E+ePoUU_GSLM&,@uEf(WA
%5Wj.G@^CD8#HXr1J(fT)pCO0258[N;?2>KZ\k7Xa9J]!e#o6u@DV+m'8R\rG!E"FnT8)`CKceF`1H915fFJi^V<KJ4+EbX'(t6*n
%!k'\8X4i1_]qIl0_Nf<9n:o(_2(#YV2FPnL:iW+j"t-.N$AF&eY_<Eh,[)-``(HOMnY\&([0$D5[1[XsGh8[<V4D$^a6#$M5HIF[
%G6J>.+#[=VY$XV4Jo`+R:fnNfgCu.M>WRhD_A9`OOH)V4m3>l):3_WE3l>GMi/Url0(!@'Sg1$C&kf?Ceg<Igl8LGibP"SY,JF"N
%:fk7d+X)PhL;N\'_VGXE&'A])=2Z^05;0ATiA43B;*9<(KopJIdBR0pL>NdoU"g4WYn<9##]drU?l9;u%8Y(ECC0l13-E'A0nX(F
%1F/S^%8)h3a=.SPH"!34QoR`0(g.LdR!D%TJ=^)A)`^#4bKKFZ+(mXf:(IlF*YPpB6Sb#]-4S.#$b#fIijIh7kC;E#ZG-Ea]UoOG
%%ui@',Dc)$if84H$<=-7r>5M[7n;q=@mo*LX.E_'JK*Z1?Zb"MM>FS62E\67^)n2TWB:nsd.^u$p6gZ9UgAWd*lA!,bF2=`'qr6m
%fTr5uGbira6b]i7A\$Osn8@+;-#3W2%'`mc0F?1%<Hgf_&ngrP]GF[sZ$@)R=]Z&B%FM@=\tcf2.Rd""3uu%.5UE)Ph;8#NOd@LN
%l$"dVm]_4$l*Z56=pTpfB1aZ@-R=6"61Qd:*t1a^G"I&#_l`Zd(S;e^r5p0V'E\8Cr(*NaFag5nE71LA!s@m.'F;@Y*X4_IQZ0tr
%S>G(b;&"@NYOT5LfPgJ#22&;P&a0c[^$1Y?`n>@cUT$q;[ouD*T"=TSa$2s*5#r@2^q(biem)%f1#'3<qWDf1m$Yt\(eGW;L?fA\
%3Qt_V\m:-2bc[e#)W6=$ND#!aCohu;.%mHp?$JH:VSOOMiTA)$2]d)^#oQCmjl%ZhH+G*o"$,QLZQIGK98s@&B:5^;;bcC,;`"ti
%K;bMg%rQVW)!uuteJ0Ed68<]p[3#$,?&KJhMpm4AhMXA0%=(9c2S^BL0G^rGr(ZC`!7M%$lnVJ-*_4K^O?[W+O!+F2LK'$f[4&Su
%C-5t6"WMq5bkTdB:PGVO@&iNO7FQ()$4'n^38Z&F0mRY@&,MPDfXoj@TNesA&8(*OX9*^0KYm2E/rOmpZ__E7!;TaX`nE]BZgt/-
%'.M29@pu`->9#'#/FG^s_67\gak@OFl`#O6(>uW1*W^tG'tl.W4WF`uU4(<udjRRHO)Wesm:j*j[eUpH$9,sdjlk[_JG2VTV8fO>
%qO<WAeW\t)]e3OVL_D1Q<XjD@8b1c]Sg*D<H46=am=5ZcC7_K'=a`e/KM+t6@iS1/1f0X!r?Q%RnCuVV0#baM2LpWs81DbGOA=q#
%7QRedSEWnG4#B;Ap;t4+/h#C@FLJu%;9,]__(lut2XAl`mKt&'0%UeQ<3g3lo$Jaj0.eEsoSKtJn'(;!gX[*&g`U#?Yp"d#^J:+8
%Kp]_:fufEq0hENCacY0!Ad@W[1@7:H(9\a%kS[.e%^=mm%/:U[f1J_Z;>Y,#3mrSb$o?D(<T$o[(/;@P4qJ%5:'GE%4>dS';\')3
%CW+nj)VXd_]SAl?bOJ"\:$AZ-l9\R`E_m-[TV=ki(oCi$HLekHd'^ao)Yh$J0hVLg(=E`]ou4EKE5[T-%/]%T<)JD#:A;?A#suE>
%k,%&]'<S;8?s)/gf"#]q`mhF=Vl@q#&R+--6a\$PZ\!O6&QF*&4Q%11'qgO6Ubj6UR[@)L[j:h7XX=*lN>*u^?&=Q^<@-.)]2SW\
%q%BAWnodN,P4<<_D#$P5r4qH/Eq*C*[,+$I(U'_oV&AD>LBZX@7(X>4&0Mrn6</F='kmgW+B7EL*tuPSbu%:33WYs+DAR?m^/f9A
%Q9Julnp"mM$Dckf/%`1([0H\t!H)FcG;q(1c8@)T!*U*'S>c7a\s=0I%BS3gT6q)-Xa%E`HT[6(?^5e[!]O%n?D>SkQN$;.%25f!
%r.G^)!c(Si2Z(L*AKFA8(tS&Be7l>sE:a&8^\AP`#s:CW3[*gHK=QL?m632JnV@*;[?%+0l--#/[dNm?(8m]FS]e)aO!jPd3/6bp
%+<iTQ)9n'@#,003\:MMf$lDC!ad,>m*pCesXp%6l35`"h4[aJbZ!\UKA(&mOW,sk:7YHM=+l8K4jT=A6^ob<'=2n:JkSf:A2@=ZA
%oUW,pk/W9F5d*]M+?7i-6%2%$p(.p&Su%nDK4UsJj*5=rK8]'I:YqjueI]#G?,3n)Dl[eH.MFBcS3Cqt*cZMEgbiO%$g/ff*bPc*
%/E%5LT)nYBa]qe!iE&'e&BlJ78)VcXOdhKPLLNq;jG\[o/-?*PVZ\Y]ABAYHK75]f[mZ1O?9X*m'd)gN7>@EXoK8M8[!,!]LSF))
%F"!p.M)TNC82bk-2B!9tY41(&.1I$Ka<Q$lT"q*_:)F+hDQqVM'bFro%Z0;%Sns/P5^I20>4cmdV-P8/;OGMA,T<F0h$P;;LY!f_
%MV4DJ^;nY-#K#X2`=^i2<`aSM3j%>fQ'p;\.<M'[<3EGDn\C/"JQZ`,a0$&gVMc%Qm4fT&gjd:QSS2"rM/X][rKT4C`2UO$BQ[Fa
%i%5n=E85%:"\t^VSrKU_PN'VB-9PiG-6`M#UnLeG1e=W2YO;&H+MWsn[[N]XRgSUT-/fX^Gd'dH>KHJJX2csA.o)jV*]TV"62jWd
%i#!9gCDa`hQ#aCj6=>`\n^8l<,F2L]c"Ba0fJoQ3K/.D-(>`mbR6A`X65@LuKmFU_SQ5/V%DiTJ$h/N`DO00[9;:*.Sl%IWF#NKB
%Rh2K;NV(]\<5!-kkqSfb4AMUUECTPWcO!BgY*m[[8sj(F%`o_@R\t01>r$6W?2kMYb!Wajp,:\Y:rEd!'4F^/0&iTsS*ETYV8]Nl
%1?T?;?WL2@9*XHNcg:e3$t&B%R:Am^?l(&#jTQ)f(JJ9-9?@1K)5ne8E]Lb<A:6<uH+?B4@9K#X16d7=@SiDggqB!Y&pPm$Ym.=g
%.=^Ep!U.%#PB.GHQOif)(Ukf+rHO'uoPOG&h]fWp2hX;kPnKAS$AeueP%;Eo&l?=cREVR!0uFN=GlZalNI+Dta?*4Zo;N>uOUbmp
%a7`!$MW]&`]na:U#C?pFO(0j:Aq1nP`#Q6f)l\+=dlO`jdAWIe5+3edme4'ab0PS1s!*Hsj^6oM^\YS<cbK8B^\m["s7uN/GMh5-
%TDc\%^\R_e5CEKLs8M\HTDmn1^]4;J^4,qX\%h%.IJo6(^HVVYLTeJmcen]jp!`C0olpF1KJ1#eiFbCP`S^^_:OhrMenCI/~>
%AI9_PrivateDataEnd
