%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: head.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/19/2018
%%BoundingBox: 0 0 488 407
%%HiResBoundingBox: 0 0 487.0683 406.0336
%%CropBox: 0 0 487.0683 406.0336
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 108 8%%BeginData: 19941 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD45FF7C27F82752A7A8FD78FF52F8F826F8F8F826277DA8FD75FF
%27F827F826F827F804F82751A8FD72FFA8F804F826F826F826F804F8F8F8
%277CFD3AFFFD04A8A7FD04A8FFA8FD2BFF7D26F8270427F8270427F82704
%27F826277DFD31FF7D7D52522727F826F826F804F826F804F8270427277C
%7CA8A8FD24FF7DF826F826F826F826F826F826F826F826F8277DFD2AFFA8
%7D52512626F804F826F826F826F827F826F827F826F826F804F804F82727
%527DA8FD20FFA827F826F827F826F827F826F827F826F827F8F827FD28FF
%7D27F8F8F826F804F826F826F826F826F826F826F826F826F826F826F826
%FD05F82752A8A8FD1DFFA852F8F8F826F826F826F826F826F826F826F8F8
%F87DFD26FF2DF827F8270427F8270427F8270427F8270427F8270427F827
%0427F8270427F827F826F826F82752A8FD1DFF7DF8260427F8270427F827
%F827F8270427F827F852A8FD24FFF826F826F826F826F826F826F826F804
%F826F804F826F826F826F826F826F826F826F826F826F8F8F82752CFFD1B
%FFA8F804F826F826F8262627F826F826F826F826F8277DFD23FF27F827F8
%26F827F826F827F8270427262726272627F827F826F826F826F827F826F8
%27F826F827F826F8040452A8FD1AFFA8F826F826F827F8517C51F826F827
%F826F827F8267DFD22FF26F8F826F826F826F826F826267CA6A7A6A77CA6
%7C7C57585151272DF826F826F804F826F826F826F826F826F8F827A8FD19
%FFA8F804F826F826F851A65826F8F826F826F826F8F852FD21FF52F82704
%27F8270427F827F82626527CCEA7CEA7C9A7CE7C827CA7575127512627F8
%27F827F8270427F8270427F826F852A8FD18FFA8F826F8270426F8A78251
%2627F827F8270427F82652FD20FFA827F8F8F826F826F826F826F804F826
%277CA6C9A6A7A682587C587C262D2651262D2627F826F826F826F826F826
%F826F82652FD18FF7DF826F826F8F8277C262D2627F826F826F826F8F852
%FD21FF7D2727F804F827F826F827F826F826F8517CCEA7A77C827C7C7C58
%2D2D26512D5127512627F827F826F827F826F827F8F826A8FD17FF51F826
%F827F826275127512627F826F827F826F80452FD22FFA87D27F8F804F826
%F826F826F826F8F8267C7C7C577C587C5751262D262D262D262D26270426
%F804F826F826F826F8F8F852A8FD15FF7D04F826F826F826262D262D2627
%F804F826F826F8F852FD24FFA87D2704F8270427F8270427F82604517C82
%7C827C7C51575151275127512D512751272D0427F827F8270427F827F827
%7DFD15FF5204F8270427F8512D5127512727F8270427F827F8267DFD26FF
%7D51F8F8F826F826F826F826F82651827C7C57FD0551272D2627262D262D
%26272627F826F826F826F826F8F852A752522727F827F827275252A7A8FD
%07FFF804F826F804F851262D262D2627F826F826F826F804A8FD27FFA852
%27F826F827F826F827F82627827C7CFD06512626F8272627265127512627
%0426F827F826F827F804F804F826F826F826F826F8F8F827277DA8FD04FF
%7DF826F827F8262651275126512727F827F826F827F827CFFD28FFA852F8
%F8F826F826F826F8F8047C7C7C2D5151512604F826F826F804F827262D26
%2D0426F826F826F826F804F826F826F826F826F826F804FD04F8277DCFFF
%A827F826F826F826262D262D262D2627F826F826F826F852FD2BFF5226F8
%27F8270427F82704587C7C51515127F827F8270427F827F8272651275126
%27F827F8270427F8270427F8270427F8270427F8270427F826F8277DFF7D
%04F8270427F8512D512751272D2727F827F8270427F8A8FD2BFFA751F8F8
%F826F826F826F8517C7C5151F826F826F826F826F826F804F851262D2627
%F826F826F826F826F826F826F826F826F826F826F826F826F8F827A826F8
%F826F8F82651262D262D26272627F826F826F8F8F8FD2DFF7D04F8F827F8
%26F827F8517C7C512DF827F826F827F826F827F8262651272D262D2626F8
%27F826F826F826F827F804F826F826F827F826F827F804F827F826F827F8
%27515127512651272D2627F826F827F8F851FD2EFF27F8F826F826F826F8
%27587C5127F826F826F826F826F826F827262D262D262D2626F82626512D
%5151A67C7C51512627F8F8F826F826F826F804F826F826F826F857512D26
%2D262D26272626F826F826F8F87DFD2EFF7C26F827F8270427F8517C7C51
%27F827F8270427F827F82751582D5127512D5127587C827C837C82A6CEA7
%CEA7CEA67C5127F826F8270427F8270427F8270426277C2D512751272D26
%512627F8270427F851FD2FFF7D27F826F826F826F8517C7C2D26F826F826
%F826F827275151512D2D2651262751827C7C577C587C7CA6A6A7A6A7A6A7
%7C5804F8F826F826F826F826F826F8275151262D262D2627262DF804F826
%F826F8A7FD2FFFA827F826F827F826F8517C7C5126F826F8272651515851
%5151575151265127587C827C827C827C7C58827CA7A6C9FD04A75126F827
%F826F827F826F8272658515127512651272D262DF826F827F80427FD30FF
%A827F826F826F804F8517C7C26FD04F85151512D5151512D512D2D262D51
%515158517C577C587C577C577C7CA7A6A7A6C97C27F826F826F826F826F8
%2651512D2D262D262D26272627F826F826F8F87DFD31FF2DF8270427F827
%047C7C82512726FD04515851515158515127512751515851515158517C57
%7C7C827C827CA682A7A7CEA77CF826F8270427F827F85851582D51275127
%2D26512727F8270427F851FD31FFA827F826F826F826267C587CFD0C5126
%2D262D2D7C577CFD075158577C577C587C58827CA67C51F804F826F826F8
%26FD0451262D262D2627262D2604F826F826F8A8FD31FFA827F827F826F8
%262D827C7C515151575151515751512751272D2DFD057C51515157515151
%57577C7C827C7C58FD047C58F826F827F826F87CFD045127512651272D26
%2D0426F827F8F851FD32FF7DF8F826F826F826517C575851512D5151512D
%512D2D262D2D51517C587CFD04512D5151512D51517C577C587C577C587C
%7C58F8F8F826F82651512651262D262D262D26272627F826F826F826A8FD
%32FF52260427F827F82D7C827C7C5157515151585151275151575158587C
%5758FD04512D5151585151517C7C827C827C827C827C58F826F8272D5127
%5127512D512751272D26512727F8270427F87DFD33FF2704F826F826F87C
%587C7C7CFD065126512D515157FD0851262D26FD06517C7C7C577C587C57
%7C7C7C2D5151512651262D2651262D262D2627262D0404F826F8F827FD33
%FFA8F827F826F82758827C827C82FD045126FD04517C7C7C5157FD065126
%FD045157515151FD047C827C7C7C827C827C822D2D265127512651275126
%51272D2627F826F827F826A8FD32FF2DF8F826F804F87C7C7C577C587C51
%512D512DFD04517C51512D51517C5151262D265151512D5151512D58577C
%577C587C577C587C5857262D262D262D262D262D262D26272626F826F826
%F87DFD31FF7D04F8270427F827A7A758827C827C82585151585151515851
%515158517C7C7C2751275127515158515151585157517C7C827C827C827C
%7C51512751275127512D512751272D26512627F827040451FD30FFA827F8
%26F826F8F851CE7C7C577C587C577CFD0E512D2D262D262D2D5126FD0751
%2D575157517C51512D5151512D51262D2651262D262D26272627F826F826
%F827A8FD2FFF52F827F826F82627C9A6827C7C7C827C7C7C585151515751
%515157FD0651265127512651512D26FD045157FD0B5157FD04512D512751
%27512651272D2627F826F827F8A8FD2EFFA7F804F826F8F8F8A6A6A6577C
%587C577C587C2D5151512D5151512D5151512D51512D262D262D2D512651
%2D5151512D5151512D5151512D5151512D5151512D515151262D262D262D
%2627F826F826F8F87CFD2EFF2726F8270427F87CA7A77C827C827C827C7C
%515751515158515151585151517CFD04512D515158515751585151515851
%575158515751585157515851575158515751512D512751272D2727F827F8
%27F852FD2DFF52F8F826F826F827A6A77C7C577C587C587CFD085126FD15
%5126512D512D512D512D512D5127512D512651272D2651262D262D262D04
%26F826F80427FD2CFFA826F827F826F8277CCEA6827C7C7C827C7CFD0551
%575158FD055157515151575151515751515157515151572D5126512D5127
%512D512651272D2651272D265127512651272D26512727F827F826F827FD
%2CFF52F826F826F8F851C9A67C577C587C577C57512D5151512D51517C2D
%5151512D51517C2D5151512DFD0751272D262726272627262D2627262D26
%27262D262D262D2627262D2627262D2626F826F804F8A8FD2AFFA8F827F8
%27042626A7A7A758827C827C827C7C515851515158515751585151515851
%5851585157FD0451262D2627F8270427F827F827F8270427F82726272627
%2627262D272D265127512751275104270427F8267DFD2AFF27F8F826F826
%F87CA6A77C7C577C587C577CFD08512DFD095127512626F826F8F8F826F8
%26F826F826F826F826F826F826F826F826F826F826F826F826F827262726
%272626F826F826F87DFD29FF7DF8F827F826F851A7A7FD057C827C8257FD
%045157515127512D51515751512D512626F827F826F827F826F827F826F8
%27F826F827F826F827F826F827F826F827F826F827F826F827F826F82704
%26F827F8F852FD29FF27F826F826F8F87CC97C7C577C587C577C57512D51
%51512D512D2D262D5151272DF804F826F826F826F826F826F826F826F826
%F826F826F826F826F826F826F826F826F826F826F826F826F826F804F826
%F826F826F852FD28FFA8F827F827042651CEA6827C827C827C7C58585158
%5151515851512D5151512627F826F8270427F8270427F8270427F827F827
%F827F826F827F827F8270427F8270427F8270427F8270427F8270427F827
%0427F827042651FD28FF2704F826F826F8A6A682587C577C7C572DFD0651
%57FD04512D5126F8F826F826F826F826F826F804FD05F826F826F8272626
%262D0404F826F826F826F826F826F804F826F826F826F826F826F826F826
%F852FD27FFA704F827F826F851A7A75882FD047C51515157515151827C7C
%515751572D27F826F827F826F827F804F8272651507B7BA5A5CDCCCDCCCD
%CCCDCC51F826F827F826F827F82626272626F804F8F8F827F826F827F826
%F82627FD27FF52F826F826F8F87CA7587C577C587CFD04512D512D575782
%51512D515151F826F826F826F8F8F826267B7BCCCCCDCCCDCCCDCCCDCCCD
%CCCDCCA5F826F826F826F826F826F851CCCDA581567B5026F826F826F826
%F826F827FD27FFF826F827042627CE827C7C827C827C7C51515158515151
%7C5858515851575127F827F827F82750A5CCCDCCCDCCCDCCCDCCCDCCCDCC
%CDCCCDCCCD26270427F827F827F8270427F87BCDCDCCCDCDCDCCCDCC7BF8
%270427F82627FD26FF52F8F826F826F87CA682587C577C7C7C2D5151512D
%575758FD0851F826F826F826F851CCCDCCCDCCCDCCCDCCCDCCCDCCCDCCCD
%CCCD51F8F826F826F826F826F826F804F87BCCCDCCCDCCCDCCCD26F8F826
%F826F852FD26FF2DF827F826F827A6A77C827C7C7C825151515751515782
%7C7CFD0551575127F827F826F827F851A5CDCCCDCCCDCCCDCCCDCCCDCCCD
%CCCD7B27F826F827F8262627F826F827F826F851A5CDCCCDCCCD5104F826
%F827F8F87DFD25FFA8F804F826F8F851C97C7C577C587C575151512D512D
%7C587C5151262D26512D512604F826F826F826F8267BCDCCCCABCDCCCCAB
%CDCCCCCCCD7BF8F826F826F826042D2626F826F826F826F8267BCCCCCDA5
%04F826F826F826F827A8FD24FF7DF8F8270427F8A7A7A758827C827C8251
%5151585151517C58582D512D512D5851512627F827F8270427F82757CDCC
%CDCCCDCCCDCCCDCCCD5126F8270427F827262D26512627F8270427F827F8
%0426A5A527F8270427F8270427F82752FD23FF52F826F826F827A6A77C7C
%577C587C57FD055126FD0551262D265151512D2D2626F826F826F826F8F8
%267BA5CDCCCDCCCDA57B26F8F826F826F826F82D2627262D2626F826F826
%F826F8F8F826F826F826F826F826F826F8F826FD22FF0426F826F82651CE
%A6A77C7C7C827C7C5157515126FD04515751512DFD0451572D512627F826
%F827F826F827F8272C7B7B7B2627F826F827F826F827F8272751272D2651
%2626F827F826F827F826F827F826F827F826F827F826F80427FD20FF7DF8
%F826F804F87CA6A77C7C577C577C51512D5151512D5151512D5151512DFD
%0551262D2627F804F826F826F826FD07F826F826F826F804F827262D262D
%2627262D2626F826F826F826F826F826F804F826F826F826F826F8F852FD
%1FFF7DF8270427F827A0C9A6A77C7C7C827C7C5158515151585151515851
%515158517C7C7C515127512D27F8270427F8270427F8270427F8270427F8
%270427F82D2D5127515151275127512627F827F8270427F8270427F82727
%27F8270427F827F826A8FD1EFF52F8F826F8F826A7A6A77C7C587C577CFD
%11517CFD0451262D2627F826F826F826F826F826F826F826F826F826042D
%2651262D2D515151262D262D262D0426F826F826F826F826262DF826F826
%F826F826F827FD1EFF52F826F827F851A6A7A7A758827C7C585851515157
%5151515751575157FD07515751512D512D512627F826F827F826F827F826
%F827F82726512D2D26FD04515751512D51275127512727F827F826042D27
%512627F826F827F826F827F87DFD1DFF27F8F826F8F82DA7A6A77C7C577C
%587C2D5151512DFD0551262D2D5151512D5151512D5151512D51262D2627
%F804F826F804F826F826F827262D262D26FD05512D5151512D51262D262D
%262D262D262D262D2626F826F826F826F826F826F8A8FD1CFF2DF827F827
%F87CA7C9A7A758827C8257575151515851575151F826F8272D5751515157
%515851515158515751512D51262D26272627262D27512D5127512D575158
%515151585157517C515751512D5127512D5127512D51F8270427F827F827
%F827040427FD1CFFF826F826F8F851A7A6A77C7C577C7C572DFD0751F826
%F826F826262D26512DFD09512D51262D2651272D2651262D2651262D26FD
%0A512D262726512D5127512D512D2D26512604F826F826F826F826F826F8
%F87DFD1BFF27F827F826F87CA7A7A6827C7C7C8251515157515151582726
%F827F826F827262D27512D51515851515157FD04512D51262D262D275127
%2D26FD0451575151515751515127F826F827F82727512D5151572D2D2627
%F826F827F8515126F826F827F82DFD1BFFF8F8F826F8F851C9A6A7577C58
%7C575751512D5126515151F804F826F826F826F827262D2651517C2D512D
%5151512D512626F826F82626512D512D5151512D5151512D515127F826F8
%26F826F827262D265151512D2DF826F826F8F876CFF804F826F826F8A8FD
%1AFF27F8270427F87CA7A7A6827C827C82585151572D5127585127F82704
%27F8270427F82D2751275851515158515151585127F8270427F8272D5151
%5851515158515151585151F8270427F8270427F82D2D512D5851582D27F8
%27F82704C9CF7CF827F82704F852FD1AFF27F8F826F8F827A7A6A7587C58
%7C587C51512D2D262D5151F804F826F826F826F804F82D262D26FD0951F8
%26F826F826F82626512DFD09510404F826F826F826F826F82D262D265151
%27F826F826F84BC9CFA726F826F826F827FD1AFF52F826F827F827A6C9A6
%7C58827C7C7C5851512DFD045127F826F827F826F827F826F851272D26FD
%04515751572627F826F827F826F82726512D575151515751572727F826F8
%27F826F827F82604512D512D512626F827F8F851CFCACF2726F826F827F8
%AEFD19FF52F8F826F826F8A6A6A7587C577C587CFD04512D5151512604F8
%26F826F826F826F804F82D262D2651515126515127F826F826F826F826F8
%262627265151512D515126F826F826F804F826F826F804262D262D2626F8
%26F826F87CC9CFCA7CF826F826F8F87DFD19FFA8F827F827F8267CCEA682
%7C827C827C7C51585158FD0451F827F8270427F8270427F827265126512D
%512751275126270427F8270427F827F8272651275151585151F8270427F8
%272627F8270427F827275127510427F827F826A7FFCFCFA727F827F827F8
%7DFD19FFA826F826F826F851A6A77C7C577C587C578258FD05512726F826
%F826F826F826F826F826262D2651262D26512626F826F826F826F826F826
%F826262D265126512604F826F804F8C951F8F826F826F82726272626F826
%F826F87CA1C9C9CF2604F826F8F852FD1AFF2726F826F82726A7A6827C7C
%7C827C7C7C82515151575151F827F826F827F826F827F826F827272D2651
%2751272DF826F827F826F827F826F827F827265127512627F826F827F852
%CAA1F826F827F826F827F826F827F826F827F826F8272727F827F826F87C
%FD1AFF58F826F826F8F851A77C7C587C577C587C575151512D515127F826
%F826F85126F8F826F826F8262627262D262D2626F826F8042652F826F826
%F826F827262D2627F826F826F8262626F826F826F826F804F826F826F826
%F826F826F804F8F8F826F826F8F852FD1AFFA826F827F827F851A7A77C82
%7C827C82575851515158515726270427F82651A7F8270427F827F8272751
%2D512D27F827F827F852CF52F827F82704270451272726270427F8270426
%F8270427F8270427F8270427F8270427F8270427F8270427F8270427F852
%A8FD1AFF2704F826F826F87CA67C587C577C7C572D5151512D515151F826
%F826F827C97CF826F826F826F8272651262DF826F826F8F851CFC951F826
%F826F826F826F804F826F826F826F826F826F826F826F826F826F826F826
%F826F826F826F826F826F826F826F8267DFD19FF7DF827F826F82627A7FD
%057C82575151512D512D575126F827F826F8A7CF51F827F826F827262D26
%512727F827F826F8A7CFCF5226F826F827F826F827F826F827F826F827F8
%26F827F826F827F826F827F826F827F826F827F826F827F826F827F826F8
%0451FD19FF27F826F826F8F851A7577C587C577C5151262D262D2D51F804
%F826F8F851CFA726F826F826F826262D2627F804F826F8262751F804F826
%F826F826F826F826F826F826F826F826F8F8F826F826F827262726272627
%042726270427F826F826F826F826F826F8F827FD18FF7D26F827F827F827
%7CAD7C7C7C827C7C515127512758512DF8270427F852CFCF7C26F827F827
%F82726512727F8270427F826F826F8270427F8270427F8270427F827F826
%F8270427265127515158515751512D5127512D512D51275126272627F827
%0427F82704F827FD18FF27F8F826F826F827A6A77C7C577C575151512D51
%51572604F826F804F8CAC9CF4BF8F826F826F8262627F826F826F826F826
%F826F826F826F826F826F826F8F8F827262726FD045157FD0651262D262D
%26512627262D2627262D2626F826F826F826F8F8FD18FFA8F827F826F827
%F851A7A77C7C7C8251515157FD0451F826F827F826A0CFCFCA2626F826F8
%27F826F827F826F827F826F827F826F827F826F827F826042D2751515751
%575157FD0751575151265127512651272D2651272D26512626F827F826F8
%27F8FD19FF52F826F826F826F851A6A77C7C577C51512D5151512D26F826
%F826F87CCFCFC952F826F826F826F826F826F826F826F826F826F8F8F826
%F82626512DFD05512D5151512D515157515851512D512D2D262D262D262D
%2627262D2627F826F826F826F826F827FD1AFF27F827F8270426F87CA7A7
%7C827C7C5158515151582626F827042627A15227F8270427F8270427F827
%0427F827F827F827F82726512D51517C51575157515151575157517C7C82
%7C827C82575851572D512D512751272D26512727F8270427F8270427F826
%7DFD1AFF7D26F826F826F804F87CA7A77C7C58572DFD04512DF826F826FD
%05F826F826F826F826F826F826F804F826F82626FD07512DFD045158517C
%7C7C577C587C587C577C587CFD0451272D262D262D262D2627F826F826F8
%26F826F82DA8FD1CFF7C04F826F827F826F87CA7A77C827C58515751512D
%27F826F827F826F827F826F827F826F827F826F827262D275151575157FD
%055157517C7C827CA7A7A7A6827C7C7C827C7C7C827C7C51575151265127
%5127512727F827F826F827F8F8F87DFD1FFF27F8F826F826F8F8F87CA6A7
%7C8258572D515151F826F826F826F826F826F826F826F8F8F826262D2651
%51512D5151512DFD04517C577C7CA7A6A7A6A7A6A6577C587C577C587C57
%7C51512D51262D262D262D2626F826F826F826F8F827A8FD21FF2704F827
%0427F827F852A7CEA7A77C7C5151512DF827F8270427F827F827F8270427
%2651515751585151515851515158515757827C82A6CEA7C9A6A7A6A77C82
%7C827C827C827C82FD0451275127512D512627F827F8270427F8267DFD24
%FF26F8F826F826F826F82D7CCEA6A77C7C51512626F826F826F804F826F8
%2726FD0F512D51577C577C7CA7A6A77C82587C587C577C587C577C7C7CFD
%0451262D262D262D2604F826F826F826F8277DFD26FF2604F827F826F827
%F8277CCEA7A77C82587C2627F826F827262D275151575157515151575151
%517CFD065158827C7C7C827C82FD057C827C7C7C827C7C577CFD04512751
%26512D2D0427F826F827F826F852A8FD27FFA804F8F826F826F826F8F827
%A6A6A77C7C587C2D2D26512D5151512D5151512D5151512D51517C587C57
%7C5158577C577C587C577C577C577C577C577C577C515851512D512D2D26
%2D262D262DF804F826F826F826F852FD2BFF27260427F8270427F826267C
%A6CE7C7C7C827C7C5157515151585151515851515158515151FD047C827C
%827C827C827C827C7C577C5158517C5157515751512D512D5127512D5127
%2D0427F8270427F826F87DFD2DFF27F8F826F826F826F826F82651A68282
%577C7C7C515851512DFD0B512DFD045158577C587C587C515751512D5151
%512D5151512751262D262D262D26512627F826F826F826F8F8F8A8FD2FFF
%5204F826F827F826F827F804F8517CA77C827C827C7C587C515751512DFD
%0451575151515751515157577C51575151515751515157FD04512D2D2651
%2751265127512627F826F827F826F82626A8FD31FF7C26F826F826F826F8
%26F804F8042651517C7C7C587C587C512D262D262D262D2651275126512D
%512D5151512D5151512D5151512D51262D262D262D262D262D262D2626F8
%26F826F826F8F827FD34FFA851F8270427F8270427F827F826F827265151
%7C7C827C7C275127512D512751275127512D5127FD045158515751585151
%2D51275127512D512751275127512627F8270427F827F8F851FD37FF7CF8
%F8F826F826F826F826F826F826F8F8F82726512627262D2651262D265126
%2D2651262D262D26512D5151512651262D2651262D2651262D262D2626F8
%26F826F826F826F8F852FD39FFA82726F826F827F826F827F826F827F826
%F826F826F8270427262726272651275126512D5127512751275127512651
%2D5127512751265127270427F826F827F826F827F8277DFD3CFF7D51F8F8
%F826F826F826F826F826F826F826F804F826F804F826F804F826F826F827
%2627262D262D262D262D262D262726272626F826F804F826F826F826F804
%F82DA8FD3FFFA85127F826F8270427F8270427F8270427F8270427F82704
%27F827F827F827F827F82704270427262726272627F8270427F827F827F8
%270427F8270426F87DFD43FFA87D2726F8F8F804F826F826F826F826F826
%F826F826F826F826F826F826F826F826F826F826F804F826F826F826F826
%F826F826F826F826F8F827A8FD47FFA8A852522626F804F804F826F826F8
%27F826F827F826F827F826F827F826F827F826F827F826F827F826F827F8
%26F827F826F826F82758FD4EFFA87D52522727F826FD07F804F804F826F8
%26F826F826F826F826F826F826F826F826F826F826F826F8F8F852A8FD56
%FFA8A87D7D525851522727F826F8F8F826F826F8270427F8270427F82704
%27F827F826F826F82752FD62FFA8A87D7D52522727F804FD05F804FD07F8
%26F82752A8FD6DFFA8A77D7D5252275251522D7C527D7DFDA1FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-19T10:52:07+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-19T10:52:08+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-19T10:52:08+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>216</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA2AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FVk00cMMk0hpHGpdz4BRU4q/Pb8wPzA8wedvMFzquq3MjxPIxsrIsTFb&#xA;xE/BHGn2RRep6k7nMcm0O8u/md+YPlwoNG1+8tYk+zbmUywD/njLzi/4XESIV6/5S/5zA8w2rRwe&#xA;adJh1GHo13Zn6vOB/MY25RufYcMmMiXvPkb84PIHnULHoupKL8irabcj0bkdzRGNHp3MZYZMSBVm&#xA;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&#xA;AAbAADtk1bxV2KuxV2KuxV2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:d7886bab-91ac-7048-a0fb-9440b5348aa7</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:d7886bab-91ac-7048-a0fb-9440b5348aa7</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:170ebbf7-4b79-5343-9e6b-0d3f9d7a2ef3</stRef:instanceID>
            <stRef:documentID>xmp.did:170ebbf7-4b79-5343-9e6b-0d3f9d7a2ef3</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:78ead596-65d4-664f-9311-ff5d6a6a9ec8</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:46:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:170ebbf7-4b79-5343-9e6b-0d3f9d7a2ef3</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:56:13+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d7886bab-91ac-7048-a0fb-9440b5348aa7</stEvt:instanceID>
                  <stEvt:when>2018-02-19T10:52:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>487.068206</stDim:w>
            <stDim:h>406.033547</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -406.034 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 406.034 li
487.068 406.034 li
487.068 0 li
cp
clp
444.154 253.11 mo
437.598 232.563 420.537 217.101 415.66 196.381 cv
411.516 178.768 413.297 160.766 407.908 143.144 cv
395.508 102.621 362.264 81.3593 339.196 49.3129 cv
336.811 45.5736 334.45 41.828 331.853 38.163 cv
318.123 18.7846 286.066 33.7787 298.151 56.101 cv
302.171 63.5287 306.946 70.098 312.067 76.3036 cv
319.778 88.6195 326.086 101.416 330.909 114.762 cv
322.879 106.391 314 98.7567 302.668 93.0658 cv
277.547 80.4467 250.217 78.6224 222.877 83.4203 cv
219.011 84.0985 215.919 86.0346 213.553 88.6347 cv
204.671 81.4613 194.936 75.4569 185.135 70.8881 cv
145.665 52.4872 104.749 27.8226 60.208 27.9877 cv
55.4907 28.0053 51.8378 33.3651 53.0825 37.4423 cv
51.7246 37.3768 50.4033 37.2484 49.0112 37.2445 cv
41.8686 37.225 37.4194 47.6351 44.5454 51.4603 cv
46.8715 52.7084 49.04 54.0194 51.2773 55.3021 cv
59.5102 71.8055 76.309 77.6078 93.2612 83.2206 cv
104.665 91.7572 115.933 100.724 127.986 110.107 cv
132.918 113.947 138.174 117.037 143.512 119.964 cv
133.698 130.011 129.935 141.609 125.01 155.835 cv
117.26 178.223 104.424 198.5 97.5883 221.271 cv
87.0605 256.353 89.4667 292.714 112.018 322.606 cv
160.702 387.14 274.557 399.558 347.956 384.522 cv
384.997 376.933 420.69 358.653 446.028 330.286 cv
472.345 300.825 454.543 285.672 444.154 253.11 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.388235 .427451 .203922 rgb
f
226.543 361.243 mo
199.087 353.783 166.175 341.883 150.258 316.466 cv
145.186 308.37 142.842 299.317 141.105 290.044 cv
141.43 290.1 141.675 290.257 142.03 290.272 cv
151.03 290.63 151.603 276.643 142.587 276.284 cv
141.087 276.223 139.912 276.66 138.885 277.267 cv
137.56 269.404 136.037 261.606 133.083 254.303 cv
136.68 239.711 140.151 225.008 140.878 210.401 cv
140.899 209.955 140.701 209.588 140.496 209.236 cv
143.643 201.931 146.807 194.611 149.905 187.25 cv
150.255 186.706 150.61 186.167 150.951 185.61 cv
156.665 186.433 162.84 183.891 165.705 176.565 cv
168.139 170.336 170.334 164.083 172.508 157.796 cv
173.083 157.547 173.637 157.268 174.249 157.076 cv
184.665 153.796 185.908 142.048 177.955 135.465 cv
170.346 129.165 162.42 123.439 154.28 117.989 cv
153.002 110.287 143.568 102.78 135.138 96.8983 cv
129.584 90.6688 123.498 84.8876 117.212 79.2894 cv
114.948 76.6239 112.761 73.89 110.528 71.1967 cv
111.063 69.8388 111.022 68.2826 109.962 66.6742 cv
108.774 64.8734 107.548 63.2416 106.301 61.682 cv
115.661 57.8549 114.77 40.6796 102.297 40.1796 cv
99.9482 40.3036 97.6733 40.1039 95.4682 39.6097 cv
93.1943 38.7367 90.9223 37.8632 88.6484 36.9896 cv
84.3588 34.8558 80.1489 35.6522 76.9897 37.8383 cv
74.4941 37.6805 71.9946 37.5848 69.4794 37.5463 cv
61.4184 34.0941 52.9868 31.4887 44.3168 32.6415 cv
39.2739 33.3114 38.2734 39.8305 41.083 43.1698 cv
44.0253 46.6644 47.8286 49.3554 51.8686 51.7782 cv
52.8339 53.4784 54.5327 54.8427 57.1557 55.4525 cv
58.3164 55.7235 59.3901 56.1459 60.4946 56.5116 cv
63.1982 57.8656 65.8862 59.1996 68.4448 60.5848 cv
79.0073 68.9779 89.2944 77.6947 99.6113 86.3705 cv
105.306 94.9403 111.185 103.385 117.447 111.541 cv
119.895 117.117 122.509 121.13 127.309 124.932 cv
127.969 125.454 128.637 125.692 129.302 125.99 cv
131.604 128.179 134.2 128.869 136.705 128.687 cv
138.663 130.686 140.621 132.689 142.617 134.648 cv
139.943 135.701 137.341 137.496 135.045 140.268 cv
120.461 157.893 85.9243 205.465 102.789 229.892 cv
98.2109 247.843 97.1396 265.832 103.288 280.336 cv
102.405 281.912 102.075 283.86 102.923 286 cv
109.71 303.113 118.151 319.467 129.836 333.761 cv
139.14 345.142 154.154 363.285 170.098 363.218 cv
173.254 363.205 175.477 361.745 176.955 359.751 cv
180.159 361.365 183.469 362.545 186.861 362.967 cv
198.901 367.618 211.37 370.885 224.562 372.487 cv
231.014 373.27 232.77 362.933 226.543 361.243 cv
cp
.54902 .635294 .364706 rgb
f
339.798 119.405 mo
339.608 118.245 339.143 117.257 338.555 116.366 cv
338.647 110.127 337.488 103.821 335.545 97.599 cv
338.542 86.4266 335.287 73.7489 331.041 63.0746 cv
326.373 51.3368 316.501 31.5067 302.619 28.9808 cv
297.808 28.1058 291.548 32.8495 294.995 38.119 cv
300.087 45.8988 304.839 54.2889 308.708 62.9325 cv
308.393 64.0834 308.342 65.351 308.883 66.7094 cv
315.325 82.8925 317.734 96.9598 317.868 112.549 cv
317.368 112.274 316.87 111.998 316.363 111.73 cv
306.61 106.594 296.333 102.906 286.843 97.1889 cv
284.082 95.5258 280.636 96.3251 278.24 98.2294 cv
277.012 97.8241 275.885 97.9784 274.981 98.5365 cv
269.226 95.2001 262.306 92.8959 258.289 91.6083 cv
248.827 88.5761 238.726 87.745 228.97 89.3168 cv
228.227 89.2196 227.466 89.1171 226.734 89.0233 cv
224.849 88.7797 223.511 89.6283 222.69 90.8724 cv
221.521 91.1957 220.321 91.3617 219.171 91.7587 cv
216.686 92.6156 215.39 94.5145 214.997 96.5375 cv
212.254 98.3148 212.496 103.224 216.558 103.236 cv
217.27 103.238 217.966 103.303 218.672 103.324 cv
219.615 103.617 220.657 103.753 221.903 103.472 cv
221.928 103.465 221.948 103.467 221.973 103.461 cv
232.328 104.198 242.223 106.766 252.254 109.168 cv
257.477 111.596 262.597 114.217 267.381 117.344 cv
277.225 123.782 283.79 136.995 296.318 137.54 cv
297.05 137.572 297.718 137.489 298.337 137.334 cv
299.539 138.468 300.789 139.583 302.16 140.658 cv
304.653 142.61 307.517 142.724 310.072 141.754 cv
316.21 142.944 322.215 142.698 328.317 139.731 cv
336.019 135.985 341.197 128.003 339.798 119.405 cv
cp
f
233.288 163.866 mo
230.288 163.746 230.097 168.409 233.102 168.529 cv
236.102 168.649 236.294 163.986 233.288 163.866 cv
cp
f
229.909 152.505 mo
227.255 152.399 227.086 156.524 229.745 156.63 cv
232.399 156.736 232.567 152.611 229.909 152.505 cv
cp
f
238.898 137.86 mo
237.035 136.072 234.993 134.918 232.459 134.349 cv
226.449 133 227.664 142.787 232.994 140.28 cv
234.702 139.477 236.262 139.319 238.132 139.516 cv
238.967 139.604 239.5 138.441 238.898 137.86 cv
cp
f
222.955 110.706 mo
213.723 110.338 213.135 124.684 222.382 125.053 cv
231.614 125.421 232.202 111.075 222.955 110.706 cv
cp
f
211.722 128.13 mo
206.992 127.941 206.689 135.294 211.429 135.483 cv
216.161 135.671 216.461 128.319 211.722 128.13 cv
cp
f
201.725 162.607 mo
198.725 162.488 198.534 167.15 201.539 167.27 cv
204.539 167.39 204.731 162.727 201.725 162.607 cv
cp
f
179.592 189.147 mo
172.437 188.861 171.982 199.98 179.148 200.266 cv
186.303 200.551 186.757 189.432 179.592 189.147 cv
cp
f
174.606 204.268 mo
173.651 202.808 171.875 202.001 170.086 202.379 cv
166.167 203.209 164.397 207.286 165.179 210.952 cv
166.157 215.533 172.036 217.21 175.412 214.094 cv
178.25 211.473 177.88 206.247 174.606 204.268 cv
cp
f
203.915 227.807 mo
199.644 227.637 199.374 234.272 203.65 234.442 cv
207.921 234.613 208.193 227.977 203.915 227.807 cv
cp
f
216.799 241.044 mo
216.567 241.035 216.553 241.393 216.784 241.402 cv
217.016 241.411 217.03 241.053 216.799 241.044 cv
cp
f
217.42 249.487 mo
216.927 249.467 216.896 250.233 217.39 250.252 cv
217.883 250.272 217.913 249.506 217.42 249.487 cv
cp
f
222.206 255.391 mo
221.618 257.051 221.818 258.084 222.853 259.434 cv
223.195 259.879 223.869 260.017 224.388 259.906 cv
224.531 259.875 224.674 259.844 224.818 259.814 cv
225.097 259.753 225.41 259.505 225.469 259.212 cv
225.64 258.378 225.459 257.295 225.798 256.537 cv
226.768 254.36 223.029 253.07 222.206 255.391 cv
cp
f
388.108 322.74 mo
380.826 314.261 365.218 318.516 351.557 324.119 cv
331.07 325.446 308.12 329.068 295.655 342.149 cv
294.331 342.457 293.323 343.738 293.129 345.112 cv
292.366 346.13 291.589 347.136 290.944 348.256 cv
290.787 348.529 290.732 348.831 290.614 349.118 cv
282.528 347.448 274.294 346.592 266.214 344.511 cv
262.323 343.508 260.402 349.344 264.305 350.496 cv
272.972 353.056 281.782 355.411 290.706 355.286 cv
292.021 358.405 295.071 360.686 298.912 359.524 cv
310.738 355.947 322.624 352.763 334.615 350.008 cv
334.987 350.075 335.311 350.244 335.704 350.257 cv
351.314 350.847 365.554 347.911 379.803 341.586 cv
382.217 340.514 383.631 338.556 384.326 336.331 cv
390.357 334.901 391.867 327.115 388.108 322.74 cv
cp
f
197.313 362.475 mo
191.662 359.119 185.53 356.633 179.522 353.969 cv
179.787 353.25 179.808 352.437 179.423 351.774 cv
173.331 341.293 160.496 336.317 151.02 329.303 cv
141.094 321.955 131.956 313.645 123.034 305.121 cv
120.043 299.901 117.424 294.486 114.878 289.036 cv
113.685 278.921 113.382 268.637 113.944 258.635 cv
114.666 245.789 119.875 231.228 115.432 218.934 cv
115.374 218.778 115.285 218.645 115.218 218.494 cv
117.153 211.723 118.928 204.923 120.364 198.067 cv
122.18 194.598 124.149 191.207 126.083 187.799 cv
131.487 180.337 136.843 172.892 141.772 165.091 cv
146.235 158.025 151.666 151 153.884 142.839 cv
156.515 133.154 142.278 128.553 139.003 138.09 cv
133.36 154.515 122.861 170.208 115.505 186.034 cv
115.244 186.596 115.159 187.118 115.12 187.625 cv
114.671 188.571 114.179 189.496 113.737 190.444 cv
107.657 199.677 103.554 209.94 100.88 220.693 cv
93.7275 230.531 92.7475 243.806 94.9775 257.463 cv
94.9619 257.662 94.8417 257.809 94.8818 258.032 cv
95.0214 258.796 95.3037 259.555 95.4697 260.317 cv
98.1279 273.992 103.72 287.781 109.317 298.611 cv
107.905 300.133 107.434 302.472 109.269 304.55 cv
120.078 316.79 131.032 328.961 143.515 339.537 cv
152.97 347.546 164.447 357.818 177.657 355.661 cv
177.666 355.66 177.674 355.651 177.685 355.649 cv
177.718 355.669 177.72 355.708 177.757 355.727 cv
183.976 358.598 190.121 361.783 196.63 363.926 cv
197.491 364.209 198.108 362.949 197.313 362.475 cv
cp
.807843 .796078 .498039 rgb
f
88.5976 49.7987 mo
87.8725 42.8392 77.0087 44.8139 72.4921 43.5526 cv
63.2436 40.9711 55.7866 36.911 46.018 39.4813 cv
44.0156 40.0087 43.2119 42.2406 43.7407 43.9945 cv
43.5917 45.246 43.9208 46.5219 45.081 47.5438 cv
50.7626 52.5433 56.603 57.3519 62.6953 61.848 cv
68.1113 65.8471 74.5683 70.9222 81.5717 70.9193 cv
84.3911 70.9193 86.645 67.893 85.1337 65.2509 cv
83.2026 61.8759 80.0961 59.4052 76.7744 57.2152 cv
82.3027 57.3676 89.248 56.0551 88.5976 49.7987 cv
cp
f
299.974 108.035 mo
290.661 92.9574 268.354 88.4071 252.18 84.4496 cv
250.16 83.9555 248.528 84.621 247.364 85.7421 cv
246.335 85.4511 245.284 85.1659 244.276 84.8676 cv
238.496 83.1581 235.796 91.7274 241.439 93.7606 cv
257.929 99.705 273.974 108.78 291.279 111.595 cv
291.763 111.674 292.163 111.573 292.478 111.364 cv
294.064 111.664 295.688 111.915 297.49 111.991 cv
299.431 112.072 301.067 109.804 299.974 108.035 cv
cp
f
305.638 23.7059 mo
302.855 18.4789 293.777 21.4799 295.639 27.4594 cv
301.738 47.0414 303.45 69.7997 314.071 87.6483 cv
315.339 89.7787 318.729 89.6835 319.507 87.1571 cv
326.137 65.6107 315.589 42.3954 305.638 23.7059 cv
cp
f
349.313 326.715 mo
344.728 324.71 339.794 326.822 335.297 328.225 cv
330.011 329.875 324.723 331.526 319.437 333.175 cv
313.323 335.083 315.47 344.812 321.72 342.965 cv
327.356 341.3 332.995 339.633 338.633 337.969 cv
343.246 336.605 348.238 335.562 350.956 331.267 cv
352.098 329.462 351.093 327.495 349.313 326.715 cv
cp
f
456.493 300.652 mo
448.075 297.12 437.452 298.146 428.616 298.921 cv
420.842 299.604 415.301 295.139 407.194 296.569 cv
396.503 298.454 393.458 312.179 400.097 319.679 cv
402.127 321.976 404.418 323.727 406.952 325.208 cv
406.977 325.343 407.033 325.482 407.063 325.618 cv
402.811 330.389 398.976 335.388 396.373 340.742 cv
391.626 343.933 386.786 347.045 381.817 350.025 cv
370.467 349.691 358.235 357.887 348.058 361.568 cv
335.384 366.154 322.952 370.573 310 373.536 cv
309.083 373.495 308.16 373.474 307.243 373.438 cv
307.03 373.237 306.934 372.973 306.665 372.806 cv
296.052 366.185 284.304 365.275 272.131 363.732 cv
260.255 362.228 247.547 358.489 235.637 360.661 cv
229.632 361.758 228.545 370.244 233.458 373.362 cv
242.144 378.873 254.164 383.374 266.539 385.453 cv
282.275 389.13 298.259 391.582 314.456 392.162 cv
317.047 392.255 319.704 392.346 322.381 392.411 cv
324.089 395.355 327.179 397.309 331.142 395.963 cv
350.739 389.304 371.018 383.864 390.049 375.702 cv
404.926 369.32 426.827 361.803 434.25 346.136 cv
435.55 343.392 435.995 340.648 435.81 338.076 cv
437.116 336.915 438.41 335.775 439.693 334.648 cv
451.483 337.458 467.127 327.968 466.259 314.602 cv
465.819 307.833 462.734 303.273 456.493 300.652 cv
cp
.258824 .317647 .137255 rgb
f
407.051 269.192 mo
404.777 266.678 400.219 265.62 397.215 267.522 cv
396.385 268.046 395.921 267.858 393.988 268.098 cv
393.815 268.121 393.665 268.213 393.493 268.242 cv
390.338 264.014 386.261 260.259 382.477 256.392 cv
380.922 254.654 379.304 252.955 377.893 251.313 cv
372.049 243.923 360.101 252.684 364.576 260.767 cv
366.262 263.813 368.587 267.032 371.333 269.56 cv
376.728 277.139 382.104 285.397 391.405 287.128 cv
392.651 287.361 393.724 287.174 394.697 286.835 cv
398.106 287.576 401.709 287.224 404.682 285.214 cv
410.171 281.503 411.616 274.237 407.051 269.192 cv
cp
f
328.436 277.732 mo
325.461 277.725 322.24 279.492 319.497 279.308 cv
316.836 279.13 312.972 276.973 310.264 276.062 cv
307.934 273.06 305.24 270.303 301.961 267.925 cv
296.742 264.142 287.756 257.74 281.251 261.615 cv
278.986 262.965 278.247 266.074 280.15 268.104 cv
286.084 274.429 294.651 278.248 299.76 284.926 cv
299.911 285.693 300.198 286.46 300.645 287.211 cv
301.994 289.16 303.005 291.277 303.676 293.558 cv
304.858 299.89 311.371 299.996 314.967 296.589 cv
322.466 299.159 330.535 298.811 335.352 290.981 cv
338.66 285.605 335.124 277.748 328.436 277.732 cv
cp
f
258.552 289.584 mo
259.037 285.149 256.961 280.305 254.727 276.492 cv
250.49 269.255 240.77 270.703 237.71 278.03 cv
237.467 278.612 237.346 279.252 237.127 279.849 cv
232.694 272.778 227.788 266.047 221.399 260.202 cv
215.76 255.039 195.575 238.057 189.567 250.589 cv
188.74 252.309 189.151 254.311 190.614 255.245 cv
190.591 255.249 li
195.494 258.332 199.308 263.772 203.166 267.976 cv
208.129 273.387 213.162 278.857 217.417 284.849 cv
224.055 294.193 227.303 308.923 239.015 312.992 cv
245.579 315.272 252.42 308.02 249.825 301.696 cv
249.883 300.554 249.914 299.355 249.96 298.122 cv
254.168 297.824 258.01 294.539 258.552 289.584 cv
cp
f
413.381 226.545 mo
412.337 218.706 401.487 216.223 396.241 221.28 cv
394.93 222.544 393.49 223.65 392.075 224.788 cv
391.84 224.579 391.643 224.342 391.393 224.145 cv
376.505 212.469 350.364 219.284 337.797 202.089 cv
334.455 197.516 327.228 199.211 324.477 203.267 cv
323.123 205.264 322.083 207.367 321.156 209.512 cv
321.107 209.557 321.058 209.583 321.009 209.627 cv
315.253 214.994 310.247 220.778 304.64 225.891 cv
302.515 225.17 300.03 224.96 297.202 225.499 cv
288.678 227.122 280.694 228.964 271.978 229.766 cv
269.986 229.95 267.902 230.26 265.789 230.561 cv
260.548 227.661 251.95 227.425 247.645 226.049 cv
234.835 221.953 223.655 211.841 210.206 210.182 cv
208.032 209.914 206.74 212.188 207.022 214.035 cv
208.786 225.591 219.63 233.465 229.391 238.516 cv
232.963 240.366 237.06 242.342 241.352 243.918 cv
257.821 258.209 288.972 262.243 306.463 250.17 cv
309.293 248.217 311.11 245.634 312.077 242.877 cv
320.233 239.322 327.656 234.323 333.032 227.412 cv
337.94 232.607 344.207 236.589 351.445 239.751 cv
362.192 244.443 378.691 251.473 389.786 244.928 cv
389.215 251.132 395.111 256.65 401.023 256.885 cv
407.69 257.151 412.547 251.965 413.198 245.645 cv
413.863 239.179 414.239 232.997 413.381 226.545 cv
cp
f
411.04 167.909 mo
410.429 162.352 406.89 156.985 401.853 154.436 cv
401.78 154.08 401.793 153.756 401.695 153.393 cv
395.53 130.252 383.962 106.037 371.789 85.4398 cv
362.219 69.2406 347.437 49.0848 327.883 45.5067 cv
321.477 44.3344 317.181 49.9725 317.854 54.7977 cv
317.842 54.7992 317.831 54.7997 317.817 54.8012 cv
317.856 54.9989 317.942 55.182 317.985 55.3783 cv
318.098 55.8715 318.172 56.3637 318.403 56.8226 cv
322.761 73.8451 338.135 87.1268 345.256 103.362 cv
347.748 109.042 349.904 114.886 352.011 120.755 cv
349.818 120.092 347.603 119.606 345.348 119.624 cv
344.229 119.634 343.267 120.009 342.406 120.531 cv
336.504 120.369 331.264 124.39 331.893 131.031 cv
332.269 134.982 335.539 138.647 339.388 139.787 cv
342.782 141.185 346.205 142.386 349.501 144.046 cv
353.439 146.028 357.542 147.348 361.891 147.104 cv
363.137 150.201 364.318 153.327 365.742 156.338 cv
360.764 157.016 355.775 157.585 350.722 157.63 cv
349.256 157.643 348.031 157.96 346.874 158.343 cv
328.434 157.973 309.093 160.544 292.261 157.439 cv
285.545 156.2 281.995 165.741 288.932 167.871 cv
302.688 172.097 316.946 174.131 331.292 175.015 cv
335.538 175.277 339.793 175.448 344.044 175.691 cv
345.573 177.057 347.419 178.186 349.885 178.612 cv
361.735 180.657 373.191 184.365 385.094 185.609 cv
389.212 187.252 393.693 187.396 398.432 185.636 cv
406.184 182.756 412.017 176.809 411.04 167.909 cv
cp
f
214.817 109.631 mo
215.349 107.008 214.185 104.638 212.145 103.541 cv
212.161 103.528 212.183 103.524 212.197 103.51 cv
215.513 100.448 215.509 96.2772 213.68 92.6771 cv
214.181 90.578 213.946 88.3095 212.799 86.1195 cv
212.674 84.1361 li
212.432 80.2655 209.947 76.8417 205.787 76.6757 cv
205.06 76.6469 204.336 76.8348 203.624 77.0438 cv
198.083 72.8461 191.976 69.5516 185.566 66.8285 cv
185.282 66.6298 185.055 66.4037 184.745 66.2177 cv
163.898 53.7274 137.763 39.3842 112.679 40.8529 cv
104.088 41.3558 102.714 53.432 109.599 55.4691 cv
128.631 68.1322 151.744 75.1283 171.407 87.08 cv
174.845 89.1693 178.264 89.393 181.241 88.4364 cv
186.349 92.431 191.526 96.3124 197.129 99.518 cv
197.916 100.678 198.705 101.828 199.54 103.006 cv
200.497 104.35 201.949 105.022 203.506 105.419 cv
200.136 108.062 197.712 112.202 195.527 115.775 cv
191.942 121.634 189.137 127.938 185.59 133.833 cv
184.736 135.253 186.713 137.117 187.911 135.775 cv
191.217 132.072 194.861 129.039 198.641 126.042 cv
199.009 126.271 199.435 126.443 199.975 126.464 cv
202.175 126.552 203.096 124.484 202.652 122.844 cv
207.204 119.337 213.617 115.574 214.817 109.631 cv
cp
f
253.548 132.804 mo
257.202 130.075 256.427 122.827 250.581 122.594 cv
244.744 122.361 243.38 129.526 246.81 132.537 cv
235.536 135.325 235.855 154.398 249.292 154.934 cv
262.708 155.469 264.582 136.476 253.548 132.804 cv
cp
f
269.632 141.316 mo
263.287 141.063 262.882 150.926 269.239 151.179 cv
275.587 151.432 275.989 141.569 269.632 141.316 cv
cp
f
207.781 154.886 mo
203.165 154.702 202.872 161.875 207.495 162.059 cv
212.111 162.244 212.404 155.07 207.781 154.886 cv
cp
f
193.309 165.484 mo
192.384 165.448 192.327 166.882 193.251 166.919 cv
194.174 166.956 194.233 165.521 193.309 165.484 cv
cp
f
199.34 174.387 mo
191.494 174.074 190.994 186.268 198.853 186.581 cv
206.699 186.894 207.2 174.701 199.34 174.387 cv
cp
f
188.427 207.82 mo
178.965 207.443 178.361 222.148 187.84 222.526 cv
197.302 222.903 197.905 208.198 188.427 207.82 cv
cp
f
161.393 213.078 mo
157.414 212.92 156.2 217.399 157.964 219.89 cv
154.561 220.39 154.505 225.916 158.322 226.068 cv
161.039 226.177 161.998 223.392 161.133 221.495 cv
166.475 221.621 166.798 213.294 161.393 213.078 cv
cp
f
153.906 256.697 mo
145.829 256.374 145.315 268.927 153.406 269.25 cv
161.483 269.573 161.997 257.02 153.906 256.697 cv
cp
f
161.243 296.954 mo
152.819 296.619 152.282 309.709 160.721 310.046 cv
169.143 310.382 169.681 297.291 161.243 296.954 cv
cp
f
458.448 305.186 mo
449.213 304.299 439.831 305.431 430.574 305.983 cv
418.053 307.106 416.982 326.871 429.781 325.851 cv
431.687 325.68 433.562 325.664 435.453 325.565 cv
428.012 332.785 419.192 338.745 411.453 345.836 cv
409.186 347.914 406.987 349.954 404.776 351.994 cv
397.981 354.557 391.364 358.407 385.51 361.393 cv
371.413 368.584 357.469 375.073 341.747 377.823 cv
337.214 378.615 335.756 382.529 336.559 386.036 cv
329.13 386.731 321.585 385.999 314.184 385.335 cv
313.394 385.265 312.713 385.362 312.107 385.55 cv
306.036 379.738 297.523 379.249 289.299 378.01 cv
277.716 376.264 266.265 375.457 254.573 374.846 cv
248.74 374.541 247.124 383.304 252.784 385.007 cv
263.993 388.38 275.04 391.458 286.527 393.756 cv
295.216 395.495 303.301 398.055 311.759 394.837 cv
312.341 395.181 313.006 395.44 313.776 395.558 cv
327.158 397.613 358.741 403.718 364.923 386.252 cv
364.944 386.195 364.92 386.145 364.937 386.087 cv
366.667 385.441 368.351 384.663 370.06 383.958 cv
371.376 386.449 374.327 388.124 377.605 386.52 cv
408.06 371.6 441.319 347.892 462.664 321.415 cv
469.457 317.388 467.201 306.027 458.448 305.186 cv
cp
.231373 .278431 .117647 rgb
f
406.212 171.73 mo
405.46 169.75 403.997 168.573 402.285 167.694 cv
403.91 160.967 402.48 152.985 401.04 145.793 cv
401.401 136.08 397.172 125.503 392.344 115.884 cv
390.622 111.727 388.838 107.618 387.073 103.659 cv
386.482 102.336 385.524 101.542 384.456 101.001 cv
384.384 100.86 384.3 100.708 384.227 100.567 cv
373.618 80.2064 361.241 64.6737 344.682 49.0722 cv
340.035 44.6928 331.952 49.6674 335.247 55.7694 cv
345.079 73.9847 354.686 92.8353 363.585 111.553 cv
368.793 122.505 371.992 137.39 378.957 148.264 cv
379.278 154.104 379.922 159.913 381.296 165.665 cv
362.311 164.842 343.216 164.788 324.285 163.227 cv
316.956 162.622 314.607 174.562 322 176.19 cv
345.878 181.446 375.402 190.108 399.914 185.599 cv
406.649 184.36 408.276 177.169 406.212 171.73 cv
cp
f
402.886 219.243 mo
384.957 220.103 369.312 222.275 352.696 213.544 cv
349.704 211.972 346.908 213.014 345.264 214.969 cv
339.107 211.414 333.426 206.375 327.764 202.536 cv
326.124 201.425 324.311 201.664 322.901 202.58 cv
321.171 202.745 319.398 203.57 317.886 205.422 cv
315.067 208.872 312.164 211.907 309.081 214.666 cv
301.996 216.939 295.563 222.986 288.103 225.024 cv
279.087 227.486 270.091 227.959 261.029 227.28 cv
258.057 226.179 255.003 225.144 251.756 224.094 cv
244.169 221.642 234.83 216.499 226.942 219.495 cv
226.022 219.844 225.617 221.107 225.81 221.986 cv
227.692 230.48 238.415 234.606 245.613 237.808 cv
255.766 242.325 265.337 245.131 276.062 241.59 cv
277.297 241.183 278.223 239.926 278.298 238.652 cv
284.689 238.697 290.993 237.991 296.894 236.059 cv
302.889 234.096 310.477 230.32 314.043 224.677 cv
318.995 222.038 323.558 218.819 327.409 215.002 cv
332.058 219.509 336.894 224.039 342.318 227.225 cv
345.719 229.221 353.336 232.059 358.073 230.297 cv
372.431 237.599 389.387 241.705 404.536 236.642 cv
413.201 233.747 413.599 218.729 402.886 219.243 cv
cp
f
313.05 277.848 mo
308.582 273.853 302.768 268.856 296.568 268.405 cv
292.77 268.127 290.88 271.647 291.199 274.898 cv
291.756 280.546 297.059 286.212 300.736 290.248 cv
304.97 294.897 312.911 301.266 318.559 294.772 cv
323.761 288.79 317.505 281.831 313.05 277.848 cv
cp
f
259.979 301.776 mo
259.263 295.816 250.583 294.928 247.569 299.461 cv
246.743 300.058 246.126 300.928 245.846 302.053 cv
245.047 302.229 244.279 302.587 243.643 303.332 cv
243.566 303.421 243.52 303.505 243.447 303.594 cv
242.974 303.274 242.496 302.965 242.059 302.569 cv
240.636 301.277 239.438 299.793 238.255 298.294 cv
239.407 290.615 233.765 282.724 229.093 276.891 cv
222.563 268.735 214.287 260.591 204.429 256.778 cv
198.538 254.499 193.012 261.691 195.928 266.967 cv
200.502 275.239 207.665 282.159 213.686 289.385 cv
217.893 294.436 223.041 301.834 229.797 303.754 cv
230.786 306.708 231.558 309.727 232.87 312.61 cv
235.15 317.617 240.031 322.348 245.913 321.947 cv
250.133 321.66 254.16 318.256 254.232 314.15 cv
254.355 314.103 254.474 314.052 254.594 313.998 cv
257.104 313.769 259.446 312.337 259.94 309.654 cv
260.453 306.855 260.315 304.57 259.979 301.776 cv
cp
f
396.484 274.211 mo
393.201 273.292 389.749 272.864 386.352 272.675 cv
382.497 272.46 379.517 277.837 382.665 280.654 cv
384.335 282.145 385.745 283.718 387.022 285.554 cv
390.153 290.056 396.247 291.512 400.123 286.883 cv
403.586 282.746 401.957 275.745 396.484 274.211 cv
cp
f
206.22 75.7181 mo
197.749 68.7689 187.91 63.3612 177.738 58.9926 cv
164.512 44.4867 143.037 35.5482 124.572 38.2499 cv
118.877 39.0839 118.328 48.6845 124.11 49.8358 cv
141.84 53.368 157.069 72.7567 175.129 74.7186 cv
182.77 79.224 189.978 84.328 197.208 89.8124 cv
205.913 96.4144 214.356 82.3939 206.22 75.7181 cv
cp
f
319.192 188.699 mo
318.258 183.127 313.007 180.103 307.944 179.404 cv
296.967 177.888 285.088 183.131 273.989 183.045 cv
261.532 182.951 250.47 183.427 239.56 190.234 cv
239.084 190.531 238.711 190.868 238.287 191.186 cv
229.54 191.369 223.59 201.56 227.512 209.89 cv
236.394 228.74 263.235 233.099 281.288 227.053 cv
291.974 223.474 300.059 215.593 308.564 208.525 cv
315.474 202.784 320.81 198.339 319.192 188.699 cv
cp
.996078 1 .207843 rgb
f
404.317 192.833 mo
400.711 187.527 395.867 186.459 389.905 185.645 cv
379.212 184.186 365.72 177.141 356.718 185.924 cv
356.188 185.902 355.696 185.804 355.149 185.816 cv
348.471 185.971 343.525 192.695 346.868 199 cv
352.227 209.112 363.605 216.017 373.576 221.07 cv
385.418 227.071 397.396 221.634 403.822 210.687 cv
407.17 204.982 408.237 198.605 404.317 192.833 cv
cp
f
223.483 307.921 mo
222.604 303.317 219.867 299.228 217.65 295.194 cv
215.321 290.951 213.585 287.132 209.237 284.509 cv
207.021 283.173 204.423 282.809 201.989 283.23 cv
197.789 279.038 188.492 280.365 187.263 286.82 cv
184.773 299.896 192.804 311.058 195.769 323.498 cv
197.212 329.548 204.584 333.384 210.214 330.058 cv
218.475 325.178 225.511 318.538 223.483 307.921 cv
cp
1 .894118 .721569 rgb
f
279.869 280.991 mo
277.05 280.961 273.928 282.253 272.498 284.836 cv
271.848 286.013 271.589 287.132 271.481 288.258 cv
268.532 293.054 267.163 299.236 269.018 304.546 cv
271.694 312.202 280.497 315.533 287.58 311.525 cv
300.426 304.257 294.649 281.143 279.869 280.991 cv
cp
f
356.141 266.649 mo
353.932 266.857 352.025 267.489 350.404 268.431 cv
347.729 269.072 345.284 270.663 343.598 273.479 cv
341.427 277.108 340.036 281.135 341.002 285.415 cv
342.097 290.251 345.747 295.17 350.771 296.527 cv
361.284 299.365 371.249 291.842 371.341 280.925 cv
371.409 272.555 364.611 265.853 356.141 266.649 cv
cp
f
450.785 265.526 mo
447.729 263.572 444.41 263.096 441.281 263.688 cv
441.29 263.123 441.267 262.58 441.299 261.999 cv
441.594 256.949 442.604 252.558 438.768 248.403 cv
434.796 244.104 427.521 244.072 423.287 247.982 cv
419.842 251.161 417.261 256.121 415.088 260.224 cv
409.161 271.412 411.649 286.108 423.375 292.537 cv
434.652 298.721 447.836 294.764 454.93 284.369 cv
459.085 278.284 456.855 269.41 450.785 265.526 cv
cp
f
220.184 318.71 mo
215.875 320.002 211.56 321.295 207.275 322.589 cv
206.29 322.089 205.239 321.768 204.173 321.542 cv
201.104 309.162 198.199 296.746 195.523 284.282 cv
205.02 295.241 213.327 307.677 220.184 318.71 cv
cp
289.128 299.313 mo
284.224 300.553 279.325 301.824 274.437 303.134 cv
275.4 297.025 276.402 290.923 277.497 284.838 cv
278.233 285.631 278.867 286.313 279.21 286.668 cv
282.975 290.561 286.324 294.705 289.128 299.313 cv
cp
362.027 284.746 mo
358.481 285.233 354.937 285.751 351.393 286.315 cv
352.009 284.613 352.595 282.902 353.297 281.229 cv
354.105 279.3 355.022 277.413 355.956 275.538 cv
358.259 278.425 360.27 281.611 362.027 284.746 cv
cp
314.281 189.837 mo
308.149 205.912 294.534 219.522 276.731 222.437 cv
259.389 225.276 243.983 212.453 231.541 201.073 cv
258.196 191.259 286.104 188.851 314.281 189.837 cv
cp
398.768 198.507 mo
396.737 202.814 390.59 215.658 385.572 216.939 cv
385.742 216.897 376.587 213.059 375.419 212.37 cv
367.406 207.642 359.252 200.879 353.738 192.92 cv
368.869 194.614 383.927 196.675 398.768 198.507 cv
cp
394.659 361.545 mo
351.848 392.488 302.029 380.179 253.12 374.795 cv
197.414 368.663 154.327 355.198 119.841 308.689 cv
77.4291 251.489 113.044 191.236 146.936 140.631 cv
149.523 136.767 149.431 132.82 147.838 129.601 cv
148.336 127.389 148.026 124.894 146.425 122.254 cv
122.234 82.3807 85.3564 59.2899 43.9658 42.6766 cv
101.57 36.1674 157.523 51.5697 205.065 87.7489 cv
206.994 89.2157 208.95 89.8783 210.833 90.0209 cv
212.906 91.2255 215.505 91.7001 218.619 90.8895 cv
255.139 81.3705 290.256 95.5267 314.745 123.328 cv
319.937 129.222 332.333 128.674 334.349 119.751 cv
339.09 98.7601 327.598 77.2167 318.389 58.643 cv
314.168 50.1254 309.302 42.1722 303.704 34.8666 cv
359.337 60.9794 394.362 113.507 401.128 175.688 cv
337.584 167.976 272.181 157.28 211.745 184.253 cv
204.893 187.311 204.069 194.132 206.664 199.342 cv
204.571 202.874 204.625 207.294 208.711 211.042 cv
227.827 228.571 252.624 251.401 281.034 245.008 cv
305.155 239.579 323.043 225.196 333.217 203.627 cv
343.467 219.933 362.231 234.977 379.989 239.211 cv
391.986 242.072 401.314 235.48 408.483 226.388 cv
409.875 228.15 411.255 229.929 412.721 231.606 cv
406.5 247.466 399.642 264.199 399.571 280.899 cv
394.957 281.159 390.39 281.521 385.914 281.946 cv
385.713 280.752 385.352 279.523 384.654 278.25 cv
378.194 266.472 365.811 243.448 349.194 249.564 cv
342.313 252.095 339.076 258.325 335.909 264.517 cv
331.799 272.557 328.604 280.85 326.254 289.571 cv
326.131 290.023 326.106 290.451 326.034 290.891 cv
321.355 291.842 316.678 292.837 312.008 293.882 cv
311.764 292.898 311.418 291.896 310.835 290.862 cv
305.811 281.959 299.59 274.34 292.166 267.326 cv
286.152 261.642 279.416 253.396 270.425 253.57 cv
263.595 253.702 259.48 257.611 258.142 264.207 cv
255.069 279.368 252.446 294.599 250.187 309.901 cv
247.717 310.609 245.24 311.307 242.776 312.025 cv
242.596 311.66 242.473 311.302 242.246 310.934 cv
227.666 287.273 208.636 258.138 184.068 243.872 cv
175.672 238.997 164.266 245.012 166.204 255.444 cv
171.282 282.758 177.284 309.849 184.215 336.751 cv
184.887 339.362 186.205 341.34 187.87 342.763 cv
191.028 346.87 197.365 349.178 202.05 346.362 cv
202.62 346.018 203.192 345.674 203.764 345.33 cv
205.657 346.113 207.952 346.253 210.599 345.454 cv
248.518 334.005 286.986 323.664 325.636 314.983 cv
358.588 307.582 423.563 291.031 457.47 311.925 cv
435.33 326.956 416.492 345.764 394.659 361.545 cv
cp
429.832 250.721 mo
431.451 252.725 432.955 254.793 434.371 256.917 cv
437.384 263.519 439.824 270.41 441.393 277.776 cv
441.736 279.392 442.355 280.741 443.126 281.902 cv
443.153 282.329 443.227 282.725 443.244 283.159 cv
436.532 281.798 429.59 281.046 422.584 280.707 cv
423.007 270.68 426.094 260.581 429.832 250.721 cv
cp
486.821 313.293 mo
487.5 310.335 486.849 307.078 484.025 304.12 cv
478.659 298.499 472.521 294.141 465.864 290.762 cv
466.097 289.871 466.257 288.919 466.276 287.86 cv
466.554 272.406 463.175 257.631 454.984 244.403 cv
453.619 242.2 452.07 240.15 450.452 238.158 cv
446.398 230.946 441.816 224.006 436.286 217.615 cv
433.929 214.891 430.683 213.696 427.47 213.724 cv
425.916 211.806 424.43 209.838 423.116 207.729 cv
424.456 206.086 425.293 203.88 425.314 201.075 cv
425.977 105.831 369.358 21.6415 273.926 .319221 cv
264.492 -1.78918 257.91 6.96864 258.699 14.0678 cv
256.397 18.5975 256.851 24.2753 262.447 27.7826 cv
277.22 37.0443 287.64 49.6088 295.872 64.9047 cv
298.491 69.7719 302.872 77.5585 306.56 85.7509 cv
280.432 67.9721 248.674 60.2221 216.681 67.7997 cv
156.552 22.7377 81.8671 7.47303 8.81245 25.5892 cv
.507758 27.6483 -1.523 36.1278 1.03608 42.182 cv
.266547 47.0189 2.26801 52.1513 8.30805 54.1527 cv
54.0283 69.3075 99.1894 88.9647 125.344 131.615 cv
96.3359 175.21 66.0595 226.135 79.8608 280.399 cv
91.0087 324.227 135.794 369.585 178.081 384.838 cv
205.608 394.766 235.831 396.008 264.689 399.158 cv
295.364 402.503 328.671 409.933 359.39 403.489 cv
408.518 393.185 438.819 347.699 480.862 324.207 cv
485.421 321.66 487.089 317.404 486.821 313.293 cv
cp
.0941176 .109804 .0352941 rgb
f
179.264 91.6029 mo
181.525 85.2221 177.886 79.6444 172.273 76.9398 cv
162.597 72.2748 152.56 69.3925 141.991 67.5609 cv
132.268 65.8768 125.942 79.5565 132.393 86.4345 cv
137.728 92.1215 142.596 98.1386 147.044 104.542 cv
150.587 109.641 158.81 109.642 163.235 105.909 cv
165.437 104.051 166.601 101.734 166.992 99.2997 cv
172.074 100.058 177.616 96.2533 179.264 91.6029 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (head.eps)
%%CreationDate: 2/19/2018 10:52 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQBLVPpQ94!<9t4@_eSiWm6FEGkkZNi&j0:YhOckSnXlQ&88'pF.+9VMNZ`clgJ.qmtcqHPG_N1\9kfBPq5s9SBT'qL`QAt
%p*5(\Zbrgc?[hVEjgU"Hs8'ppkH:W:k@KN4?ek)@0]jaTrTn1sp%e(FIor<Zn+)PB:(DK#b?:tbmX2hCEnOa?@DoRO=3l?nmf)=;
%04)D>G5oGja&ap#^&HuW]Am7j^>/\\l*p6*e(n+"04)<fbO4lZl*Gl%C\GLQ?XKD>\A,\&rS>p]]6H9=EVu7As5OW1Q#qQ6fq,qW
%olnjVjo(Z-1-Fe?VuQ,X^H2"rPZAhis6&:sJ,B/!2m8jfH2d*js7camh>]NNf3dBas&;4Ec@3<FEr90+gn!m5o^p0?DtKX5q(2@7
%bqF8(ir@a2mX)>=^oO3baReu=%];g7%JBMOiST%:ol'W]n&F1Zp\Eg,'COiPKK/=q+<PsB^g5ar/O/D@0nXtcs6fb#:Z'rK&Z9^e
%Mj#G\PJ<St]rkT)A[35cmQM&'`Ha,3G1#34P[nUZF>jXXmlhi,],O*-G1jP%pHLgUs3!'>s7QBU2tsLmM>+42I/3\ia\kkoh$l+9
%h)*2VO(5C-IfJGdqq(lCo(a5me]>1nlh&q5hqYu.=dV:^]QhSamj<VcgDPKcqYJtD2aYHd?MoUjqW0=?os9/Cn[m[@rTcV&db.?D
%p\k'65J6i2*:i91R)Z`L9A[3)^J$popFbgf,]d>J<#8QCN:Z_f>^G]XSY<*1PD")V64!:/YFg=Ar8fTT(jDTbS$Vb[Y?jHnAgV)W
%h5pX]latr#QhkQoQ8s3]k5Jq?%-PAhrjLPq_qf7G[!V`0cTcmQa-TSo@h-1o4ldXXq*DI/bL=p!:SkahaiSl-lgF8o2toPXVh9AV
%,Q<`9s-J?;O2os8NqbVppiIMGkr@t+QO>Iub@8D(1#fAREE\;\/]Pu1G$56u.0\lKq;UM4i3ZC$)LfU(3:1t/Bu_GN4Wa.8nVD6=
%(OUP>`5p+T(S#HTkX@OG*O:\rn#;r=de`cq4b+V6%F9b.E>kFL5-99gLVj'N#7lOgq<W5boO9p!rl8Aj./]./FL&8h4;@eXZf;iY
%j10,1SPpO0:;`jcJ"1SjTWP@0#HoqcF/`)ls7K9<H@5c6^5btWcb\50Wi,%s:;\mIIrqLpWDB[hftu\aS;([X/$2aF(ZQD'5Q8M%
%.NRGs)a'SY5>K*PidY6-,o<+W*<GS2Bn:o?PZ3uELT#9Tdrb0Gh!!5Q"*!`j1qg6h?'e8]WF%Ui%p3N[&'2rean9.+,Q>_t9'^^k
%SJSsVs5P(]TNkg&]^@&95.u_LH6q`H1mRJgGU44RMRlCEg?S%jpiPrsc8p4jHsN-9HocYF<q!6JCBs^HIbEY%UFKj@g?SlU(DhNL
%.F5V5YE@#om[a)TSZI)Y.&GNY0N0/KT;egXr->^9>gKI%1"GOLjn"_diRT1(4);l_WH/0VnC(L9ZS1e?U\Ug:9p>Q>s3r^449TMi
%J*L*-qY0nd^N.o?F)H3Jp9ifD8+TOT3ZRe\q58\`jen;#bs1meI+H'qTDCFP0B;Y+6i=.RX+/a9oI$6X:WFnh:@`g)8"VEeVr7;`
%T.d+,0:1TM=kY)!a%r>UM4XrXXr$:.pc2%7_!r+g\]@Q`Mt8n,`kfjInT#QB17$BCmINO+:L8;:#8tu^],i<4eblc1SO8Q8*)98,
%i.Ld'N@E0If<M"Ogf?%'8%Bl41Z?dD+?.&\,JV:_E&m@JjSn]G)>cGYa.[#4M)2=kkm-j)Fhu'nrdXL,1G9E*lCr+Ms1rX?XO@_s
%XZ6XSKMgrJ5C>I-mZKRFZMFF?#._!,gHRuoX/:@*0HqNuY0"]FlT8FY?A+#[GjluJGFL@YpY^bmSD8Zhl'eV<Kf9<-(f_S(Lj$JC
%8s42n?Hl#bI\Z_LBpaXsVJNF\lRrSt*J:DB[qF<N3B5]fqNTUX/nZ0u;0[Y>j#:inkq<5)="$</DU[C0:>Cf'/"9HbX<NCH4T[16
%N6WjWlM(1-BRH%]F?H/hM;JJ$dnr:kmZWUYJJ[R8p<78GP-GX]bM<ll;u*t"=gg=,m](o\6+.6823%I:`p<=qL<(6t5-mqZHqUrS
%OZ:S6%5Nh4_XWX'B$[\PBufTNn7^VGSd\M"UU$R>+mEb*A7E5,M-Opnh8okHlK@dDPDYmQ,YR=__&KF]>eV=j:*i=uASl;LXsbdR
%d#q.488\5"D_<.c?PB>4$\o&!GIlMPXc'7'NA.7kcrmC@F<Q_*0SS:;3g6j\P&;69Y#?e(W$CPu]G(+R%PmhY:5d<!G"(N;.\tiO
%SfXD]$rT%J8;mfDq2OOGM38O>3bccUcPBM&^ul@JE\DqZ$ao8cOrnI88[Q>".M:pLA^I^)ho\&onkppC]"!UT9cdYa)`^9`DK4:Z
%pH7Wpk6^.ak:/kk2X>\uPEIM`Ng(+PZ']:ARGj14iEu,<9cg&T/.Z]!]rog4ehk&po-EQ&Locpu*E?U9Ob?<A>GO=+cU45rf$>fs
%AM8)_DG^2/V`"Fc.Z-QNXsk`VB6/4Z2^`O@b&he%A%jU\EAhqqP?QE2En5LA;m"j<Z;qM$Ya^)a]anT,Z7"H3rK`<3W=-#B;V($G
%H$NmsF70M)0%5(9B@U[]\'iGU#JDS*B):p#D%D5@a1_5P/skF?I@'UJ+RcL<VOQnjnrP#dC#QE.>KKNV[n3qCg+oCo<!q-I=]p%l
%nP_ie#YZ)hWeA=0o5E$'Up09D3qCt)9W\D\+^\2ZD\9?@c#'"XV[LQpWEM`Zq7MSXC3?E*iL<.`QsI/6CpkD`"J;h"1orVEq:_9O
%`8&`@a-esZr715?Qsnm*B3(Q5$5?4QA=]iF>3e7gOE&=d3Q7n9fO0ue%QM@'\S@\^q56t?I]J*&7D#NDqQ0kN6(;`)RTT"PH+@fK
%Me_3#2cs0[\.:Dq>_E.DB^2O.I:Lrj&XkmjB,O;j<'Lr"LpIfsb<4k)?:_Nbeg^q2(IPm%5WUt^`a]_sqRe2H0):%0X\PK<a>u)a
%@f!dAXHLoA-Hr;kKn/C,dofRhC/`@q"YS=^N"4"XqAcS`dP\01MQu[6Jf=Gee!_&!q;/XHkZ+\P-VYE"(:$f1ZAV=1Ci4;U/P5Vm
%0!dhc+nrXWmCi9+*NE]^,i#H'cnW\l>0lU#ce>\\*Da$ZWY&i=NV.Xi:o-:&p6GW)9nh@V1q\0=d(<pj_lE^g7KGBVW<2q\g<QoS
%e*CuGJnmE#Bg+$Q(f)r=B4dtSY2>M7or$VM`t`I7fFGA.<gp(Tg>#Qcrf-40nh$94X,84rNVY?ue[%?43iXG`^]g"6GpZQ#P?XLA
%^*H*oY[P"XMX^m3.F>O\]>1lOM)9hLpt^O!Eri<ZG/Y@S\SFge/^mpB>85]m3+b\BbC6/:7G[:F.$iUc-M4s6![jarUrpf9CS$iu
%DI_=r^U0@h7:@=1'i8U\)5p-n8P%OfbjV!NmP^$OQ)\/U-KXF,ISTM$Qr^c":NB-AB^[a$a$BkT<jLs\B$&fY5M+@cVs]+/2L]gK
%35[qd-pCZ8\/16kokCP:kgV3:@F+>DG[S*0g9g]ilfS]ja`L])GGcM)f7>HRfC)1h-nF,a?qP.ho;h=Ps(to*';p(\e#C.^J=u=3
%WZ'in(%j!md@OYD>RKYrT5?EUQrjkQXkD]3F>USi\fYdioGb89'j9aGfCHB'14<+">Bb/o[FFY?IGr%[0Z3m&Vlk%Rm:X8Pb@tWT
%q-:0oP:8#2\#-`A5?_`&=2n,;GC>\n2**>OgV.ZR2>X@8V7.b9cQB?H1H"11'UH=d]feNZL$riofAY>Lmlo_R92j*(7>$Fse^.ie
%P0GPLrCe.$-B2dc]`36jnp8O+H,lb9;ASjdFNb,ia>O>Dd4Plu?nhW8]d<-$S5^,-?-^:L:/rJu6Z=N]kRBnUe[FL=\oR-bBH)Q7
%jPHk8kO`',X-H=.dWWrPjV&9O@"0D<P&`Bcf1F53b7H&J(KP&cc'FdJc0ZBtE8`e:5[IBM$7V6mI@,/`i43V@8)\M`Se]nB1PU!B
%LOIg1j6:g<D]gG*F`p^V5A)jX\rE&K)qe'%Uc$&e(T:7R\g`@pQ&*c\jKb9oo6<b6RK4/$olhAQ5&AQJOK<iD&(q-N-4IAlN"*NH
%<@DHlS`'b4mM#r5j(;mD3c#Sh@??o6(q+m'nEj!nDfKrGp62%KIid'IQ85GaIpD:VMCHa`hoe<lTIJdiHKKA(*r<=5=3UCSc#_PR
%Qdr4gAtF,%]<OHJBN@bAFJ$dZ;`0iZ]Gk;%`X-Q(HobN]qJm)t]7KIA#G2p=)4#/?<E.QKZ'i!=fdn^5jZD(QJu^P3qt@@Zbu#Qk
%3WDDVVks0)h&LPb<-Wm9I/>=NRI[MGQ\?Fr%/)AKl=?dSbk2c'>3,=Ek3%"q$Ad!!=pYOW.Y34h$NcL?\E$#`VS+[7c0#l.ce`^!
%RRGVA^d%"Umt22![CFjc'K_b5.)LW:dgt3FT-/E1PhL1`\MRe,92p//WoQ=<?:\1J"D>[UChbi,\#iZMD(7a(5L&=-Pc12G;'.=U
%10n,6bFbfd[7+gcD4WZ5l*%YDQ6UNnF**aRXTf&'/pA-'ps5&BTV2LhoiTn7S']3WS3BESl1t7VRXVAs[(Y5J<_?H=6p)>Mn)n8(
%R;\37]uH+Gmqq.kJgAq)i'djScT(1C9"hs?o+\9Jg,'>Oj7<WtX3"iYMHMB&p"Mb"fc]LeaI7qJ/Yh1Q;\-;fc2OOK9.l`\Vp_S`
%"r3YS_[DC7?U+Ys]IYVcYaW^oT65jZoRRZK&*1A)f&cSd[Un$Gi/P,k3?A!!Zt`#b,\WJee2WbKDpp`V@I"\HD'L^*DmjX%J4R70
%7Oi#Z>dEe\C3NWe"St5pmat%;R8Vln<3miJ+)fVA=\6YMjrQ*ZTJlJ@o"'6godNs0DJmEt2FYMth-ge?1M&7SjO9u,"kQY`&ek3P
%G:TsQQAdkNT@=K"DsGZVF><CB,js*KBTd5H`#`Y/TG8*n-PbsI=f%]lWa0VHo?7j)]YR7jW2K>1KY-)b4aO?[].R8_5Uda-b7U.H
%a6i2Uoq5o8En^qsl3XY_mr`lH/]a5C>)<MK6j9,^V_0pK6409`5I(SE4loe+(V29eDj@#6^Z'E.2j"0699m!h5IR>R48)Znc5#Qm
%n$sBLq.X0/*qk`bl$u:VV^8n;,P8:^-OhH1_<1uD?^7j"l;?C;9?aD[)g$G2EOI4:jp:9'bc3J(41L2Qj`9,u.rK7lcmm@t%UIhL
%)PXHQ^$Et^Zu3[-r;tMJ(V>1=X=D/mfMOTW17I=*GahgG)\rkaB<fo\qIh[FKhj2^rM0W&0!mS/N6VR=g+LW_3I=(e$/5Ni.f=V+
%SLW."dapfQC$Ta4l#MnV"%@D&^_7)M/.L*iQ*RQt>;2'QA%848/X3H(:th00(%u@>oca],O(AJ(<.V`q]5Tagi)mSdnt':^Qd<P7
%aW/jAQ=JN.XkQC;/Rt[&X],+n>OG&e7NV=$9sj9,>o-D+:1WpYDL,9_kZ.(/DGW:=N1=/3Pb!f?n5(fP3Nm%DG%dtgf\4X:Fe:n0
%/0Da\0_fo3.uLkCa/(8qd-nOT'QLt>7V[D)AiJ6D3R08-V!\[la&dVnl8F\,Q'X_GmPW4<*S%BTo>7If\5X/C1CnS@[A-XUF\A0b
%I:'.ab,pACg\2r*"-oFQ*f>lIDAF/K[VQtK'j;HASdtJ+gk3=%e<Ul5SpIbof=,UmcEZq(5>B#[e+N@9Uq-!6oEOSPooBTl_1Ja&
%K/deEGt!+L<L65OAN!\&Fm%<QPV-#2l>e@&H-Y$AhqW5KdgDpjZZ=\gZsbI*(I=LuAZk'?k.s7>f'.D68e>;J@pN\6Q&5sYcMWX-
%*iUAdU.I.hRV-.WR.cV"e)?a<^=/CQM"TChrO)EZc@Tr[Z\\srY3*Zh7_7k"1=!FpF%nr71qk'9E6%q4q)c2D'sjijoSIknQ[$W\
%lb6F7Q:gDC=8'tP;G\/&e8",7;nJ+pY.Ak&)`?`Q6VWjT\TutWBBqHZ\@(AFCsU>RV4)0q(+CV*`mkAnf@&M!De!S;F>Vm)cXCi'
%b?,Sa2.YuU_PY<?g'lQ%2g*Y#pPkAYd\b%:=Q!;hE+Y6/@cI+PF:?SAWu>#5E:c^rE16r=<lRX50%FujH=Q#80r]82GASh^*%KJ0
%U3G<H(%S<ph_==ZH;0ODlfbLa6LVf9Y4='QV-,R?2=E=KCMZtJ$Ss:RDqcaAJRA4]]*Q;C*&YLk<>_DuYcf1f>MRNZ9s1Hm9:ABI
%;U'cn*nT^'fDb4d22Z`$8^g8#UjGG7"_n\.Pu>1#"RY4X2j+^9r1eSBQ,7fE1NS#(j]kcb1c%trGd7'O7Bc$_Y%PD%d$ejYSF^O#
%X(;[ZA^ZDAkW\=ZE[#F"H>dY_Chb6a%"YcW$s,9XqLIo^,#9cmYM3QQ;TrsaldQ1Z]V6+jDXq)!jH?&1T510,#/$iQhcBm>8XJqP
%&YN'$\pV(]Tk5]:#Hr]W[j&;bJ'RT(Eqtl/4*d:H6K0J.:iY4T*&*PtBe-_b^EL1pf<C7aS67Z+F]`VTSrIq=kouOb._6b[Kur/U
%Wu=6]bPdm1<s9Sih?SY8n%T2B>Pq0Q2/#4TS6M]mS*3,&DDg[pFQr5JKTp(8<rBK;;mWr.=7]:-GZmkuD?%r5GJ(fY<0nJj9Y1W(
%G$MfuDC4!$0^Sf-/et7'j_DQf](!l"Di#@r6:CXkF].Cg9&Amh4d,K6jid9PgYg9Zkd?GK]q.9u,Bim]&DR=f^&GQ_AQG;'JtMWA
%YNEdWf2H<Cgbmj9WFMSb[%Gg,XNXnKfs\q?W=iR;?p1m+L"P_IWKN5WV6tTYDhh\gF(,#Q@p+/*q-$AR*U$L%Qg'pXRR1>;B,a]n
%Pl6'sfl(,E0dUM-F@42+J<60P/D8!h_B)q&$%E0q4Iu00(Zeg;7a[9)KBD(b4f@uY5!,C_$H%B#FN%[S<rBl$4qCtC>kEqlXihWQ
%ae/O<lYn$uXGCP'(SQ58r'^CN8*f9DG?1$mBBPW=TE(M\H@5B+lM%"MRhgeViq9>gYJ.D?k<JapQhPEIr;MNg]jnt3s6rW5GlA<j
%kam1q&,KH.qMQ.Sb(m`XrT_GlJ,Sq6YF^.8oDLVOrcl3TDthT7]R'PSJ),U\qqW@oVu6(Ch9T6WEVG7?:S13#nom1Ymcj?3J+8g7
%0/&p2^>J1QE\7<m59FtFl2FJ^?@OnXTWRCD5Ma)!omPGsT(eTn^Nf;@jjVgCIaC.Rc1@RgPG^03F-elVrlmYjWmCRo5C>-5_HqK4
%WrE<!kWX=:Xa]m>j]*+5Hi!T`?XCGF(G+3s(I,4:k,[*Xp]#R>[N<3]Qhr_frk.[J>2QsD0:ooRoBu,-roH('Zrta?k8D:@CYN?j
%r:op'Ms'!3Ies#8T0M'N?N9f<T6Gd0p$,!3IH0pBVuAK$KI\-cdkCath&g";GlGU)m5BC9(G\/"T=qc7nuk9j\UPUlTg%Q'QbRmH
%o5jjEG/F(Vp93B;2=EBuJ(qTCX1%FA+9"dAbEpO71L'TUIamdqc2Sa>V(V?7S*.)&D_S*pch[,b:PB\ak4p+VZ;E@$IsV+b)]AC:
%5<aR<5OZiuhgLR>`Odf'r:Kl5m[SUcQZJMPCQW;D`;9E'LLlmCG))F_.DL3-oUG"f/Uo2nk34fK[9i6\o&i12rVc[f\]o<pDV0r\
%_`(@Tqr]?!%<oYOi^`q/,-'tONUY!H>im]UC6B'N&\u<&&&V43lqb6cI=6A=OZM_2Z`DoT#d&9UX*s>L(H^qkkBC@e\R@`f-oh+s
%#Bk1`iIaT450?.-#ERo?$q!O)36`.AM=(QkIduIampFlMh<oKjT>(4=Ec^'B,ed\(I>R`9%+-45F1<`3oH(d;O$&D^j:\d@"%d/S
%K>U-CErM[YTC!Mr^7Y,ZhX@!T6TN>0.Yk<B_:2_!$"YSrn\rU)jE!NH6^A7'atZ]FB9t5=#YG`89JK7U9J0Z4&=k^#U3$u'Mp[8=
%`K<?3(PaEMYT2hFP2dAhElb?_bK(:4,_q.R41ON!a*B_g+[_gC,e'-b:7+L2r%q*bGT"hJLf#UV4O.'K/4UW?L,_cUb0.75AU;A4
%?[/+&3;K<h#<DKa*n"]mbX]4SFR;S!!HiDk38DKDjZ(A%O9n"iUrZIB8L-;?:%cWMD/b&I_aTUWE0B60hhPVn8)]TlLcb__^j(fa
%M^P.q^K_csQtqKGIWEMf^[##i4Ur9UgMuBM)&+MaO7N<JNr@oZhtoc$aFZ1o4rbc4i@rE*.D^NfEh)5Nb(8#q0_QE4-$1@G1m3#Q
%4lmm.8a$Bk1H5tW,%NtH!Y$RniSe3KSV3;hEZ@VGHe(It9:g5?F27>IbKH8XZ'p?gc=-qXOZ^`nO7Z]lq9JP\P5c1$#G`O8kHQ"@
%84+),8LX*[LJm/0^(8F/YB61c/u)5iBX:SakgLDt?Aq5@/Tb/tBDBPTDs7jRJl/E50V$rAoG*)N%dkkN1CBro=g%@P6J+T$m5U[K
%)_>3AP/f'$@60/eN3Zltm''DJbO^_ae4F92(b[XCU[6_dF*SD(FL%qlC=:63?"CW<=hc4%iDa>?AYhn"q(.bLgn49VTb/plPD"he
%6;qNj4XXHQP,V'Z\>V<5'(U7E;'n#T&Y&Te:]&W"F?3!SZCT!Vi"=:,f['PE4J1]]YD[3?0+7i=6)Gj%;_Ejn3*jhs3,s'F/eEhn
%NrpR-0hhqeQUd5e-*`$bp-O-L_@t$'I1Kk1hut@I2LnOf`_Sc3ElQ^;-K@?85ET5XYcGl04h&<sVQ(r,E/UHeHu7#$ZC*>83#Ukp
%EMJKu=X.gtaGlR,")cBd[jniR)-`QYM[_o),_r.r+K$-A]bdQN`s%chGD:G_gd`+[por,!*5RpB$R(R]+j"3OJeR;FKGbfGjb,jU
%jH/I8m`X_.!m*:XTk0WGW-PAH:rC87ZO/X/9.'P%:eJ:fZ0V+GI4>VV#prTk"G"<uJ@HUP(X>S@;s7GA(Z^K-Tj(5",V^*/2'u'$
%`K?Y^6s@I0_-J'?1c@6MGi2WCQ;?EnA-#f2!u]"=/E.'V"7$L*!Y^,I&33(sJfE`Z<c]VJ.:bdN$G[>.e!U`JPh4BU:nKGN5iu,3
%Y>Sb(K9Zdj3ZL_HN=s?88Voct4Z+-@2N%-d,(#c[<8#`s;.a)STnK2f`*U$nL5dsjP>I;V3^P78RFu-V`i<QpoI*X&#t7/l%2:]3
%0aA@Ekoa/b/C?kji[@dOE]48g4iKujEFN\(+AVt`jCi96KLi;$5^^XDA[W^Dp+dMR66jPkNt`F2=<N/'63>"I;E1Ug(ap"l'F&oA
%JV;Vc1^1iq3B<R<Z8]0:;Cramb7.EB:-u2jW[-7sP)0O&;h[V=%4EJ,;b*L>"B.`/Pn6q[<:s'hAh]LfRAt7im1)R[5RMOS(5fjV
%K"J#fm]%2HQVaUn\>q[KY,["VWrE<IUe:@dF:t+NL[!iXW-5&5&d]s#,c:po&8KX[O5*=e0]KJ[5+sXBX+Qr$g'W)>leg(iprA^S
%T72"ac0eeO_Q:T_fPHoB6T#(J-K7HY#f=!,m/3XJ@4++Q,lA$R_GRfuoE9j@'Hsn`dhSU=jZuH0/Gar3iXJ5o_Gl2e:Xg7ER4_V/
%6"G_UdtnL?:j4%o'P7Y03KZ<KZGZjuiOOhQfrS3OWpm-B[hlVUj9B+:Q-GFiOi<k0Mj(8SCsJI,<CWmf:77ZY4%m>(Ci<p5XiA'r
%U>%(@XNYWIc?<IX!TDiTDYjtHn5mZ?Gt^/WYWTurD]SB1O_u8hj/pYuq]4,Fj3K?=3Ma\cSbMp>;ieE5k\M1c4Ct>=;7XhPprX_&
%m>.D8EgD=`..A!J.jU7h*(?r77)4d+l686IE"jJdPB!"Q<_9%67odmb4/d=j$Jg8jgmS(03DL^CalGK^eO3M@<R"B,X5%>gb775m
%;h[oqZ)3J&MAT%giDBhY`D3a"@&d=/`^WnHAhMW7AG%@AEjdn1%EG^oVk05TV+hK#DF63/>fYecmB?=&+#p.J&ZuUa7q+`mNqDN[
%c\M.[hsi**+4B1Rc?Rt$d60\i97$NW?iN-4HlGT?pdl5VLNNtu_fa\UJc%pC6/a1WPisZ&:o#tU(9oWcW7ulL9;^8A_pQk6S7j<o
%r'X4FB?"=:")i7Fb#<VhZDV(mR[JA+EL!eK'nmKTAQ>+kk:Ge2j>GeggdO)n)0hOZ9JcX#USNSE=IO\<q91^W=`^#8a&,!7_0)&k
%B>oE[NYU_39^m%,l1WME.d?JlHTcc3k%SbsHLH!(lLEc3a+"p'e_-WkJ<@l?M^ss[.6lRF0`[aD_NRFg-Z>K5]+t/MNhS6WL\&CA
%TJL0M\7=!W]NJiD3?@ahW]>oI#0%F4f3sj_4+9,Oha)m(rA4Ra([=ek@D.N?$4I!O>Shurd\H:lL6g8.@p(5ADM570eZ./cW8%qu
%,R13;9/RpT;9<3DHeBGN`<qm6</siMG[8e@^s!GW/2(1265-T6B$73`S9bQVBtpaWg[7]k@=4V(Nq;s!HWE$8:N+KfO6JBSo_>BV
%#QR*SO<,Klmf,jA<fVd@bZt]&%+?M-`euocc6lck,+Bas(3HItkp.MU82Qnb,R#/@a4'QD&2Y""FTao0I2:PfOe='E:B6u:3rsLS
%e>Y^rM7t_K3>LO1J9(a/)RLq370PUl")W5>-DA[*gba9Ia_0Bi$?9+.;diE)3YgpZYZ'N+K6^l]5u5:flAM4_)_4#X!2q]WD"YuC
%bVskk*4f4[@6WCUITkTmhV(P.kpj>B%ajt5;H:0[q/4N;Gs@]-\,(*pQ`EVVWH((`(7f2HhIsX[q3\a'>TE&_2]pIXo+<VdGI_^`
%+$<:B4\h&%NfQ2ra%)\E"4#U[UrPutqgVA%LsZ+=;*Jua:E8I08,5,-Ic;cJ36EV/nqj,h]H3'-Zr#iOT<%uUr'SIP,h\n0rd3>V
%l7%e1`KK1WQbCTY2^"!$j-Pa%Koa\)r:=skcA`)G(kfB+>HF:ZRF0jL7Ie!0\r3^!<S7/L?B_1Gi8`)nGG?g*ER"?dHHdZ3TJ_+A
%4Ft*V:Z*#)`?Je%%>^u]V_tjNXkEHtU/a&r8<2CJN&`XG2EeXJMbRO8^V=j%kM^Z#4XJ$45OeQ--rZQAM("9m+q]gVJPnnU%EZj<
%-.fnJ''70t:BOX\7lV1Z'$8:'+Lr'OOp>>@d/MDO?<4fHM3$jD0-faH?CuA!+8WVlGP45;#'&,c#*JW0#$D)aAAZ&.3jL(Uk"M-Y
%DK/0*<Y0h"DK/M_*5UGVC;l;FEO`2!_R^*>'%1@HUB8#pm]52i'aWm;AT`mn1mk$f2$_Y<DCI&DT&=H2E!uCR?.rk'@5c6ECFkLr
%+pLO=ZcV3-2.lLi&=.l")QXQTPcDa%.WB]JdA\%V\r9?8(7/2L;pVatc\tTKps^4U3a.1d@T<4QeRFoMijAQ)[c=):X%to@%s"&o
%FWTq;g(@M]Z,X(%O*l'akttqrqdY0bD]Yg9_nMqeXfopMj-F:8+(>qcg\dfWNRV5Sdc4?^LE3"5I+Kkb:+g[Y_qC96h]Nb+S`f9I
%M@@SR@)!@B[g1qWb'sb(9Yqj]kQ;9\l;#Y^G#!-9?!8@Y1lcZ#:HCG;UiG%dL?^J\qTNX=)QFHSJ=sn^CP\WrR_cr;C%*U>L.;Ws
%d5^A^?0C?.hj^C?]#fAALr7K5DXZlQL'-1uK5"kJK"?Ia\>1Q-#jlDYI+3f!(7Vo1HQ7HQg:iK_5?9.oE5NTT?XrYB<.<qXaoOkf
%dFTVPA+nEAd\K*grE%<E0$C#0cCT["`^f-8o%@a432W08Gfp\qa8"jCD&dhL8<6hh%ij]uL\1@tZejg=ceW)*Ql/(G]X2%_98r[2
%0&S&%Pd*7):o!r(N;qSjqrd0l`qBdakbJ"s'AGa(94O<7Gb,S[2PDG#EW.Q<Ig]AI@3pp12c**<\L">a#*g[6'H<jTKTiR3,iRK6
%PdCRV[QpX!`u7#(5U5O`)D[btU0HR&$39?%JjGG"C2QEV\[">na&S&@O$;"C6$)PoNjsL.O#K7Jhr?qBO"2@M-t5/CU@Obr+F<O>
%ga7r&5(VU]#>q$fbX=c=P%Gj\#>$_5p;V:X_^./:W9,.(jq6'FkH(G&a>nS;fi?VNV/`@1,4DIB*nB&@b+B@J<sW(+'[rgeQ_\A1
%Wm#7[.B;\:e]cA\9qMp]1t<tG=Uq]gj_#7W7n]dE=?KhCrhdffM1J"9kqpe61,+,e_R0o^PV;j)nN]7;.92Xf3=]WG>*u)[W3Q^g
%e7ckW*N;-[l3OHNl:ZFC2\(?/E,RbXYoe=SZbQ0Xo%E'KZfCuW6[F-u=mpD/BC9cUBp]eig]m#[HcE[0fqab##@otqa?!r!j5`!J
%p*7*[%#.*?"H5T(WEAZBC(iTA`%j_(ZM]8?SB7s0bbeBM@F$LI6N&brQSL=g1>!?Tog#lC($uR-=tN"Ir%n0(WP)))/Hj<q;VRmK
%'3_/.D%,+q_@6Tg1A)KRAMP&3^sS#CZpFfdQil@7VP;0Qq[g=V,c7Ft+3OeZAOtZ%/W%'t3f.Q$$#2P5l8l>q>Jeq.Sr_hb7nrX(
%d)1&ec>Pe?a1%Z3i,MpBdc4?^LE3"5I$`l!>\WgnLb-gR1IagB(qh5[%N2H]5XO]\\j%ogbq.]?2S<r=S^V?]CO_\Xr/FuYr^KM\
%[-o]k).DFH(-Hc>=Y5>Z3n\)0:=1FhTR_`8fToF?9WM8B=O^laAV*A8dOPgW&;BXHO+!J9<>nq3WGj_sUAp2+k*]:O)!KkXYfP^r
%7qVkn'sT;?`,_T+#-?6lb51H_/)(5<@,TVa0lu8EA/QT?^8ZIOL^OpG\=rECJja7;JD!l%7`cHb7:)WAmp#$"d=N_t3!:6[Mae'>
%hMIPA@c@u9p`p3E';Y`\pg.hY?p0DlE"jf<[cbTg5:H>+L;X]hUWgl?fk_s-2K?:^U#4Tr_d*n7oXIf==%BtcdabU!cDAQ5(&_<-
%J%K`=b'-e5'O_jN0_`W@<3_X\TEeE:W_1j,1-&sCN+s4\bM6.B^q"*cXB3M5.s0a=,,T+BCjAsqp.b3P<r=//R\f:L<N48<JQc,Y
%;T5QMr#:Tmk.K<O*p]OARNkhUH'IHmUV"f,-3aP,eR]OYVqkTYk0fNZR0Zg%@PUtRjp\Is<)eR;eNF_n/Z4;4:0l6a\D8L4jccf?
%b`V=sMj9(FdP14F-P%s^>2LL7,'GVh*T?(5X=FqlXN>`*DJ;YL,bL+GZ=_kgG@KYXL?p'Fh$DkIU=Do7"5V?^Sts:r%/2@4r14pV
%\9,FC^\1b.lfR`=?I697FSiEs1tsq@7(/41k0Q68gI[3rDQ)?-W7X"-Ka:a!C15SUhNF#'2K,_E/=<]K?tR#^D6['0A[YJnq7X7.
%WYMgNHd&oe?N@2D5s'5n,PK'=Zm8gm+YbjV.9LT'M($i#=Lg7M3o.T70ia8o2[uJG#c`C<%HjoTm6#NHBetKPD')spTdI:1m:akP
%C/`R@E.'QKXD2:hj$BRQ/,@]TpqZF`WY.8_`t(/:`tii_bg'7T^T;[E=\,_,WBJ\m&N-5IiNrim>>Uk;?T8,mQ;iO(!uU%>[$]'h
%MOp[2c>qCIBeHEt!:L$SB%'sR(/'l$/=cBH\k?S%6tcA>M<,?"s.GX5eAG,K&4)<(.R`n5Ld]h@9i348fg*"I0F.o;Q8^oX$6(>@
%Fs^sSmZu/i-nY"\^HV>c^NY`g,7=aQE_!Gn$57C)/4HIj"V;Pk,ScrR:ru+4(m8c4XgC>F<`3IPaJMGg/k//m;+8<a_u^$f<i`P6
%FY&S1=/FB%LdP6[@'2^Q`PCbJdE2sKWcLZWj'',V*mQ7[C$C2;QtuN,Xg#o5h_MgB3d4kRcF<([@nYmBX!>(T-uoS8RVU@-ikdic
%?Z>tH@\'\e79[q+A*aOACg5l)%A%JYXMT41HpBQN<i0H:nIM+lo'6nq2\*0(5N8A"G*X=TYtAQW,8As5>Z\<bFj\cr0QlNXF16Ut
%qj0/=j>5O+TfJ+_Kj<l@Y+iLsX+jS.jVi2<A+.oYIBd0)4e*O6Z9nMYc,@thfT&oAfp"9McPfEZ>Kus4YrhgWQaLmCiJ(JpHIbic
%V=f0%I]BQMq<Qa,%TgrYaBD,=LKW]dj0b/dWOpjRf$YJ<n+QP:&LlpC2r8^?&:&AGgqZ6?i'<@0;i%cO3EpaF)W"L4HCP)m3d.Y,
%\/WtsU@d;B_Q24c@Mb?bC/J,.]X_?BlDhcBkF-WpZsB*CJ&XoO4G=uG"_a7D^q0HFXO=Z[m@fi<*P:gMFTL2`$[c.pTgdK6/OVZP
%MUB]m^M5LrJ\S*$bdIlVe^.[5_WF\%5*2iV!)qZYD7u\ZY3c=C0/Xjh#D7VD`6,4/i33Ot?A8]/!Pp`H./9L?i9S2:RfU?,6,>KI
%JZZlYUQ1>,i"%s&A(s3UPP`uMge6hgg*q:6$LB8^?9A'skMCpqmtTT!GNTsXU\@ma?bJ)==!_'O3*Y"3=k4Nq1>$a"UNOPOB)G;_
%$Q,O$<pkRmBs9c:8r@SIdfMAY3Z]aOpoo(OKH;32\uEL$<8l:&+0@0H"pFLGLLIJ1nN`-c=.s4[*G:VEn\^duU&;*[kdL';=#b!=
%LKYh;1ELr.3;kUX_tZ8Q]!lE0Bc.P0?+B[sV2MO8(Y97*"^oWD]ubkh]&:b#k[bQR=aOY/fS*_oNH3R1.9?C%OQ``HWOujSMEr'+
%,9h07P%Y66\p)?Y>\:t6.A2k]fc*F>1VV_\&'OGTV8G#8CPoBU'uuUF(sp*$.kp.T,IYn^HEZX!'F"5['*OZaQ&"%5-F>JY_9Ad7
%)+e##.sAnB:289\H*3!98YNt?e@^WmD%u,F*2q\`'oP=3Ya27c'-?2..%"U`>WNPC7^2*#:S\H5T3K(r^AE?igjjgpZ*>JqSLmD<
%5d54)LN_/lbJ1OBWSpbo3Y`aHa6bYRM`\=q2*gK;l9APH^OD'j*U9tIPZ:L*E1[VMnqaK2?gs@lXZbN'3,n0@VjnI<oa^bY???_S
%.4<I.jktduj-OK.]d,\k*(k&m%:ept):K\Wc%k`.EBEAoA/Y!<gQ<8hQI`<WSU:$H?D(6[or7&5oB^?PeZu3=ZP%OV;69&VWImnG
%X@ci,fQ(5rIoY%"Oi92dG]1`%18UWi.Vg=#<?-$95=&XsUIH;#(3+_.GRH@^!@I')q$T%-iP_'6AI;QniYB<F@MKIbG\9>8%cEUD
%SjH`e]MPI:0LD2i#`$3^*"Bc?Nl%"L18>(`*$2tNrtEAb>^t;J]tcCc)@KJITh&$DL.fRD(Ps;`>0%m:UjI;cs7WI]##Z+",$s]l
%dQZem&(`YFq-@$BW^]_#W$rDl.)FbU2*%qflas8IH3S`6e[`BTlDV>;gd-0m7CMk`=0l[u6U1l>$#F!"V[ZmBM5p38b)E81:O2M6
%`D[\@1:;<6Pd53Eb,(puLTTY#(.g7.:5t/kME-Q')+1ZdTXY_"JX<LG(ml$XH1M:P*-"0<a1++Wbp,GlF9\]9\26cqa2/l=34_dQ
%l1)8l'cg=@cKR;m3QnG@XmU.H[5?KqZU@kCCpOihg<ma@9trYHXJI7BbA+-!\-cqP"uRC`.N"IhOpsi^M@RCFbAh`@TXPilaU/;U
%!jD<4fOR>s4+)'JGEYmgL:<50mbK(gC38!\m?>GLe6Em0-M,>9GC."0hRt\6/1'21ee!2GkC"sAM^-,%J]0=?U;k[!@OU*<2FIim
%kHTg+7=fJhDg-Ro0@fWMJQbqc<em#)Z3Q`U`'P05oTV*g2SK5jHZ41R%Geo#H2h2m*5^1EbV7m%>VFYL*#(j6@%*Q5R5o.%@./76
%LMD0U;q[)Uom5rIMC@'hb,NM%j2,8omA38IjM_=3$"_fZlC'J$D.0@(V57dQh)WNhErrS517\EN`MUq]>72q4=&P!)%8JRVH=8[h
%X%m%cq/"Lp:u;knIOR];)h2,*'l<DX3bXR)a2%QMFL0lqZ?T1$edHO5igaB>:g\]K1["(>EV^L0e/-i_0<;(US?WKKC>m^*YUmA5
%<`uZTs([th8f^S$BUY.485CP*Zfq-7J[Mkca3L\<1J;S:_Y9d6Me8?#VKC9KO&#(jFfod0okpSYOjq"+KShgUB1Y\8r_7L*nh[=2
%o:+o<rQ>J.++<0L-ctX'b\s$;?UV,GgKaIk-A&:>=R&Ra4]O'_C:9#^;Z-,Z6M0piQ*P#el=d9IKG?kXFXd`>W"8UeL[(].k'RX#
%9J)/cIHm>LNnKEB`Re+pQraO>A.tfU<_$5g=%SlZao^kb.U1tfC0Ftrjk;?=[@#i;=nl9Hq/PBglP7uWBq<l7=:SV]E-2:mGPBBJ
%cW;mO($M3?2/)chn)"1kX@b/5ioV`W>_\8WY,oD8mPS+\C[Kk^?bUr^,q;DFRWJ&hd.&4#:38F%)),2cD1-DSg4V7pgZ34q>MkTp
%1J]N&dP%t/#h8h4m1jQmJcLgYad['!?d`+VW&1@A/]YQTDfJ8([DJ0B,ZZEgS[G=/V,:i)Q8:P<`!S&gX"u'@7(H,B""qj[J/?1*
%;lL[.Ah&Y#]el$MSbn&bO%#),ApE`JG%\&':.KG.+i>U6GSBY44+Dpm?M<j#A4Z\)^\+nYI'Ha!J)FNaqmmW]*C%DF0Dfs"$4$Uh
%[pDt<:P9aY_qrgCC**a<'ES]j12OT)$:Y[N8dd-LS=p62M&MToN9<>l%IZOmTE`,=p7p";W'P+VUJ_64\DEJp4rR/J$MJ8fY@>8,
%rCZd!frla\TQs!'rS=Yk\#P?lhQL^!=lH*X>MXaVqmYAS/)7=J^WO"1U7huIqsE$N9@VMKY)@AE/^'Ro,!5(ipZk#HI)#CRlM#55
%mFP_2gJf*TWSj(@\Yk+P(*"JhT`q-Hj+8=uMO8*e=VPs-aV-^+Z35QgC`4Y7qm?iM$AN,.f)L-L9C!O<du`*4#8+`t6hbP@`ZUCf
%_mY'(lTWt"hp*d1e!4(>?g\9p^,FgD_KEtXAfdBSef:>L(+]=Kb#h:n%JCS!GrF]3XN(3nd^W9!VU!DEp1Cna5l*heo=8qQqY"g)
%Ob?e%MA`@['t*(e>B`u1m:p1W`\r#*@]q7n/,m#e\^ZbdUUu'KS`e(A)dR.GT1TkR]]\E;E,6n>-lnq[PMV@k6fOm*<@14=610B4
%Wg1R_O)5ro4MH)oo,'FB`<[.4OSc@_qT<Mg\SIbkfVga7**YY=jnR-%C*U82j-.e?+4&W!0#uY+F?*B'ZgFnUS^52A2m>!<_H]Ma
%8"D\o#uT]K$<7H-'Y^m;=T4D"a8q8P3Z`&p\+S^8o!5XEb0i@jZKf0i@EQa7Q2r!`S7H/XrG8?:Vk2,*dh6]diML08:)%HC5Xq?g
%"F!_cgO?L74DCN<beCIL9q/tV\%T+pq8R;='9#CCGL4;+VX=q9]E(#63lphrJVXe\R*0^In'LL[L>BVbH4Fqb&V^'6\A#?5nf;[R
%!+hE<lZW?3V;/Vq#I*7-Mr5QVPgu#e!UYYRhIKb$)\==QCU'b)A\-;jI!Zso^5?o[nl_<\e:WpFGjFo-L^]44Y!'E\;q*S^]na&n
%XS=t4riBh?S'^klb'H+Lmi:1;kcKK+(6IUs>N+J'-FQ:X3j,aW!;7*]6e7];ZNXLh#-GcX7<G\mc&@Ehc9nFa\'r:Mhj_5D(IAf/
%cJ4nLO(%GRQiUq(7Mdoq/.VO1os$q/okh%?"08W^Df+sNhKh-QImehXesF"#/uplk/i;[sUi,Ge[,Q>"Y.Mq;T5Hr\-PV"c)7V5X
%hj;>I2Rp&Y`Rd&<N_Gt]gJ#q@M^dLj=r7]hjuZ3<91\eBA`7u+0._)b)GH"/BWk:\I67b03G*e^<=+9XjnK.Tqufj1"ebc]';&st
%'2<kKM2,d(h\Vs`[l;XBhbo`p,$MWC%dQ"BH1X$XOQOmIM7Q$4XZ5A<?<C,I=!h?o'QaA*9dsn-#?;*H.Y02F@f&BimJTW93aD-e
%0"3OFGI_f?:@ET`J"Jf08*7M2jn6ntYUa/lY)E.NWglC`5i:LRa-;QjY#D,[6>u>&iVr_HT>.r:]A;GbdqA]4S[S=j'*e.:"8db&
%IDWc`@:5]]YYQ+g-Of>T#560IrIfBBU5;Z&nVJSV@:1/b"-]%Ss5DMO04$kmq<%LrDa4972q@e$Sp^5Bht+0O5PsI)RlC)F?]#SJ
%q!m+:Isgnr#(6AlkBsd4@e]5"P4,8-9Y2a<]-?mQ)l($''C)B&`-_IQ:Og4,+8$.;:Ybot?hNmf:O`>9deXcJL>?cls85*9h)A,S
%eaN<+OF"+aoBn[s?eo\qRmhB;fl%Xsgh:#;ne2!$rVlJZe+73jT"fUIo^uR8^XUl!r;GU)Wu&C?msf0fo_&$LkAO\?rqc-VftYTb
%If5&b0CHUSrVa&]^Y&K*Y5#d%?[MSJntYo!dO5'#I3X"c%YQPF,s&[Hh+sd;=V>:4lDU>-S,VZOp9C.-C!:e]OQ+QFj'@I$gFS?K
%%OGP[)1[d/45"Rs"&`^$06]a<dbsQK=S*:TMZ)t2?9-(pL!8[n'N166.Qn;.>3&<'s)qnoGK=US\LHC315=TsQ_N.Bd^=0Mq]H,(
%1#9rPp<k_Pa^]R0M0F6(79[\mYsH$/.fA5M#8qrXmY"+*ST'CsBonD!GW1Ik]DG/q$[3i(=7LL0==60ejDirieG..WIj8\cQb*i`
%nXn@46?[75'D>gBk?7T;/k:2I$($WqW3rtT3&=;%3e%s!-ggJH(Hpo"Osum?L^$uN15FsD$ElaJcS=!"bkTha<S.jXPD:4?A*Mj\
%.7o.#HQ"jD0-dFIaaK%/Z]$^"1`;Da7qd38fPSjEYB65H9MNlG06Vr;-fZ-9`"e.HnL,%n"Jff[8pdQgKTobf4urLXRPJa]!lI/*
%)5B_7SS0ok6JN.5B'?KBY?.T'<qpPD.t[L4KF(;0Qf0rom1HZE"uJF>,58l0HgFI@R?4s2L;FtTC2KAd]6(Ut%UQMF09qe@5br4Y
%2*aeQXSXICWF"kCjCFaQ3QW+^@k)]>G9$qT8,aOWL^Om[h6)rBRHotkP!gSc#"lk%3dEu[odgWACdnO#%;o<:cEO.T.-lslC1k[o
%R7ZajS+U1E7VI8_n[B1Dl:u0(#\s*C:>).m;2@;b[Um?KDo&+\fb<pE!ue&b)FTb?-_Fou,MEM"gGm<@o=14'o*%(j*qbQljrdW;
%=38#ha8M8-bcC)e#bmS=Q-;I(K*@4%o57XOgrP`'[Otl7&:_mkP5SIHda9Xc"%Y<ajf4XR!<CUSV'lA?$qVl]-'.&>V<Aml.rZ>>
%p336[?kICVR+W*K:C&O\8qek6+cFTb9R!7F-F+Ju<#/FIOLmf'OE32CS9-,h!0VNB7(S5r179mS-aOnJ/FWoi3L$n,/q^]rO!^L,
%/!2+M8r%k7W=1k.JXj"Jd6*(+;W%\7SIVea9$>T+A&`9*ABJ?h!u7@s\1JSA&jD<BQ%Wm?h'+fN(ns3m1rm^Po2Odl[#!AUb'&P;
%>D+Bf3Q90ioMT%4H[0$R.%E3lN604YE@?sHPUM$\%.I+R-9/a;P"%X'YR)t(0o?5g-uQhd/1b"t$oQo67!T8>2s!FYnK@EU2[^pX
%[YPVI'JV&Z7s6>'V(q9KAo'ns&dLEq\ET4!V'6DRbiBnG?7K$t0SKYuJ8FR+N,]gWVc/luI0ndr'eH_&ObEDMBNtUjPa<_"13d<!
%Cq!As@#R!T!Ti[=.((IMJ.kA'JX6RW8$!k/M'2ctdO]N[B[.__g#,3Q8T-?CVU?*)Z("'JTgbQV;RJWJkgOR5-k$8BNfXhj_h_"*
%W4ZUCf>F^8At.7%Mk*@C3apr%"#AW*4j,u4jIiUNZ[/TI\b)9M*\$[rU);)!8Q^au/#1oWJY`_fZn#^E<ODm5\AR4!cidQ.KFV1M
%.nbd3F58hf;^?mH4m>MAK4sZCpn5O0c$;!P$<akq(Ipq-6,M.GfHSKfeA*FRK&"O]:+-=IjFu?LL_:MF6:`:kK8?WqQroh;g$GG7
%43!Y/QGc8^dNJ-Z5WNl-!%#Vm6Psk(]?m1c0Ko''/;$GcL9o,4LFFI>91C*!.aeC_=qq[oYcKQSPeflV-6[$4=d0]+^o10Z2_/_7
%_bc1]a>DhgHtXS>:>924j^sXGM/i_G4Q'h&GP+\?$GZ3nGT1R%#tZ_e71hQ<egBX94-VUbAf8;R?KE(o]!RD`EKkmOfL\_,ncZt&
%-L<W%MTAPT/n-3N"@OdCFs`dgc;$)m\M-CGL^6`u,J`RMfbRmC4@Wsh\jKg*$F3F:b@A.@F73VeF^&<DLPZfSQ/O_dF<Jme(9(3"
%YVaD:#<!)&F:MkiKO-0i-X7\ga/Hig]8073XGTW'P(@6$^sF'Le/#"A:jSuqk`t_FlH!ue8*>cV[KoaB'&--VC;aW\<)61jGb_@R
%9FY&HKAk#F&$df2Gj9]#-+%pI_tCi6KZAUh0@DDG,Z3k[@^XBBABAEOYU/F^]7RAeap^mAmD2(#QfV2[0+EW]iMTe76uMCSLB.Gf
%JWCjpJ"^;n^/0.s#L"MWlU*QN<(&Wld@!Yp@3nSg>E14gSL-1qb.]QPiV?So=f<PBC4[!3?=lh\dT"^>TeFFj.ZCAu6YqIn<nZ7f
%/O;iPh82L6dNTYWF,u,LOt3_j;'b.G;GmP!7SAIe"hj2?@5#_SUkSYk]4k=1MHLb?9(nr0Z)TV-WB0fSS`9kA3`n?m0j%"M`%9SH
%#hWHm8LYee3B)(MP&+(@\XXIGTt)D3<nNR&S?8Sd>74R0,RTnTqU--fWGF<+QBlO[e`;iMnUi_I-bF8Jg4ZV^JH_HUr1/H-#N<:<
%)0@HFpfM:03BYR^@a@fF!!SgKe&TbjeOpcsTKJf4;s]Z/l6Oe#WY69`eDuJ7+U\n+AmOt;A@(QU6J^^s&BU,lXubNT#+rf>$mF>]
%d-0QY,-e5'ej4gP<8)dL[]KYt4*dDGFJ7tc9NbRh#N7PVZ?ED!H,LO,D-mW'fQUk6C<nmu1j_MFT3R4L*ck:R,Jl-iR0c!8q@.Q(
%CTF'Drok2Inak)sk#T%coS_P_J,/7"o9\A&IXX9CT0<)A]ALALo+WRUJVuhA$4q3NJg?O-E\SuX!$^!.&.0.]$/GQ>0Z!UCnd+A,
%lOmH'd9N-3-^Ku6DFtfJN"&C.!\MP]-E7/M:es5(:6hkOUEe*=KgYR#+m5M:aMnc+^Q=e>^,XP#LsRB<<G!Ns=R?GK)EbL+.TXoX
%bFgH1kPY*RqHs6lU\;+rPpiVAf".nWX.Y:l%GoNV/R*EQ*!qObAVS^=K"^\[Q2Mj=_LWh[TV.RNHUjp3b],7s*!)SE$<%O\fl<dC
%8Jo9'KS'I@>cK!@/!.Bi"k5^iO2fb(L4S<>]k$Vk1l)/@/L&#%"V^U.>oT_D30^X1<[601n.&=#VdY,G"uFZO%4Y"^H]9"M4&7br
%9NU:OAD0_t%5nXBMCRl+c:F%<(lJcQlEM^L"/%=J6u4FT+agU,faKB'P_aoPD;#k0?j77Z96"%K&&`ifS@(I"?C'b+Hn]gK>#Aj-
%2-1m-2WW/dQXN9t#.>h!QQgU>/6im!<1+pWGmIf8\FUCplS3_+H]#8-r(7Z.g]H3dQtD^]j92841f($B?G^KO]f/XIVoh%)&<lij
%5%$onj`iN"$5=<?#h1Cg%+#V+gDuQJ7!k2%LM:#o6:+hM\J"P3K2AJQ#eA%!c5MZ2NKMI1KEYOA-3,Wl"AN\5dXm48g8'A-UL'M3
%U;/m_7)0%,cpN`D;Bl!,$%S@rQd5=&,cV9-k#qPAr)tEo;PbnjKlkHb&O44f8l7_V#brfo61qN7K*=*r&X<U/:O$Lc-Kk`gp7gB[
%Ts-nBCf7fZJmg2+j%i\?N7cb!Rq9>]4->t,#,pmn1I]C&)"Cu8@qBdZ_a^oCV-.Cpi&Nnn+AkM=kdr#lAU%<KE(RE5Og%I\fFI<m
%Hr\aS)V57c"teI?P:s=fJ>XQ4$5Z\5%!!nZj=4pj'-Nd$4-T"23f3%^G7A*eTKT"%?o@-SS9A?2PT)OHU/$Lcb#Yd;0ZSl@Jdk,-
%7CX#Q5td?ZXSN^>7M01fK0p5gQIYLZ;afoiEEKSY'YJ@G1Ra#Oq$90"8k]h/+M1g#+VZ1'>'#=16Wd?IUn/>6VjXWYdP^NC<H$L?
%@,p7)ed6@$N]g9u'#lKGTD4Mi<H)sciK!%Qjp^03)MmX_`ISOj9-/i3Q7rM1U-u7#on;X/I13DH$#6?9JmpPBK3+McK09p9/]9;G
%0NZ+I9Z;WIkt0co/enp&irm4K]1*iB->O6+7B6bI<8;$)_O<&%Gf$8&Bqaf'80)0(b@Ut2$L:RW+M,(a]!*O`]bmkbdIjA5"G@M2
%X#]*fg*/GSLR)5=4l]FjiE2s>2?9BI9caAY0l55Db&=]"`*>(X8Q_cl]+1pL,ciJ7_Q4_E2iq.RNq/!p<Z@Sd:W/X9kO>&HZm9mR
%BMiBcXpf&A,>LuDeas8X;D9pj_'3%@+SHR*/b2LF37fZ?^b/`J0doj4]E-c]W,m6;_('hk^4mVEFMXI.!Ht((]P%?F!Ba+ZXo.Q$
%^loe@9"SBmD(Rlo9mLR65HpmbV2V?_M(KbZMA@pED6!u,Pg>3E!7m=X44+ms\dZ>E*8@P2;d@8&VYVldX2(]jj!aMQL6sC1!R,1D
%2$3Dr_R^p/_)Fg\(ds=;k+)j0ond/.jq+Oj!BCW/+CNsPBZ\bDNEjHf"4ihgUe?r_&(%$qoMKR;T`*RWW+Ce1?oq_"7n7\iCf%m9
%qiVsC_jp(jn6HT(%^+Y&UOsd_p8'8Z?$ue-&u07`HW4*%[H1P\&o94<L._o<8Y9CFhf,Z3#!bW:g)+/9Sra_n7[INM68Zd#-uKB[
%2)`-EG*AYMBeXje=-MJEGp'E`5XVKKkr]!G[c.$shaKrKbB(H"#o*Vi/-U6jd/[9l9$/sW;OEJ0@Y+BniXGlrWO5$@6dZHf=iLJB
%8a[hI\5GP%=b]9PhFrg0_O[P0)\jF@-6/8;EZ(3@(g>JQ"BGXX28o^5gIMlV&W6pS*)rI5Kg'?THNj:#QAH,19Sus!$O+"t;Wj.B
%^Gi.2`YQ,uJ8o*nE4ZhRaB1b,5^A66GWHW0?r/YPIBnPX;-:Pb]$F#B"Ve0ESS/LT6plTiR@'XP!/2a.@%5W51Jo4B""o3r5<(tA
%i*mj-VTGP^Udi(?XPu[I32m9]fGLHABPO-q94@L'Ps_eT'"q*JDpH1EGSN!h=,[32!(0^F**f0\'G*IDCOhDdZcH9H[^Rr=0O0F=
%#p'r:[:g,JVd0Pq,?m\%fHm5$XroD&W6;h+#.*V#!#$*7KJ7)2bAdM&KuqCUEWUK\:)[N#$q;ls(7,EO:8#-E/K*sbHH7JG'FJ%H
%-O(0@S-s?uGkk?P*>""a.L69`(u>8n+a@TU$q:"C=b5;K6&?B#"L9ScB5je1/IXtC6o^n4&-"C!6"pm?:c+DF<$Y]1>1TZ&d\&F*
%EX3s&KicQOO'?L#^f'-M_cd5"<#N6ng,(>K6\L:$D_E[Md5OMYU15.]M:`R&Nn!kfNtb1qrB2oHTo)B_,u;?BYZ1"d>TmI<*cr6M
%aFnuh>t)LmpQMsX!'D3j'52)+KR+%l&//)aA;dI'i%ZJ7-[8%PefF)C(VD2N-qdT3dA<dtO[:*gCXajD,MQf4DdNPf#KHs3J^pnE
%1AVO>]j:d@Do4Y!*3?<U4+maK7ig\f$aJg.X6R)@FX&nt=F3A,!WH*cjOPMk5qKE!?YVYJ<kf8X#UYWb^t(oV$<8@`'Q+>ZK%8h`
%pOG7T,XuE!a,t(>[h]Ah115AV(29MqYP2E4[S\!ae['`&Bmg7VHB6pK0[_c`iC!kr%>2AbX:VMoCW>_#@TI(IJt.*qMCA_=C`K0_
%i*hlWrN<.Y'=]r>,7!lEls+%=T`5;bWCABfP&-)WR[E+Dh?T1k'Z)Pr*,X:6)Q9`'^eWf8P8P[_8%A('.eU>;".c)^A\*ib8:g?#
%->YSS+f;$$Nf;LeSsVu%@fefjOSnUaLa$Go'J;^m_u\^Pr&N`&!rj2R24D*Jj#pR&;%U;%).#V<%gEqH3f)3Fl8\=rUb[,@*>g:]
%"2nnI:ro:GO,f?##_o-m:(;%`I"KSk!:piS6]l):R`pRA&GZUV>T2g[Qfk$k[-N7]-5B+XU%CI,)5?P;lk&>W)+U_US+8gR2:/OZ
%=V]44o1V@h1fi6@bmo;28%TA'R@u[g*?oV2Ok1:l5?/Y_VO\ZV'#D?dOA!7s/hm'*-Vt93`3<orGRNlVj=T@:_NQnZE[)C?V%LQc
%::pZ$(D0A_e/,A"E<!b)$FJ1M7bKQEIRS?P<bWfT7HO09:Ln-N.W_745SG"i"`@00))glH&;LKle5-SshN];$U$G82X9=G6,4PG/
%e`$f0.7=/hJm!h\RpK>fT1lP`!V8qT'(F=#9EH9!JM"a?5QZ&Ud"s-N8P$Yp8&[eg*8H;%4>72=KTFgGm[tMoX.5X+bnqYW,-]F)
%`<_M5<*E_uH+L(HN)F.r6EH1_1_3EE&L\kbn&,k[42](bYW[^L7Y[F,'m\q94iZJI]$YM:U)o=5lA2ASN'@_)*2H$3GT/:eV5/Yj
%6/P?QeEV]o5d\kBc?_2#HP6$-E/oRu*?AkP.\L'[p4R8'WG8?X+Y\%pSUrRW_.0Jg-fB6%VbV%:8N=a!a9=Oo]f(KZ6[#F^(/%Ae
%"43"<5_:I/cRPk<C+N*_7K[u=-6U35keA&ab!unsU%>E1=)e#rAWCFNg4gslbG\`)&*jggl8:1]=D"_;(Tlc>E2lA&Qn?_`EIP:j
%<QCB3+Dn)E8P*4$cuY!s6)>Vh;WjX=PSHe_$K@_DEJ'I2fg+Hu^-Oe.'5XtK7cIOd?!*X9q\8SK]V#HZOCb>RY71V`?uWX(TJ]+I
%B?&jt%F(:X307,T'`KKP"Tt2M#j&:YTm2A!TG\)FKJJ&_<VJ_n#\l=!Z5?X[9sQp_7LbXV$ihGl:WnXU3J32N,Kp:aJqkH+MSS*V
%I0Aahd?0LRILG9HITH88NX4eNOWh(=n;u@s&D/\pd/kC.)BoSZ>:ZAN\7pN,`9m]t`lL2/VRd*Zd4,KJLdKoRcu;m#:l6_mG^Acf
%5`6'"BoLOF@ZUk`.a!C_#)m@A<WRqM"W!HMpcgaQ6PLC<FG?D#1P>sb(54^k*Af_]ZEnio+\N$NNtL7XIq:la^uQjU$0@-Q5N-@@
%fAHnR&eQnB;-S]3KL#mA<7E$G9WT]]PQOZN4cn&9n-B(9:H$1hA0;G\@*h39&C(XlLO^]4!),AMI+gq9PgVt7=)\nt#HUZib7LI8
%j(L,IR]gCuZu(tu6!e5r7Q`tfaDr2_"/:OM&IEg$dOm>#-TWo*+[RFuZo#RDZ(MZk!,p)S\6mh4-FN!*H8@N5/!uF]/Ta3I$T%d^
%hSN4M#P1XI6+AAo3mOpiH;gg_EE"l%dg1YZ'M-\)6.a_U(`u24N"uIfBIPO3=P0F<h*<8(Pm%:?a6;d9;N:rXW;=53YSH(C7AW0,
%#%UR5*3+rsM$fOR`,?hN&2>WJ1c5jg*C5<a!_I0l?P:"jfG#cp`)L=>.9/,CDcV8g%8sAa=jW;e&G8FkUELk5gX>g+>P-Q50*3JV
%GCjo:JsONW&[2D>l_ceTJY<c%'^2_D&kLgf@KLWmW)Z7WE],TnfV/F3!&QubBLtHnJ.3.%#26$7STOT&b,jNak7f27hj=HJh[L>V
%_apH(.KZO,_?^I!!lEX>fFK-Xba!>R)'gM*,naTC)W<Xno7O*2A-7=4Tco!'[h+8c3Q[]n@:2GB'j=%h6pOT)!#l\/_)4V9_pX<T
%8/F,V#lIoK_CV,7J/7GkDM(cXSmK"$dKVfTFPo%)$no\`>JaR@+\a_pQnm]R+lE[;$&R[#2's#g'o8@UWfjoq9L&aEJ6>5I!raNU
%?^"fr/ath1'n)mjK8`(.V6$[*B!;OrlnVr29brh617Za":2&#T_@b0<:_lsbd%g'S-;5Z:,BPcI2K8u_"LoAW%)a)W!"B)rBgRS\
%$;Fo)SPjYqm]%Wqbqf[AT"-#KI:Ms+j1/.P!R$)t5/8<X<KT_kIXmU><K3R0`r^kMW7ukf#cHK--lb,.7ngla;lX:qE9nh)J6!uG
%Q>+]WL@IjK*o>sSF_nHD-Z,Ff=XLco!7[\hNjKB!SU*_O,':>)7E+6@^hhA<@&0A":)L,>h*XO1+Wr`ubg.R*!^[GFBS6PM5YME0
%4V^fkg?a;.iXmp*_\CuG8-8N`<u8`#5_S%F\^\Y7c$Oue>j!kU3-@VI!19Oa4>k0f\);I&KTs<d#F1=Ll6@R>MNNOcXL]i:.\9Yb
%94o:(h`6!t>#V,/(+9J3Limch]f*Y<Jl^pN7LT!E'K"7I=PrElrV2TQ&<-6&]re#k#+6rm7q2*G(b'`d'B2V<Yi&?b"?/'6C5m/:
%0;G44:^tsqWiAECe.A.:C61q.1&SQ>W)s@raQtK,kS.Zc1Pr+,:(be^MpatC_Lk=e.g'I9P'd&:Moo)qf.$:8G0V#[mbrd@ljX7'
%6ejJ2/S81!M6Wg!WT1Ws8sTHqlJquoUBOO&hGh%6%GSfaW*:Cu#pbCTOFb6k8r!XT"qMM+q+'^89o!Cg5N8g>$u$!IbG%E`-/pS;
%aOh-;aA!7!KrkiQ-j0^P$NUdea8opP5$ASq>rjAj`OM6Q=HUEWkt_L!Kbi?sSrXeYHIRO10ddiR5=S/9KTh1!hll>7R-TK='W9nt
%CaB'pH&^[Jpg=,+BrHbFJurF0G\$2q)Loj4dWi!b</@cO&YTiQd#$K7JPp"\6$>_s^d)O*$asLin:7d&7,(1#\_ul@BYYSH(h_Xl
%8On[Bb[e]_3KshkLDK)NCk3]o$PJ`X_RLo(1ocVf:Z_XCMf<r<nRSj(3l<I049C$(d-`BYK0rI7C"3FhN2Vbt6s.5W(,HWKV[hPn
%k(XXW+-@0!!Y()a5f9+IKh*VO?c't%RR,"oN7rdn7@SB9#+9He2(AjYe?jkdEeZ.G%hWmS4Gfhas0)L:[_bY/!7ru(?M)@\n5t3i
%0Msut]\"og!=o:]0N]1Z?iZti=HEgTc%/q?`4GeDcqFktdj_8Y@4<tGB@(`VTi.7$N\(ZBZRZ^:DR:b%]dAA'IC(t$S+3."(*ZB#
%ign;maA=!Kkck:I'TlU"C)d_bPT9<`B%J3e.mi^F4ZF5Pq\#,f[`ht.;;7(H%T"o.`7b;.`]Y.XLDGWFqe0](G,]-2S1leM&CHh&
%9U_N&;2?f,(gg5(j[8%M"QLHs;htLo"4280LmufX,\:0$"@[?j<C1d!g8o;]_&*X^(<0!AVQ?GEe#QP*j"5"n&ReUS)O)CQJ.U2%
%/a3874.sb"K'-HlSJLldjtJOD%Ce8^N]O'PV)Y)+>B2i8Y6kJt#>O0@OU:>DKG:->(-`=c'+p+Db(1QWO9Q1W`5U,nNq"lE)Y%l#
%>T`)JGW?Z[fZGd@S-0B\)%5([K.\%m(Rm5(Bf]37NK"S2"fDF7"b(0=R5?5pbGErkC]`G(=BAB:6L8+[_g#qI1Kk[dQ6qM7K;f+q
%L`q\0gnpep,&#)t1tM%O)TijcL3mLI!%WIHRR?gJA\\BlbXZ&+'7I>`nT!!/VhMp:aaq2o-hYJNj0D.Y+flA6g^qFg@,ekSfRoBK
%K*;P8KbhCTjrjp:`<Rg9)bse+E3[PmCl&GFZ:dL+BW\i2J3Y>'+qm9a@[KS*T)d+ag8L1h+YXX^#HC&m',J\$H;c[j[Co'+`et3&
%#RQ3i0]q>lH6RShSjL=i"+;2;r8OuNTg&rJ"f#bi*5S?U7e!f_?+0CsUEME)#fn5QnRu@VIfm"tP2"ZK=9lbq1*LieLrfXR6':]"
%fj^qTJJG.*$,b4Dm+$F!")o*qkB+jZ8.-5#P(G`nBN'<\OMJPgKGg8"b:2S<;l1*i%E\l3eHSVb*+NLf6`F"Ee@>S5cWS08(hSLB
%\.O61GnU&SN-9As!iZW2AcVE.<]ZTpbCk`"NLC\W"<!S-46KbcbA$L)*FV?++I08Cck`3-Ss+7:>R>\iP^j#U[P1r=Wqdn[8e#^?
%_[n!ZGl.356feG:F)!GEXP/3lMrHDT<%,lpEmk>X2cU`gOiR)@Ej`t('X!i9@s\#8JiXd^:3Zq9WL-YUR%jm0.$nt$b_RtkHj2lO
%%+#P:G$+uJ1:JgE/=du+GRpV]UA"]=_$-Qr(Q!br?ll`X;+#j>N6m6UNYJ1K!#g[`:f>TNZ8`#M&\lPA!q:D39>n.Z_URA3PO]/>
%X,R,b1=jT(GRduX,RpZ'N+$gs79Lp0+2ss1@L/KFW\S<uJ/1E0W:A<C6gW50-qNI.SX<*W6Q.Th4cG?F!mfZEVGEIS?-6iXh2N9p
%^k>83!W%ID?-rE^<+QoE'M[NE'9/!'!(1!>i7t$JD.HLA6")5S]s_<2%!?aYGlF\ZrlfEP1gfGac6`k6B.%JgiJeTpB$r,3*lPsD
%iFW.u&ZD6Jb6#lr/Xr\8];a&%L(?GqHt9+]H63]i%05%E%V6(_<c#'N&'a!9W#!9<3eD9:4CaT5]Fh"CPQ<lpM?RBiZ]>u48"TK1
%K8dJi,0)u**a4Zq5c+`LlSY!*N/4Edc3d5G/ZRB2_[F5Kfd<D-"HpX,Jd+a"XB9?N_Te4rL_^KO3.t:I^q:8Cf8+AM";c29U.)u#
%;%@"-cXFG3Apd"c9&KaA"&hQVMn6Vh"Ps??,^AF(Rbg2<$0gP.g+eLfa7&;`W^2ZI%R2Xl"bC@Rq*?6fi5#]1.n'2KL3B+,-pLOB
%C%?;N^t4F95$5*fG;oFpA+PZ^@E>JB_TGr(2RFXmpR#S1e7I&j!W)MZFfutbFQ)1V\5U'Z11DE=h=Zt\r(2;BBmTO1DK`HcV<QSr
%I/VftcX2-LI.dGF^OGi'<c.]`lW6<"Dk1cQo)&=Qn"7>)s5n+-ankF:p[_bYroq2Xf8\3Rn!JfaS96TU.B/%$S[OQc)$=A=R-pQ^
%[ceY`=sG/$pg/!](_@E8b:(Oo6BN&#_d6&!iPb'd!QB#[UnZ]mmT;1(KL@Vl;EE'8E):2/UPY?G>,e:J1)a?]#K#:68s77meLq$*
%ao;92:I87(I#:i=3S_YGRt\Trmg7%:RD6\<?u683JnCn[CFC<R==g<P#C($??&5epb&]oZ6en_c,[@)Ql7]XD("C'.b._1`LP6l,
%_.h\r7jX-MBct,R)a[HMON2ZQes'(@:24N"Ql`785btT*IUS6D&&:o51gknQ-I7(J;9`onA]/;jTPaaH>&hPXC*nO^'&u:E$`cC/
%NfdtjYW*o<6R;j3PgtbPFJ3i:((EkSbmC?0Jr21@iELsqd??!M:32@=+?(RQ1EmZUXhHi,aN;u!A%j+ncs+g7.]A#P(A2N9bNp5m
%:^@&UnLK8q`h[&c/I^,6fG3Z+6klf-ckX>KFi^5s#g?-7aGeV'7XgVkE'Q9-3=?apBPdrBK+P-'fK8@d9^"_U%rs"=ercYt&RGR9
%+$m2G@>,@^(Ndrb,L8?9$soFi1feP:(2lsPX"\,'1^JMe0Nu1SoEeXU^oZ`'7YV3I]q-B1KB@XF>]Z858C:U+fEH\rPj92>1^$D8
%me+!bU-UDXBq-_W"/WON^BsW77YZhe]9+&)Fg/C'?+Z?pV.Wg6SPXhlCtbX2@d:><G6rI1A,;]Ffp_\e(<AQ]%1LWQ!(3]1nk;\e
%eqD@aU2kN]C(-!@1b;g"<O?jiCbD/L^d'i=N]!5f`>9]t:nta?MdD;5=RbGJ7(B]sZg8*gH#q0MdNWi\CbnO/QsRnKZ5#@i*(?mt
%N)=A9fooI'd9oEiC`(F")5>".ZtdaZp"8K+ih`mN:m[C$Lq\9SKS1nA(T3^Cb5rJGo50j:L6`+Y*_T&iCBWqc60FW;Tj$Y)C=K3*
%IoJfEop7MY",V9l5G50BOMaK?O3P:r@Se8;S7Y$]>ZB.!:u$Wd>U'=]FL6*!-gFKa65.k@%QHm]P,<!Ci'iP.CaY-3[7e@"U@NHP
%>aa*(b.(1,%ObbOT[a=`%u?6l'LRH"`+ii<8MH,NQGmo[4PNJ@9j0n?=cSg0(q$pm15+%Q:hTn^6nEGjR#<aL1QBIWB>lM7OoX*M
%5RaZR`Gn_X08%G;(4`\oIU!jqbraEnf.boVWsk#EHl+P]aI's<U.&*TZZe7**Vd,*m7_TWVD.7<pn1(pld9-bTgff&ltC@uV"0:U
%U0Zt>KbWB\n@OfK_C/q2[2>%WgE7VG1m5C/`Su\K,*+ht<#]r^+>#4t@TOEOb='Iqb)j\InAsBR6OQ1G<=*)GY-ju6+iEj_8IYih
%jUdu=^>f%DFbo-LZ%+TCc5*H2_S6.YS=*V:C9@q2e)Squ.7T:Z"/(OUcINTUM=C#IT.p4[nSidl7jUhR0s#9EL(1WnolfulA1Q2b
%B5J9cPLrLOCXgL6Lr5WaALubE..a9daEj:Br;_Ke6Z!\Y%kY^-+Z6)s!Y/Al@7QFcZ:#6LN(emuJSh0.Or++Y#.hlt<66i`BW6b3
%Zccoo6W>4g1CAa#R+CV-bmjkQdC9pC"=-Ut*X6adPlaCFkdcA+PH.866=M6c5dQ=q<,X"A)3\emK_1p'!)iosXcGCLM@"gV@&'HI
%g+IAC=C9#S$6[[)\dD<$!MOg]L>cQ;[LB"<VP)%j[T?V&#Z/06[UTD3&Oc:R[d-ak?qROtfYhlQ\7X^`6=i'daOi`fLE]29+uONm
%Z$>><!)!_MB>M\ZW;FXA/Cht"3%CjYPanUKH^4mOVO[pnr!Dm=nl6I/oVLYWA5%qB@.#Ou!f)Ob6f_gG3!j?V-D6kWhh>IT"PaqV
%9rRV.Eem.m+mrW?GXqN#%^geZ9EUP*^5mNt^o(YK_uL0Z*1./2(D9dkGFpZrGN/+M;RGJ\OZ]!-NZ(Q*bW9HQ@R7XI0Gu/#OHQpc
%W%pMI;MYo2PU;!5(>d5>Y>Mtl%*"<dK!/A#A7<(=puJ/%<9caT-%N29FMjoJ<"i3P*:Y5=X9'mt*X>1bdTo>^]@P@SZlKWXf):<j
%0qs1KVoM(FQrnuM6@O`'Z*LBhPIPc9+m@!8GT1r4DiF>4ZcE-`X)l_p&PXD')+p[QZ5"GMJoceWC,S$a"i`/A(O'?2[gO+i#(2&3
%^Ar<eTl'Y8dnopPbT@;"pX>.F'dj.s\S[L@adXnAW':bgZ84bB5d3W9Tpc^ur$`Y0eP]k9#'hti(h-l"$o:03P6QoMZ3W!he1.Rl
%"2L.W-@=hfXJQf%R\s,1AXU:B'm]9734chsG!V2,[f3FE`=?:&nf#\DU`;*@Xb"H$ICm^HJIsKQ!7YsE^jfHoO<B1JQ]93i@]_Au
%NkG\BWhbPE#JaT1g;8D9Blt_&"bb]LJ-L[*ZluLmnDd=+h_ZSG_aBj-%0sor_kb9F[+Nf7V:T,(7r$0<HU1eg23,Nb,82Dok-D56
%Up3Jo[nrX&4A]e#a]SYNOUA?poo<ISA'Hn*W8(HD9mf3J/mU!TMRR$+HP?JN=T_0.Q*^o:eAIA:e-9FkP'`nPM?[gU%,M$5Su#J=
%KVFoWA:BH5:uE+`]+qcu!B$Hl/*r'HW8F4*;dh(!p]B(ij8Ko4fpA@_SS&\@K,3&>X,gE6Ai%UQ.Z9RK9ss*jR[J06AD(_0MDAX0
%@H!0<A"MAlUErF_V4MQ5eo,'B]aScu@D$)&LJW[7T17!(A5n\e;p$;-H#F+#6kOYJY7D@]"$BNaN42BZ(o)XJ58n("9IY^ec;Y6,
%3U[ZB@RR#Gb7asX>/lj4A,0e`Q>D;0i9;P<=htHlg>GL2FE1@U#lGIk>>F5/ot1;C;eR')T`,3k@:S!a)OF.]3NroudSrVoWaWbJ
%dHD!^QA_%L@f`ZS<u,F[cB9DV*,<;V?oGaE3;a8n<+=:K9fh0RA[61o['4G0(/OQsdX)(OK&q%TOp\TXm4d,L!sX0"VB/a]".A"0
%kbXk)3td3D6&NcTX`P_TRJ+E_(5UR0+Ij33`a"1uiIV1Z&;]UU77&ge5ofC3#W%<WL"Y)Fb/h8p_N;/b;o:^ebI;$C\EB\[^"5f#
%6N&oYaVs5l('9,cT:eN6f4Hbm-E9W\=]RWS>FYDHV,U^=KqaiY=B:>N9:Dr9)--0fjQ]>BBkoml]Sm>lX"\4M!q)a1,uPCZ!Y[0W
%(9V(^XC7'0=*VbF(E-Rd["Y=[&=B*%-OY%Q1?0L'<U<h\(/RFC&/p:,SKi@O-dg.7,;c<]FE:@4C3flB7[2;j[,-Q[C(:uJ=i>iU
%nE=#/&S_L633R"(A>ZC2^20)>btS8H_X_d#4Z#j#+G-QkT.46i9$h6`4t]3+R2H76%^'l)MTh"&^=OQ:eHNfKUWtVu=T/=,-Ze;Z
%1,jOKoSdgf%5U;?-8n)>:U3CH'N(q!d(5oTERZI#Xmdb!j0SdrX(a%*@_tD`Q,0,J$J(g,Bkdt\8o8.QJaq/SUL17&W!WK(eYn9a
%@(CB#_WRl*rN]<(;9W4X3;FmDSFQncr)8j*/!NM6(pQtPEMs&A\LaTIDb)IXq+Wk2XUQQZ0ej9_U!0)_E/XPBN%%4)N`pq$a];8E
%0d9W*JorI9;#,QnaZqG1bd.l+5p@,_?D(MdVrLD'e'G%o:7MH2@-0"_oo/8o(kJCbn%*$;MKRX<?8K4$-n_:ugbVWqAEi/Yd@^*i
%n.97CW"VVic28F&.^]OAl3ArTduZ.K9;C'WAYEcH('-4&,%&q!KV.Od)A"tE_tOba'!/#j$f"U=W$R0cb=TRQC$QqsC7H]>9<BOp
%+omhHU<r/e23YiJCp/]ZCkebo4.MSZd6`N8=830tS4g7U!G>+5c*L'MlNu6"@?6%k;i0fpABc02<tb$)NJ)n16&gbc:)u.Z^8g,b
%1caY'@X?]p0O5RY/gK5H]:mXTf`RJK@tdPXf%C)d-5O[;3F5E(]Sqq("_g;:$)otT!C<t1Uh;SGl7>sE)s.m9(..+o<,"G7i.=8p
%6?X@5%P"g-).tu(H4HaPUE=9cP(D2OA6-/b?@Zi\<<"GpTs7^I2[3DsWV*)Mn\:_N\Arqs0YuP-fYi#5-<h<a9o`&MNWA`V<T[bU
%/Vg8>1*%1E]g`1kQaAU(UaXEZC6g@s?@e`QE/Wc"?=KCd8PA4*.5H\\J.7-g=A''c$C=XtAM(18?>8?m@NX^U&\=]L&I9dV$0>Q`
%F-9P>ai1!O&ckDj`E>)<6TS?V.B*<:2^cD?OhqE^/D$>AZZIrs3j&"S,Wt^fXHhfGk82]#,'5j1HO0t"3JO9RPuf-O6&Et.YmL1,
%K2I%-qMG]Yq$]mGZq0OUU%)TMekR2e\V5$QPBnXa.Op$'kBbIuTnJ"(4;4;P9E=$\-k`A8c)m'bo9WViJYZ0i?Q(b&=D'E`<_U-=
%L83n]1.a2#'kI[^V^Y*:P\tP$=FE(UQn2J.CE\-pYQqV@Up[NibV_F#0>s7A#"FV!2\`Q-_dL$)JT(%.b:[MFj"S6%"&]79b)d6d
%R=;C,9>#`Y+jm'[AsB^_Fff^Anmr"Vd#:Y>TZ#L-/G5n%ic]hceTWnd*EFEY"Gd?X,b.T#a:ck(@m\F5+CgpVMZ-0CS<UoiKD!AK
%aX17-]o@4[ka(?+4dTq^)8Sr-N0jUcF4@;U0:a7t,2AQpKRt`H][=1tIMXPa1MAN2Bn#FSp+)<bh.WeToZ_r(_`sp1XXdf;D\g_'
%-E(fn\9,!5hc5-O+C0^l.*0WDRZ9$WEB5[Tkos7Bgu^lPf=F6+JS%R0=*I86`"b`n_-U.d$r,pq)So"a2?l%u\Ep6YHW?t9c5O^=
%(KE=;?eqB"mm8dKRt`&PET.Y5+7rJse%]$N'AT!d15i0l;m[>eeY;%WZ'8s*;/uMEqK6.DS4Uj'WbP,qA@7D$7<*WZ;cjbK#NX!9
%*4;G!.Q-bHGI=#ea]9Eq;,/+:3=fQ$&rmC9bd?uURQ*&,1igB8=f<I?\X#4,pN4IJV8Vp#K>9Dde5G;D>XNm@'b=BuEL^g"j(_GI
%b$7$`;o`s[dc#$s[;n6]Rk.0bKu4LCJ82gA_Vo`aU1L`M3,2j:J%7*L?=9"pd]/$hfp[ejMhZ:E=;kmN1`T!=#^`;s$jThL<4#*9
%n7^c"[:4A/(3j'lL=:<6C"c"hE'uVp(3`18*[>+X!3p:tHnA7cX((&+\sW;+[DEe;Mh(M).\*cOP?X:Z-b..t\Q1.!2,27nk!J%N
%8=rpo_@p;;jlSngLd,>lP%C>+a&h:dEN"T.;6l9LV6*QR$;/]M^+9tYq@0O(;X9!gOYVH5;'m:6C9Zo@MF5,6%a._-K]<MiAEnT"
%E't'WjIfKY(Fm5$AEO$QoVKG0?.9+7oteN#[6/[O/POluK<l85#cltC-)iQ1'aI6c8YF)*2E9iS"kjch_(eFn;?U`GE7EUIJhLD@
%E0T&`5j;KaE5!79kH6X$8mjZleRDZ"SF;2bK=[<PkB])lTNc."Y,*c\Y0F\HoM/Qr9_7/CkVlisa'>g^2E6:@=T5[u`Y*<URu;pF
%/W8oPg<?Wf.hBq>&3\LbK<mfZXRKeHE&@0g/Zh2r$RHp5U"'B\,qlp_@9F\B=>Z-%<Zdi#[0B\-md#Mk>O!bhN:k"9-rBQE'aSGL
%/]V>V?%HspOb<7HJT/>5NVTK[5WBHf#3d`)K<nl<94-<Ii%,;UpBf=NiFpV?s""M1"*iAUj]3In%9u(I&'fC*0l)&3*ZWOEM]SeZ
%'5F-]=j=R^&'dEq28ZIZ328J=+M+sE3#k/Ya(9[<a$_p(k5+"L@;W>O+.VGAX^Lp/*ZW%SV7BcTE6'I[kIr>T:+-?MB!"0T+[ANm
%>Bt0sG0/1^kOROB#q/X%We3CIQj"J7ecuG9a-'lSqVVoD\eMP9\76h0TI.'13*J-tISh3BnQfGJch5-53+=M^Z9C8G7"i`uI;kL6
%/2UA75.H?e%b%FA\7b']**Rc0cdI^"W]W8!#k@"i[2Dl&^=-+(*-,q)dGmZ@E"ji//DXCNK3Od4<utUN]N`nkf4Mng<Zc_WXO[X.
%]+TMZl\"NmB]E9EnG*Z22/munY2S%r,HZ5HQeO?WX7G2=@YgLS*h3^+a%EjB*h7@78^`Ofi%ESQ;7/Nrf:n@E/e8GNPrVX`o&,&K
%'F:o(_1BS)#HF'pa#TP@'O?q.pIqI-IP)-@A=$jH>'Y)<Ok#'BI<fdJ>q7mPjhV6'%-G*oHK.I(**LesLLj'<YLNkJ$e;ji*un^>
%A&TPPqV\FtQ`V)Ml[uP-0Pd72l@[RDA*p'q+'`#jRd5UPQS.QUdn!uMDljPqJlDLm<3$PTnoKF$^N4gBXFM'?[//^>>oZL@eHb8A
%7d4Zjot_[+/<J"Z*uouOXP.u-*ur.NRF&'"30of6$Hr;(B\$7RecOem&L_0A&.VQ+XJ@K\%RE#r9XtoEf=IHcZi]2/N=cnH(H#C(
%Eiiph0F<b4#hO5O&FNZ^@rSIMi@K\IV_f1qLR;+/?PEc9\PB7/>ml=l]P,H!/eIFNS;qc,.hJ<J:=Ha9GTKOU>uV&ah2W>S=r\Nd
%Bo]1C#%qlr$K:[^[o68XCon,;]N0<VKu%9H]%VR<E"^e?>?PpXiF6i0.!VgJhM[i\&Vqb"7k4m@bfJ?"XD!D.?b.co%Y"i'D/2:R
%a3#)mFLleVS9icB[sHs@46?p=C-?NJ+DAIb^)f8&8(peI*]Pqmo_h`i%id1t\u.t[nB?+*NNF0[oF/GnTiM8n%V)>(kAoL30c"c3
%"s0dS^/b?NZJ5CkiD,Ethp/E_J[67IlaPKoh^m/D4*>F4C)ed?CLbtLOg4FWKNhZ.RL=9(V-'ig7;psK?SG_XJ*T&o@^Qse2$Cs,
%?HP,(WOi<Q`blJl:\l.anEC$IJKkLtPI10ai6XU]7PlV!cB=#<Htk6PBPsKh^(`Q5h<%&^I+9[P889Gia)(%GX=AeMrM+;\[S#J.
%2XD1*<XG9f2^9Q4qF][FWC*6bJYU$o3r22$I!7'?;V"b(B^i/>!dF;H6]4:h(b[ZtCFO4g9gu:"/HsFN!Y8Y&!bYCA:k;dWS1:bl
%'&kGGc>4QL\s?4uNY`Or[1YGTHr+CI<WXYgjO1=F3%I;#Lib3O:.:U[&:G^@<n1_1;(VoG(F-Ig/Heg63&,]Z0*KRe>-mQu/HjAI
%ZW%PQKtnQgK*SQ%^o91fJZEq/;9k="s3!I]I)._)7qs&`Q>7`>X`_E^ooM0cM`Teg7:[TGL.UkTTLdIJFhlDAkk/L-E)dd21=lOs
%MeLf3s(Ce+S)ZK2Csh^3d!rhI8'IJWl,n54k`\Tk^2pJo.kK",<nt3YJ3ZrJ&I@TNTOc<N^U_qPR8qen+:8a[mY32R,>jr\ouP2!
%rEO-V!B9?hK0_<2!U!C,'IXGNKB**@5/dP8H]04S'F1.37PLGL#99V7n8HTk^p.n#>M`c'%A@MKd@A%',8e9ITah1M=1&l^K`Qtr
%5[9d=%QI6Z,XOO%\3^'PNRNUa%LKBmB/&7uYf'MnXXJ*a>1a;eNaG6Y%q[NRHmU"1)[n\8)tr2I(iVj<<O75XNpi4dQA,H9r(T(a
%btu2YQUDUTL'#XE-a(%8!`$k1DSq83DE>%#6NQ@3T[]^2JCEh.$MZTTJ?qn(TjU:ia+t=DUSE>YEb2'V&9&glnr\e1NY*7%X/Z`h
%(b1hPcQU*WLf^;m+i*XEL62?C!o+(B6_$Mo;bC'F+M]EL/Q@?&VZa-eEsQa]8ldC1(dqh+'J_^j#]SKY:(b6t!RC3RoKm#;'DIYY
%7oKh8*!D3#FUW6:7ja3<i4K7FcZ9Y:>#)'e+<)uiY>,\@M#gA=:=^H00YiPDB[nXZ"utC&6MGU2E%D>J\sm/ZF&>f^2\^3HZO'Ru
%'Eq`>dqOC9DAp;_`rQua>9/k=#973t0e3_n'E.!BC,k.-$4+6=$j[hkc"(r%!lpYLk+2U)e,/Z="sI$72l[?+&3+RIIYepP3(BQc
%<r=?U3;"N.H5d@(jKf*+JHHCeTQ)h/E!Zu6.,[3,OI_o:J7G^fUS+B4ZXA`g`A83I(5^[!5lkV/N8tBV"e5a<;(F@k'QBjG"V@N(
%J2:7Qm,:kWE!Bi.a!ERs2bMn3LB2$KM/hJl$omWN_$_&!E;"c:f[c/"V-B.,f+\PHA;(M,8Dl&q,7n3L!f*Tq\;W3hE+Xf[_UFU^
%&PEeO^P2k$M4j^iOME#O?!'Gqa!6g4IYn9R-m+"m)\P+\%;FBN,]Gr3p;RLI*33!4fbtJ_VO/44*=85R(P9KIOMJ+h"?`S*JRb9B
%mFRK9=f9hK=rlmk6_!'@"HN%!$dt#p">9@ULr7K!^ff"(J96DF2f)$%Q(BF^V'pF;1FR4r^>?I6$J[<cmc"KUc2oZ)dE\E#-,???
%^H<fEq+$-%K*#\&?.+h:<nhm/nMDY5CD8%:%L(._E15T.>`hL&o1=]=[mgJ9F!tu9>36AQ-udho3N'4b"cd8#19QR4i#FnoYX!b\
%o'$t7TYQ],/$Yn6%L%kZDco"4-ubi:emge4F=;,%E.pUOZJ]m1`?(X;J[5H;mFMdS*$rWlG0utufgdB5T0e+($Vd9&'FUGuARqfU
%@,Q9f.%'I%0Q=ZWD7PB)NeK+1m5$;4/9I;KL'91B`.AmC3.EE@.2Fmps,,U)=Pt#g762Kp^a2G77OW3iTp$+_6\.V!NnP0S*:k9m
%*XrIHQ2-$pX\drcL9AB%#olt4OjNk4$(MN#E<H>51./Lf$j[gp-'h=/!_;f^ip;O*%\-dlK,G@_0e`mZd%J/l!:JW**=<bo=MdH8
%$ClQV_[JJGEMN*8bcnn%h)&]]!b[OK79p?1*"mE/cEY01<]%N2C!.`57t"K,",DF*I5<^!Aqt=B2DfB%5)bPW#JT<sh\Z"]a`u_p
%RAB:3_ZMj!]45c:ido:'P"/=<^nD9EC.;ag?NQ=_.6YP!Za*Dp(DRFM7HF[3R,NU+1T+8K7m(aVK4JhT@<;L&akS!p4E-l]7Dj28
%J1>F7.j"KZQTkDA*]P3#4-U<+TAtLOP_A5Un\DF%M.kW5^^4DdhS^9Q36%GjA]FmcR[#ID%1h7$_NQu$35gV"F?"5U,DPVJ*&tAi
%J`Q!5i:s.5fJbd/8m)!RK*19]fNQY[_!qh:XrS!WE#8S93.h=2LPRS[%L:99IZAT)",CYuf9i2JJ]!Nr^huLAB5E+;X:5UYd==mm
%FG9u00bHN/)E@Y0!?Z)ji.f1u9FFYD^`h!X`70YKcIe_"*Q&R#*,fJGVq]S6%E[uD9rD[_GRm)tSY:TZE0i^LL_L:<&qYGR^qc(f
%#9Hpd!_:6R\d9-3Mc,;B!<nKo7YtPA!_6NGqZn)QGYofp3=n/ZJ^O9*#98?3jUh\:0gJN&_'o^Ne/&b&*<_m<s4NDLi'k1?jq-H>
%\MH8J3+=(@gWpGH%Jq'<*>-(1OZ?8AE's><6:FZ^^]A&f\tfN1%P%eOIWGMY`$K.gr,6[pd/e"Ohb9KS)OR4J_mq*0Y+gE@O.T7F
%%K%/iB7OWc@t2C&9"^QWIn)sBgZEUj%pRHD^u+Y7LCs6L*7lat;:KM`=g?(c#5Xm\J.["PD[_nL-t+@a2oUHGBqX@F#Xiq?rMB](
%]/f(6<\O?f46SUcbqakJ#4;_4auSI*CR=C<hrr$85acG5hf'P5#1tjE/p\uVloQ`^GR++8rE./\:u=[J$tVj'``k5Rduh?^U_@Fg
%.FL/o//;$XD[I$Xl:Bfock)TiI2@JbQ4`=":7j=R"6[95M:Zm;DtGS.k=:bTe2IcHlP/D!-aV,D`&BFdW;($+h]Uc50Z.PuhF2::
%Npf[b*,OL:mu?+cF^^$m%9?0\b]IfBCgP+F)R_T3:1P6u'\XL_;ki/.BQ&a^'"N2nm0td7U-j8p6M.r$mEHP02XJYl]cgucTS%SY
%;QR>(9.18J6L7U=JU=.d@L..qp4bnfrAd7=`g8^F<\(C5ZPR;"BXlnfBf0M<hFp^,D*;>t!>nT<j`Y$M`;Q['kK)KgrhK%],C;67
%T9:4W]c#p%A*P&e)p*s<9\(6<S+1LV>0WbSEIRF&3j^gU]'=(B&_\0O24`qkZo9U*fka1PVP"L+H]%/!0stkRp4e5lPE,$)a/'?4
%AW#m"-o),1)R_T+$YJZc[Po`KVUXe]hDCC9F<e4Q6Lt:'JK<Ja''[&s@=(WQg4g3oS+1i0Crc5r[UE-gogtC*7:_ok7JEZ:'GOAl
%7/*Qmk/%Dlc*%t#)Ss+$K!>tt#4@I9\Fcs^E,X<`\S+KPDaTut/RUARD^$3(T17aVM<\SB2fN]H!N<MqK6nR-i6)Do/\t:C@XH9E
%@0>5Q,tUWDG%be0PR)_h6@0rH5jlB9Z8WFGD#S@ohABKuc?<`::/k,?LCr:1@;sr6%GRAdW$$miZ+]\4$t+6pDo6gV)kjt(-S]?u
%L\><kQmuC8]cgc&G),d'iaW65aPO#AiG$c&]j]g)%VLO_9rjm/Ru6Qlp]=:s)mZprl'CiYaPLb)k7Q4*]ifVMZYp'8%HgT]`uDBE
%*)&iJ3jcB3EG0"`#jmU*Nj*jeBQ">pL(W./JPTGY1MC^8`#phdTtM<i'NB%*p;WRVr]c237\lY:iXY@8+eTo66hZ8!5XQ"5S!OT,
%.&'.)"(<G:^tsl.M':;t]c!ENap9d)HS\:?P5GON%>c'W%G2UCHQbJ>!IHW*a6nK_ljZO::?fRN9[$WDl__JSlpEMQN6'k=:[iWt
%p84T,#dl`_p*Tc2i%l)#)l_["R*#p+c'01UZ=hhHbT!=1W+10Q)8cB@@s_-#P,gsT]r;EW1aBFf,Rd#bTY4KI9U;!!m>\g*j.V*P
%ZWc-$[fPpAW1LpI(#5;U'bf-6]cdsncPa5O2lu74X7FHNBP#*ThY-C+$ZQ%):,o1;ku!gVHa>=Zckoi#DmnmBS=sA<'7>"#qfTjN
%QGQ!j7Vm!(YfVjNhJc,A[V?$6%>0Rp+V!.0;UdU`d,+DT1J)M^d,),U=C'gW]iih1daa*>^&=dg5H)>k<k)*6eg-!O$D;]A$&Np,
%^k/N7_H3DhW)Kl/EC:?>O;$1N'$J]8LO:l44#GR[/-@1-S(+5s(mp/?IG@\.=F5Z:c6C1TfcCPH'[02QZ37HU$b@?VQcQa",VsaD
%-cE)V!oP66RiUcrO\GpK+cD(\;4\q%L=g7r_7_I#+(u&q,'P\gU%DcfBuF>rqP!XlKdmJ(1h%1"0dql$.B*J&MR3"<@:::M/a++G
%)md!CYV6A:_2,I0SU-4AHPA%IjV>p);.Kh$%2*5<_Ki6N$1gW!D0gjs!O+(n<knj&#AlV4/fmE$OsHj,fQfiOmU4X=e\/JS8>5BK
%2q!R8:n:$(m+B[F64`(0_WSmcA`+a5/<mk",f+\09),&9)ZW!9M*3mjQGODs#(5;\P^t:KejCWd#q.DY!,=ptQt)=EYjXUU01+OZ
%%m]$REC;9FQR7*C@O-C0W6t]XWK9O&&QR6=`M4G_q'dWjp&HC]=[S@niW+gRDR>$bjqWUp,<"an#8P4cUC$@u5+HkT6q*<3_QmXd
%WalF$i>Jr&XkHZ.nEal<5u!)aZ7,/8$98*:,R7FeYc0qjF'cjL+AV/)XMj+#,snb3=tPd<N/W+6`N?dYB[6]GY#%2lblTk3R`%t\
%K`M,F&eL_diBZYCVAeB)UO:1gUr\@5c\S@q0F/(3I=@[oJ/4/M_ar6$)W_7\jeX8me"Aqu_YjJ-S3\icla@HD&MAOf>^3L+h;&&U
%nLDtg=Yul@#a,K?@6kRW:ha@K>&"^$-7j+Ffi.qX]Pe(3_XGjed*ki%7G$b3!)*D%)i':rno5g.jq:0bfqO'Dch]W`,ebE47skAb
%kNK>F<o+.M5%=Z-B,'R3lq/TO8`3Pcd1Plg#2k/BK\4/niAg[!ZM4o=C#fNGQD6W67i+B(.LPCT:9d.H6cgHf6qe]COf"O6'EmkF
%&m'<P'L4&AWR^VgJJM(Mlc:8ATETMZ9eeSO6C9%S=+I]WVgoQi8dPdT;2F=aY*9FgMc6W]85'`U6*SZWTFWI`U)SW%$4kD^Yl8_U
%">`dr4^uDKZClrqQSCjBjRH_M*I`S33*rq[^O\VJ448(-#sSL,&`E_B7@ZG!1WeGb"bOS4T+Y`M)!"G\Z#jP<Bh38N&V;1b9(i]f
%KRa;`MP*/V[TWil!RM@^8,.a55`n2T/0gsDGhB609<1=toS(B*4@n]`c;aMJ@l9b.>&PBBmdOnkHLdHV,11a-VDf_,.`8%bau?$J
%cIu&38T](8pt^`K@XB>?:YZ8>gYo-1rTL@B5V'hmAjH]g'iO$F;'!9A)kJdkZpUU1c]U>g6nK+ZV$JSp5^B,7Rq>_,5o141!BE/r
%C?&G_o1P)pA],]M'9GiLZsf:*$G,&m;L#E[`E43BL\=\3BO)*&@?:cbW*;a=/$<="&BR(^^e[^>A!G.MYr/Eh*Q^kbeAQ,6*YC6#
%6ap&L`-&QJ_CRZbfXiEeJg<T)Ecb0I!/\lda/3:cKq[.n]S>_d]e+I5]0<Jh)1';LN-upQWKsL4I,QVh-7on4RuBsT4no4qDo;*U
%d%8Nm%Yq\Ak7GWj/,qXU#r*,o:L<Ta"R9U32-M:-7!B;26C;lsjC)qBI;=6o,WeOqMUVc,AmBjEaM9mUCk;<)Jq&/7rTgnbOI`@l
%#7aag"s&=.i+7QS#@ODr^aAVYaCI3T$fX.u+:g%l-3rIGOF&[Ti)%LJK@H$!UKOsaIA,9nJB6\-c4!!rKQ2.%69YkLe(asNE$8R!
%Ipa$bIYpjTU5.Ath&n%%/^,rHa;dh$$BB=lV\.i-<Yj?hJL/iNjrKP]:gXEH_QiJ6f7]uSr_YL!5n`-6i]W36@+(PodQkZe1V>TN
%7731\Yl24(dN`BZDhoHqLN/ZC+OUTD5-+/qWU%)LF<YUn\14kde2)!e.5R.4<^'M6gsP'6'f%erU]M-4jq^M4`'62tpZjk!/HZZ?
%dNI>f8IE/@O&;baRcBdG;66FEWF]t#aV9Y"fIX;6H(pV#YD]?Dk6GaB66DZhN($YO!"Bp!]"FDRYuR-!Le3I377M2)G:)YbQ(=]8
%b.82t^dOH-pS?H:%n07a"LpWHj)KmdU%GmB;Q5KZQ4M8PMhZ%?!\%,Z>MDS=da]Ql&m`C23c-c^2`7Tie:<H_g[IKlX2)OlJ@UEB
%_lF2qB;A',6t=.;i.o?JDV>B0@I=Ko.#%d"&QN=p0;#&_&X&h2$1]<4W/?BNSqLFeU?MH,%b(M48mBD<9"7fa=HP9T9*lRB*qCQ3
%"iT3I?=AS!dAi0kOp"<XW<NYh!-FW!8P2A1o)p:n3&I!B+)%3tkM0;JEe0`<&"ek!91m!pN&q97'o9&EO^pO3E*mj%i5omYhK@ue
%lU75]85AYK>K/E0m#fPeKVB]Z#f(ko&6B,d.@*e/p@(tS/e!:X91munM(E*M0XX7UMl@9<fLa/JBj=I8Jq\r&#I%@XND6gLkt,(`
%%aUTP,39S7!Jp8G@UR#K-GJEhG<Z"f^+\L='CPR8i0GASa\E%tT\j[V!>$I84Aini`UfA.,3LCYn;7k-e:lfC2+f5GSOt_#H?@0)
%W.r/#AAJrI""YHdT?1D*O#gSN]t'*Z?ol,d%d/jP=.j"T^h\OE_2aMAc)!9gFMj#G4"?O).5RDX#ro:NC:oRKb]'jarp"4a76NR!
%)VrgN!q_@/@4a2,Z__,@<sD"n9nL`0Dr2*\Hn",Q*/?RGG<_$h(<"9MTn!sdl;SPtjbP6FM"AHc?;(oi?2;ho8/!*&A/nYb4!h.l
%gh&ieCVOOm5(l5s=G2+T3QWi!2FJ2jj&?<I1Zj:A\]4c.gk5uG`dh\?nk.bPW93uS3X.,^cUo?/Mk]X"#<N1udVrC<^'*W2l[<.P
%F#A7:JRK.Qp'u"pC-=;$U/\\@/oVgn&*P;?@8Z=r3t$VY!0C,"\L^8_H\$]92I4uLD45k:E0=XE&qV(r"7^A>BW$FnVO`&+I]+oF
%!eVdE6rdrfEtYe:D(6X=&SMh[@C1(eIS9_aL6[H8&-A1bn:JZIP58SgcW04/fqnn/!@0PeE*]N+`i2=q1[qAU'W1Ig)EPZW5SKZ#
%pFDu;a\cb/qZU1LKBu]Sgb@)taX9\Wc%$>#M?MZhN<oJo&BZV$Y:[h?\O-:1!%\P8jRW9;"PXm_XW[8dm"E/hNM)@'XBrs"6PmN\
%n_Er2pRXZh`4D]Jg0c5JW$=!P;aX%q7MY9*F>dO7!%HdJGpQ=!fHUgf+HC/?.*n)!"G\QQ3(Cd99J_!urA,,/'F$h@d!)^K]NR![
%[Y+1AjTRgr]h4Wi0pI?^I(V/==$gh*gaM)*S)H!JTW]\ajjj3hX[e%an?bh[#32TJ,=0nP-*WmOs+c,e4\4489]Gbs]3Na3jHlh3
%b++faLEL)F8S#7UZ]al0&,K!o.O1Yt0EMg^`h3MWEIkX6PmpDNMVZ5mjNq&0$qT?IF>;-_o0r!?\`.\n3bHDqaJ#=p5_Fn3%H<t8
%%j]*E(2LX%Bmm`-P@YSXc-[?#KT,SSm>((fT-?Zu<d<*RqUBDC6d=sEDW.)B`KXTi=/Nau=KS6lf'J6HaWt'r8T:7j#fI5Om9#O,
%GRrfW,ccqk\pS5g6kWthr)+n[7(in';K+ItYH]ncX"Zg?$r,EZL&rlBPPS=9('Ub$DJXF?:&pV&,0?Ds&'YIf<o"8N.su4WdL$d6
%kq7Ur'#hc9O]iJQUbWVIGRF3`l>j09L:YVYZ1pqig=5(TK$g;!L/S@J+cHh\B@b.ML@l`[$fKlTI%qmLd>8R6%,<4AWQ0SW6Yf^2
%n4OVQ`Bo=P*DgCk5VXNIIhc.bDAS)T9F=\\<gu:GfU,DA%Xd#qDa7&<<KMGC@"JX%jH-6JJ.Su8OTZR?,F5?#EMg"tZtcr;<j5]Q
%YThC]PX6d0)tG.Z%Qg48[X>XZ!O.`;[O,A(n;BoaqN,*/M&;X5f!dDX1.YE;$p.(&);L8+rs9!S,9f(JG/r*'oX(<7]PO'/6@d!P
%X)Ed3-Yq&@^nq5q5t1_6&cXmGVap2.8u=bE8J^Fp,ITS>X5P=S8oQ(sgKXbZ<G9F(4$fUuJ2f)32FIqRC("F^,'>$qVj9g]360Al
%igb%aGu9l1,&+9'YVM&d:)r64lj9Y%TTBCD)$;]2OUN3i=efY!p&d8eWjoJka^0nO!b_m)CX<8j30Yt&Q%_6ZQ4?[LX&6`=!eMu%
%9cnkB/_0+_!`9Jli%L:!_S^U"Z_p?m%:S(tZ40$8p$&&QMH2F2Golj]rD/4q0ERnodn"d^kUN89=Z"AG6kJ'GiBY^5TiQKmcBc%p
%PHnmH'Uk"<o@kH[+aO@Gk:@K;TF;Qe\BHZp%+K`6$/tN^OX4A56u9,"*-4#?.3W24S4@]J$fSC7;L9/f8&:u@&IDj^(ketnF:2I_
%:*fFo=n+tS^$45a<5/YcE?:&f:!b-D9Td:8J94mM7>rpY#:@$DIknQpSkC;%S-/=#9VZt5.K/QRTbqe][O8(::[Bq`X@k*J;kqdM
%P2d`'DmY<m&IAQJeF8=VJd>ZTmkB_b!b55f"K&N0Op0EM1.[2)[V]tCC/Q#0>TqKH8eVf"ZU$C+X9XEt*_A5?fOHT'KU@9T*'@>q
%N6ul'"Ki>^4PYn*:I<:Zh\Ru29E>UVR#X]FaTPmG1^S;sEXMoWo7Z4aaS^Tg"\C7G#]Pu93To1-N5TV[<,;[bJ:olk<-;:jNgp)M
%dNfk+K_&+Zk)VjU#S5*4R#8UI#!cka8E+sZN45`;#FH>!HXu0]61\\k.S@21!V_:4IPQosr#j+X7ji'09s_<#iWJR5Z<A*]e_j4:
%$#Ho3b4nok0!SuW14dM7&1!1Xp'LO@1)p!bS%HKW2,+H[N@P+7_8,pr1")o/nP^6X4Ec)V--1/9f@]rJ`uieu`Gl5Ui>>VN^j22*
%L2eDf!rso<Osn-'#[420HRK"E(,"o\Hg<K+bbn%I6sU1OQqa!FboYq0!=<iZ09S[@HWlG$)hlq-)./UW"r*UuVM9`a<W^1;,ZG3c
%k)l:1ZieD\Sf=U]%a:c4BSDk_Ai)SXH@]QjfZ;7Kd/>6Kj9g!ZP88oF!i,h?6DKpgpj/uT:;Rn3,4A.lcKloI+F%=G8L6/uZ=5UO
%PEeqaHJ7aChWDjV[IiELAi\6=L`4o"c^GImN=!Pc/BYD63ikC/H=-s8[&Uj6>f\rN8)Ku%pY\B,lO]7<#]>?lIB:k4<KgT)nAq-I
%h%WZAPX0CKl[*#H84+7kB001fB15B-qJLHZ_;Z#@*G!6QQhBj[=D:g5Pq[/%M;jP@A_!U^aoIY]IgSip,KX#=:qMZ"jp>*0P*1PE
%G(K09;9s!IRU2qXjT#WTCV97Tlp7mZBr2#l'us(.6-O,S]OX#L.s"(:j$S)W$qah+"-,?g9G/I!qaIj`fI-)hF,a$<@.FbibKf=I
%%=lZspPG:&GdtOoaAM/D=n9iP%Wd#2i[?t!<4!'F:d.0[9[l0j'&Xk;,*-"]70rL2=@@NOpi$WAGjT;m6P#VkR,[[QFYH](X?UjU
%F,g_9ZH5CAGVet!8^X.D:^1lo`#b9-;ZT/dl]e'cGe5`XJh9mtJhJ8</0lJPn%#ZU4jJ'^e.`(ZI_mgN%8Lfj^k!LS<he^ZN.Zck
%O(FQ3*^N,@#a]$h?2&k4:L4AjkcZ0M+c-J/UmfpD`/p6&^G016f_-S"B%(ag8[9+q9cF5O)p+0EYtE;FfS?C*LbuH?bem"_Pmkqh
%a"u4Yh$g:g]$'II=d(-3c$13l_%e>C2\5p$heK!8K@C((3@mH21lEp$!=h]NPT;3b3)%P4H0(mNBN(()0PfDSKS%TGj9l``K[u]L
%p`dR;OL!^STgaS39(J(0^(go5qMhI-PVd%T(LV)'Lf96"'%BGdMlB:#`.m3(\.6j.=Cl*P:6ZqDcf,#%^sMsq,j\)F,UR9<YDSBs
%#Xpi''d.Z.AEBbEV:[n%q4f+l6$Lmb+56@[<Ij\$c5iSN@YB"&l-_s9'o.G:?MJGqO+8>nisVD$>L%#ipoLG-&h$$3OIe`<8R,8=
%-.klt'-$;$kY%A#qKOF:F!PEp;I^%9.KF)EqtBR1+HWB>;4c]LM*:p)T+"6E*iO5NI\KFD@i&h4'Sd/n9%:-K6o-sY?CaJ>H[5[l
%TB*pAV+&K+@u<rNi^d\j'ZYij&.LrtWBVu_/)n'OlN*k*f2s+WDY39?<gjWH+8&)3WT>N@U6c+ZgCu*/+D6FF&46:4H"DoF;b2^,
%MpGjro(O`%LCS6g(uPtBFbFR?W<ZV)!`Lh4C?J1?3*r'8Q]gl64GI"91e=;L?C("2?)4"]GkA<T$t@'sL.4W9$(#aA=ZN8!>dDUR
%0g[#'3enCNUOZ`!QUD7L<J.Yr(qMABpq)eYFE'_2$1EpFaDMJkSGYg&L8=t`]\kO6WO21T_DJCAi>&1UKk\,9*nGDPY_l47"@G71
%`WejQLP2?KjF9iV71N(@Eb7@0\qLu$#&'@Dg7UVsd\iq]`el=#Ua0c9.E>No<6DM279e7C4*_D-#Hh.n(8J+r9&U+YQXeak8a000
%%(_l_85+P&H_VT$kb)+YgOd78\.pW(g=.O56su?])t6R/p:qMs.T-[X%gN6jaNVmI<$]/kD_F&RecK7n,]jkQA8m@_[N5XedG9=(
%BFcpCB$T$?X![/N5seZf`rKOJU5292%4J3$)pBIC8<u!K2dt>])J97+W*u7D(G/0*'uaJc7Y:ih,ZMj&I*Ar8W#gSa,09g-PTt=4
%g9_iM9u(>XHp[.!$nTh<"^;\(jaa4]kTp#I2V*EV.e(T"ZOmBgOPC23M)f;R]tm^3ZlYEZ&s2>E;,6$$:'.CqJt+_)A`GfeIKA.&
%;<,H$aW^mL^6a]\<Y0U,+(_GP"!H^#7/h"Ai)o8"4arLdHBFjSct*5\i(ldngdHbu$W5m;;6*#=`IM>N',5u^/E>@`!g7-3<ha)c
%8?!d+/e*Qb[Pa_?7Q62RFsD^Y7,n_Ji@:Y=)&nOQ3\5mV'=?IYCL@_&;YE>H.Ml9&=:&)\g_Rm8[f0G,1,4.^BEgUhlijY,g$BT<
%`j't<V:6SJXZ_E-5]a@:OJDFa&C@j==U?5`@$H*dofg`*3774c`Os5Wd7eEI58!(`CgJR_57>*V@4\.$08M>30d,Ih]PQPJ*/<Z(
%UB?'k7IHSH/AUm#.=kf@PZE/0W$%nUF@j;%!f<1s<g%oLL'6oPLAYS(-`AcAM'87?Q2%59VL1+C$BSP[nI/<Ebq4]3Em?i8a1fBO
%Th8I6$&G^8@o?!L<'/Ji1;`,S>r"0J_qpPr8+$E9!&1L%ToTuM7)53A42dOY0J[V/C=J9/Tn,:]X'[B0\%hS*#PE)aSXs)Y*gr)2
%,fDUf3hM"+%d/C;Tu`,N\4*;OX)NV9`<'B<M[kR7'&J!]C1mO9Cc>U0K'=)m-&*>T-ql]bFT>%Pji>UrLh^(cJlmY<W<na'gG*J0
%Cc8T,_sEJW+mTt9_2QMOknk4=%o@3=j.0FH0dqL\n1J:'aX"QYOs_ti%F":gHmIt`=[`Yk@cS,;$6eYm([-S:Pima'EW'G[rBks&
%2BfI\$:oj-)fX?aHY))P77?K-%uMRV3"1+Efi(B"?MLlc2J*K^MaJj,:Qe*kKe+magt%V7KO^g91P`h!9??ZiAs[A`Qn75RUG5mo
%>+FT<b,DZ@Qgh?8JOE*^@LWcY!e<Nj!aG_)'TRJX`[##F:Z_pk<Xg7L,=jE7CtU%j0dTfA+?9/u+\>e#,^da.mmBEt*Vh-fL%kcR
%[0K"Y9F,Nn`%"5(=\0bS.D?6_P2nru?f]9\$JJ.mBLpcKBcBd&rY0UR=U9;/r<b)U>jmpJ<sB\)bt5^dfH"JT9go8d+C/OY7*R^b
%+dl_,,<\IT7(Rk]lmEL]ZGfnGXas4i9M:JjXN9O7*@A#q33*=*Sa@h6]u-99e?Fg]GdCgTiZaTJ?@n!PfQN@So;n0`U'iT#JO($$
%IoO:>TH&oQ0W.Jln&^aFH(H,odKr<&9ea`;"Ji@>KuE@QU[rLHqZH5LJ:YQUd1p)c:l^('VR<03C_eS2Q7^1J=(QE+KO@3drUo7C
%b#1YT9:`UT,!</XflApM^'K+RTW2Q4j2sO]Qk3u!:pOVQ-)@i@#Er?l?3KO!Gb^sB.3u%([Y--Ir1QoQn7(`pUIL)4[YBn=0MI4!
%?l/lcLH7RLA0L\g<o>[Q,EK2R_:B/(ddPD35VDQ#;'9g@l/V^bFl6eBcb'G^)'.9P>"(KVb-cu2GU,G=(%.>!&-S"S[la^[`7DB\
%fn>$<rs/rD^4UBRWC'TPZ"Yc$k-Dd0#lF[%9GY-]<o[DY]hC^D"=jrQQO%"#Lad"IWuYC=.4TEC!75gIO<@d74L%.A9(5JH>W`k<
%R6[2LD*X1E[Q`-<W6-<X-@Q4?BNjAJ^-Io`EG(D2Ne4o7<,p(e2fd-@!$OfQY!KHZ?uUm]/jV3`.")ldHp.Yr\\uZ[?OJ09\j8*F
%L-h4?P39Ua&N'6X]Y[2gJn\>bb6oR+`2rLl6k_g<$B1XNZ4)>m_!p;cq^#N#!j9Kf#kC[/i,g.p,cR.+:mAMMS9IgL_^IF[(PM\e
%9b7qDThG\$'mU!FP'4,4Xp?J')1^sV)?aE<[>spLFX=<"S!-bVJ:mA7n#1(HI=+"HRWR0nRn$<]d'X/C!@NFM[U.["qQR4C__IAa
%:eZJV)!T!ch/$Wa.ktJK*)dq;*r:n-%nc":*B/Mf-KYW=o["#!$FjuK(lk;b;^P`m;*h\L$jk2j"u][O@^9Rp(e.?>ksH'l4LK\T
%%lu5NqMb1MQ*2"G&0RU*"lC)$pB]-NK01E1fi7)!'P/ni@*"47;_X]BeE=h%:L?rJ4]P*Gi6_g<^uYPOF=8F8@'M("'$\['!F(oB
%6du^Dp4Q%*\<*B!N/^/`&I^c0bpgBBp6n1^dmq""K@!Eq[+tq`M6\tg>NQ$4Y95e1qU;*sDM)CS_(+C6,pjN@N@<tfV3]3INeKbS
%GX5W"h$^:t!^iY4Nj"#<-0ggF.:%!6D5q,UQ_5f*WRE+954&/i+`W$8@)W"X;7]-YJkYl^=F^I'NJJs@F#Cti_!WX`D?@7kFeCN(
%KnXd.E6;*VFG#\jOmL"aXi,$/%7$0/ErZcY<bp2Xq*2ekG0iF\Jn`AB/_I=e\Ia;"ZmnT4Dq9,@+-M&*>J"=WZ0G#s5A7kn&_dlC
%_?Lgl!`&))CD;YrrUIVh'"jF(*X44Z--Bd?A2+rpSS//L6ZS#h;+E:M7P"l>-:!a@dON=`KRn6.+p&`lb2Z9WS?"?&#<f<0Mud2i
%/Aj-p&50i:#jRs('LN9KS9=%/Z&K<[d%eZXFSA?-1E4PU&tB*@2[pGp.?^a!INK0LMR3ai!jf9PL(lIs)GgqG[&Q9k;B8"jeV9lW
%F>\&2QmFNdVe@e(AH$<&n3R8+jmr^++^gt.?_/STV4RsM^p1C8'+,QdngI\m\J>3P*O.^%RHX>e5SpOhSFjH3KA<R=RUX.?Tf]Lj
%N#32EZYT(c-)<+]'jHI!U"J;N!,^YUTX>0<'C3'H)%m=[GQH-*+T5X)&E+-MgfT^f\N"aloN6p<Kr0#Ep`ZH&'jlWV;.?!j.(2jc
%RC!tB\1\inPPaq?"I;OhILPGPDqZt4@3D3\>U]dfLu&2L&l6lV61VBFRWDhJTWep;1'eCYq`Y4Pa\7&3]H/%kmD78D.Q0+KKrLBj
%Fs(2tk$t&B"d0,8HaX*N/L+G%I1"K1j1Au,_)b%Sp\'A+rg4a'@if5*+\>G$$GONLG5egC$>FJo2pgYTFO2cf:>ZEfl3*#tndg.d
%i5JM0aL0tG7glC$UW0&_XUm7sdoi?"Nel7WHZT'R`/,?)Z&7oX9?J[jP3pL;L.G"6+bp@m2MrWBi*Fd1A$)/*AgC04<tSVKR(,79
%nJ6#0&B?9W/4'P,kT?5;&jRf7]Q?`8e23)n#c&XpAE@EBl]=&F9">W=T%?^D^\[8-0@8AB!D\NRN,KdV6PE-uHa]T)=O<?;4u"QN
%K]kh'd<G.h10'u\(o?nM-BSNNS3ke]'jSEn**Pn[C/>O1_ZYuC%TB.mRI?Uc_SS=.\=5/Y8lA27,.^$+gQH7dA-R1c@]9r:L$;@f
%M=cF:9_Pc;V$G1U+\(_YMe7,h<s4@*n4?aM)MnTjaRUTV6F@;R8g9gfhSgd,pNB;oo\`o:*<E^1d>s&8P4X]-b)J`g4D6`WC0_/L
%\P,ICaV^sD)NR/)718^CQq8!r&u<oAbpHPNW49ZU@8$h&m%-dA6;)gc%NVNr8QNV?Go7'^Ul:VT3!\W:!$?@[T]!2p+(ZRRX:U;a
%85fgN^m7DQK/A""5\$D\BTIh2eU;EK=qRKV&:'N]#/#5DP*aSM@XA@((`GSW5sZ]GS1V2r<InTAWh85>8;nJt6dk`JQFDm"PS6F(
%*7b7o0in)f!IYUbJI2U_b3Us:dr=ni`6g]e<f=P:McCHKG%7ePS<!4iE>))$&Js[r@-&>7Nide.X,U5Im[YFGnl(5!TX2ZH8V2Wg
%b+$59*@5TT;bSo]SG7DtC>:?j/s7&LWDtoI5m,S3e_CalNa[F%>-Xk:&d2]IDdV^gBQ/_kKpNYgKOE@k=@&f.>Wmt.R5pNR>l]8a
%+<<L*J0C%5=Tf0<p3q7C)+-_!g,&P=Cc)2f:^.)@:_s;[2e70TONE46F58AKFmOc>;H;&3>r7]')30T*mKm6ED#7bG19g?u$G*];
%P-fBK5e'*(2;M-1<;!.k=&I-1R<Oi-c9Y&bfjc-t'0A>Gn"!jPECh@YB%^35St7Vp+UDkp[7ush,d;Hn=-<1XKdp\5Z#m!V75OY^
%s)d=(pS(9:E_`Pe$b$I8'+8)Mfs<Ac&i9[;,&.!P:d@d:1t")V)hmZP7NeZ0!Nf+?=@c,/de+hjn>pGiI\2a<SXguo:)457'V^(b
%K:sRlq0!P13!+u26D@sJE6VSfZS$qSl)(TE-m#jjFFZ'3:,M7+`=[6E>u(l@k6.-2Vu[#qmMOHP.MLYEJC_Xih$p1CVPL,ncs/#I
%&l"<G1Y2'e4GPl2Z7nWSC-)U7_o)qW^6-,_68fH'(Q'*HInJ?@K3EHeHh2rTau%fuVBKO?AjCGAV@K5UQp[$o3Vah*%^n+#-5&o1
%#=RZ[O=t0c;'fk'8?fislilKG&r%i+N),5b+gS4'Qa0je5T^"%'*F3#\4KHAOV/3%1Fh+[XB-Z0d=[B&M^k8W8d!9e'V1J#76"oO
%U:;UfA]0^$6\TVo35BN.5uF4bMgX8e"IU/>F(!Be&JPF&KJcUX%VRs[lbZIHZ1TZBfVX[)k"iNZ@E(^hJN,)'9:pc8A&\9Q<Q41"
%%P=_"ZP3g8_Tl^RNso7n4hrb'&L@E,56WuJ&^i?gjUo*-E=:p*&?F5bD);n7Vj6IkPi+mn/`OdWT3C>'PRdkpL)2$riip4[$8h&Q
%_6e;P8LdkmfE(K'V[S`"k.tk:9rQ8f#R#P&cEDggMHGLY1iZ))Nu/"@<'VP-"P"hQG"0(eREe15$FBoC3ANqfpWuhe8Au?b:r;(>
%Z:(RFf`t.J_)=o+WHT72S9)'KJIsp[W@]JG',"n[eo1.3d+-]r2b:Rb8O&MYErN:FE$lfL6JWn$'tMc4kTh9>Z+?@H/4k.MFI<ru
%3a]8@$[\.0-R:9^=sj_M@7l/[QqlY.\Ut,AeUWfie*p"eS8Eo*Zk:AdmE25`EerVI?]?KF<0okeLb21#8ZE4ge4XJs3CjWX!0!'6
%"q_HJ"'*s*jSslB'?CHU%3@NsKK\.cRM?\YG1ba7aGu0Y/>S4)H8@-/9(j]BaqXa%OT<ibh^qtD&3dWQA>YQW7H0i:T0X?]&SVj4
%>/\?GX2H@q5:ZIH581,+[&=K:cHXiRb6"3Rf\!+Z_`OH]<t*M'9ZVZSLBP$?@Y83N8k&9U9`p5Z)0AI*;fMI8.1;4;#RqcN^&4Zh
%!F(_%"+H8=FqVrRPZB1:5W!U6,&glhj<qG!#n1he0-(th9f'>F0uuuK/.!6IA_SNpP+a!o@YgjoQAK72Ok?ag"Hbbnd:[1B6Kj&.
%$,@q8E,q,mQ+(^X,2q;Q[/!Wo&uc671E^[J>A3K1q4Wj6UkdZkkEs(O((=3<#ct^R(64"S8$rC[<`%pR>SL6&#UD4>5L3S_kdA$S
%#_afB@N0!KV"]e>,"fh3"ua)VCY@*=CM#6j'ODu^%Vcs><(?*eU@26R`M8O<5f-'Qr"<#8LcOtG5\$!f*n<lCML65t[gU;?"-"_]
%S>`Um\.HcZBtD\(*jdJof,h3SI_\b,,u2D>:]uKnYSf]Sac*r@e81(4+HEQ`7Q>:dm3]6N"RKcp8[;g8ds.@Q9]3/E/35Hla:6'h
%(u%lsOp+.jZfO&Nc;jflI1.:$'EDX;nA0jVCCiA]5n$a1lX]KPB<nn]$o70[[6am>WJN;d_s""[bQUS#_+8PVTm(3V$sLgQI<4rB
%q2lJ]8>h::B(G@>V&JlQ#:lVu@i:5@I0=*?-'g?7IBjJA`E!,`=SQ)t!B&/i8J3"oQk9eYs5nLi3'+Q@#]4:][GFBP$;Tt>@arUp
%G6/G@['g:E"9WAXQd(<VS3SSSdME$Z,P<*u"f@P7&7$tfP6]&:"/R*G]tdi>QO4mV"8QVo5`'5,!.>l?7+M\.c9r.`I7>Bu`?[^0
%%80Mo^!*K3-r/8SZ04dscE].<J[DI&g0<,HiToF=A`YaXr==o2p>RjX-+.)9C0-eg83.(OZEg57EjO1$raIC56PceZV\@72[AJp?
%O>)Q*=BR;20DGT=7Q"R6GF14uBE5#c"j<JO_8m@'`fZ[V($\6qDOC9B6k6J*4_^^HSN7AN##j`sfMT%.KT2E?et,j7Tp/rX@s+Ua
%LhAmFJ<h0cqO(&Jig)PCS7akMZu/?8*Eu>Dii;YQ_t699%$fn[cnVhn%nEK2bb2#;qq?:_10@suA4R4!?dD25SH+BFheB1]9=+Ea
%AK)`=c,dJIXb7<qR>KoFEeKh56E<M0]13qU@rOa2&KD0JN22CN,o^&WRB3hp@>L.g4bf_D%^DWFaVoTHg]=0Q#O!#a'[2?K8K0LC
%4:*u?>.:0`bmq+>1j1(DTe`2PrLF8QkS/H+[-Os1flGdE;\j?^P*@8N)bLr<GRCZ4=?GTqJdT!7:LH9Bn'F%R:5J8@R7#ug)EIK%
%*oOS\cR4E%,`/M=5iY<f9Ne3bWT(8H-5+N5@KHnA>nb@>-nd'^24:j<D-(DXM!S\,)Z(Y5#?f*;e&)*X\2IDkbH1a_&`@u/f9f`,
%D*2NE?lO?\^n)/&hA8bk.plGB*YJ6HN*q`/2G+MPQlqL/K1=QsVohg[PE@7oKGu89JsF1\h\gMUbM\VTJh9WIj3QG\,j1*rH;lF.
%\GHEm749aq9NY0U;Mca96]9bm!JQC#o%(aXKk)>'%f'#6Xb!pZ6H2.T+VjA<,&sg1h@6i@0pFe;n]"3lU'cObN^5e9CcZ"^,9\*7
%$aT+6fDFn'c2t>o0'"RNhLa]JGZiY&1kKE]Lj9oi,FtAnh[iLN3?&Pkae#FB4@ubuP[Hn/)O*r2S<8Jma2Tu;h;Hk+`OMRBC*@=W
%J]QuF`Y_p`%ip<PGsm0,O@mg#RNa51'nZNV&^ZYoa?5lmFSVolVB.bW$B3+M3*#XB[KBC#Yp3>6@q.e?_*"O1.gW!\0fVIU_3T1t
%dTNG_V/1j97JbK7+mad!j3j%Oao'+Y\(Dl!AIW+PN)jmo$>9IdNe8liZ).h4Xq`Huk_'M'V$p7Cc\$c[T2a6aOGqfcm@-`Ad[A"#
%%c`2Kfml!m^$r5H?9ek)1HQf?k^8IP+Pm8I!kLa::8@3g8ZM9:I\FMub'HNjYUE0],`Z8D;=AKk?quT8K2V2Yf_E1RBo>Xd!%rri
%Od:MU)C('%U:B;aIdG^O,r85a_PtpSWau<JK"sc?Xs6Rr)E*:E'>`7n[1Eo$Ll=79:]ldkYSE:s2bDslJWIa],?*nhQ6Y1.S#$B]
%TNDLGW>'(J/HgaC1KpC3HDMI0rs9e[Zt'RQSHZ]?9Bs"hj?DPh!-!M>G*J'kg'R'aIjl!TN:8lO7Z^;H?@grj[[EjT"4SI23-=BZ
%/5j#18-)O`QGpgrGBT4lN^eu&gYua-TT6AZ63iV9O;(WG--]S+$F&8m--"ft%9js\L/^&p+"<OFp88H7Si["C\'rqA5b@\0;64!1
%3AW"CQ2qU)+EbRn0QC!!``?X2:f0SNhBrUH(SP&o[c=j'G"VqI6HTE9'1s>Z:,G+2Z0Ht'@@f>Pe4EpXZ#&ZJ&e^aYU.mtIiL*js
%NJ6WX$:2r=NX-X1]Pj[f$B*G+1Gt;pi&HbD)>IN9.FSk4$CPjYdAo\V[:3Lh6N["96[j&k*m$mioi.<d2f2OU]>7*'.)HYV<tPie
%@4_"n>Qqr=p)+J$&nB6ajCCYVHQPbE(eHEKBn.+9^c6+AQjg`BC="@sHq[0":6^[0qh3m&hN*Gpe<W*H%Y_g(JI=%=hYu$F+4\F!
%c.adS)A#q8BZVU#>Cn#k;(&$0!#JU=ii:#68g;b8G*g4;:iU@)31GS5i_?a6V1o[5A0cNDljEn(0E]1^*$eBHM_Xo.&F,@fFfYY9
%8\'@Kkl-mD*O8R?nFRM-)EHKF@Yp$glk7ED@'t\2ULGQC5;_utrMT!h@N2IInhE$X+kpI6$\.'+5r^a?J*DZ>?]>q%X4SOm_eUML
%1Eq%l6Y(a-![k(!8/uo+<[&J@&M44':`AkjC!d:l>S(.S#n=su>$uk#:/RUY0Q[QR8OXYN+^5[Nb0#V&KmG9P3KK0<ApgBgLGB)T
%]HhP9/)e;*#/6$tZUIU:P-^f[=m\S#6)hjEp'oL'\Q+aMFKHpE5bsU`92]W[CYrrDe7'\p]sD%^2@.l<+Z#:s47kMXI,WprAi%Va
%!@UDl6di'4V3gPFGet)3P9^WH_BW^HR8\c_Ms]8`^uhHrXTe2`"eZ0I^<d^c=e-KgRE*5OD#n6^Oa^_L!&r(i#qKsOpSX1G#YkTk
%6:.@P<sOVDCeNES;3Es6OJEPXq/VlD1f&h,V/Oa3ECfQI_QAZ;lP6mfND,>(aeJ`37bqL\AjMoKqAj*+D31AN5bq:f!^<0k`SMVk
%.U-A.TLpqRLRukB!H6)V4SJ-h+7""g4C?4R'O&1%LYK99lEiXZ.-U_GPl"BXU[3g>CUmlo!gWshcT#9n(f"P9#H;Xj7+i\5(#mHE
%=NXet+13@ka#sf6N$EAMnhCeUh?fL28dH.7m]>'.mA6M3#`qN&nDMh+HAY7u*Dgt$rW:3OLG@TN1l6k#\^;8$1ddM^`mVDVJjD+b
%^+>A@>)Yq@TIB(O5>s*OYSe??D&JaC+D%H8C3,8/4)=kg^g:,[%#2r!FQ)"!C(uknS.#s#UO?:%(fJ_4$<f!`@GC)b%H@9s@[P.'
%m!XCR5`Q?ig"N-]V.prY%KrnL,!H#i)-WHYn/.m1-g<*#iP>o>)b68*(T/c4i"IY^B1_q(;m]X*+<"f0D':b\HZ5d8:?#ID]-dN!
%BA6hsK]#$18Q'Vr'1;p8d4JB;d%g^sp+.#3UKJY2RWQp76qe5B;B7kjeI3t-\1pju,,>uC]4I,`;=:SY,;0&_\FS<2D2!(p-)40'
%+Ss+7"NFDtdSfpPTe=Cl*7I/rBeN=W+T/Io::7Qr"poh^db#GZHO(gKN_`]u_HnNef6HXjeY7<n<kff7/)EH?d229bUh!Si@Ti;r
%+_RqI+X:4tRNuKm$4g]WhFNS3!j^>>0<J\!QIZ%3ZpdoX1orXqjIfk24>i?1%r\2V,V,FsjLlXm'SS;?h]r*d(+)Tk$bJ^*b+jj&
%HtbVY@]JQgZq-H&a+Qf=6L@#_U2askU2e2E4c-PI2RFUC,s^`TftA4TJ2Um0cQoYfJ43#^Yf0iuNaG>QYbPn)NuuT!TKlu;\L;n@
%1WD^2&';,A[0qk(3!+n!^]e^)ju/)<\X-\j78gQ3JX"ST'fI.l5"O`aQeDWm8!V@>(iG:9@"s5'r3F;eKgCci!t7"jWODNe;B&"j
%*#&1HTkF5c+WDR0+X9"BgK;tpj0J_/B(7bU2&\1iUqt]im50hW1#c`-9lgk1&-H`qV^B>'>aCo39]4&;<Y8e&FM\>f8gq5<aGO$(
%begb1eXQ\2l"+'b0_h^U#'u^(05Z,40YYM4cAg.]+Ad&eph2uD4@iA@"9`$pJgI]J]-G?>>Pdh%Cd*`)5a5<'!@l)EOeRFC?l4n)
%%:_9-OVGfLX9@MpKOTE6mMML,aWV8HH\FW)n>O7!@,iA_.Aa4FK*78AGpj0H^,8bC`Q0f%Dk(PbaATp+,K2SC2HH>PQo%D3-=K\+
%#3T*%B*GPqoiF+ir()R""=uj1PLYI.1>tu#BS@RpQ(N]1C:YYd9<;ft[=7("LglT[F!cDR6T1SS-^GM56s7imJEi5,"EMqr>*Bkc
%6LUYD7DkjsdS<!e?_io98N2u4aE8-LL)3AT/V/V"cEp8dDO#/Ho<U4QQ6j)QCnmXklH'neK;J;ojC@#<#J1-9(qc4&"Q0_7[MY?T
%bX!ILQ%\46P!Kon<[T\C?LU,^;%1QK(/6"S9k%A*-kSW6.s/K8R"o!G`/4Br:<D-#8='*jdK3.lbpZ6%6WnY*IE9E>5U)spies]4
%K`;XL\OP,FHjhRX@?BIf.LF*]8h63>=`[G<b!FG9Gs8GJJ^$G.:,`NDa4Jk45"I[P##8Y"LlX;Ej!Edm!AapF%N%3EZ!GaqMa8*O
%<>:ga+W<_8>9!8e-u`Nu"HMB$LZ.4b9Z:aZ"CgV_a>ZiJpQ/9`1G%5:]NCjs.[?MJ\4.co3brAeO;c"<JmD%$QTG?SYcOA>@)WC\
%=AqAS2+*<.c*V9>J!V+V+H:b!,tmlon\RukG8FW/q3fa]MG#,VAE(oC7eQ[`++IDM(N+Qoh&[4:C+7$K_j^+W+Jf"(OlS6bXsDc=
%CPV[k0I'(/d1^BPTZBKLA*Dmm3pfMl\iN-K5m\!'m\]o,W0nlRCu`Q'78:"#UrS+MC6`CBAB2TeRti\\hIWFK\.*JkaCqduV8uQ-
%i2T`9=lQ^=))E<q6cn*9R.5on&oZF\_NS)r)l`>rlPSlK.2AGNl"2i@nG91B,!6oBg;?<`#c*p2:,V(J_l$-TJC<@!9oE3O3=?nq
%ku:+b4;^r0fT?8s1K$bU3T\&/oAr6^dO=Ub+2]MPS,k9XHVl0+,KqfGPfA2CY7SM,1\s23-$h\5r@YB"2icsCk\;Jdg6DJ0R__@h
%^*=RU=Oe>]*J4jYCbXa$@&AlYbifWj"NG$5]d%WnhdF-u,KXIhkIi[UM]"@Dn_P/EJ]P7PGjc'b@7/LNGjc(;LV5>[]Q`$8pi!(D
%K6AO!oo/Pr>:EqDUj(Ka5@`lh6b`lJLSg#S)/G)u`(G8EF=)5kb'+(D$2nmc\i[D9BQ<BTGAr*G(tfh\*Jqc-`Zq8r]@c%M26K$f
%-mB/VWU@!m8N/V=\gqG>7%1@mh&4ZZcDO'S#&-V]hAak55mH*+$.E1&a;(ac`cQtT7^PWAVE7NXaosiTh*a#0\eD>C,L[Z?N]c-W
%_9SE!-/EXB3s1R?:dL$VP5>6[ZZ4f\Or;rDL^=,9Cj3N.>.ZiMSH2J>IHr?:*Mc"fh!"/7/4jLQ89Y;q<'\[kmcnd8V4sOKc4K&#
%\IH,3LkT<:dG5[j*k3%W^,n]bHW&0aq<e[NT1Ij`^,qu=Z'V6Wh#TYFjZmmu3rhHi;RnZr42=5j3G.<`1ZZq-&)WW?%PUgJ`i!p&
%'Q=,=m1)?k.JB;!%KK3+:@3.I#2i>%J'R9G$sS,D>:\O#+_^t/[#OM!^nj<tka_(dO<;o(Om^LO#`_Z(#>%tq]92IjD:ldhDesVc
%occKVPjQbXGn;I&Z/$#JN?i\,m>a=Ri7aR)h'(%#9%6UZB?2i%c:t.I6ct\`p+s9A@(s`N.,>mekYd3]h&W3Lcu2"D]/(_(#J>/R
%]/,ILHY.oucEP%4R??p_3,N-hFE`gk#nK_omOUr&EZ"'/Quf]bKC'0)7F('UMNQD$h0iqJ,8;>I]Oku(7&1sUKX0DG>ER$j`c`^B
%CGtDE7*L1mdbToWC34[jd+HKpHIIagB^LfIDZ#)UDC8dP&Y+h*d`$a)F:&F?B=m1@j"!4GSRJgV6r(mJLRC_=d5/3mlnQ=6=113_
%^IWjaZJA[CA&/kJZ/))d=[Ll&m1*5<P#,n0GEu[9kiZc+J;#a)gQCk5=H"eLDJXLu-<W7[mKb-gm!7=B"UI&D:c>aD_iC9!2sB[g
%EuN5;FE`h616dphcEJ%<p?n15%VT*6E7!h:#\$9mX;Th7+;k=F]@#Gk";`u-]CDdT\iTmX#[_#8])u6+AAfDB*H\EVp!2dhTU:FI
%UX@m`mu^4S:3VKBMi;_Jm`lA21mO3kc4CmNj:/[^_f1B_)%d/b-OC`uAor6Y8u5PJ]An$-"Z="US5VhRSFbRqS.hRB`cl(.D,FBr
%]/*d(lK6#OL4i5TN-oi>8N(lP^,n\IlbRE,h*M"'qlTJGiM`((53'72W8/hb=l[,Hg#H0Lg%atD9Q6mo*Vo,bbXcV^]*"(DKN"aY
%GOW[V;:W2Ei!<jF%3W#^.aeDTB=\cQW\b@EJH<^Q(kLi[2I0""KBA3[c,Gh,%L.JC,KF'uNMgYdEJK];['Xq047p1Kr2C:`_,t4Q
%oShZ;.22E/2gRPAJ8YJ9a;MZ3`%8FeoQH<5nr5SS4#=6<25@X5f[6U3oQCEf"<h+gH92Ccb^;luLC%B!['AB%mN=5t,IaFBUWb\B
%],gAV;<$-Jm6XIZ2fcM^2u^P4aA6]HK<IWUDU*)(X-f-)S]M@RVQ_P2P,'Dl1U9",U#:af+Ja$%Y\E0hP@(U7HqI4j8#4Sg0e<ZW
%%>:amKGAbl"QhopW1'>@Jc[mF`7B,rrfA19".^,s&lr[V[Nj(h@4G-Bm4:7h[#9[Y%uM@[c8&n<,Abh^f?Q/A'[0*a7n@"NO?'Qd
%m*3DbWY+!ZO%^sk)R1<!fAKbm1aTRTpbP30Ph-BH73J#hg6n\RMOiF\c-U(`[53e2Hd6D^=!ic(B=;<@@YbK*Y/nel0mCWRa2Y\-
%r5`\%#gLMK-WlgVh3j:pSNeN8AFFI^[PPQPE>+Vic7lqu2L+TtP>Fr!.UiZ8D&,=ZGjTGnmIJP<#7!R$\Jq`C+l.^-)n^?un3!rP
%HOl5^%Z,6G]QT%K$?;lLULaH>YLD2+<4>VUgRtr1XieE-g)2(cUb^BPR4r:djc%b#@`CSmXW8\[9C58c#DiF2b\6BO=qHdke(R*^
%%5pgoB8D%:o"=.:&*:XSB^H57BZ=r:g;/6e1lKf96"5M_9PNmM?&Q7be(PZn\toTlMBO/9;Qt4C42aaYcgRrYe<O^clE#05/(e5d
%VmS=6X"J+^[55T@0T(9N$sZ?9k'+ko>Vdf(>%b6q7,W#&X.:CdCpG"]G'k\UGoE_(XWHIl2-)e+N*<PRC54I-P*SRP-g7s3=\VKT
%+;VuU7VYHc1G$.5C.HC=T#F68B0)0",IN0EcfVu;C<*9')tF34*Gf-j'fT#P*+L:VF&,Bp%-ca"#,`K;hLq$>c<(^!NJr%8!3@M`
%0\RBg=@YS2g>W!)*n&,CLCYDY7;g7]7kllBA$i"a7-KWXNfrDN#,<3_l>2`_S8fm.>C.Ro9H!4?AdZ+Jg)6ecr_@0?5Y'%5UD]o!
%@=f\XOjXa--en5RV]DrA.cd,KcCdA+eMT-=L1`JWS9'Y$'Q&So;;/iHONNt\BkP)B]$!i_B*cm&bm(!bgm`WD9M"QTWBF)Wk+m/3
%$UnO"[=^Z!::]<)iWE1)gmU$&4,>c-XL*/4#kN>:[3I(U'.u(I41mH@`>c!$5)`e:F'^r>7pa@\p]n\p;atJcf+.O!E8HQ)%KfNi
%$[n8jN[g2WI#Z_&KU1)Ydb6uji_W*J3scpfUinj?R$=,'g0pro\jB!U#d;Q`iYe^9%Q2fBF](:jc:BhH8F6g9H)'1<[0+Rc+W"T4
%[DVbHe)H>9cD3pnf3%G0;^o.jXEKEZO[+0:C599!qE(O]",_X4iu51n&..!n6#:2>_I7Us4/*S-FmHthYW)Ikgmm",G"JJjCrCLQ
%pBa,g,ISiS"C^k5`-1Ld?nkb.[_j?TSk^6CFpnM:!NQgeOcL]"+!"SBpf&.O1L`E_>a@X#NS"a"*0Na5@QX;GPAtt>Ckkc73o?L\
%%cO?';!6Abm4=`>2<-P,gEHF3piPQ(6dn'k.QXgTGpF#I(2(R/&50sQ1#!S_WG-c..`DZnP>^%@[\G#4]c3C,%!1A[Nm)[$i-_ca
%B$>E2"=%BH1>@r.Ja.R$Ce#mY164A+4,*nV#AVJ+KHEun)qr[o&8&:[^MM,;O:WG11YYLU4MuYIAin30#Rl5=gC`'=I:.,.45qM&
%m26WP"@L5]D9R0nI+%'#R-dH7&PF%1mF^dNFYdO96i36p6Q2B[L`dD=02mtJOV/h0hMg-J#XlTACs7(@q'(*"A%!VFOkbE.Ce#BJ
%Eeu\h48.s$NP0>diB<p^(f%X/f^Dl-88X.$0)1A]C--I"E./_5SOen_WU9IZO\DbA#j!;HUIoAn'JeY6RSqm+S4S:0b]]pK(T,Nu
%Cr[kGn_L(dG*i`dQ&XHlW't_ERI+r&p=u1j%d!&>I#j9>NXt5ob%le'H.`lf?9<>*dJR^kG(eU^35-!ZO_K^%0OqO9MCUDN)m^Q;
%`LW1'GC<pH9CtcBmHA7B!^'47>uI`rD^2Z\31t)[;//2@fs%EU;;75/J7[7eC-//51_sfA*$XSt4(FQ2:?\s?gE<s-#RYop3k:eX
%D5@QPh.BpM^50j+m\(ke(VS05]cFAdpskA\:'MG;=m>=H(L:dQAD:W?+_#FqA%*\:&T.QfDFYlpU<1^EmDs#c"a*FU8)g)p>%%VH
%m#bR/UUR!O>r6H>Ec&>c\cn>TDYm'KIo)ac]j6&K5Lt>aiBQ.bJ%U*(^S`2>nE"#\Y<K!oFB^upfe\o.3<-S(cK&n-qTWB^j567j
%rpo[\q<'tJ>h3,-oUFb45N;iqs3JH-qUb%7kPXrLgY_U(+.rJc^YW4%e\?K4?h!4;X*;&9Du!7Q#]EHsY;uLBiptXE\I?&4q>GeL
%h2ZuAJ)(%uh)YM@%b[1u\GYcadkAsVm\Z>"IsUocYJ#1'a#-qrDrd)X%_1_HHhs,g\+bBj^D;47^\7C.Am"U9hje&$rQX_]0524D
%nr3LVi&cBMoGRJ`immET$U-t^gXjJNJ+^S&cYd)p^Unel?h;80?+XP9AZr)Frp/k/p?dJ#RpH!)AY4!V3q;q"bua?dc`bX>miNSG
%e\/lKDn_PK]"7n=p>Yf4Y4XgNS@?0!*uC:,9.#"/p"iYAooSVAYcggZT)\';r;XF1e%.s+Cg=`YO2Fl.s5S"BhnH^-EZDFop[pQ?
%rbo>npZ?C,\#8+:>(G([(Fkod?JN3^`U?lkkPr%fBh[C\rPQC:RCTi=Iql.$423eh]tRW'1#o,->&'[:^UlKfs7=M"GMcYq/[0*\
%qYln"HZeP@i8X%)/N3V=]D)9po(pUTf5E<[QYi'"oG08amXKfFIrbPbjQ!"Tjo"DdXfgIEb5Kg-=^AS9j3#'L3N`#6j^52EhQG/Z
%;)iV)ifL2oG6kq<!\7dRj]5`+p#UY&-<P],?aVQ]ir&]FbKmp`I<GM+P=Wt^ZVSE8o2!N,>;djamaWnXPD=L-a6<!58]`[5'0%?U
%R$_f1?[ZtorIrgi/9#X,Qga7P^:J]9f1GWk4b8#b!Im:]p\+!nl.(^(^[A>njorrqeIl0_C6-MVaYtb2@peWnOBo:X%UOKf^OH.T
%r:W:ciJ@7)htV%Y\]`7%i)KO?r9W8$l-1=Mp"f;kq:1Xbg&B+Mm%NOup[\1GmHs.j^2Nqk^:nMO[E%$G2m6$'c9FNT]j)2sSR9+7
%n%+0*J25T[lc\U`s7kQB],g1)!VGEXDj9QgSc5rZ"2!K0n*\m_^OSX81i6DZaC/2D;?)!Z;#L&/*T=6d.h4[&n]WPRN9(QJ5&H8)
%XtQqq5@#$rq;$gQNR.:Uqc),;;&VSn/g[`(&Kgq5o"^@36ZN6`4Yt.@o/nSIEG-7uJQM?C>;-r)k^YgcDjTgODtgb)(*(ZXhA*ts
%I=jcNDn'ScB&@"ipC4#Z(Ur;73PSj_:d1nCnYmhX+)oXMr7Q=?EVnGR`LZObol*#g-hnjIhM:I,I89!5c>UE\a%.8J[Bk7U4jEft
%TPq)9q)huKccbY?b83,#kPr4<e9gs:52it@+%(Bi'g@O>kKk`,bhBPrlg!4YcPNqqhjhElGdh3Og4fEmnlHWoVb;&U8*FSLPu=pl
%hf(EC),',P!N*eAXkrB5n%Q?H]`*5n$$Cc9aK!5i?B%)Ojn4klb*Fm(XNKjqE?1W94m\n,X$be$$h@WEZbITmQYE'2r.qC](JVf@
%DiD*9s4Fp[(RW*1g>2eZ&ki7,Pk9P?l^uY\J$9T./-jL`!u1Z]6'gHj2lB_YkEhg5?_3lAo-LkqZEL+uLBS:aLO\4T:\OI0GL_OE
%:T(%k(]3U1GS4W8,0b<+`A(^O=B7q5JhHkd@l\Bi\Tn#-jltIoS+E]8^RTasPXj#<df+Hrog^h8j8JSh5;"[;g4]dF#S14Q]fE4(
%>EC*n$MWth"YmFFd;b3U1qHI'pC]WUIsKpL4)Fl(BJ'dCX"W^B5"`JK"oe/am.pl-o@U\Sd!"/qL&1Z.qTY14*F?1X\K(%C@]&ZT
%n/3g7_o[&uqNT0]X7OdDp".aO4T!=pOttb5V>L+f"^CBfHAU$j]uP%nYf:!$5n&pWp@T<$QTq#>\DU;cHG2PU=fBF'b'e]deb.IE
%[)jb1gto`BnmhMjdu3tn=Z>O9<Yp/:X&g+H(Z-nBY(#WL^1r5X1]=]SnA"N=mf1#sp&"U,f*a+f?XI&E/usZ=gp:X5H?JaidFS-L
%LO+S#!6k-fYE^L@iLl`)V+Qsu+*0!lM^,Am=YpSC^+n22P[ga^H,?A.B2>K@AI2W%dFFsBRA"+NHIc8a*V6SfUARpH\%jj\P$4(t
%@0eI5CklAUEqY`4;3lURZ(*^JZ51FW$>NER/]'m,DGR8Jjm4GHU+H,-A'o;:?Al+&/e3<15Lir%Z_pc\ZK,MUA_0.YQKB$"C)5(U
%"16'3kOQ.!o+k>NXYXsEi"X3f&KgWspA"ng%DVBG@`!N'LBtek%E=Qed>IS&GJLKp!fXfo`VM9QR8pFR7'FR0Y:UTC<NiNND:NDl
%U"B9g;^JKTp9`&OF%kl!eQ/gGldfgOZ1auP[8j90>4#CneYX4X0DCRc5-uJ90EaU!-$rSt^i^SZHlJo))_DnYFW7I;BXVNiE"Wpc
%,K`OVI8N;ijP##b@oYO:G4Dd-bKhe:J,Jl"])hZs5qBFkJjHuXH?K5`ip(Eab#p%?GNYm5T.GSlQs@8,q0t_U/oSK,U<EM-F&[B:
%B#t1X?mmNBapNmorc[USm#9sp6Ff++F+*4^r!Xj8rM[CCo<B<29W7t2:?qk/>lS(/rGhdoP7Q.&Z9Jl\+c%e,Af<fa:;:/OdG7TH
%mNSCqUFG20p,Tn-1B'GI7o(]!Z>b44\i+nSlKI`,XKUN/GQ"uHiI?2uQ_+&AqJ;d]i+;esUXT>QU1)s9<C/L4$s^.uZZErA/D2<+
%mW":=#eGJ3='f_:%K<THiNB_[I=p3_`8g">p7"#([nB]h;4W^X;o2%F8hTgFNp;T$5i@PrifH:B7)T2jp1T>7ekWt;s*K.hha`F^
%>P#UbWcm"lmkNmQT-U&LRf@es4hBd*5JUp6q;4(0]D)4VX[coPmI9X496/;Q*b`LQ^uIXpc?IP/XuYBp:</FYQ^?;ggclsK(LMZ5
%>;(5E#)LD*PI((;]c#["pWhq0Z,1-T+7N@F\p42Mh:qOff2pM:^076L[XPJ?X'pQ/Is:Lq>.7-PD1;;3lb5_NBm#t/TgNPa(HqF$
%Yr+kV7`b:GUoeaDCP6M`O?J29=CA,3@C#2d$Bp;_p@6`nkN>ng="Eh=j*D8DI!tt`pD;GJkI2PjSA4pqqW@G8cFiih5MO58Po#*0
%:]L=Oc+D`B\.iQpX'N9><>ZO"cM;&MYD)MQagHI*dsQ1%O7lMN`kBs#Hm4TjVlHMQF4i3dcbDP+X/Gj>+92">[2g#O+1?[)2bS8/
%5%nm3JFL_T:\K!UhW;a@M2:%-5!%os;;2>&mJT"$V7Hk;f"fHIGZb,%o1rNl05KKW%D7)@@i&Ph$+spcL@LTfn8cSkkSe\k5i?4'
%b4+ZFq&E'.l#V!=N]MdajFAQujO,*^KDs@]Bb)EGn=^Q5EJ$t:!=1Z,Y_a[`Y_#Rh6qu_L2R2-qjb(oe*-fH\iLc0t(Up$-?JLsd
%=qAXU<bR8;33GeGLN,;V85'893%e:J#Ce?ickAU3ZZ/EAH<LSJ&"(r`I;),Wg=J+Y_gd.2q)>4TY('PFC47`W78Ks7If["/g6I.A
%-Ge*=ZS*GYI'nL(PS`_&BeB.8]/8^;)ub!DgZ.5"fCeI]DpN@,)fEr./QBj4[cd\1Du;Kh!'b%<T;FD`BJ]6Zag+tYm0S,Q:B<rY
%R0gXAs"fsC++#h.N#NO[`&Hl&MRiS;LHR"XXP,fU[DjkfP92D`/ZRIQlde&8!F&W$.uk4n35uR+1e/Y.aA3q=Z/ckT36&d\]#V8B
%f/Ubga#LGo=lU?7*92k7(q6E$C9%h.MR!"j$O5k^O\9'T6O.UPH?OX]q:Fqj-+2Cr]6cc@hgS?as.A1Tgn*=:#+7KA\F(FTQ]&G8
%B34Qfj+c_)^j3XTI=(skS+H[Omel?dM3G8crP$#5CdA'rBFp;m?sm9RHh4_Xqn?FEr2(8PndMW+cc6DMZp_I;^:A^!jFl]-qtcI'
%M)-tN?U3"ZHbJKj^>@aKXC+VDT3*UGdKfQKV[8Zr`5Z#dOu<iIL6]-\i6ObuK0E8mk9'/1^3Y!+(X@")"eQe2aWe(fcm&i=&G0M*
%U"Y8ZH*)YGq\RBsrq"<1!I]5ps7J+#9:&W?*.#`Yn>&[jQ@-oM(ORg'OgX,J>BWN/:q43b/6a@h^H85^r:"eqnQ:ZE-lB^lP3V5K
%iqI/ZY.i\"q/XZ%cK`[AB=Fu!gkYRb(7^2]2g6[a_s5Jeg5N,igsbfUf#k"&oB-nI7]c%5+h2S$->I\d<d/G(k>leEFlsh4cMas4
%lW7HNS1`L;#Ofi!1JbiV$W"p7>;djama!JRPLZ:P3r[o5,@FV]7'D+LqtG4K2UENP%G]@k9!%fT/$?f&i_&S-j.;;%H5qHor</lK
%X&CCYb5_"^jltI-+.nAQqRb4_Mq]?R@o;mimHot$9;9p^h7hIr6Mfo@fgcFbk?,1?T<RgFEYgmLkiU<Yob<J7,N-jmdal6=K"esH
%>.X+2q=9"0Al2Y,V,CqjH_:/%:<_i2p9irsF&7:6G.PcAR9b6V?_q;&0<_S#_S3stg\f%)^2?5*g"U^0Y><KiQVQ94o$r<i=eDsd
%`q=#jV<,Y&:E8T:\-76JoY3'9]N^W\kZ@1f@cIMXT(C/%?OOd-PABpc8N^,LJB@DVbbn5hGhRPV/<fnA&,@DK!hZLOEg5/1&d55S
%2YtIDI<U*^^;r(^rlG0[54)o'@/4X=A7+6geBRO6Zo_sMmQjOb*t%B2i0<MA'HMm)[+[p/rZ[u84ud;PkfJPJ+357Ji+L=?XA_=\
%ff:t-LuStg00&a@]aL?D3Z5G@?d!6,2_<W,hsPKB/GY%4C(k4:i"+NTrV!C0B&@"ipC4#Z(Ur;73F>0^E)\4G;_-X/*hY^poC;D2
%p9W5+46&*^iHW-FmEcBa-/YpJNed-6lf!*X$M`Q*`<U_+le-O\BB(^9OB8a(6T'0RN%R5aq=pV$EKi!5Bi/iQLd]:;8G&,IB(*^L
%3QBL`&'apYc_KRBJVhUmT`<d>V_5N0rqOM[F4W$,L)kI,8(X6ZHFj?b'M!.VrOMq(m<^=ONnUhO]Y=3bq^1X5e\oolpmrtRa+s,>
%gZKV=HAmeq$d@1S#K_5a'MpPK>a/qUTC]O!W#p2T]Dm[Q-D"IZh#e(n-b4G]+A%/a!^>lk*t7-'8L-og?u?I'#FQn)kXT>_:FBmC
%2rV%/U8'ZGT@,`Q[J%quk;Rn%\CkBij3VDjSh(-fhk#:>H2^$p`ZJhpmq]B-&s"-CgSZt*e%;Ze^E99jH(IccPBE96cSGChE@s&R
%.^NVgAM<a\*'tGH3!0,i3PBb9H3oeP!Nu5G(]&BDR<J(#kC\+HN[!s9?aX66H4>;hRN7^,rSd<fol,BFH<j/p5>6pq#C;"-Os'_s
%&-$?u0E6:iWfnT'(*NJEYLcjJe[lBek*aA!S:>s,2>s#*Ie21[g3ra_TE"]KX6[t*/p5=?IlR8rr:THlIl*\niM59=-ia,'UYi_"
%s#6JG%KC+l5QCWns7Lln5Q1%#qr,I%-\"/PJ,d:BjAl0O5QC`1Dk:P#h=EbiE0@k*c\(cPj:14u4?"^cM7a0oGjaX%B:_U8_Hc<J
%o)VpanID<V`oetdE\b7D*r9`oGA'=RK8n3j.rKg@Yrchb$Kpk3asSi)hKJI(gZ.eoUYi`Z$3M^VHgqPGd_Gb4($>GEak&JLY:chl
%G@Kl0q.t:>$tca;A9dN/[`,!#lF@u@?Z\3eT.fKj3r@]Fn+bedg4/<*,[9OQi!$f:-SOaa]Z(o'GerYC+.2&6IBo8:EZpg#5F<VK
%G_29<OY7;o(eVdi8fSKC&8h!SSG_u#A(Kte%caYB-RTSo6nX+ZqhWioc"1b-?a^!]IDCaura^1RPP\W5".lE7Lr8g>Qor,Cq&Qpb
%L%BL*jl?5uGFa-6p*eE0r!CjMalY">kpY(Nm'CgJ\LdLFWA2FQ(N-lpR!atd6e`Q+gU[N3$r`VOToQ*loc^Z"NS/=+;7J>\B#b:?
%\".p#p,K^t@sgK%K)Hekp!I^W96STF?[_R9Gk,eQIe(hb[9H,&onf\$]Kk9aAh`nLW=F]'7`QKUR0s^!XCLG,XMXf8B#"e->W6t$
%)o?$\$bEug\mf5iCoU.W;pCTtHi!k"1Mmb0>tu`j0<QfU\r76%YAO_LAfX]06uM,Y4IYKR[2f<eCsDQ.7"^DMI3&Vj8+51QBB'2]
%pWYcX.!C@p]/Ss,`WcmONe_:9';(&r'H,[?jf[>oTc.p;(6&7MX-,2)0i2u<T_hYY<<p+*MqQO0G[O-d`C9M`34s6:r79X!2C:O>
%H*B>nJJ/f?eYVfsT62U4p\+\Akj-GQ."Ya>[.TI\X!JT6ki>NGSGgs8^0(6]Tu=OFlEcWql3aPTbboUnra-MRiH_#ccJ.)^pGqY;
%rpgX:9:^sU=`ma3S#Es:f7aCiL:*8)DWLX/O?ouWM+<NpF]u:-6[_7!([K8hc'@UW@C`pbH#A8P*>2CLgfTn;Gh,p($RX(N:As1`
%X?m1367tsdc%T"9T(CkSiDB1ZK[k%_KA=;aa1AjkZL-gEI%IIZ+lhkXR0,BW.*q3[b:3pd'>-2WBCB!TEju?e;rY[fFgosIV7oZD
%c>>6$H>cm"i`U]eBRKbGX;`dfqDEDW/QZ:"g3SXCKR(X]]W2Vh9AA!he78&P*LKY6pYET,rjfjW9_EVULK%>0QhF4&mYf'1*U7Hp
%K#R,^b[$Vimb`Ir*Ko0fbOsUC#;s2'bFY6?msTEQlK%=kVr+&;]V0!.4'Vurq9(kG%(frpmQ*YBp'Y]mO(>NV+`b#2:=cD.*Abj3
%%'\$^1?p=J$WllZ"Qkth,*W78-XskO1qU88]4u=_LqbQ_aOE5TR<u3gFlV5bX+s(@4'W_r>8q+!lf*-.mU=]VcRgNZ$?9r14Xj[%
%nk=+)cUBAHBs.?1mCQVaA!>t_'8&<5NNT<c`2=&QRu6rV]YoeB8h!bI@H1>iY,^'abgV)lDsY(s`&>Y0]pr>-hp:T=GJ4RJ1G&CD
%:U"uhbA`_CF^gn'CcdQo*jP"rWL]_,G5N%8"4J1RrF<"fK>mj(+8TI26\i8M+qK$%[qHejXn1VFX\l8MpRWqAmb94A<T0C?lUT.U
%Mu;$5H&1;GPLY/Dg^d?ZGb;V/F\PT%]D\=nhID_urtW%Q_a(?;Z"f",gqPK-PBt4WC<^TX),$c3kI3*a7:-,&ZK,%>m^s:S\!goH
%CP$c2eUMpHO2/=;8t<gG?G-'Ng"EtrJ%r]<CMp^u^";au`+SIBEmO(J:DU,G;h=%]5?%eh:K;XOeJ`:CGIhR@Q;)/gc%ZI$Fkq-?
%\VZS5?&7`/\Mq.hF-k[mWI4S+`?T]IdJZLGc7lCXF&_<TnE<!sft`Pe1E59B5'P*rpURm$Mp0<3?X-rFd[g`:?2X$do!@qWfB6eU
%&g@.e:9Ru0DVGjil!AkP6;$n)o,mXK_rPk4g$.nkq9>10oB1<6Y;@U'gFqr-nFWd\p"f;cm6=diYs(1>e5N%>T8?h5^]43,l(rJ;
%iNHlY/tZKW#jQK%]g(CZ]_[-S)hmZLrVcZ[Mmp/SSCu!d2eR=C;/0KY=01pFn(qB@X^T4,bd`BFf.c6g/'KEEg-!S=PT=1%'lJ^C
%7=Hdr`cO_<d;A61`sFO3^Nc,#Btt6cekZ]1L1Of50F9O!oVjphN4Y^^@7JkcN-1RQ9UO6-X>".o,KqR*CEq&:%j9)0Q\QI'i\9D7
%$pS!a0t*0Lh@]034kpi$@7H7Mfs:LQN&'*Aar#:j)&GO2`R;d^a@Inl"rSL=aLEJ7334jS29,F40h-&Cc,3&4PVEAEV^nQ(iS>;`
%9<$3c<IeT'0GQTNB!KCuooN7W]2S,ETq*@<U@M31-4SMTalY47ZN*H36ZRCl4jJadRbUTt)+cZi[;t4,k\WInMX:6:GpV^?A[&n:
%H`=/,-=q/Zk_#=NFmg[q/_j]c92qtbOE!#.pA7_s4!$5G5p,4BH7g##`)`q9B@/Z:k.$[n1uQ`G44NYtWWRUQaRN=HE6>gZ4i:dg
%ObQ"6L*VO`.+OR2)aI0cKu;?8G(V^3eXD'Sq*H\TK>\hOAfF=n7l]FaPd]XQ7<s+e.Q8#dEfh_hrICCC-c-j6i#L5RO(V]8g;)7j
%WbXr)oi20fLl%m:<<#qD?@GM;KBs8d00cr=5MI4D9$YYM=-`'/SGRGPlE51`+!K@:Y:sLi6G-""4.;k&a`CdCg%rNB7lJaiG-Jk_
%<Yo4a:#4>CNU73U?FRSiZYQh$NQq19I7AA88p(Of?B2-rl4\?ZbNkhUqQr;,Y50@]`jU<#f(B.:W<LOTg4_U@7eka]`1Z)\ATrU.
%i6L!>[XQP-Q2So<oHZh0Xl0%B9n0!rhPgl0Nd<(<W1N(q:c%5,%f(?t[D/I1.^'b$<'9j/K%SB@eECf-+g3@EjO3^fS]J/*rMh8d
%8SYjI)V_4&[BN,n?<FFDcWX)@=pA;O*6$Aor69NC773(efoZKh#HjNFUOc;8=-5(2O!;tYcn@T*`)lQ:kSmL1aiYqK?r!7Mh;%X(
%27;bm<F(lqm$E5-MZV'u?rf1+.&LcFaJ0>m>u9nuD%l$2^g^AQ@hPL'H>C]i641@LD(@(h4'1Ne,#9Ub&Ohg\aWeqp*;qoP<IoG/
%ZK`3*58gB/?L*T<7IX[nNC+[Ac:?E"fk7(g&rqUNd@mmQ*LD*KSqp^Sb1t*lKI@`BL1h?PaE+htG8RmmWs32/hcmT8a__XbaB=Le
%6!e^G0B0(:DbhA\H1q5Jk@XUC4'D+eh<\I3'>N8^`9mAhRoj_FCMmV+9q;-]EYE.gDBePl:#nBV'<NPA-up!kNnf<d!4`DCb5QDp
%G@VQYc;!Ac-&B`b'6.)k@c:6m/:FP\-D9NI2\A5MDF2&1T9u,;GN:+!Y1s.sdllk@bjsQ-YW+Qr*Q(Cn9uN>CaR;\5`%aiFa4pe6
%)7'J64irO82dn&DM2+=h`T"on3K\W._OEDCnJK@SfjF@;"O+nD40`BF*kMIlmXsc4euh]cE:S,ZCQ23VM;^NF6(Z-KlKj>gl8Ra@
%K*8JB(5Hbk#<rEN@*[rJ--,O:b>u^OgZrZV6r2k`T<DIH\LpiL@R;qf@#)C/Z)9Vr<mSre7scb@"nO`N.Ce4g;sHMtS]_S`/Nk<7
%`<#/$L?'Sk*9mM`[9BWnE3VjbA(@EeQ*>h&df`%Gbh?i87]eKf;O<MG_pnrPdN6D%g_A%?Cm6aG,KCp9:Y=H&=I5BGmEj`-ZBlQZ
%g#O7](.2fEa".r;a"lUgW_u(4K.>W[4nn>%pQVpa4^`>ZkBs#cljd``*RT.#3ibGe:jYP;Mtd-@*J:@CHZZujL!ee#Yq*%:@P;V+
%G39YLmYp2G=r6@+q1%0;$[^M43iM(B<O<.XMBVARW_'5YIAeL(aR+(E6IeCWZnMfNpno]*(C\49E1+oq$b:9SqkqfNC,Xa'Kk?/6
%J@T/"l[FDm`dE`tE;C1d;cjjDXf(j;CL*p#6q?$C#4K7oMu2tDo9ZmbnLhFaY&GJb$Qt+j:+hat2qP`;-dUo<e-Jq4<@@6KCOph;
%[cJ,#XkUF8Qt:*B?h;aD5TCtJ%#bFe[th,H>ueoR%m^emjL.qh!Qm2VKdo-lC9j'mm<)Q3dIeqo*HuLV3\Hk0:jq\"%3N/FY,f=I
%Y)cl?a&SU`nX(/^55$h3Rl7Z?1.8kAj0U8*^"FfH,"j[%<V6jQlR<X@^>%5+NV[nlqPsuBA)?KT6G=_"5*;i/j#TUeg9(0f[i'fX
%O/eDJa]Q'.<*m^j$op5:jJMA\;V+M5%#rYnLOR]DeKc.c+LZ1FRnkp\44XPWY<@I-fdV0s5?%j+hN:+/9/A!07UmZq,&)Xg%#S/>
%)]=lhLQ)_">eH1bOkXba;#21JAPb;ATa<r"#/s@o."55%jd/W5"M6aHdKb/cO9doL[))1UTP0^=,D39^i%!NQ6*WL,.!"(%$qc#)
%bm[4Fb*o2(FtC:LLV$J5_<t'lKXNn<)$p`kKKJ%1SjJR(ct3VrHXT[hBetHPGGJ'r[MpZ[EN[NG(Z%]VClOXHhI0XfpaMH;]=fH!
%Sh1i740mZR%PqZMDsoB^>[`pbZ+Em^p5TiEh2t$d.+Di=-1B-Q8D%`7LGFm8RdQ6mr>ci(<,sC2m*V@qPc-U,Bn(nal!%*Va>oKd
%aUE@u((?BEN;-%(_bZFD7FN+_q;.N-.4pC>e!NOKpg[Y^IB7$X:0J:l6hbe,ZSRBb'%aH89(#988V9Odh;BGbdu=PBd1@8ega_(s
%cW0p&O6;D0Yn><)G'=QfOrt\Q*l`(D;4O1(;'l_nAQKKjSa795&(f_O(3NfF*W7"&j?]TVUSgrZHU231H0BEq`uP]HkjIs!-ke#K
%m7s=1&\4#hdA(WO5T))6k6Vi&R'Qofd$!=H"A5(-:jR>@,h"]`4+>$E`r&E]Ps<APng?f;,C^>Mj\IdfD'g;aJ!->!1/L=fq$?_d
%<(?A@r(5I=L9isk.esb8&h&'jr5>MI=SbugTP-'+gsmqMYQW,G3]t8]F?W?c9^6;(\Vj>!;5tW)P>CUf:Jq#Ir*W8h&=B]h8e!.j
%HqcaQ:5mXuB:_5a=s=l$/X!d#]#k`u/$&nXn%7>4pYUrb7c5!+-L)JlEd&"sc+Ab_k2!r=mMPZbqgY9tF_01o@a.XQAA"q6/ajS6
%c+C[!kAEA:pJ.@?&VAToYg.jO5&\S.h2o[&coTu1G?`JWX[g$<fsI<2*p)u`\3"#2qu/b:\2B^ji:3-@4P"p?<0o&nhtE.!OPa=#
%?EZfQCD$;E`4c$gefsO[>/\,6=Ka^8.us:[A%gl(Y;k*/Ul'N<Z!OK@Iuu5KjX&\5)U;BbWo2VLK+d9:f*u4tlc]$+4$1eaW+mRP
%db=6W,0Q1sL[5j:0UpRF03\Q2>,K8^`(@JGVDfsMP>)sX8lG\D@_*[VBNSc@X\E_bWe(J11;.\+k"/tPrJ%uQs'VbqB@?q;&7tU]
%L%S)3n=t[rm\af:[R$@4>1ZJ5#[#@H\/#=<]iu/am%o>srCh)B(W/]]k;TYpa5]WtHT+qlIe-c-h3;!)gGSq1m8#*F@gMq<bm!]:
%=6V)B5s53U]\t?>+&[7JRo/O`3(p)ZY")_rTs92c;*UiZSmAjHY`m&$WHuXlW&q.1dC>s`2d'b1Ch1Rt3C?`CS>\U"S(-KM3k\*h
%%4ESt7dj_]"Q.BfZ]nkW%U*S-]pt;D\jO]P$Vd*0'JS*ph--dSX*K&#DiO>#X2+m*-RkS)&;N6b<)"P4:Qp^ZX#`b%97jh=6j@^J
%`)>mk5Sss0WTn]0en-=N`/_%JKP0\)l7+FXMbt&S`K_B\3st0>0Tl,(*Uc&bYjG:IRuL<:S,;9kL4$^2-?@bjP5)3BG<MBj``hN8
%g6lgF^hT*j=RTHG#f3PMDL)gh.h'^?[Upke!tqk^cC1%t1%;6F9V;J9Q$ccMAbFI[TAsOGR#*04)u1cX2E1K*@1)j/X>lp.,M>_O
%m2^gqGMNMsc$B<$M)q0?2"=[gfm7@K;4m7RbA#gX1EW?JE&O5]Hnt?e[OLh/REQ7DU7j(MmSMkN1Om3dRk,;d@nkXYp%S$;Tj3\0
%Wk4poFO7$-b-%=nH=t/,:],1[OJ4(YMu"Pj5o&pu[kA[#]bF^E6/?as(\c^FAjAoA*AF7.oCJ,?XNr8?)qm3M\NXa)MNgVQAPEpT
%nZp)i:hu[N7.(&&\g.gqV^'rL0:TgZ"VpujIa<<eNAmicRr$Z%pLa9;.c]gQ0TDrjCLO4<Tbc"*j8HF![*:cpm,A_IM(<HrXC#/N
%i78UicOAVn*9B03LX7aNRVmtW%dEH5KJ/hVfh@nr4\@m)U5SW4fWaCUUThG$DOn$-/Y?q'iU!A"=<S/[Ff`#Qbf';(KA+er@p`]s
%F-QPS0C?8)-E5?_(^=_/A@6:Ad-Ie\a[Ncap7s:<U/@Psp;SsJ$f=_1j=G"9\Od`!$2'"bhLpS>ZIJ2PdlSCg,^5.Rs3Nj;fIWq4
%igA-]JZs7TB_MLiEQ9hgQ^ZBhG^G[%1=lVOM\'2kr,E.5_%enH,(CrE=Muef2,^RK;-"F6mJ(Il]`*aWhs@LGR>2tplL>UXn>q%3
%'IRU80ar5$IrTM`;)j&\M7gUlGh:&mD3)P:)k]c8Y3q:oNnsNfR)fm$/a]>E>Y8GVFq1kG>e_cudqcQo2H]Jnr:D$CO?l*M1O#:h
%NlBN'l!clG4,CesQh<GkA)--WlV?;O<'GAqY^MoY?,B0I8j05*A@HV"7q:_B+h##Nj'Z/[q#_u_E;%_1iY;$Mq+G4-#5[DE0*fRj
%V;4$ITo!_HR\P6co(BGj$tVUk=G)2X)",c)o6Kc]2d%VRf:'!L$h36uUH(t/h&2(IQ$"Q^T)NsONCn(@4T$[["t$t^7\tI4"AF(B
%<<BpGUXG@,'):..8o'^-K<#,=:nQ/VAHMW!.F#<AmP9?aI7h+qki%d549F)<IUAL.mUZIqEO"AD5P5i1H<\PqehVfa9OKFcfOpVf
%S]scR//,g/Ui"2c-Y&4*P`1$YPR59oZ-Vkf'<o/F@+q^Si2=:kqGaF-i%Y0.Au56F.ZISI04mXs#_o%(LU"n%UT][5,<P#S5"f'k
%TSUURRCKA!>E_]B@>LR"BT5t#:l=oKCMA^<mY@g8m^RM_i)_V=p6g9rr*md=d7R?>J4HHh(jRT5"u)cDUcpZ4&,#:8WNFg=\,1Qa
%1'mg;I4/G!:s8qFQp*`!]fGt%D+%MG;2ud;Zo4ZVN"FIlLpAq5XGnVi,>;ktar4\l,>;m+BoOgKN@8Qeb%%+'pca[;rL,QP'A*&$
%;SX6E-H&nMfo.W7<hU>n]n"'m4/N?^_t(*53;O2O*O_UBItX@F;6(2K:b9ImMfr*b5r#C4Q3?3KNZdiSHg-X:CgmAR5T2B(X+?Xl
%hA9?mo6?tZN']Mr3i/X;N(--'C=i_uWjd:k`:uN5E\!EJBRP_83/$fO6,BLZ&qYF/Q5QfU$FsBb>GHR1%_E+MTPdU&%c6;j#d0VK
%1"IS^r]<-D+R%4[iIji1i$QDIWgft;]/qWgFeOQTY\=A\iLO=,\21l\U^\Z>8W2*MXU$C\D.:Y<r-m*%,`Q5L'F8bQ@k[Q$BYeR_
%X+:E!Ft2"Y^M4dCCuuO\*-"G@+hb.?GdSfsWh@@"Dn+.<j+*lp'(laf#plOf=EltdU=>ER9NooSFko"r[3..RpFD0C`6(C81$/BH
%_c5:SiDU4uIPJ^8WDc9aU%r`Z[F=V!;;0QUW)fRJg)s:$9?:6MKh*+#:2>m!-K8iBA8?b$TCbrO4ne,:0.hLama)MKc0A[ULJo'Y
%_+hX@KkIO/2J*a`/hU/S8>Abi=3NGDeaSPmk].cA3n6g#Yd!29B[rL;I7_T4[]aG43_B^VNS^@D--pN=_WFuSNpXfc05+cZaW68(
%MGt/RQ9NnA^02<@[+Lag>u^8im;e\JhcR*4m(G8J;!4_m,Bi!lorjn2./hCk.s+^X1f$N=Me+9#@,,7QlMH/AfsG@s@^Kguj^'HA
%(KMDW1Jqp%X26]FiHs``FtJIC=k+&1Cg_o,Ff0dm]fL<TeTYjT_WjB`AabI@o';<O#<9KGNtgGDDZ!t[N?_qWgC4db#Op&42Yb]r
%O,,K);iK'lH:CC22i+]/d8_$<ek"AJ'<j>AAR4\^:A'RkXl^JfPBo\G@Gqu14/;+m5);XXaG0"7Up4G0JeLDqkW8F.9,cpjH:1i\
%g.CW;kIG]PJaGs.<?O'#R\CZ3]U*JZ<n15=]ah;+I,_IPl/gTliS(GO-ZknXT7[KO[F4p<5W80'N^;6hf"3XjLtu[NeKfe0i_A11
%XcFTdGXJo_4.q\+$E_d_m<9;:[=DFBTZ2nj>-a!d5LE(C7P1i49;ITPc`nQg[NA>m(ts7:XU`D68J#fQeQTC':_j:8Ig=FuW+luG
%[A@V]oYY1]H2\OQfP?l/#rQ$opJ3lEW`k'u+brfSTrN,d\Xu]l'oU]>YA21XenHLrE^9#\M>7J>L8L2#4qcZ';lq''3;p,Qeaq3&
%$<?s90q!Ea$M>A(qrSIP(]XO%]k;OE8('*hIbo/D+$`@&KRenB1I?Yo/0ode,_LmsfP>t]If!>L4V87Rjh8=mh-93Q$q3s9FlfXk
%ksgGEH78!8)-.kfGpjE.@@G)Lb<t5-PfsUV9d>OL8R$Qo%gA9LE&a]Qqj&S4JZH@"N0oEp_3VVC;T>l-HbpM#Y]0[1&t/P2N?Rgo
%6BQ'p-%Q=VAO^-'T`$3j`o!n>2eH+1bg;+8-m%31l(LN;Z];7DK1e/;Z_I%#n"PdpA.P,>^%,ZZ-k5C=g)eD@4VTB:@D03bGpit]
%PkibNX>!W0eS<!e1k!*)rVMb<"Y5e#_=6oup&4cJNpf%j^@1:\^8'`cNfNQi3kk(HpqEN`qi6^*4$*AdX-2@aFF;unnUL.jNhtLe
%S`#sI\)5<E/Gs#_5'+`$nep65cR1#S5r12%[4Xo!"F\\:f$:F@ZV^#&$3Y12]bOkk78A7s3s"BKR7efkop>ZR5CSU1:Yu!:j9h?2
%5N46lA-VHbpr)F[,IjeHmlg3uG;IHCSuuLNhfgl$]D^S!s1K`XHV=;:r0DT*o&OVDG?(6)/b-!dP@mP$X7GmiYU*UsCWGGOdnea3
%0DsuC?','XQM:t#:70iMY:_kXiJXH`fFkrD<3tp:gNBFiADnmPT)R6*GkH\@nP7o^[3a\/48n?N`&i+>:Ue9#?euFaVVtl`G@Fo/
%!U4DdiQ52&G]IuGX,AH'?QOC)o^ou(1Sq#<%IlYs6bI>d5J6L!+9$UOr."9H#.h[8`tDc.S9OnUfEXBqHdtn3+dTY[iAMGJY\APE
%28b<2aP:0q2LDp4'8M#>pDdD=b!-pGK3-jRoE.2k4i\u*E2Eunk"8pOlNY1gZ]Tab%D!T;5D2ZcE7I'EoLj.)!UCu?pZbor&:U=k
%4PV/@-dM-:qq-8>8<*Ep-bu-!1#=^1<GO,A4IcYXhQ#des5(p*<;YKI`Da_Xi\3Yu>jrC3/u^s6nB-?.-L)RuVZ3(SYs6rPC.75I
%k;`n8/\%iG*neYVGT$']\>OiFpr$Wj0!=Q_q[Mk.")iYlQ_ZXSYTH0_(;dc`c]9_5D3"TP%de''d[u1bPNV.'r@%MO\>OiFpb\$.
%Fq3-nb^G\,CH;h5djOo7YnZ_uHfN<=3HXD[`N'`6[#3Ee^fbC![)Huor^?)Jro^XWZ1^A.KiOfuPDV=IHi0Dt=noX)0'`DR^)P`[
%4l3T.3Ok"5ik.,k\3,g$8JP/>_`\7Ec^DYRXdriG:=knK/tFQIk7>!CP:J=tWa_>3@:Lb&p)(.NBYM:cd?b9mBlRY9d.(ZNlOB^E
%p72+Kcfi^u9DE;k6ElsaDI#-$V.!O0i_Dt_386HPhmsXp_/R;2(;ig+<o*9MJUQ8=NDJE3*YuS)Y=SKBn/o;*I&8!5pI&GJi(TE[
%V+QP&e@C%l_CRSUrW(1RiURBsndP5'\3oBhiEf_=fV1&1pP@+OB/_qZ(M*O5FnM+FbN?EDmf$%jebOnZKU^!#)]HrnDqcp-c<[*c
%M5#?O<c%6+c]F$(];$c1&n"-GZgaC^SY<;=I\2\QAS>+pTaGjHnP/Pr/4uZ0.b$#LT)Kb2/_eQKnQ9YEN\-Ju#+@L'Gb([I`>8&a
%DuZE&?"_'#LZW$!4srF\4@`N=8'r-j4oIH0$^M/:k=0(O'Bi_c=EIq6l,&%!1*er%p_nMq*KO`Ujk^SArhdf]<=,*79[(DVfCWZ$
%Alc)RNZ;j+R]'B@-n3T7N02+5JBqucU@'&a3&\afBKl`GnTf\g':]:?d[V;^Gt\Ms/+`]j)V84Jq-N:bI^,],bPQq[ZrcuB[%#t9
%hKca3?KD,mjB'&3q>]%_q7k7hq`acBqqSgPF76ih^&("fmXJf9s81T`mreWE_7=c]CN[=qXsG3s'c0Fsk3Es]m"@llaR`f`!5ZXa
%]A_q^Gfjdmk^9\=K#]9jSqr97Y_$I*UjRW:"jf,G?\0Pl9,b5CTZb8PnG(-5b,>>%3S."1>m!<*Y,Qg*?$^d?BG2*8H0=-<Y6Z"$
%^RH">CpI??;Q\jicbWKFHf/It?fR+H.CTHT)N6/7j],#R<%eeZ1(=&&2&@7O>3(I(Lt5]_GiYMKg3<(Uq`SWkcG"9sZ;*<?"ci)/
%e[)7_VM3B-IQ!(:a1bAl+laFdjqYopE!A6?Nb9S&Y$t-oe]^CYA<C*!H('-oZ[Q%nE6AH?8.b2<&3FnZ63Lc'!Y5MmFR/QN4L>][
%`8\eB%V3@6m'm1HZ01`qH:C[5!Ok$A9:FtpnEssa:n2<o<D>0NM?dm"C5L!a."]"nD^bOZ,h^HUkkIB[$hJD_"in5_c/WUsqlhPt
%%En+SYgNq@_bRRF?,T>)1\%[l$?jc_9sJWm#)gUIA)FN9_p"KC&^5<6*2"*,)iim_C*'%HfLIOP@<7$Sn-n!!Q8g$0AI'_R]VSZ[
%3$7[H,gHiu+9R'N?]W+,;A/l*YlK1ip.[8KloG$0Sl(>`%=$Ikr5>qsR$3T2*l$arYMQZSeNVX0"';"MMTW+rT7u;C9MCQ1qXJHZ
%R)d7\P[kXJmui6mm=Q]_'`4bBgga_=@#S7/;d'ACnndn;6O/FFD&U!&oGkAo0nL_8!l)C/:AcqEKOVAUVKEGSKttam4FZd;B#'Kr
%1=okjR30obU7eKcH#L0hR\uE25VI"5*"TJ6ci:q$XfVUJG;f%<bLk=oXk4A4QtZ2ohe30ePD&23*@]pg>PsM(4KVPe:R/9;/oeq%
%@<d?0Ug7ph&,:CQQ:[7U,aems$+<FB6d$aET"8d%FC^#@P#TUMiN]9(4QfAGXcJ'P(=*&qW7c.F.`6KS!kOXC:'hBU8FnF/)CMIf
%.DM4-^6aa_b=*e2hnE0M^/p6,=,XdoMgYQ&<f==RYCu0K<f9Z0r%"JlhY7&-eKX_'C6A-)]FnuI4o900LRW^/[>=e:HajlQqJX!$
%gY="Q-Wc4j%p"Uq7B_AB_Z(]a/J>h4=sSK@[E)([T>"LIXAt`#cM!u4)s4f&WB7.L,\6OfVS(u\:hR%(F=e:,pos!9%nhgLRWBI:
%pq9f%1DYnYIX)`f0RWe)/G`[(qKFP-3A2Y((Q0:.bb>[$$DoB,$u<?hMc>8P_'oIsqHQ6@>L2L%q9j#?+knB3JXH_.I'?f8XR<$u
%HZ]QHbqKrln9fFs5s&4Nbj;G-V=)dT]Anf<&t:QD$Wa5;/(Jm&6dI55M>Za0/F]F<[MOiI9f:f@1miD-MBJCtR90^agG$S[=?9gn
%1sN*gMWV;]=K[ksHTail;sgQcVctO"img"<ZSlDGU?F-CBa-@pKk/H8LoPk:Ko?Lf#3LniD)_\XMA<ScWbPl*U+t1Z7Xp/%?`NLC
%6"Y?F?L\f]C!hlYi"^LmPT4Y29SI<WK>na#.OMpFgiN<B4nID,r"c-$=PJ&V,P'FZ*V`<F*uBIWq,]TlkFb1MYA1hjjhS.0DdH:M
%otqQX"?D7`M>OtQILut=<Ugj5T&mF5rLnR9FJlPXZ&ZaSNa^dp-I^3K>kUSW!]1k9cZll5a9D`>2-D`#7C#rP,k;MZJ?E"@W_kW9
%@m(>?'.FL6^EP\'IEg-_,/1/5a1GQeU7hM0!^2?"E3)HCWjQ^F%`l;(68M]0k=PAQMZ,4s'0sP*05#q:q5E,A^gPQg$)\-<qj1[h
%EAjWMFT1$?G7&g-PrBiB0E2<SC4f.7QQAlA/`19Q?Z+Fb^;?gL+,)rVdDpa]Pe5a0f^WCN>rA+;JFmiRll/]/^.Z[)iq%$'gd<1?
%-U<WW4lU=[qM)WnGTu#s:Hj3"1mh<JF$K7[`iXL<(Gj/9V"GAb0-L#p=<_&,<1r\N(]$ArfC=U4Eh*0jq"!e@1Ap/R>ke[3=(uX7
%-QcRcWAL&0s8OT>?7[/XQH92brr8`mpbQAhnDD"e(+6k@lf2@O&O5[oId>HA["b8r[p8=I>=sE]CD-?[cQJZClOcpDg&/6q2iVIo
%/3i%[K#s^a1Tb]0n)I,%36Vi$fk,<qA&S`a])8gTH/,R6LDof#e+Vjtp0d-4nal<bo$Nh36$7@pjbtP2EBP@`2l(WL/66Y@EJ\a[
%6K>XGhp;H#nAS&f8XFmlW9\>0<1JmO*R58+-NcgI-C=Dj!,Q<XIl0oL!e-j#1nA'&*sCf5hLOa+Fmsf;Zaa69HjO0$6uN_@8(7:l
%+I@67%YUW7T\i]VK5;JR8L3Fo\F@'^O4rZl]YBSgkh!l8q*D=Z@D-"e(\eZ8H,P7n+R_;JGh=VJcG/qLF1Re!$_4f(&6W%F^1aB8
%(a.fM#mP;9K'60G'#r.IWp:$Wgnm8=JV>G6+r[g"40oDIR[JLb$X?6t5Y=Br`4Rq2W&@-iU4l;b00QD/XbZ(gSY<6ro7W0Xb3)cs
%=Zo<"U!$5RB;o^eW<\1p<7Cj+9"'Xu:+m\6^O.B*1+f'>%r:#,U*f,nN_?j?)*7ej.X8!5-:/=j$7IgD"9Q-l__P@nZ(Cun,],9F
%J#]b)1`GEN`!9^bCYh;tG.U\1;?rt!rL`c%B$o([@h4p45dBC_f5:9!-5T6,hYNEZ!U/rP8[B<F)WSpMW5,kmpb>hmrS:b1c\d2A
%T4R9lDF%pmVYt;-*I"G1`kTL"s!4q)Re<l.h_#FENU+,^lhs/P`e=maG!tc=G&Lef'J1kU8de7]O>q29UE?"!L%R_JF_tC_Z]_#1
%$cZO+(h2,iErULI6N-KQIqg\4?ccaDB/B>?*;]\hXG1A.s/];"L^a<G\l_f$Qo<-Q_;Jn>q"Ln7r-L2a*tZU[R9f_`Fe#)+Z/V*-
%erl0"*@3b#\d+SU4o'h^9"k6n,Q.!T"R[+8\:Y@E.qpYpJF@.0ToCnrR*HO$1+c[1r!OqCJ'_A-f%b'8b?3HjV;A-3^TZ&]0%0at
%1\8A2O]E84JP*5,M7B[@<%oZhf,OoU'a=?&$+S4pGN:>KhBhhVEW<2`3]1%L2`&lD1TH>/=>!`]NeEcDa9K=g@t96kY4TIoZMq&Z
%?l<:9r*=sRY/1*.%JJP8J(J'-:.6!s<5.\%s47Fl110hQn3S:\bTd"8PDFUQ@Xl0#8BP:FD#^]7M_'7BW;kDB:C1LGN\B4ZepV1R
%N%"\.-(fZsp*M9sh_l_E$N+CGD[^YEgeWobj$6Y#FTJ%)R^sW7'S2[Ha\:f/V/H<!Jgd';d"W`9Q"<=Y@j3%L,rZoE,uMW?lsbn`
%Ld8PuaUoVY7K+APMooQNhu&>Q5Ra]@Uf_*C6r@G^%S9\I@gP;_rt0Q2]Z-!^B8eH+jogf4(^,Of'JT`J%Y6mF[Y,]:9`6',Lk]iq
%JP8TQ?F[u=+bKC&e;;Jf@n86>UFM?o&FF+nj!TQ*s$eL'R`rk2WhLUD<cS4O2,C/*%It-_qCBPL0.;q)s%W=<J!2#=J$!;X$Ud9Y
%^LcB-OTclcJ!h__>9r0G[?'=*C$!+8]Au%*>a-!f!5(G]:7g5I@BnW-G+F<59]nRHFkW;#6_CQr,lV44Ic6ecCH'9o=Jq!g%eLfG
%Y$Z7`L%b?.D!0ntI57enM4@Xr"S9umqeau`0N$g&&#>fkLL:%#?<osucqUQ(WEVUecti=PI6+:hQsn(!cA7LTe*:s<mCTIOllcLd
%`u.g&VF#1dZRR>GlaqJPMe>DG%krk!3R(U&Su2C[HG+7+<(22@S,uqeL%sPsX5,u2HeE,9lS><f&H(gnjQq25[E#"ph-SMtJap^(
%-HMX8NN<"l\QSAsb4[&(dg_G<#@TT`^5PQtl/XW'HnC7s&XDSh[fD5GU+%:?kHsO#Hef8Cfse_KpKHo3W^B6A1ALho8Rm,N8^R8&
%M#uP0MF/8+((2-r`mZ#,_1^2#=FrR"mmoK]/2J(a28c(=#mTslG:<$Y@`u$u2Q#=@!OfaQ#bDOrEJ^QqiZ4G?Wm1`V4H=sr%/eN,
%koeF@SLtLEHt=Aq'O42O$6?X,:07RSigo?3Lhk'50s<lm-&XP"J^p0Gp`[N=*S#*?`%,pThLdA9\m]c:8Me3PIj@u]:V/ChW@&AT
%A;B3VNoqdZkhm?OJmFC%A.cfV^-pt6Uj2b<Jq6B'#=QSNaH5pg"i6bP>(cuU$*%E,N?[:c%7H9!/d5l]2CE0ggma!3JL"+P<<?iF
%$&le/C%eM=0CThQ*DLP'Lsa%T,duiD@X*W\A.GA<\Yc1]bCru(KUm^b?k+OmS1b29X9aIuE'^<:as8;^MTE[c6)0W6@p&EORAWOU
%8Z4[bU+n_"Ku@.Ln/N9#%i.h*M/p]rH]f+jStbH69326o/A^6X#(%ai-3^X]-b(['C`YTk3\7;"A(h?NoM_Hmk;[4$d]$r*<MG1I
%io;%.>_E\J8TL%hf+ad_?^2HA'IOSp:]jt-W!aV.koZe%46-X9Y:4ipLe;TE$F1jr!E?R'!"1<@XGFN@@e82<O$V)!bu:mO,P)BR
%'K(`WV>qhM1/%DJ.J@XnKl!&d9W]G65\ku?J2e1#8*5nViCVp_S"Z#P!@C@9]J7C1Ti`H_$Y-/iJ6E<h63J=[.Y^9m#gK>@*s>I'
%<XXu,A\,oK=k6C1]WsCiZg>&t3#X/SrKb**9\)V/n<rTef.%+6hi?`lo=:h%@s/&TgY]iX)_TkH6t^VI%j29%Nf+t2'^Sc]VTqn1
%Ni-`(,`A1IgQ3>BTOW_3LEp#_fle@j(1[$f3d0-K)_s-;&fp]pRI:\[RVWh2SVCl_/'X4rB&G'7i:o6`6s:u"E"UCB<ANP@E0VcG
%Jco#W',VpT'BKkQm>GGf\nhri]r!2.Ur8_FVCDq@;ACrF6C/!D![<0=";3!7bulYap:*,e$0^N5dCQAgN<pNl:SIB=RB-^j4SZKE
%9glEATueI7)f`2k*AJncAu^chN)KbE"3dEeWMD&#,$@IkrnGCu7<3GW>lYF&AY_hVXd)=TiMOr:e"auLMO&\>.HFtc*>ECBDus!O
%[sDYbllp^,?#hu<'&Rr2ilP!g%PS.i75ut=OdL&I0A5pKVX*b30CiC$CFL2Hj6s6'JkCJ(gpJ;F;-,X",m<GB9K<c!G_`Rt&V)B"
%!JY;6k8JYMXqXPDh8HRB@bNp-"?2ST,R(*N6XiIdh'.=uj+2\J#u0LL8*cm90pQ8m/6YXnE0G-^9Ji'W;Hp/5Y!l7L^?OZT\1=dj
%Zj,c3m-,j(Y17rsJM.+V/#8%bUAh7+Kb&I?4eI`W;;:^X7cf**rb7-Dc$<AToO<F.peU!,ga/[dF*S[[3CjV;J)mMp.T+upJQ^oh
%F&r*ap4Hp*Oa21Dg5a?V1H]rCn<0Ia151n4%?IOL@H]nTZ^CbrTbk:g]LrG-3'F7H5qa[c\fd+HW>nd'd0XTun6t<6qn_W",Ak6S
%>'!h%6dnU$<A6-A-K2)ljSgIH"GhYerNF8Hia4MuN\u>0?0"f&&mrG\56qfKEu/[:2uCGV>9X_MR0rk7oF&kL`<)]=go/Dr/92C.
%QA`TnB)h1>%&uGUD?OR5(P%<s8"?6d)WT\t?7)*9@.gL=(Il,GEsr&)*@&HN_M#uoJc3N>ngGlis0\Xk:rl#!4b^XGI\J=sfc[Lj
%K'E<&`#!K(L5"%A#MWAhPbt*e925\Fa!;"FOWZ*3-Q2%Om(tU*hZ):Y)$LXtM^\RI3"9bo!^)9[nH_2'jePj+i+C8#,HcP9YL:Aa
%Ql,1o"G.rfM!u-!B6D\/m'[ij?d#^N7C2ojj9e[:Qf=#>![i$8=Kdh9REX&BSALKc=ICD=`^9/Wm8S;r)U=D7;KU>.:HYJV"kt19
%^)$=`r,G3_Qi6&^;1,H0H+K15&eF?os2/-bUXA!YhatLIUS#""'/[ItlZTC*+&8`oG*RM+:WI/!6cI/T8:YURGM[qO:S'X6AhK='
%L[*tu[2#8pe'19jacoJ>B*VH#Y<U-p-Y5=gcN<T7niX<W!o0B=S.06+%t7:K6N?Cpqp6HhSkMW@$;A;t)_V[X.K<Vaq+7?kg/VAE
%DJ`AAcQ)[lrJZ4QcG=k$@"8+FCO%a3\9:<Qg\tBr.[o$-Ii*[^&GK4.Vtp.iQCInIUoLg!241iI'hSKuMtP10dGt\rE];nR>>2Ii
%k^S8sB;43J[8X8WBp)NGT.(KS3[)H'K_QIhgN^s)QSd_Qh#39is2U,9eurF>$eY1A+lkW/l?#-+o_o'Wmk5F'X`561hU%%0U%u9q
%r]B`V&Gj#to=q-Ej2Q"e"8VpLYiK:Vb4pI@pJK"_pt=3[$Xb&4rbG4-S!\%]^f0CWc_o<nRn(GH4u]P,hdV17"7I<EFoBc,rr/b9
%rVeaDQ_J7trKf^=eo0po^!QZPeBF5.Ms8o-Q$bQpb$Y:U#,^10;&`Ef026HcTta<(62%TDR#\3>2"(A?Hc-ZWmf!uHo]hW\%0E])
%J;j"O,87#D<Kf)XS?"Msr8G"hCJT;kbPHJ1SXTG@m#Fu!U?Jr,1(ZZEL\.J:Uu&;9I-77c^815?DFN*$\bjbCS^th5hdq'qWK5b_
%d%2W:39DHki-D+PSIDE[cQ3]6k6?Mu"Ad2=k-WpFqp#Gal-RkK"o!dlV='Vh*=EZqTe\1NXG#.CW]K@(9T]3h\_FPl;mVERD:jln
%[Mo_^'8Hmn6XORh);(.[W5hk;G-4k"I-&bO1+82u4rAT"nqk(-?O!7EWh`2^a,MD&aA0iAmIpjS<ZKNa'E^;*ieItUCbRc7N6;+h
%YRG8Er>g2uf6h(`9()"!7%YdO^.s/Sm0l7%R\PGYohSG,9ukefi>\)<+Q2:'DqZeTjR.Z*gE<*L8KE,X;^H//Dbt5tQI2mY?`F%N
%M(_qG:WerG[lq!d3%guK2Qi?>B?L0[bN#=0qHQG;h0QbXM:'RjfeX#fc_\J)rM(B9m<8f#Eqck'S9DrEft!\Ca5hMJ[spWGO2f'u
%]`j3.K=ha2\UR?o]Ai3-9qLd2S`.)bI9F-6]bEbr1<@,W6#D`P#el%1T0O=+m=*kM!J2t<b$7ZarCP`Kg0D)93@%0N+m(B`G#F+k
%Bt%k4jr2SNd_W+/=dU(>?*&5\aqK$tA5Fk%d:eQ>_.)#6[m%a<gr$4kXo%i*B!s\k!higdN%s^'\#-.7Pf#?E38'4()(!aU;ZF/]
%rFgY1KjDQNTAodW)+5i0#/;j8mYglHVeW\(Uq7SXom_Q*C-qBt3Ha.4j*kN,2Db1[#Ri+8#][C^SVts/Sf(_#2u'dE)WFqR*D]8$
%U+&.knhGpCN!@2LW*[bC7jCM,'.Bs-`p=RPb\c,><%La-!IRhCeN(i+Eg*6Y",F+!]t7P;f1`rie5Pq9:6;6t4Zu5WA_pF5`Y*^1
%oAYfA`ZP*#BKtjNh+XS(APad1VGLNDKYje'kXJEd;lI-bebqV+Tja7A0cn5l;_ONl;tOaan6rql@rauH?g/(@+nW2>r8Q-ZDYBZE
%P?*IF,3ru0o9a=Oef8G@_i4@J=./]9.`8l&376'jh(mAt-Y&"J%4\VTHdXF>qK\pU(+jb-@C+RB<R>"[)N>S0Ni]2?_tLe7W&(#\
%0.oN1g\l5!#N6rkjC792LT4_pk2PpA<\W>9T%3K+.?7YuM%9h5gTPKG*M""Y)f>?EM`VohhE\=!ilbjSTj+QV:a"Qhp_W'NYt=XD
%=j`./b+hbs56R1tmPb?n7^%heZ,*@VqfPJCfEUInC^ij`I*uh9*HnKuIq?FH&s;3;<Vtff>fK6sG1RHd$6Ka;L;9K(CG"c[Q&_r^
%^a0B:ZA')M^L,]+XZgV]q_OB(_Pmr5kZC#c3?4&g']gu`e/cMSSga'f=d6t^e9o]8D0md\J)8VneNk:G:G?u30@`>+_Ne___-1u$
%F2g!"6Me%nF9p`9l9RIDH0n%[`\<nr`dIm"cO<aI5Ddq%_bjq%E_E#rmB9k=h_?2;#?"#TdhR!VSp$ri%VnWT4qX-?WJ69hh(H\Z
%=Q6c@$O;AD283j>);Cf!2qV^e*A7KG%K3&14[n_Vee_MtHXJ776u0'KeEQ\Jg8FWR`4oLt\rH"GL<D+]n=s?/dcl:SLt6fS),HP0
%Gs(=p6mc3BO-XN.2E0C`4X&\1Neb$g3uumKFLnV]m6+snRsHAU40IS@"%`%LmL[l8^-T54VqB-,IssL,(E3Uk&<$kN\`Tsjm`UW@
%[\FAQ5lksKM@sPmb9b7D;P@^DT0+h(\s.O#K+I>+V]eS'CV%>DRl.(8751@ud2;i"KJq;,lpZ4T/,(#W>4pQHf1]*Wd<:#-jLb8h
%p3sLK=(mOG3?I<<ptc@98tN'%guIh<i.Eah#'"WQUY9DJ[9uY]Q2CN2CJsbGVcHj,5$f!:n<VOPos6P_"1O*Cru?W])'UrY^Ypem
%>96"#+(tFhWRN,&TZ(;@Rsrq_3r#eq\A!oR6VbBlW!BFi"(iIoMu>QBD3\o0;>l\"]-=,VAW+CY,**0hn.obPcpc2KF/^@K0,?E^
%0$5X[2)N4\M'jNTdZ>9d5&&_f0+0Y2"VqfqhSR3dAu%q+kY*71=,aCVOKr'e>ZEuHUV+;4;6:Li$&cqPmW&=]3IJ5@^frH@f6gaI
%>8kn5]2l?=Zg7gCBR-o=A77R#5P+!'V1"@HA0-`r"1fV$H.-c24bS3WhcV-ZmV.*,-RQKD*51o^1oMB\2XH`aYH6_,YEm_O5%E/Q
%FPHahG75X!Fjq8A0;4T_XpW;5A7ektrJhE_N;L7VCqD5];a_UkqfXT%*a=&ac'oB`.a29[iA0UKq#T/r"oa^4g7%0+QarTr<aBOP
%T3\QIp?eY3So.c^9,07<LUroX$J+EsN&>1M&:B:Mhs@Elb.!j1Ej-*L-V+'IelK-G5K`j^6gL.`3At2T<sL`$fLfK;n")"U>:5Kt
%Vod>nWo\<MWP0]/8jEs-fsbd=;cla@Smr_]mEOTL3Bibg0MF6AiZD=*N[F#Q_8Sud>H&Dpm@E'J2ATM8cAcsE]7U-lCjp4o]AK5k
%hk&9=I<79q)k;jcLW)h8ZHE<uHraC`8\]E"nJ:k86TD(slto`Y)VXl'_df^2M-YTnWk7*<;f]L6InFU<A%bEVF)@?VmFN71%+-U*
%qGN\m)c&Cr\sr'CDDfkE8Z&??M]Rbg#.%>"j?:&e[sl4V!i3l)kN;@94pBiMLUBL!3i]rsVM`bdT-J>[Y"`=Aj"1tEk,R]8.+;(#
%'&0BC3>b>[D8&K&RJ!V.VEWhg]fle1'%La-K:gk[>iVX!LDGSg=W=bM?anb88%!G_D/VQuMEFX4-cP"*:*?'#*49;oL*a!pP,WnQ
%]bf?^9uOHrj%`h-io>c`)H@<e87tT&]<#V*`n*I9D8!+.a?jaESV`\aal;P[.(WPWGI@#`T>TL,=u(0/*Os4.)Ch=pP!+2#JR'i`
%G`HTIf,hAr9&PR&h<hD^P]k_L!86qYDV.B"8[Y&UKNZe=d-KDB+?fs(ZgmU00^k(XO)Pqj5<Mjte-(L<.P$8]I>R=Q\'7_'2n<GT
%5-pZ(jh460dNM0NXUs1Ac#$)+^#k@.dETs[U@rd(9\d!0LAhNoeJ\WqV2oF,SfAH_d*<rGW[e3NrTWYVOZQbhmj[Up]iA"-lrtai
%L`aCpb2r<H1ojke)!>\D=/eM5I@b9ig[E8YVl_9SP?.*D0:\^0XEL4_&L5nAjYg,[BA[T51@7"9:GdB5c$ZCn+T`*s?T%5V2K/lM
%Msn@><8hBJ31gZ3N]D55>&tED&XWu:(QlDsniNJl0%8"c6trri.NM6\o95XeY)<o.1N#^3X/dFX:a(I0'BSXtCJF&9HS6o1+-SJ%
%_=m2<4ps-OYo-+DN9=>mH&:j!Y/Lf%5'sF%Pj!e,EKf\OA3]a-,a-r!7tulPI&M$)9*s@LHRZW(]Zi2$;M7atNI!c&*/67$G1ju+
%:1AK=?9o+i#%VP-\Jbfi'""\UKZOD7R:[s.ee6N6bER0'h9>HKr1JE(l$R&,(Yu/0MqDK\lGjbZ-<3+/7DRRB)VOc)?"Xb`eC<#d
%s%[?[o&M&^g/h&4`Fj4_&"e%Zq5elq7<\E4nb"8BC+ui+,G3/Z>+.kff495;ikb:7NLGjA%QDgSP?KWqm9^B%V:P#`oPkkU3uI*<
%#A6pu(tB[*Q]9QW4SBI_ZcG_]1nETAA,UoY^4R1[M7Ms,"3[FV#ff^e3M1-UgnMK3buU([:$QJq3qfuiVCkLP?2^lEh'VIMp]VYW
%BeVLZ[aUeoYas\.(IKfRIt,"+G*<)WMp$4#6=lSnmC_=9SnI1e'^3n3CBB+\i`lTa23Kp=2o'lD");#0FrsW$f;"<#X-%^&DBECu
%d,aj<m(l7I/`'91;T3?AEIOb(B[Zt099-#V6-_6pU;lZ1pBm>&G1gP``6.[O8e1]!F"#`[EBeN-`)""^dD!+8e14aMiasUFB>\n`
%-X[dh.=q#))XV!gStrQkGTpGOY<2Z%CP3,5d_*'=Fu6D%dHm_%E^.cVPAP&n?aDGFNF3Z/SN._\@;nJM+%[FM?2KH]2*l?0#q():
%.Dc4BTpbI3,?igs_.a3a$0obQLAI:6P(iPpW:\X.Y@nAT5>D_8YQ7I/c_2\n-NlFQqp!'59nX^Qe/i4KL4(HO?>_@Qn"4"-$n&,b
%pd7S*VfS:4Oig=Z*L`>dQ$TclhHte$Eq*sh5A(?oRQfD1nkm)-\SRo`pddM2PRVGV@aE5[Q\G(++&JWnl*\F,9,_><AB1)q2D-PT
%l\s!?1u'gB2D\8UbEfVu4YJi6HY>%c1S[iX8,H,U*L:tQ]B]_U[7=]%(8spD7e,7l,@"44#KmHN^HYK]j[)=6-UL_WQD?+<L,:np
%7t42L3Ep<*1/0-)H-(._>bFl_"ZR)\+91,CA&=4)l2%o^:Ti;BO9[Tf\,S-[IINiQPPjb2h,`CI&OX$^;q%iS+M%pM9X^.t$!]>D
%mH9gHY1e.3Eo6#:1"=>@a6AUG(5^gC\qA\)2rc&\Zd!0.O2lq:LZ(bDl$;hS+cs?C%iLedo^Y1mI/KRZ:FZ6?:L3\#Kk0_!<5IM$
%S*Z!g@3Uq>Cn1mgQgO!PIPCY7HmS[jM<aaf=5>FHdqhs?\l)0U?"mp:)n?%ujIuY>BPKN60r)'F^#7'$glVd$YF#;/h>Eq^_m[)c
%DA@CI3f'D75,JlG%%n`/=7?0SjQ-c;$O'B,@e0)Dbf'noD*a0@jEP/$acN,V:'RJ;A"s-i%p*Ne1MjWc8lLE/ONQhQIkL8aI+ufR
%%N_ssBsnKrKIc;FjMOI`@dRkrTe]d\D#pWkW<u5s/j#))&)Xb"6TIh&OE`)[;Z-^b\pI=I's<Q_lp4@VN&m>RP]Lf,mP;4ZlbS%]
%bF/s+)o+.&H8(Cp]o_(=XOTV_0"/%_;2%f8PPsH4`@rJBjilKJaTjiMp:=sSp/AqJ1'3Lqho4mB?9q1iq$f-N/T'!g?6/-kidc..
%$"R5#r[kq\ji%j`V\i)eL/oGQ3K6:uEo'W/7G5PjiAo_VG5TVr[`f+`[9cp"<ZQH@BpR%_k8n,V03\ANBd8_cor"a[d[JS4\U87s
%`ZK<)H?,7a3)>/#\Ef]RW(ug4;AWubCJ;jP+)]qGPK\ZPTQR,sF5^XHlgBfAp!M"1Q?pi8rj.B7@;O'0-V'r_Q*POYZUZ5cKY>;S
%-@cu-@:TjRSJR%FK=!C.$f^=!f^Ie:_fNsk*(TB<9$2L^S`8=+DDO:V3BG6"KJsW">rRiFD:\RAXtK>AQa"5YF-VsDQ03VejrtGn
%C.4"sn:nq%M7^r3c]pO$U=l<h`iCP&o5`m;mII-_-@:(9RMngM'dT,:24MoK=a'(pbLP7!$*#^jMh=Kr4`3&*5=?SGKqmFMAu<a)
%<!-D(?MM@)>A>]V:ikEg-<m54a,D,_^,qs_Npjn)kN1"Z=Y3kD)4QotL/oFfh\3;`K)g*jd=Hd+`X<!`g30ftDUi*HFd#c0kOEXQ
%Ft#bU`BM6b0FT&plq2cM]f`J]!;]E>nicpkZ<^SUQ9MOhCip2C@2u!PC?@#9qmJGh+oD4'.DG&`:RW+cBfDs-U=Z%/VV8JKX66&^
%Po#6Y&nlV1iES5a4Jn@)E<2s+7d';m3PHJ(DXUj7Z\Q6f6X%1;NMS6ccC:fV;?RYorO)SO/_q"S,Bj.**R%8@Hh_QcJJ#sL2$$pp
%?!N&s?4*hNo.P[Q?+'bZ96^'Zc0S:U*28P8YlYVG1tOc2)9,:CZ!(rq(f^UGH9'8>2H[lamuUnoQh5@iH?D!JLHY_s2uRQ5P.sD9
%<_K]rkI5TKE;6ZPD>%DM>cR+]^,6g5mIcB9M"NZ)q<ZqR`hLS#g8PZ$-Lip;G[/hbH:'cp-42P''(tF,L[&b]B?`h+[lLr7_+^k<
%Wi5'Pp3W!_F_pea)k/ij$B2g1S@3ZeZc?tX1M<-A]bpi*f02\'#7.<d07hToG?<F1FsY(W_Dc]H'!7cWi'RneopE"Tr;4<R[X4`0
%!OBhgkC>eO.)$0Hm?LZdjBF(/qR_N87=mq?6.masW^GgR&JnB"Xk[nOOWM*OEYGqL:i[7-VJ)Ze.IF*XQ>IJBn_AP@&tC,EnMXQ(
%5qMMQQQ!4<)b;fhaOj?(I=64a#IO17?)"X:_rO6a@WYMY;G&_t.@tq/2D3#5Uq,#0nN@0=1T@9a5*Keh*j"dcLFFJ)8M+hCg3?7s
%QO_47mHhcF%bTmY8oj6phG!4Pd0l3p(CUC+hZiTYAEgc"e[b8GceHY:IeU2cg"#d,d,2Ln-gkega^?uI@k@.WJ;h,EPLkfBeCF@I
%4.9bkQaLLIlg1b6MVR/dM65k9)0>&^f%]p5V7>b2pd5Q"f":HQrV=tfG?o2ejIe3O*^#M(g!*,Q[iJd\])mi%HVaAC]B[&U>c`H;
%leGD=Pn6;joTV4hiC`WVUGRRM:h]K+Wd$LPHJMrOqi?r9_"/i+(lVo3jOO;qg'm$$ctttqfTR=5ZLSrn(c3f$o$Ao%HMc8/,dl+D
%mdI=/+mq$$YM<0^n&KUdM1"NkG(U+b,?g#[Cjl0u'8^GAaV!oO,'bCIf%!XW#(i]M[o>XebE._PFctLk_gkr?Xlp$Se`&2J$KKBX
%[X4k3;JPk!!_nEZ?l3WIW'9C@dR#=hP!A3oWbNW1NlJpDkd@#1MPkaX_qfTQOD9G4(^?pgXFJ_i#_FP"\TJgQ_7,_^r\(7P8,>s:
%I&$ach-QJ!3g][l6/'LhJ7uV'\a&!AbpEsUmoJJn!=!k/9@NlGZ:iB%<lbm+3P%Fq&I@1=;nB"U="2TP(IT.D9P>AD1`_oedDkn$
%Su]J(EI&03dbX?\FXGFY8Xdhf=)o$aHef_"Rp@fK6`O@nj-iF;(OLhbjks[4h(64jX8o7V[F+^C)]C&jX0/ZSaE7?THqqF=R#OAf
%%k^X+SPD"f_'!:_Dp/NM(.8>(@)$b;@Q4k(,g]*;j<B<N#gi'$\ua`U.Hog^.L_l//K,O^Yt)Q#DKk\\GCVm3>Oc2,6sY8fSE5]2
%E\NX3n\*lu8i3(uX.@U+p^T*IZZnR9[;Epp<ic-k2pT3HZ>NRPD<=amrcj#&l-XnB.!hErYBo4sI4Ns&=^Qp>6gqb`.(gf5]iV=_
%:$4@0=,'G9LEQ28Io/C[+E/GK)UnOredr?MZ>nJ0p)5_Y%TYUH7AC.)GVPgd2F5uRdo,RS0kQXf'.#>*3!C22OW[3J5"ubNPJE[M
%7c-!1a_7h<?$T$+dF\e\MJPc'^d%MXBr+b/Z0SHgCL,]<*+W4`[1uBO<g)2RnoOO"G^ID9GFj3kj0X1oQqJctXrnq=/g>nSq-F6"
%J):8cg_cn@]BYBr,aWG5j7)G.p@q/_kmsSFMl`te$/k_f/%nXR=LK^a1-=0db#Yr0ViP]'qnA2F1hku5^R_Qs6>>1(gItc4ag>bl
%1Zp_.7WssK8sV@[!%(JZX]QNYA#MRrI?$?'dB-TS>2#.^)s?I'<%RFohV\$X2j:UIs5Qi!Sh&:fldN4p4#ke?H&D;S9+!Dkc#A5/
%OlRKr`1o9,rMrbp?YPO;46Pl!=mD,NFR@iPoQq$emIM$*Gddl(mUGJZC.d2SWcY)&*:au<jP'u7^3ATdF!@GfDnoupKlK`;4r_'?
%WC3r^qK=="d>h;;2t)dU.=Le!q[9iP2Pda(SFdEd/I%W:?OgPHF>[&X5/;<mjrI>do&+Vp!ktE.O=8uphCup.kMFe\3FgF]4l<]N
%_"L1b(:8R&=+uDge(C2O+$]*S+.a_^\LIufl-jU]Xn<2X,*]=XQE`(c(-'RBK2f&2kG!0H1TfHR;3qQqT/W7=;Kf^hhN,j,4-2a`
%+T'k.]`[!%CuG.aU9`>&aZd-$!\SK!4/2?hHr0:,53.Vq.p7dB&%e7!R4pmf/fk,jcuE5ZhONJA%U::K<7%%M,MJN[Wjt_NV`JG<
%1\<g7'*gCpFBc_KH\9HoPY'%bc!-gnb*?>k2H0Q;s*=T$oH^,.4D'ZP%Db?WlMTa(EEG31A6ZNE'pq]YDoRe[E2MGN'!OW[nR!,&
%G]_R5fiI%q9=pKhj!BjMN>S=:O\O3!dPt=a4b0]<K#:UK.eg/^1iG(3#2B]mVB:.[Q!2]E@ep%IS_\hQrHDC*A*$@q'13:T)DAeU
%3#MHrG>s"dSVoqK2A)_UD#T,18qM!@pF#-O#<b7r53THB[fdN9BuV0RfYcsH5H)"[K3g]&poVlgm$i?IHK"#N+++%d6NjL>-X:3!
%,:J(#RIZF]7+#>PfA#Sh1hub[nP-,=Zop'$l\D+F\S8IZcE$_\gU-kNP\!s%esgQ1QVf2Am_qq\QG+g-_;iu:r^j'<!]'YqUUkBl
%Wr(#,M1"@["=ZM-rRS"CIH0n%.$E]+&"+$,k:F_DdINRCpnP1)eN.=gk.;O1a7+;sTC[1&qdA\.JjB)8I:&O$QdFZ]2Y#A<G+V"^
%F327q%gKI(keiX4P6#i+Xo$iEQ?q69/bA.S`tMLr_]]:L5FQ4IXgSf"_g[p.&Tp.p,Fd]o"fHnDT]%$C*rDi5%c/fSq`mq/on/j:
%U\=2@Xo9)7nt7-bou_EhrnA5KcAt##0AX9X[C'ALrrNsX7S.q%gWe=I8gC"-rO0iR(aqcYo:>P-$g3B<(=P#@=.GNP[IS#,4)^`n
%6gJ;&klWHuOMrr*L\NW,W\X?ll+=8[rTP'"4BPJ-ceer%Naj]U@es!Qd@aC/S<SN,O(Q^&=`1Q%c79gRm=+Fq1Yj.<IpXtYj]2YC
%j;QK0NTEruaDIK^_H+>"P?t@SX9!\&NOJf^_Zq$.nN</Wn*qqUesp5\5<pb9K7;`Y0&(X'BAi7q$5T7Nk'cf9kF?tCE+f0Q.4@j2
%L(_'c`]cH8@Fg_$eGlV3I)31?nXd,`d/fh`ku3da4n\&dZ.:_nh3u*NII\leLV!%F@qeOT^+;16S^l/%LqeV%'JDI:r-e(Qd_i&M
%kl[s6@Wbd"JbqE'Gu?<'VS,U:h!TV;]JGhLj>sF1$f2A&(nsF?IHZB\IPrQe??a/GZS^Gi:+OE>6%<p31@u:_GV"r7C5\*OE/0@u
%^\8SSV&DFjks&])(?H*F6l3V[q#cC%IU/uQ'p%F4gR%N&W&;Kf&#fBI\Skho?Af=b>@n/bi9.=OKiiZP&jSbkD7CD(fEp_m=#3k>
%%Cbs&5O7.sqP[9#hh71:&U2!^k-X6&]3eH?q?!,Cn'=^fo:tr9s)*$^cGg4s7Nu2G)ssGZNRP\"S2g-;7lQ#aW#T%h[gL66dE\@J
%rh1.rVQG5bs((oF++O(aiRb0g^TkN4pP4c0YYM<lj9gArs+=bX;K?l!.)Lbi&Ul=.[&7LP5-/&*T+uc=SZM:$N.NWtTI-k7hS\hk
%I@\+7?E8iOpbb?Ee$>Rt_lj7#\9)*6_QQu9RaNkM+aaQt@-?8nrVWbuT>E\b[=j7SoiPrB^2.2XQ-9-6cC#*52UCm_>c'Y:`UPIP
%Wb,b-d4p$)MY([J;]i^5f.6b;c+WPZL[[YKrYTBRC/maqQ-[GMgmHf:)WW]6Vk$')4WChMQ'/A7hp+tq1&5?u6Vb[skGco,GV,O\
%Db*.^cr7*Q](LTWCoh3/Vt)W@NTc4QHK%18(%A].m%JeVAQKt^K\(#0nrH"e_pqVIZ(lK+Q(iKs;U-@Ya'675LrC$P*</Bb7M];f
%9GVMfmQ&YelfnbS'3IP(7pZIWNs#:cVRh6S%.I$HC:pj+/1S<J08Gl(_AW_TqP(KtbE$9jEBekqJ!mmLm01tLGX*F26F#\MF!SBP
%fuXC&[i>5/8+rD>Ct1G-ms"0+9;7qo$RfrGZ\nso@-9]')`4JgmJLCDZ/[=JFEk#)ado#Z\EokWE[UZ=-Eg1FJ,BoI*$+o$]9A@h
%;Q5/QAJP#V\:INC4mp=o(8g3])u2<B&]]qO&Ol"KLfZD-S0e`d#DHDOfUSh!mfEsVk?B2P2(frK<rEEn]^<l+Y.@[(Pg#(6<0WZ+
%,8g;gO=F$(X[kK#2>0u..#KYu<m3=BoMNo2:JZ1I)/F9b%he"hr.2'ho`sL,Sq!S[nE0IXD\Nc>;9&(^4.7:h.ji0N)c&!`nCd3@
%Iq-[S+CXHgKdN\jL7[m=+<MNc_B8+kg5RAuiMMW"78_/)62sRHC!.UNbb"W3V+AS?VL]KfG7#g7_>9J%mgnf.+8k)&ET#_6:;m'm
%Mj:Z!oD8::++;AHq.#\'fH5%?GPjerr5(+I[CT]T9NM,_oSWIpi:`;*D$HU1ReSZ/lcE)YDrd/cs43J8fq53DO\PhGi/QmVh*!7_
%pTA_/ra]AppsWFd=b#QWnD_at8#uXeq0UP>YVpn$*u9S3s)E.Lnt2/u?MnG_Og+jJa:A.bPuQLF4?QXA=2O?is*FOMikHLMk5=s,
%41K=qJ%WJCr6H288,m?rh=OdO08oh`m;UV5W9p2O>D)Lbh['Vprnc5^]73Y5mJGeA2t-afVKB'%5:fT3!lOZp8h_7kY(Tuf="BEW
%T!/hJYJ%(EVrbjS/=uQCQkf:2lY&^O>7[h][ec%8]BeSGQ/q/sI3m@R/?\'+O-Q!JVo.rFal>ZqV,06R<\D!#rKXG*F_Tr4J;t[L
%h3F7lUAnf$dY"54M*l!RI0CY`!lLq$iOODn_bAXb=C@sb=q(V"]iH92Y1s/S7<T4RjZ>Vu#3AB@n!1qEmFO`NOM#tQ%qO"H$A!i(
%O:Rl:FER`KNu(E]oX5DBg]bR\JL=s;&h'B=7tGumfF,>`a1.KJk[.q*JT3Bo>[8fF2-/<f1X4Iko6tIT80#CHWrB'UWq#lT^:JYR
%oWMl4iqhqkS;OJ@7W-`+bK]S&l:l)1J+YOFID/nA$9YCJ:6/V[S_*CRFZA'8Xn`W/XR`OuDpM20,1H5*2=[d'?Xo:!A8V2p\@\%B
%)TB,_ejXBAoQVar<n(U#[C_^GmFlWjo=e7PCU:FXQe1i:@ADNaqJ0Xg\DF2j"Co:)0W8Y8M;Zsqp^g--;]uu)\Bh==K;Z2LI]sOA
%g^2hElrSdMTreHeFnHp1cecTldqJMg4ZL04Y".gJgNDWS.CPhX83F&QNsEi(@A-e-5C_JE>JFm-L?m17f'.L5h*onA-\jA@P>2`t
%"pqF#meB/SL2e/A#29LP]]kVV/t]W_SUuh0Q28I-kjbo_%FpJn-_YE]@%g0gGU:"oY#iO29]S=;SXf&$pR]F1nG[cX*'TF+C>mpB
%bY@kTi'.^\G=snhpq<`/)f+.$a@7`U&D1Adg%UK>"/W>D+Ks?T/qS`H`nd<e]M[pZ+#c7JVh^8Ri8l*p%QC"(P!4,I,S!j)OmK-q
%Ln&<o]9/T3gJOcZ11#mOSa*K$AE?^A@5^J+Jb5h(5<R]UNXd*gF5qXpZVVYI2Xd6_jj!(kSD3C13]GHOI]4!?Y3e]Qg/^$F9qAuT
%7$"s>61e?/PbYFC2lG%um'7@s2Xc?%,lM[#A&1brQ>@"MR+UqOkU(J$ZFq/,+($&,\ju^:I-!oUN^k`U.ri6<:udu._/m8n23Hqn
%=%CSV&4\VWIf<Ra6D;o;+C>:5_OarV$V-EPJ8j>gh?]AS=V^ceYdein_VH''GSZ<t42l/34=gl<img;X`/9p"M#DttCME1LSW]e>
%on]t:aE=?>bk%BI]+NeaCA";J]q5GYj`%Z\Q^JJ8Pr%^kQ$fa2O5qZu2(?;21j*BkVBEZ.8pleY-p-0e:cZ+FX=1OsWtV=Y[lRR0
%o'0>:F>bJGEMKY7qjGZsH5/)deS;H?W:-2p)V`n8mkJ*q4^e)-]Z<^3`>;S>L:Za-\-m$jNsa?pE"09MCAZ>t\(^MXeBr$+_1jkN
%TsHa2h!!Jt#=JGLP?.>Qh8G`<5#/g0JO36iV#'VlOUb\.NJh%WgN]j(K')CRRp-j!]8Nenr/)T?fA?MX?+i,NC6s,5[A1\*EHdL@
%1Agl82S2.JPd4(4M;$5%H=BbfDRP6q5i#1IhV-`IXm4kg=apiu^GkRfGG9G.R@W/n>'T53goBeT>d#4;%$+A5GB<e/[(DO(4RJ^\
%D]J2Zgn1;Hljhdfi*J7/l0Rf/NLohN_is]*EdfgV2]A!AAA#,g:Soso4]r2qq3/3mB:/6S5BTkEq4XA%eaAm*S*!EiosS1EV:W1<
%De\6@g.NLuKi.\,]cTcU7o`g)bf%dbj@i0,g!(3YPG:gHZ@AEN]q*`[>2a:f4Y"BZfr(<?.Q`#@/`u'/h0(EQDhN15O8`+]^!XI8
%YM[!Po8._8aIh!E=8>Hs1>_bDKm37@W;aGZ(d>iGp7Kp9Vu,qFnE<+kN\^pno24]/[[#T1k\YF2LRY.#h8<2Or-!>X:sBuo)>g2(
%n5MG1g8tT(8&\Bll)8`1h`VGa*lc5^pWqI3OHpbl4PQ'`O?U6;fm/_LNQm[HH>;K9FoCfQ)A`;'Vn;><k-T6\Q;6>c$3+-rCUVMd
%/GF+,UB]#hHJ=M66L6P$-tJqRWUR,Ih(65%3pYs,WuO)`gj>Q_^J(4H(]L>PoKpk7<\=_KBFT^,BLGtt1))qh0)+EcmIFGAmp5Y4
%Y)\D0HLRrE+2=lkT*sUdahRB`.I!\BmF(f2W).5()O7@_l?2#7rG]DlF^IgK>`D@4cF*M],@7"NG#,:\_;*d>3*jH]BPp_m`mr>I
%^:&&<C@()#ftl.lD'9Nagbq6le[rogWcj_W\uOOK4\5F_^YE_^Dm`@6mRs$RKDSt-I.AC<`Z#H/EqB+#p0?:!%.@0oO.!ELrSqC!
%\GP?:MW$V_;rVVonoT"O4F%j0]%XJgAqB,ss1\$Yei'[;@TQXAQc"o`]i8oSOk6gX3.9'D`Qmf@_k^IB4fgc3pQF,ejnn+aYrk03
%^SiD1cd+,n[HmG,BVTTNe^#So0MJl6(*BQ/j25nsD)U9d(KFmClWl`.lcP?_f$AR.e+IT*ES6EahQ)XQc0_mcBdDf;/BN[l68A8`
%m#22KQ@.(U[*I^FlW1JN)RYjNE2%c#[Iqo7T:K@tqSpg]LMt/P8FLEJ4P]0<_/?ArSP<ghn_:;'h9K<ih7KXgn#bC=G'h?u@^#MW
%jcB9(+_/3X>8JCYe[Vh>f[OAo_9mg]1MBd3[tg,C#Ro%;0<`8Z`.%p-]^)c5lMJh7H"H''A+`\Sp2iHDg!KH5iO+F!?2:&7CgG6!
%Y%*54@;3Gl\&<o%DHbE5kl@()?H2Xb4u<2>h69"UIGCc'/\@'YrMYp#^Y0Tbc3N`J"(k'bh`Rf(=]6l;J$#><]9Drm>>NM6JWs9@
%pl/Kpc"gm'mSmK0>?ULKS6oN&ajL730E2T3U?CZWc1'\'cB='On#?XVWVl=J&@M4g@GaYKC(,X>UAM0t%^Wl$+)h)ZXZ9I:(MJ8/
%T6lTS^>SD<.K"8agFrSo+s'nb<oB<L/%S&KA/baOf2+nmY-"$))/g_=bN\OP@(^J]U9!/@qJ4cGpdN8UI2i"Ln+c8U5.q!`2kMMn
%:43XKK!4kUr-8%\59r[Uak/mY1SgCGW04?>:qT>(f)_n.0i\7#89.CfJ2gD#AMHJ`MGFlXR')<%J7KCuok(of4=Vg8:!b_IMHW\P
%ASB+nMQSJD-o29^#gf%h_H>/&dj;Y3St6W*4U*J`J1>#e#n5J'e<ls[fMKGSZk_+=.M>Dr\lX#;-5h>2"s-e6%V:Ki8k`69LU%\*
%G\90)KU=@nXl/*(TI>>GWbF1"85,dN@SDM0!*'&,5es9:0hKpb;,%+JX97.KO[B!c.\Ajf.c@Z[`(lD'5RD*P$8EB$8!!`\EEH(l
%mW9Qb_b[ie'#p(K1RN_&-,<JV;!_Rp4GO7*%t#*[kY>/f,"rD1.aVOR+6cqdJ0n)[^d)BB$j&4?6pq2*XsriHZ-u\q/V&AXW[K(:
%5R^B,AtjjCSbo'a"g:`)!29LA_p0,c!(B<V4[?/B+CBp/Lk,PZK;W.XfXHN8Go7O)$AMQ^q&feoeRCS'FHNn*;&JpT`cM[YK80IB
%!(fEl&-g.:!h/AB9Z2pj,4J,mMMj1m*q;Zr5X@7-`9?2>GZ&.(Zs\Io%=!GbM@/oR2k^H8.4P]&/ngcS&DA<X$Hb3C0f4WB7+;Ao
%Z5E*t0JHVIV@70I2O.fU6PrYRi,SlQ;i7?E$6oTG9X'?*M5gSCCQL@S`h9=;".Ct_EArt=Waat*`!i%OI,`A3<HBF_'/>%:JjL,K
%A#`3(DC?W.(@o7iaj?/M+GuV=\0LAMK1O;'[K+pSU*.M?JpZL_";J_.J\WJd=q2/Ic]Yr9nn9Mp($Mec.N?h_r.tHOJg$7Y_9Xjl
%^o9)V((A#uW\Kk^JO$$p&WenI=bQ!`D`^H,*X,]`StTr;?mo"`ja[P&CFGr$&n*[ZJmc/N;@nW6N#7rfZo+"sH=rmr:sf+?,nuSR
%0KKhD>[t8Xa>h$j,"ti]_ZreeQd,R>N?OBRQ]^p=4((f?&g3`r+Z)U4@h:_89-O\7,S5;3[1:G++:BRu>=B041kZ&]N@HWAC^*un
%p_SZB^`"%6=>D_8!5W(Q:`[JB!n'[b)G$Em;;f?DJ-*oV)'GJXdm1nuZro/aSLu?GVP=(8>BG+unWDE17DX)g#$;5aRW(<YWe(Jh
%*-dJt\,@(g.M+$O38R+8phMqIGn5SFqsC(A$*6(s/)ZD;s(/Jc)0giu?83YnS*RoE!TlXM6bklB7ZI^#CS:*GZ@L#3+?_JDN\[Z1
%/<XQGAQ2Z=MMhC!1b=9qcqNXo!&3O\DBM[]dS#YC!a,X@U_o@lL[bPi+SUF`R"Jp9Fd+9SM6a4(OJGE$/1@s(knZhO%#oi[!`\8X
%0_'Z/J0Y.-d"06m!5c&T)A7]o9]ol<aOiaD-\DS;KGm*O.S(W=0F/54#3H&u8I-P9BMZDPU1HVB!sWEu79r0L+YAH:8NX_&8EbUr
%h7uBLgpNol7@O^\K'8;N!6#A7AoGb(/N!\`QT8'!$J7-_%b`nJ];Q#s#=0FEJRjuI!eKLu*+R?9#!r>eLhB-:MFpV_5r'jEU$BR!
%Z6E\B_9/41-$CMVi+n]'C=EZd"bhTEO:oZXQ*_G$!%]>W.h'B+)R`R@fqL7E"FjAP,D-haZ@b;>d>FkN=PU8S5TOml@.e!7KQ.JE
%V*MDA+;p^qO;:<L"Z.hs8I1a*[mqlJ;AB[@aVY(M6o?<QUnS"/paZ$a#.e'4'A4\;_.Y&j"*Co.@)tW(Yb<]/c(JbK1%[fs";LqH
%YYYQ%5hrjq'ifA.&4"<!p0ut)dI0F"Uf,F2U;p6CjTeS[$Y4P1nrQWLOWb3E0W$RiiYV+5KEjnC\h9KC"I<+e-oM)$a'!15#QW6T
%/K;eHQt_28#6L%79^]]4FG<,:JIs-C!cok?)DsqNi2GQf-(VLHDX&D^-QQ/V5nsL5JNG!L%3Q\1)>XIV6d#k`l3a<-!_0uX!QbHk
%(eaqh#AaOB6(NR01CA(DOoo3Ip)15ni`HI?5S>om_O2?c'ec1Z"L8olSPESn&-*:B%gCpX#m!od.,tC<isp`?*/Lah6n'Jp(]\#'
%L7/1[FOUZcecA\TQm<`bK'8@.7kTlIBo!/N+;(Oq1/^eb(;O6?1`ul4"q!/b-o;Yn/.b\E%C.\G3b4bF.&('',9KH1pma'>Q$Fnb
%@$i*,?6K"S<LZ]_%%@8%L0)eTQjbI^6P?W+"qQMTD)?n8cqB`#8Dm)s'P.]/'_$tc6W;9(K`D4RaujJFhN2jo+asDe.!$TsA9:8G
%VC6pD-5A$)Hdo*nUCC%B1oX"K&^?Zf;[AeESAIYHd!.5KArrFSTSu8a0HeD,ob;LGN5oD=6r>?>5(:@F9Yp4j7L#am2Ho6N%C-0[
%KkFeK'V7jO'Ye&f$fi$_9JJBO,TF%ZaG,k1%UB3E#WWt!Lg^E1#.>MaW_=gmQ@WU&3=`='+I_"l0Jg:;BcN'6R>/%*0Q#`VTScLn
%Mut6Q&]dG7[D^;rW*E#jB/0G7":?ei@$0G1:_eh,V$>3a,$?75%:nsZCZLQ'oh_Xl5n.:XhF?#)mD?)j(]Y$bBP==YBnFSd3/I+K
%8AdtjjWHoh9bW3JP9N`r>pNm0[:A8p&S.>&!R89s5n"beq'?kGT`>mj@N'P/6sQW$)Wado\GM$Q$;C_\0SLbD/8DP,>%*4\L^>1N
%6r6Q+..omt8P`gB+S4e1'+5k1,B#FP%5;^.WR8=+VG0QJ,#I-m+aGohA.RAt9#]2l;0ZNBj[%/?"k60j'hG7FK*u^,S3&-ki'G_'
%_.X$AV]_Ji;fm,;$7Zbt[SF7I[+m?f'ti<=5D+s8Y`aCJNc>/U5!VP*V6#^*0RORUB@%J:3,"*h)ItPk?m`B&@MHBmBQ5nMY*pbr
%-:!['qI8Zi.OJ+OcjsO$0(Xgbbb?M[fi$37ks-1^Au<sdW:)3S-nAi&^bmPH!"#">PsM\Zk$7'l6fgWX;-lU7@"&EN%CrK2Z>NKr
%$7q=<\:G0JPb/Rq_;"OrcN&SJTa:eTB.t#>l<aZ54WjFth!c<N'-p1"ca%'iVg9<iJK[W*0LM!h\u:e/r?)A$Kt*L0"4Kefd2iR*
%FTibm9L4>`Gs<&\+L5I@>r([^CGdl0*kMN,VLk#:Sd"X>\:qbN%%0OYf=6kH;M\<7OCStGJT?./=(]6?0N8=baWSH&?3*(L-5G?k
%JKXT:U-Pt>)EOJHM*P:_+FDC1DLhm8k6?,_&A+l)18.Atb<^_(o*6H,Ti;"B8NP,uIB"Ct#.O@M]TCkKcZOl?2oJb"Qj?\`K,K^\
%F_[lGl%<Hf807EB!r3N;8jN;f>R69fOXMkkM1j$5B^IN8^j+%!W'ho",nQq_a!Qe>TrN-nM]d1FN<'SEKlQ-hkb-g(4&n/_2+5#f
%$-PRm+n8HnMJPR3,*A!W[MqJ7"%?$pS?\g.#mKHV,.A"A5*'l/FGH<AY)K5"JgH+U*#>@rOU!*lPq#5Z)oT4C%q?[g`"?IOq:<p`
%;iLf!<$`UWJO*.pdPN.]P2aCETL%P-/FjJnN3/iG&=!S-6sGHI+SQOpBo:DB+f:Bk@,-FV?sOVC.[d7[N!R*H+tnZ7k[=lA-DQeS
%+U"Z5l3pA73(-#uK:+cJU_46!#f3j#<Ah!!,&[YiJO/R]-o2o'KC9p_"+.)*QtmoF,1a9N!/cqBP6%9V>tJ._;QM@-b`r@V&golo
%:>nJQ.,I0JE<UJNUsan4)5Q9+I2!_;CJQ:VA[E!cN9`kON-%Ihog-MKS)5q4_AN]JC5<W:k6$jO8te=5^o&>DB-\[7Bopd]W[%Xu
%bhbV@'q?EMYNC'Jg)6t@)N+>5,)=K1\0MuM"bScQ+Yjdp#m)8)6C;5i;&F!nc;irh6OouGo2F!IO\TBRNeL=],ERF+QoB$Rc7nN2
%k$rY2M^325+I"q/<"9'N">Qknlc9]700m5dOTuS"_N93(V%&u/Ke^+JW2#@Z1`6^d-.ObR&7I:,#dYj&7VNG<',oOJdELH$Je/C.
%']]fL?_R[*1@X40AAA2]8G"=O!W$-&<i_t?,8$foVP/\4Lt?KdOXJEkLhOFJ$m5uk&A`9W4KbC[ZHiCMerU%Bcucoj#qV0o7\0iu
%!+M<?6BDS=-*[PObYf42bS$aC(ciO:bf126;H9ar+i1D*4R^FAY-4(PXI,'!DISF(U8p\)d?$?oe:>V()9XBAE++=E!!<K;8qtPL
%7)d(Q]t]+`N<:%6NrYnN+GF)eS?;SK8,UIbP&\<gap2=e%"Z`\MXM/_;KWZr'!5%s`W;5NU&?dWo*,I6H1HWgK+<E^)Fd+M.ZD2*
%;DAoU+7JC<#@gI\!L2X8jXC?8-^kPo'ZO?4AO@XPcOHu;aI)Ep;&QDH13^$+TMPnsL]IJ`($VAiWK9Lg>n4G*@N!/NT\)X<:_Mb=
%MD1;tOL)S7\dRF\/icI''3,T8<#&(p/^[WC@dp)=1Uu4mW_*hObg5eA;@kA.MHSV`TgahC0hF1]3PZOLDe+\E.AUL9#[q-ZX*Ha%
%Zlj->bjZCLQO-VFkbHY!=-EcG9FTh6E'HFq`UqSNotXVWFO4+3WbFJTW8J,-c@#jHar%lL^4:q111n'jWkD7"L=KOkdWdQ6PVF;N
%+71FK2c`8mCMRV8%?N*1%0@E&.:@XQ,1\US.Q]De(GR"dZ@%X3^hP'#UVi>s8pM!sK4"4Yj]GDkhN`gQg%bYumY%=E%YHdKL@LC"
%g.F5#N<@S]@*">X,?f?p)2h?$)ODPFE2B6G<<^WPV#ak"2%EVt-;l^c(,KY1#RGS1gn6lW:=eDP`*/PEbC!2CL-+T40Z,V!TZ(GE
%VJ7oQ\911T_`k)>UNp8&$IO_8/PU"o*t1g[A;kBi8]JrW(r]($`!c'BR@P_IKki.Bh<6CE@aqX!N9g&/J[HCiOK$q@#qFN\GRfc(
%+>#rrTW/@Ln::.14j\/aK(?+UWFgT/.5B.X,`n[t)K&WL2'5@b";Ak\;B\?E_Me4.U7qD00T$W20lpqtXWW4W304Ik,'c,R-NhWc
%r.%#b*#Z9#N/6`.lt):Xi[+m=T*Qc1Q:MTE(2jd/j'iTaVl@66_.]=Ye<6Jm&'C9l+@HjeAcf+Dc40Q4SHT:dLn6o]0hW>YU)]Kd
%FNF[FEZ8VWPTjdC3(G"-'U1.$6,<?d]c`^,RP<MoJN3e6?;jXeQ-U!9P:)"nMJ?,q=s:m5KRSl30O/mSA;W,P!QtY8Tg@ZHmMNE!
%:gC(>BP%Z:+bkn`1'd*3C.Qts^Dj\K`UGsu$J<-&LErnP/(RX,g<^<beS5:nUtj?O44^W>b-OWq!b)5j&d.9VJnRIb>aM<f.UJ+b
%Z'6c.&*gP%!G;L3*Igm3l\`k]TLfbs^a[>^-l98M,=CQp@%E7SXcar3CWS%CY^(j"ClK(4>cdN3G7?&7W)L2[,\j^/K*tWAXVm4N
%\>\EpJKSFaWo0=0Y3t;H!eFGCWOg#9>"lubZG=X=15VP3]a.`P7n1j'OcE's(qdb]#$)fk'<#<]KF<*j46ejR?2,P^:4cX''F\:P
%8"u.dkW7k.5Y3Lk@Hn(/gbJlt$6UOp@H^fd;2F<<XuF^:ZAs269E64K/Q`)Xnp))r]"jr5)?`bI(V`A4)K`05iRV]:K?c3eI0%RM
%]6OC,o`3tj_q\?kphUZ")8aab._K]@BLO!G5)MXQ%WkBVaFHUM.alTW>br7`ETrk/d3:G?KjeF^pu(QSN@tIo[F1eFn;RpBc2lHA
%g-MPS<.1*\R*>+V4k=X.KI9]Z<1jC]".cNl;5U=N1`lgXQ<7t@0V+A&`831-&$at^;$'KX5[?[3MR=B)!=onHl'VBhOM]2O-r2u'
%5cB^B+A/2ZHZb.k3mJF5,7I%g0Q=K.7QRp("#FB>;ZMZ-@UO4Mja,XT!8LEdS-?/8(BS[fMe7o_*?s)&\K'XM*Nnph\F3+fmMN+-
%#RHmJPb5V9")E(7N*AAoCD_GmZ.:Xg&`BE:B]s8PhZq%N!*G?5@0F:J&I>:JP0+0i$5:MM7TE+lBR^,Q.p@330bYkY@cD)kF0r$*
%dUfA7=j5K,Zr[6Y&uc=,Yg>f?T^X7)%IGr<"O'eECC*;S1mtZT`e%!ni^O!"<2[;IQ@a57Zj:2cXW8=iL^$m!2`sp]#VnlNq7p?.
%ngR\(+Tt_WAON5:_cd>pBQ4;:TBNXAKI^Y6+4dF2JBJ!r32)<I3k>;_0NX[YH:bJ;"#D]OlO\Xj>sp_^EC#b$_1qh01@pI.Qf-:>
%D-#&'kE8;##K%!Rk\N*:-lF\#Rr4#cTmr3VgS7`NPmn5R)""lMEYBeN#_La0*+YEJ7H:utEFt1#BFHLN&pk10+LoX*8V:&.Z&5C)
%L(r!6!S<7n=j5-4CE&()QqDb6*^Cip#0fXl=*JY"Lka[Ub`tD\#=u5E7GH)r9IOj:OUC=sm:HB+5a`4OBImO&DZt4"$:CF]99fk,
%-WTFsh[S9EKI&%gXCpd\bTFe*"I4HZQbjplUD6+\etOiu<&%h$<A1ZQR-G&A,/QK'MF)*:W8k7+"A9L;KmeORPEeS^+2Q[?,2g0M
%P<UO#2[$.frt0$_MI@,d'MONA>rP&C'Y*k0=O7C>VI6FHppL@1]X!qqkp5AX/l6!YOar$Jd^+Ih9'MV"_$3dVf0NB!4BtH*[Xe'<
%14e)WBZYDMhR=Ws\.I8>7D986i7\=QP7hb1<;E[%SJLlP5TpL)a$oXCAu#Wc8*<SUg1GmiLdII8PF*6X#bmSHMD8:J6D-e0m&5@_
%=CE60:&?MQhTA)f_"iY1OU5rN$s]:A=%*:`D\>Ff-5rV"`-=trFUE3p)8<l(i4P.k\I8oWcqr<7d6]$Jj`WKY[)rh9Pjdlnf7c(e
%S"lNk)D--ZIo.P3H&L74Bbr'u#HTE6IXnH/Kh'_=!/!1:?rkBNk]L-A`^g,38nl$SqGEo`aX+h])B=Xq5nI)A3(R(E&<B3bUaXg#
%Jg"7BP#-tAQUNeu[!NHP.M9gr'b8XFl_M_2b7k%1/Bp[&Y!(.W"C0`Y9frKgDqn,ZCVY\GCSp$IF:!/g"'!8kReb#FC8T0/0SEZg
%Kmn3Y6dTh6YJE/]JCmf18mkt$<QT-?OCB-Lf-EZ01tn(MgLt,tp>De_e_)u-UT06"@h9pYZpdFE*Y<Phk`jt_.W)aR\&!Td=?C+k
%X_>JOL2ddYDc+KhN]-b86=_JV,S5ZLCd\+"><BH_99sBEh`(1WG]+Mm5Y8sc7V#h?E<Mt$0,2*`B"Ma\X,h@L'`YlB4C_t\]kbOE
%^jB-NXnAj),3*1Y0uk+eP\l2fPt3Bth+c!u]I<#8U,e;%(dZ36iA@0W'n5p'EEXsljl`M*.8=E$Y#&9@?oLYoD]Z[>PJ5%]QNX,&
%SU0NXUk]%EKSoICOLK$n8bJg[%aAfnBhlqD>_[H9'h&EhUfnUVaQoe)C`b;Vpk^cX+hZ'$Ep(6$8js64c#Bs?Y0%F?kObP%e#g=2
%U;,,!6-`1q?Nb>s\,WsK4un=+6S+qU\J%qi1UX_jrYa&MJD@966P(3rf)8jonmIGt#au)XJ(DLKE.]WhK:hbr;c;r*fX!HG97s!l
%8+hu*-C*X1RufBP.K6k5nuSJZnU/)!Qb2gTY2H@:5H^?AhOmc!&\@h?G`$!O!_G*ddS,%=:DDT1#$F?L8^K7*B-q(T`.J&b$m8Q`
%<0YHQhTE?m3#LW;HscQJDap$<2b$86f:Q!BTAnhBOc,SXE[tQY-#F-MGYd[&J*X8qK.L[.?7#J]d88PdkX9$_O;iZ,Y<9nP?7E`%
%Cs6I!,$^8J/Nb56R;88bhAuu]\hE;!&Aq?XM`GF80ILSgb)pWC`:LI059M>*?Ze97.SnL%;LMnkO'Vn+E0idZ5ZB\5>Q(MS])3o#
%Jp#9&ZHs.J&#RG38o,!i^Z^1$,otUtDXa0GjgT^0A3Pe0.1P\(dQW\aJ[6P:0o:$Of<q\o:Aqip\_=3J@[%%8bps^;8nsp-,q6A)
%8`<e.&j\1NcOctD'7W08X%%j0I"G<k7q]ocbfQ"^Ed7[;k&]ZS(#c[KUT1YUU9A*$Ub9otQq80kYJsq=?>R93%&<SCk[[BD\$a,M
%%)Pihmr8t\OB/iYU_cHh4iC9AeB!]AmgGcSHm\*KQfNfA-Mb!3?K-hMe\Vut2=fN!7Xq>e:)4`)q$@2S1UM![9QZ8):gjG,YkfO&
%^Vt$pjp3hW-'KQSIr6?-G&&F$glOhB7u,0[Z@nqK864>(27QMojG>Q$n_Li`)I0(;H(J%-XRsS$J=f`(D?)22P0P(WAM]WqVU;@3
%"8\]X+ABLLKo-@MTETBrTWpX56R4#@#.^FM5;[b1^pS>506:+/&u3e(>e]_'*G;'bn>RH!Qt8f@#k-mI3M[3=ULlc#ehti/CM8g:
%n[$O&H_1RX;_o"FOo8DOSFeKJ\K+ocXS5j`(Kdlu%7'-5"Jim"4Cq>QQh&jf%p?FD.u51:CPTkKh$)d%H)B.<T!V9`iM6HBGrgp*
%_Ou#fU5S.IK,f+O,En4c;lat]&qgQd)D!rqSa2]C.0nS#B9hPkQ3Z]/S\JjF_a9TRLnm@lf.!E,;5d)Up(l`#lPo:'',f]i/bI6n
%^kbs"K'lnq?*i.*-_0VgA5DG4,9a]^DU8k,5p<q02a4_Ce]/W[1GJu<@/cB-ge$TjX--ggYm:-F&OId#hWK&E(&.2IGYhYrMs#R?
%r@7M`nBe0,kGBRsb!Vm^:GVR3j)+24S&dI/,6=4O3d`:)4GprbMi.]2b3Y)HSi5opM@t]p[bu<LkittJ2IVn9`uhB772*/#&^hBm
%:I'Y9h=D!D&@'[)pO/(<kF#8[QN)A+be70OY:/G.TRG?CjTdiS:_D"9%&*$`(@=r<qeU2Z^;,JJFO)/p0K*Popihg;Fu%Xa`]uR1
%B+,fkKYT<5gqQ<%4H=5L<'`4g<:.,[?+Pl=464a]BIpg\0Y(S4k6`GWGh,RG*2P8+.X1As4*\/o$cN&j+LD,i"4aVMT:>!&*pO-o
%Tm4]XU_`X`!W:&.,rXTo"D%)>Qn4H;5F(==YnMYX@s*[^EP=TbHQ_\:]0;#*F4oF=$%;5a"kn<`W9NR?S.'UJq#%@/eNh[Bp\Utk
%U*efYj*bi-A211>n.).[oYAe++H>V/`ecHp+UIZ(+Oj)2YC]eVD[l<qUKjANhHB*0g"Vomd2I4:n=1ZJ+VT!#6a%1Yjpbc8"^66g
%9Qq8fJ"BY5/I+fkTA'XYT?ge2m(:!S4q!Ks<QJ5(=Lt,\WM'_0K$;KU8]B7@`A7uhShm8jRC'@QKQPP"\c$C$OuYr)6'TY(E^kW#
%&`-i;jiLH21-3bi0W35L]^(9LpF;9&LEXWn!cpFnV+c5BGZt(k:0+gI:d6?e_Sb,;J)j)7";Xg(.Epc:569d8_D^9W!E*7M(&X!?
%prS)hA-=[dbA;E-[Pq+q'$_p"W9h9-1eDr/RPm,7Y)`,^3HH4H8,^CW`#@XcVSEE#j8Ii%o+\<A,gUVS;YTWW=&OJ+^!H.Jk'(g3
%a;d=l"cb-k];6'c6_t>R,I)jiF9Cjt_AAgMc:ZZhab2sMk5]mu&qVTaB+]uc>?*^4bhUX=UE+N)VY38,Bj3.JVbh);M<#d+$QALZ
%fmML%4?"P%GiAe=@1"%]HfYYu6\ClEjY`s&4.tJW(ZE&b%sgQtF&[;*0F_eqV(\cs,QS<Z.Vu<OG!:`e^*Y'=c/T`"Z9aU:oGWn5
%8flAXg#*X9,Br&@MErZ#4b;`#l-#Bj8*ILC7\Yq:X,5<g"=06D@^oBU*\#/n/#d'_)o^(*/Aoe>k>]j7N&mK^gL\*TX?>"cQR&Wq
%LpFB+K[10%.)sPOWN.6Bgf[G(5I)XuTF"V[,[Uf.e$J7G#p&J<3/VcK:*B:b_3;[o)**K83BQF2L`%*'M59*e\^b5&_GhKaaGoqS
%.#7rGo1AE;HD\.:Q)(bc=t9B772maUe=@P.b-@X,rA$R^dK"[*81[scq;!T3X$U1((ehDAGuG1_V;NKA(aB=(AF)=7Ih./)YOm)L
%D1UlnNM6l=Vu?3X4oj0B=VUaZ"UcYbmOq[,#g8Y:gmqT\W3elJ8N@Q^Br'NZ]I(uk6&m-D9\C[aV!YgdTL-pK\^DLm%f"7KqFQ8G
%Fmu2MWV@C)k'5/`^t%T$T)q:7"nJp1"XYU>,@o1lE]1=]V^"238.(DCBh#f4!@XC]:4m2aG(gl_ob2lOa6!3O;9pHKjVbrT(kED`
%Rd#9$/Q$C9f@ppOh;n25bcG$\Ok58[BXKh6[%?QE]_5@!$B#LX#5]**"0P)RloQAdeaSf]+=o(<C/R8H((:X3@c$4`#7S#&97T!0
%.>ZbE'@58+&0*p:)4jpjq+V3gCs"2b.H-&b14\*uNKZ+*QAeiRPfK6F;ciCq6La;,29?-a1P<?D,C&.floRS;f-qas'L5T"Rs1\D
%-n)9#A?WNO6h?T&5:`sm%V_XNLaLnPc>);uaaj+49]7TrRJ5j:i+CYAhgD_nRd#0WCeN(_[dsnKWJc<k!V9QjRiqe'U9`:Zd=')A
%PcF6N\P#43"4XQ:r1MQ$JH_[?@&H.#]f8QYY]0t)aBV30f*D><U,(iKLt>cGj8HLNkm1c`=3?ej8S.Xl`$"MkZ#TnI%P$l^%=pIJ
%c+A;lR54KTeO9I]LEhY?4*M1)"Y4$*1otTS$Hm08W?sf;WVtpdZ9IinHfnU,6N.WMcP6ds:U\/@SE`,)VQfOr0<L\\++OqZ$T38@
%@ns`c0UY1AUV@spLel?g3`lTXVcLkmGYsSj*2E3=G[QC$D<njB=@!fk@Dl4NARNF>T\Ub,/>39=/?XAYC\8#:i$h2YO;Ygh+IA7:
%GabqAaFltaGWt.?=/-)jb"pZ1PM(W=--SMq72eFCX6q>-L<0dobiI1u7[aJWQgYV@_(FK.UoM2YIh?@RHn</&__$;SEs*8Odc3be
%b-R2DEMW7C09$VGkY-5]A@Eq4Cm=fV%@&XCf5>9G*1I4G13"Q&D!/eSqVl.p2$r;ok?QcA'7-1TIW=@rp5s6HYGgP!An0_]FfZY$
%3I&S>NcA/e7ga8eJ0h-jm!(>L"UgFFlrO%=K6,nCLbj"WTGG=>S-p/P]+>NUNq0]B@R'0g8WRVTAK]Ma.%$+Nh,ikEc\^*a2/*a?
%6Rq)tc7)F]VS>l70#T(G_n+t]j!%7CaLiqD%b\EqNN$@KNCL#]=f\D[i[4.Pc=(Ie1J"[mLqb'"2'Vc@,AV[VVj%]]DcfsI[1O;V
%jIhnYgA3lrW`p&k1>4D)(u0?I6F8H,*4O!KUr%8n>idDR*G(GcafP,hU@M'HX_^ETNTi'!OBLdoA:(XJ$Aqn01-1Fi*Y'Qefe[ra
%B2:W3l[@ZmJ&-Dj^_"[="2PYEkHgUT[k:h8#n<742'-dO*Hb[d*pdm3i_&8%U;1_SYD3hW=e2dmV"+NdVdCZ&>G;]<%Nkjm[jcET
%ap![.Nc:?E[gcqMg>N'UkbgblTfa30ZV%/*&'D5XLZtk>XkX'S.ee,"?I0IXiB)]`)+4Qb))[AOQkt^N;3EnDGZ"MDTa(I0Gl!Bs
%3U5`4dCI$Q%fp=0%ZaOF2J\ZKh%i.&KcrO:!d=05<NF"eiV`A^cVNV>NscEH)9asU.i$di;"YNmCnk=E?L]_(*G3WXo'O65;q;'m
%@8!7$>*4d.%[%7N<%^oWi-fr&Mscc&QO;fCP3Yg?(eW.rrL6ZN^>C$[ODk56HBphag4Y@=EdbTU)E[#XKJV5GmtCM0=AM.f<YX26
%o=?<,)'_NC?0dTmhrRuu\\qS"n@U^MYqqN7AFoq2TX.UD>nU0oodHT:g?N3`T!-f?m?S%ME3F3/^9GQp-5Sh?@-P<8h<1WH;BPG6
%_c!R+AJjm2p=FY.I.pOu5QM`r4=lWNP??;847?H<jg:'.dEZ)EWR.nIM^moTKQT.:Ic^.qADBaBp!/]+i/Yn^kFa6nmYuf)dV%X`
%>[)#dM?^3q]oEF63D8bY=ECTB>Zs"*g^_9r@ht4Vd.mg\\f7@<6WqSt8-[!s&^Ob*S!76_?6CV>Lo"ko<<V!>ptRE2Sa_?L\aH6:
%=0)\iHX8/sUG,#OrHee@Pd#"(*6!LMYnmFUI%o8Oi5S-L=0Fa.B4^jJ1IuTkUHM(G^@D#DE:e49/^.(n5?PHpBlB3'LLUR:S6;.N
%VpR>PYf*fC$cD;!6S>i_<%TOdqiou,:%=)miH$]3nn./W081'N]48g!B+'93CIjkGbqrH\F1?tMd%cI`KCdud/V)mE:eh1e+Z!@"
%T&NmO<@Q\@8WiX\gh5?$D'qY7Q4j:S'J,1mT:?5<gA1$)29@D)+]o*I+eWZVFff'7\-WF9P:!L-n^#gJKt<k$rR,IHcGd,X/\JX0
%3!g)B%@O"If43"RZln.,R0t&s74P8K;od?7IXKG`*hUg!;KJE0VQP-X%#B[L9@dt2P=?N7%LWct<?q)@"l$,)(7F=Cg]tT_g9/;%
%d9_gj6pB?dWs6KV4\Ou6L1LB2HN9R,#d6(SOp%a5W]P^9TrVJZ,mbVng=10>\q@Mf7.<oT5LM5QQ;jHu6.FQ(;)pNY>Bd_JEC`/F
%a('79"%R7[*[_IPT5kIZ]Tkko6Rl.uOX?5hrToJb)4;*:l[uf*->81g7L()GNX6)G9#A[,L-SUZYb]ZZ75_>2&a*kr8DQFX4:XUM
%\37Z2n!^D-(&Z/i)\nR;StNS/2\!JcOi8b'PC[df,(S"Z=b?e`0.q_M'/K7DF5)0-s6$s<iTj&X]kZFp3OgB75F-U9!;niLM*%k;
%,Bq<Y6D]fM\[&IfdZpB6haDS4)><)dr;*u#7a'Rg_S:(YC^gTRC[AhLC16"hW9slZruh,5j@9QgJkd.`3mT(U*(cO>8c.'R(%gP,
%chlcB(^.BNNd$W;nU$jcF@i("oQRjeO-T3*hBXCg0[Bl5UcLpT;eo6_h(8L5>K^Z&TO[uk'0l4-IF/G!U];(*kr6qdg#MBh/B<01
%)!HCQ\_/)5HiYH+ok!>N&s%JBV=^L(<*:l25lc&[B\Fs8n>W%Ma$]XqX+=@>k\@l&!fee+LVc5ml"Q\'m-u&8Ce#loWX;e4]j'm`
%cJV.Af`N]jM\3"r+$]@\T+o;Bd2l3N8%SCG3Zu_oN)"L?6C^+[E\kVDo_;[F/%<G`LC1KjKe8!^n4!/Hq`1ih+n4NiIeEgGW=VW^
%NI\;9#?bM$g#nBiJ:P]dVO/dDUDopU(K'HhGqRe\0]pk=:W)m)dE3#h!,0"s'1ahL3HNN;A[7;f7khRZ,0L).j<;il'e+f;4Zd$V
%.%OFR8mo)d;3:cTG:3"#b5SB(n+c[CTDQb%8Knod=hm)`PM[SPOjP6$!q@Q0,cVZRBc'rI][,KH\X?YralmA;m[bH6C.d3\(KN`j
%j/7A*1-)0Skl$cF$EQc1,S/toAcqde.ZB`[!TO.rY^hNopLn\Cm9#Q-3%uXf`6<ah;Vs[O^\u7"rB^!(.9">u^sJ>o2!tt7i7'a_
%8LI"jV3)Of2f'X>b,`I1G0#2"B32Q>-Q"O)6V,\Zp&4^,&VV4`/)b0>'Q%$mclJfJ#>2<X$(:!"541Z;gN.mii`m=>!?4+!'M$<'
%TsH'[(WfrNkkCmE:QcsYLEW0W@9>Z9F:Fc@qF$Y]b9@KA%!`oKo=<M>O!7_DX9hJ%Q`^>pM`"-B3-J5dd.\%MZ4t2X/53rKOp$&3
%"h84o8g>t-V7k#]&^X/MD^#MBdmD*n*An1[lbX+m);Q_m2U/Le.n$as9i;J$][tN<hJ4J@DYRF@""X`sJ`,]#8."$bfG4Mq)fiEZ
%o;/-eM@3oqKp`S*hI6'`.W6b`_\sF\UVD+`*!hf<;&*Tt.9Dm(q)V[k=MVGMSY:,Cr3T$cP]95>.R=0aJW>^*i1EM+2Q7CDh[2Ht
%>aog`6q[e\@4"aL_p4G9EJ9\R;^33/P(j`DZ\)fO7)hSm>H!%7U/0Tmn!M5SARp?@NVC;LJ:ibro*(o9_t3+QSY$I7)m8(nd!+o%
%V"9%8nLapP"XYi<E_!&palbj9aCE0[TD9XB)nk+_aEFBIfEf;Xf8ImpYBT1]Dab]5>U!-CJSa;tg5t74qi**6R'Og8i3E$=MS#Wm
%CQ(.k[.6O"X%mUOOEp+Hg@]mG>oq>?6Ws0K?<YV8Jq)JG)<o,J]Or\6TojV$h@c<L#N$rQ[B$1;*N!C<\FdN#"NGGRil%4>MU:F;
%%#JUi2X[opVp*+Q91J^,o8%O-8,PEED/es--qKEkiET;ppdsk&4:FG7Uce&]5A^0bL>iL%bF9&#a#Kup9oDXJVZXn2.RR.Z,/E+d
%@@8c2'GnU'3osl`=MtrFdV-d>6AeG3E`Ai?;29acI0OnH83%#S?j01XYWK^eN;6YB=Hc2[hSf+#D@!*C&r*$Lpmc/:ETi8U`99g\
%clOt'8tKX[Us@"m<XU>]#;mu1bJk(.0_\Ss9%9F.("9*I!`l+k"XG_O]L/\d)*6(nf^Ek"'^N*'9@L=9R,o`^3`pIeJekib?1bM#
%5&["W)Gi,V-&uSKQksLUV:K0^AP5`9q,:\dSpiL'?9'af0CKO4?(B%O)ReuOF\sA-q.@0X(8<Oo7\P(8/,o0e;0D,sD>J%U]=;XN
%YgpJFHD.ua`:"9BlCe8Vipmu]jA5*LV$1AVVA_Pq$d^#5>,4q6JeCd5`q2@Q\G'7#lQm[^"O/(I;H.=2FMI(g8]jfAXJtXloPT>t
%:)-<UYpH2>q79b;>B8pc7Cf8o2H?fPnlM]V?$1^r#JLEfjJ815jD%`lO]hU&msXod?7EgHmt,^RAGrMU6m?Wd)fJrg9en%)nu;+a
%QYQ3"LU'jDT^,?^6J7i;"6e%$oEFaSSuF8ECQaTRc49]MgY%;T%N7Ucf#M/%B.D0"Zp%8%L^@0_`%QdN?BeQ0an4M:T0X?,M=U#"
%'R'"G6Jl-Nc*1E(%UPodrhlnF&9hXf=fMo[74>MM1B[b6dpaPn44-HR5>Xj\0.?5Oq6d7oaAOg<;58#>4&im\n),fdE>1$2AT+cK
%m):'Y?;:mI<pm'4?Nl$R#/'*m:,`QD<A,,DQ*t4Jcd@L-q46SK)#aB:@o7J")MXf:i!m:SR,/F?aHpm*i0R'oJNJM@iN/f"*NtAt
%Dt/c_EAoTk]&F%$NjK4(QQ4^C6+n_j'Sms"IuV7#E$g"K,^UY@IZ@202_IXcnoqBAlBULGdUB'pK.s<]g[`j\*lDuYd%Vg*q(`[&
%)/M,5J^p6nNc5nB*$[@Zg(o.$EaN!Sll)[.!]Bj7O.h96,M)s+6BA$]hm!k=8^?o*b8<OmE>ju_G62_[+?@a,=fk[n]r5@L4pA3H
%![eA&ce"+CmhPQ<MQI#.lmc;j0I#?GTMdZAqi,pcA7cV*j,:<GW[)^Ch!HtmfA<#qoblr&/\JP%jSB2j!scI'iVSS/S+CYE6/_H"
%`AO(VV2*TP5unghB.1JYKl/m<][oJ>pb5n_GTBD4&qB!kqd]tsXuish"4rA+*uoC5Lb_^YXL[!:nO_/+(Y`c3)RXUq`a1YSDuJUP
%-Jh;/5sDb%*'hsbA#OCfh?2V>6tWoTFGG!dNY_%g:E(SJ.>S_krn>'((.FuH,;o^N\Y@]POh/dT7d-fl^1jq'CICb"I$Vl\V`sPW
%Yq]bOE-JHhd"*MFXYPFASYXS[#gbMS<'RlZ**4l$L&"_6P/CCWGjTWk63onA^F18O%/E@W`Oq)F_K/]ZM*s0k#Y,V.jMYRHo&iPJ
%+!Ms<2[oBmYM4em!I7j6L1?MbWNs,B.WAs4_P`n^3nQ<1_rl[J@Dj6cM=E>aNXE%A7/@nG;e,7l<]?k)HlHo:iAW_`;RNoi7/U1e
%s7oj30Fo,P!Z.";0e,BT$-)c04&ksD6_kmI.s[(CckC_7O.M9pnP0ONoK3Z$NQai&;tAS'2Q[MfM/k*),eQ`.$)o+,FT]3`""/T4
%MZda)o3)TE.3(-A%d?W!<AEqS(!I(('/#mKpMT$,<7(=k'u]lBfn8h$Z:60LK^8t=aXEXu$2Jlh`ZBCB/?#L<GmKe@%'8UZ!,idE
%J@gNmO#?qX,,M)QKak85kf7.g/k/QD%,M9.;G@a'ftNgRe^hkO(\JFZi(@e1E:Fg6?,6r6nIbTt<d9a-T-Gs>p>.dd&Ql3+SQA;U
%XW[a3bJ)<n[G&Q2'!RX*S9c-(8>6U9S^r6E.HH4=Rp]h\1=B1Ymc&%MIf&1!rT#b<o=2+`;=0Ce,BT7aAY>1<'aEl\:nXXp&kUpt
%ei]fPjUe3N9uh0AZ%aW'fuNb,ES*;BU(Z1rc?Z`>;Em0'/jsO/S&ehsQUEi7'$cg:E\g0M5:'GQJc#e80S9mUhTo2kYa_'"L]me/
%R2+.-(Z>iXaC\H>6*P&(LeXVId'([Ck<=cm.,501I:.,%`]MEX/gnU%G:0d+,GYR*dj/V)cc-0u9U2<LAL&/\XN"f8F%=ub;p$A6
%Tq#INH"[ZmjLm!.V[F;%'uQiJg-_C+mJ;*E%4-nuH'L-#2m:tb3Y4f9$rfL7Tc$(]^S7*UND(`ZK-+<fNZ"nK1cpVF5AX!gY%2t*
%`k>nDdZ:WE-t*E0_0A$u%!snBTD8a`T%L1D35_?teC/pOG/o@IM*RO?>nD,R9<2KlrrD.bJ86NQ7qDHJ,h;N+UWZtZMT5#9B.j-p
%QRMZe0P;3>"=qQo68VV`^HUSbm5uoufQ/M"lf)trj;?RW$i8a/db9\[%saKo5.k]PkAmAjYJXKrk(!oS@P&sWFP.bs#g(B;6=qDt
%Oqr'Z;Y%#kg33gA+Id!2X,P%h5#69p37_bUWE*C3.L,?u+l86[*BBZI>[lLk[PX)$CPu<M7?QdgIQ#s=#8@kDL7S=NKU-[1g$5["
%oPDQm;qC+QfTkkSZ,Kc'aS1IZ8Rn53+6R9(&%fD=CeuE/XMkp^mJi98G[g0[6$:+7=g92n3=mCp::Z8B..u;$H&a+F7]'tdFXhgu
%).3[aaG,<1'n"VZl!4j[UaWaV='?A;CI#n]:n#>uWcIfgl+1[il<aZC0WnXQb80n^M^a,$"@(@7@#;QF9?qTtU^O8L5a#=*'XR$G
%.F:E0SDkeQaZ@/>MGm.Xi+96%\Q,IP4sE2,KKkn?h*EU]lGlGh?f\2V(O+RHr6"'qo[<thS=ZI1iK(nl!"cc."!\tb_sO]Ppe0]Z
%_gjOc\sn?E>G=kuRuFbC13uk,aq3^8^*,^4pdM;/9akjFUn5!O3@:2njt!0C;X^"jmr4X5jUAtjh<PicXTOQc'5V[MP#[/&`%[Lo
%9hl"JA4N&9JtRASj8*q#2E0Vf_0P"#jAnM-pNE3"9S.C!%1i%9+6m<\;<.I=OqQrJ*r9p@%SX*h-@F'h)u>c6)4AkSS'OS3G,,1:
%a\ZI-[8n"o2>ZElMGf`7P+Fg$4H[rq-Lg$H;5'8"b-uJQZ9aM'9K`&7].<+6g`QS&Bcu35=imI+nmt58<^k9@B=1db'>GB/p;p!o
%gLii^MR,J>4?S=1BC.bBZbj;tXlkGR.b5Vs*]AdFibMYY:M=f@]$t[hhu8B"Hm_TPrd$uej>.,!Ld0'g=G!Mq,DQ/:Aj/5@VRs/^
%j*5Vt#Ys7A-^90Z"rF:S'mrF38c]P(QT,Gc#7_(\V:l.jmRNBk%X810G&Z.l^i$pP%#r3=fl+1spSmV#@W,_J.WjJ7]T@//m>!0c
%[[?be"<%/a4$316++%W\N0ul'ar?Z>27l;Re8EqcYqg#53&hYhR03Sq'$SKBiHQ:nhQ>SBXI1RN[K@LP!0&B1VX;c%9`HWlr5kig
%&$meaN+RCU1<ee-#?";8-P(mUiTh&CTFDu&&N.b"*n<7$m4c0n]ir+Y+[^5tL[QD+4u3lmMag`K:,GGL%Pp?N:F8eEoKC?ZOfN!Y
%+rlL&^s;LGn'L^?ZrY\`]%Q=*bn/!![n62G*V3V!)oLL)K9e"%kmQHVpVJ1lkMGT$m!XllakP#Kb(W0H9,?:t&!#A0Zmt)Dlg5k5
%Ak6P4rfs+h>R%I&EtTQKBuY_WVS./U35U#UNJMBHZH]I!i/T.p'*n`K_<M7Of<7<kcWrj:ptO^(h*9Ji!:8<4IEtZVk+ZY;mD;*;
%eq!2?p&3r"!8W$o^#.<0*I_*Dj?Y<aD])h==-]9YL#3]lj(7@$O-I-r#fb#UPD%*-!gVn[,UH53c]T[nZ_9b51al$6RW$J^Q<g$W
%._Yb6a/Y^u1EG=rr'MKf")o\!5/5h`jncl@5g;A//?.Mf'fUJ3+=]'K7p:]K>-MhVr&P`*E)1QcdGub2L="]<R_C(QEH0Xpph?Td
%[>8(p>U!>c3F>n`[&I?[go2t.3E6Fo]EH[97BIWY+'>`K(b0fhXG-&K<ib6:Xt[D1daDEt/cD,"aal%kc"b&#fDq[-_%R)EL#`V?
%BB?13hg:Ws(iq*e.7VVCXK:Z's67S,pgM%Sj63?[WSdB:RT'=gI;'j$*\"BI1D^:?9Mlpe*dlcWd1A83ZF;.<!2paBGJH!]=N)[s
%%OruQS>NnX'Ho#0*7XZe>mBNE>=fIUV=F4E8aSudhQ#pk_X&PA;$KRrqC5nk`FgJecmdrUb'JQf3%'goN2.IK#q/R09NPr!FLAO7
%H6U4dq^cC3[W/)<Z`bN.r*%\5\qlt:%3TnKk@7b>7U1f;mBbPb&)^BcHMMspWS*0#?bZ_N<(dbZ:=W^f"^I"gc3!mfp,5_0m=IRV
%KBiFH#Als!!uR]30f*u@U8,j[+&2#Ah(NS=EBS.,'pG;i0e8u_rouL:N.g;Y3Z1nBc"j303)`(uU8S\B),#S4L?-s24iFn#icp84
%E[4N..5o@hmF9ocY1T>>'M6DZ<Ue;.:Ph,/E9L_C&VrW/@Tc9e&Tu'Fq^:'"SlReCK5O.GJ\=FH[Y,-K;KW@eC=_u"U"cH"OM)dh
%cs0<V3ClZ`o8tXOl'8n<,g:+HBc6GB^j151>N:p%jDFeSnbr-Q\86+@=nA7%XpiI8Q@\"t_(5L#^?(4c%IH@S:%0`=RDXX`dPu@$
%i:RO3?:W+?2;a'J:`6*c`X!Tej"5%gVJC2<KaOYgoZhRg7RbPHTmI,KZ;T=_*W(j"mUVjCLjgmU@C+BL]g!>@ji<=bAO*i+?H738
%"#VFqkhN6b?pIFfX$kmm.[1'<Olhq3aCbuf@CBH-[;d%GmhK=j["q/+rP]b+mZZ--c.\s_R3V)`gA,>i\0gM1MY=6odI</,!irH:
%Crh%d0i6@`>DtLbEWmlDG#Gh$^:V9ajP%37XSn_19pfQ=p7".`JFG6#cKgi6I$pRlWmC,%nu=?VHEXZRB3S"PL_16]cq-97E5\*`
%X)5GJs1%l!R\E0$R_EZH]bK[srNkIq8:#eKeI)MV-cR%+S_API-@j[g;8e;RJ>Kmth9%]i=0;a21&-NE+DZX#:H]`7BVg-/[Qn6R
%l<%nS>\:62)2G'I1%^-*<[s&5pp2hPU:cL/EMV?GH'up,REq2m_^gg56&#5,AkT6NT^#95!4WeQ4g#0jrJmatmdue4nVb+Kls"5X
%X"[7iB6YON!Ae6?)Ma-'%Fo;cT]^XcdFIWhMX*_HZUqga`,W'H<"J-!gX-^MTqL3+[(XU^eh9'=l$AC\UWoV$STNIp-Q,H@FSu$Z
%G25aTAVeYIIC&q*-YEi?i3?2iL$bh&M^%`?H;Z\[+?R#597POkWoH1-*nRo+qO*aXJFNf1S3bq#TD4XU_Af"_.ucn(KKCq4dbM'=
%Td^ANCouB.YToW5<JNn]n5bY<=^HPAfeE;ZmuC[C:2%gP4"K\:Zp^^f5_"FGqsO4%:`+8=CWqXqGdB%"SYdZ4L??&2E(NJ;/C(e/
%E$C4pU(a#6+C/`K%M"<%@23,Eqs?#2#P,V-&r-tnH:p+1&DK)M-,iK_J<aMNm"C7@Um*mf:/B.fa*SOs7N)<%q:f,=eiW%8CC8^B
%klFG33aog6E.!Yt>)ilN(tueOLuZW=o9Q+P2a_WeNG?,Ha9gCgP%L):%,E/Z@hp4dB'.[m%tHo\js(/BY0^/0X-PtY0cp!a57@7S
%g,5tD>afXPP+Ba(1r:[3&#VT2;UMS(q]OO2s-Zf"oEO=]#s_->VdlM_([j4T3iY1*=!\R7i?U*/YbWBBcKSWkYH[_L.V`A!8`HdW
%^/!B8"*7$$KBn"&3cr&q%9-l]'i'jG,NskZ]TV)DKno-KmZ8p>@u=qGB>.2m$UG"BqO-EJ>qJE6HkH2,=f,(%?h:u(Di;nr[sn-C
%%U<l;9X)\WG-p%bFI+HV9@BQt.&=CLnj;W.X:P5Q>IrqspV^C+'LnJnK*urA7K<!p-!"ZRKVn5kbqp*a-1**KHZ6l1J2_XkDb^@.
%(_$9k[XcYVA6;?,oh>$=7ctKjX[$Pif0G(&h#m<A!*oK&&+m<OELk((J;:CAU#9UcD<mds!6(is2VR)7(Xh(.o&9DDK=aQ.QVIZF
%S6S*iSLG5"d?%uUamZsV7=4EgS6c&jF?:!<<6)[uXWdnp=j/R<RLtf0mF8E2nl*m3[E@C%iXJZ5FGROQRmueJ)%BpM_`n0L.JRl8
%pb%Sa9[Fs\.4sMS`;FG*(;#&%?jNY2cm(!V-n*^b7s%Ft!>>[n<hG0n*rt%64sc,u#"GX%'EWu^/+:rD(ZJ0#-(^f&&](;(&EV,F
%3Lk#N65AMB%KVaIEna]FVbC?'"[b;TfrNnXU#!6g;3Q'S&FUC.5k-!=>`+_udo^L`$=@:dI4?U2fl_'teb"])q0IDEEEW90h"jh*
%C&bi]\D+\hIHaQ?:b?2I-@Vr8Z"tHrn5IqE*duWT]=sUnI(^iBH]2DJ?]\-)38FCW24)`ImFkBIluA>*QC!b]@?uBRoqSI$&MDFS
%nALm6873i>%BU9mB3O0np;=/TWN2k7G\5A$b"qus,X\#gIY9>?I_OU];9b=Q[La6TPUEaiRdpd5Wu#k20(&!sJk`5*E^B%c(TQDF
%aI8]WYeJOY:Sd9%):g$sG_0:c3.-35g9Tc3=Q/oOik'[1ADgE!;qO9#9DFeno+ncRYiCTWD13LB2b0Bd0!?`fg/@KWP-obOV6ojN
%WV5Oak..>tJFtY?o@eYUAS."BNF6TRF!<e+Nej%??AJq9IE+IT0cBDSA0(O=mt;h4#[?bV2u?=!QQL_FkK^!6=YFDclges,^Lo(^
%W:CanG.$OPO8-"uEs5?ca=:%1.1bs-KdFfs[(61+%B@e$DhJP$N%0P)=NnTFn$=L1$OHC!%<"LIeVif^r^3lO<?0@Ynn?!'Jede1
%RRP=!GOh0Z++N84c<u^TRPj-EDFe^4A%=4JeM!,PI2]i&^eHfJUlM1=8.Z@ocWVGnHEfZK#/^km*a#5siJLe^Q'S7'.u[N;Te+S_
%i!eOO&$HU+Ddgg93`<qGj&0g)kH7?9a+OW0@4D5dH_c,gn,kn!rr2=MIGWlX,*0sLS`U_iQ8>C+rJGaFXPVtqKbjq:K8729-0eTR
%A+,u,8'HlN%=G\R3?Mbc(5OjujjSr8KgD=e6iiaTT$t\SPX:_W,0h@4j`;ZmV#G+a?i71c(>RV0?+OXqZpSsA0$GnJ88j3.@Vr1?
%b>_DEI60/)D:N+]$'as-!9h/2%r(YjhSu3p+P$()kh]CT8M6\['5g5JR"f:mo<AAgfF&b\1&H9Q*<te$qd,=28``0#T[+'0T#Gf$
%r/6(#nR):ehu<NIs5s.WJ,Si]s8)J>qJX.K_uKW0cX4CK"2F^DJ,&'Ms7+Ebp`KP-k<K"?2h1bK+9'U4++O(7TD6Sos0(V#55t??
%TE"Jss5D9gJ,JECs24kJKK"=/_s`'Kp](6Mrq8;N+6BqC7K~>
%AI9_PrivateDataEnd
