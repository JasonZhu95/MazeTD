%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: head.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/19/2018
%%BoundingBox: 0 0 473 532
%%HiResBoundingBox: 0 0 472.2753 531.9141
%%CropBox: 0 0 472.2753 531.9141
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 116 128 8%%BeginData: 25274 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD45FF5227F852FD6FFF7DF8F827F852A8FD13FF522752FD57FF27
%F8272727F852FD11FFA82727F8F827FD55FFA8F827F827F827F852FD0FFF
%A8F8F8F827F8F827FD54FF5227F8272727F827F87DFD0DFFA82727212727
%27212752FD3DFFA87DA8A8FD11FFA827F827F827F827F827F8A8FD0BFFA8
%F827F827F827F827F8F852FD3AFFA852F827F82727A8FD0FFF7DF8272727
%F8272727F82727FD0BFF2727F8272727F8272727F8277DFD38FFA827F827
%F827F821F852A8FD0DFF27F8F827F827F827F827F8F827FD09FF27F8F827
%F827F827F827F827F8277DFD37FF27F8272727F8272727F8277DFD0BFFA8
%27F8FD042752F827F82727277DFD07FF52272727F827F84B52272727F827
%F827A8FD35FF52F827F827F827F827F827F8F852FD0AFF52F827F827F852
%7C27F827F827F827A8FD05FF7DF8F827F827F82776A15127F827F827F852
%FD34FFA8F8272727F8272727F8272727F82727FD09FFFD0427F82776A151
%272727F827F852FD04FFA827F827F827F82776A77C7CFD0427F827F8A8FD
%33FF52F8F827F827F827F827F827F827F8F827FD07FF7DF8F827F80527A1
%7C7C2727F827F827F87DFFFFFF27F827F827F82752A1767651762027F827
%F82727FD33FF27F8272727F8275276FD0427F8FD0427FD06FF52F8272727
%F87CA1A1767C2727F8272727F8FFFF7DF8272727F82752A17C7C75767576
%2727F827272752FD31FF7DF827F827F82752A1A07C2727F827F827F8F827
%FD05FFF827F827F82776A17C765176F827F827F8F852A8F827F827F80527
%A17C7C517651764B4BF827F827F827A8FD30FF52272727F82727A17CA17C
%7C51270027F8FD0427FFFFFF7D272727F8274BA17CA176767552F827F8FD
%0727F82727A17C7C767C517651764B270027F827F87DFD2FFFA827F827F8
%27F8527CA0767C757C4B27F827F827F8F827FFFF52F827F827F8767CA176
%7651765127F827F827F827F827F827F8767C7C5176757651764B752727F8
%27F827F8A8FD2EFFA8F8272727F82752A17CA1767C767C5127F8272727F8
%2752A8FD0427F8277CA17CA1767C75764B27F8272727F8272727F852A17C
%757C7676757C767651762727F827272752FD1CFFA87D7DFD0FFF52F8F827
%F827F87C7CA1767C757651765127F827F827F8272727F827F82727A17CA1
%767675764B762727F827F827F827F827767C51765176517651764B514B51
%F827F827F827A8FD1AFFA827F827277DFD0DFF52F827F827F8277CA17CA1
%767C767C517C5127F8272727F8272727F827F8767CA17C7C517651765176
%2727F8272727F8274B7C51767676517651765176517651270027F827F87D
%FD1AFF52F827F827F8277DFD0BFFF827F827F82727A176A1767651767576
%51764B27F827F827F827F827F8277CA17CA0517651764B514B27F827F827
%F827F8765176517651764B764B514B754B752727F827F82727FD1AFF2727
%F8272727F82727A8FD08FF7D272727F827F876A0A17C7C767C7676517C76
%7C51272727F8272727F827277D52764B51274BFD0627F8272727F8FD0627
%4B275127514B76517651762727F8272727A8FD18FFA827F827F827F827F8
%27F852A8FD06FF7DF827F827F82776A1767C517651765176517651764B27
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F8272751514BF827F827F87DFD19FFFD0427F8272727
%F827F8277DFD05FF5227F8FD0427A17C7651767676517C767651764B5126
%272727F8272727F8272727F8272727F8272727F8272727F8272727F82727
%27F8272727F8272727F827272720272727F82727FD18FFA827F827F827F8
%27F827F827F8F827A8FFFFA827F827F827F84B51765176517651764B5127
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827A8FD18FFFD
%04272027F827F8272727F827F87DFFFF2727F82727274B7C767C75764B4B
%27270027F8272727F8272727F8272727F8272727F8272727F827F827F827
%F827F8270027F8272727F8272727F8272727F8272727F8272727F827F8A8
%FD18FF27F827F8272752F827F827F827F827F8527D27F827F82727765176
%2727F827F827F827F827F827F827F827F827F827F805F827F827F8FD0427
%4B274B274BFD0627F827F827F827F827F827F827F827F827F827F827F8F8
%7DFD06FF525227A8FD0EFF2727F827F8527C762727F8272727F827F827F8
%272727F84B4B27F827F827F8272727F8272727F8270027F8FD0427524B52
%527C767C7CA17CA17CA1A0A17CA1A0A17CA176764B524B512751FD0627F8
%272727F827F82752FD06FF27F8F821F852A8FD0BFFA827F827F82727A175
%7C4B27F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%00F82727514B7C76A076A17CA17CA17CA176A17CA176A17CA17CA17CA076
%7651765176517651764B514B512727F827F827F852A8FD07FF27F8272727
%F82752FD0BFF2727F827F8527CA0767C76510027F8272727F8272727F827
%2727F8272727F8272727F8272752517C7CA1A0A7A1A17CA17CA17CA17CA1
%7CA17CA17CA17CA17CA1767C75767676517C7676517C5176517651764B27
%2727F82752FD08FFF827F827F827F8F827A8FD08FFA827F827F8274BA1FD
%047675522627F827F827F827F827F827F827F827F800F827275276A17CA1
%7CA17CA17CA17CA17CA17CA17CA17CA17CA1767C767C7676517C51765176
%517651765176517651514B764B51F827F827F827FD08FF272727F8272727
%F827F87DFD07FFA8F8272727F876A17C757C767676522727F8272727F827
%2727F827F827F827517C7CA1A1A17CA17CA17CA17CA17CA17CA076A17CA0
%76A0767C767C767C767C767C767C75765176767651767676517676764B76
%5127F8272727F8FD08FF2727F827F827F827F827F827A8FD05FF7DF8F827
%F80051A1757651764B27F827F827F827F827F827F800F8274B7676A17CA1
%76A1767C767C767C757C7576517651765176517651767576517675765176
%7576517651765176517651765176517651514B762727F827F8F87DFD07FF
%7DF827F8272727F8272727F8277DFD04FF7DF8272727F87CA07C75762727
%F8272727F8272727F8270027517D7CA1A0A1A0A176A0767C767C767C767C
%767C767C767C767C767C767C767C767C767C767C767C767C7676517C7676
%517C7676517C767651765151F8272727F87DFD07FF7D27F827F827F827F8
%27F827F82752FFFFFF52F8F827F82776A14B27F827F827F827F827F827F8
%27277C7CA17CA17C7C767C7676517C7576517C7676517C7676517C767651
%7C7676517C7676517C7676517C7676517651765176517651765176517651
%514B764B27F827F8F852FD08FFF8272727F8272727F8272727F82727FFFF
%27F827F827277C2727F827F8272727F827F82727767CA1A0A17CA1767C76
%7C767C767C767C767C767C767C767C767C767C767C767C767C767C767C76
%7C767C767C767C7576767651767676517676765176517651762727F827F8
%27FD08FF27F827F82726762700F827F827F8F8277DF827F827F827F805F8
%27F827F827F800F85176A17CA1767C757651765176757651767576517675
%765176757651767576517675765176757651767576517651765176517651
%765176517651765176517651764B514B27F827F827F8A8FD07FF7D272727
%F82776A1FD0427F8272727F8272727F8272727F8272727F827F82751A1A1
%A17CA1767C767C767C767C767C767C767C767C767C767C767C767C767C76
%7C767C767C767C767C7676757C767651767676517C7676517C7676517C76
%76517C757651762727F82727277DFD07FFA8F827F827F851A07C2727F827
%F827F827F827F827F827F827F827F80020527CA1767C767651767676517C
%7676517C7676517C7676517C7676517C7676517C75765176517651765176
%51765176517651765176517651765176517651765176517651764B514B51
%F827F827F87DFD08FF52F8FD0427A17C7C5127F827F8272727F8272727F8
%272727F82752A1A0A1767C757C767C767C767C767C767C767C767C767C76
%7C767C767C757C767651767576517676765176767651767676757C767675
%767576517675765176757651767576517651764B272727F82752FD08FF52
%F8F827F82751A175765127F827F827F827F827F827F827F85276A1767651
%767576517675765176757651767576517675765176757651765176517651
%765176517651765176517651764B524B51274B274B274B274B27514B514B
%514B514B764B514B754B51F827F827F827FD08FFA8F8272727F852A17C76
%7C5127F8272727F8272727F8274BA1A1A1767C767C767C767C767C767C76
%7C767C767C767C767C767C767651767676517C7676757C767651764B5127
%51FD0627F8270527F8270527F8FD0827514B524B765176514B0527F82727
%FD08FFA827F827F82727A1767651764B27F827F827F827F82752A17CA1FD
%0476517C7676517C7676517C7676517C7676517651765176517651765176
%517651764B512727F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827202727512727F827F8277DFD08FF2727F827F827
%7CA1767651270027F8272727F8527CA17CA1767C767C767C767C767C767C
%767C767C767C767C76765176767651767676517676764B512727F8270027
%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827
%2727F8272727F8272727F8A8FD08FF52F827F827F87C76764B27F827F827
%F827F8767CA17C7C51767576517675765176757651767576517651765176
%517651765176517651764B4B2027F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F8F852FD08FF5227F827272776A15127F8272727F82727A1A0A17C7C767C
%767C767C767C767C767C767C767C767C7676517C7676517C7676757C5151
%27270027F8272727F8272727F8272727F8272727F8272727F8270027F827
%0027F8272727F8272727F8272727F8272727F8272727F852FD08FF52F827
%F827F87C7627F827F827F80027A17CA1767C7576517C7676517C7676517C
%7676757C76765176517651765176517675762727F827F827F827F827F827
%F827F827F827F827F827F827F827F8FD09272027F827F827F827F827F827
%F827F827F827F82127FD08FF52272727F8277651F8272727F82727A17CA1
%7C7C767C767C767C767C767C767C767C7676517676765176767651767676
%51512727F8272727F8272727F827F82720272727F8272727F8272727F827
%277C7CA17CA17CA1A052F8272727F8272727F8272727F8272727F827F827
%A8FD07FF7DF827F827F84BF827F827F80027A17CA1767C51765176757651
%7675765176757651765176517651765176517551762727F827F827F827F8
%27F827F82727525252F827F827F827F827F827F827F827F8767CA17CA17C
%76F827F827F827F827F827F827F827F827F827F827F8A8FD07FF52272727
%F8272727F8FD0427A1A0A17CA0767C767C767C767C767C767C767C767C76
%76517C76767576517651762727F8272727F8272727F827277C7CA77C52FD
%0427F8272127F8272727F8272727F87CA1A1A0A1272720272727F8272727
%F8272727F8272727F8272727A8FD07FF52F827F827F827F827F827F87C7C
%A17C7C517C7676517C7676517C7676517C767651765176517651754B7651
%4BF827F827F827F827F827F827F87CA0A17627F827F827F827F8272727F8
%27F827F827F827F87C7CA12727F827F827F827F827F8F8F827F827F827F8
%27F827F87DFD07FF5227F8272727F8272727F876A1A17CA1767C767C767C
%767C767C767C767C767C767651767676517651764B4B0027F8272727F827
%2727F82727767CA1A051F8272727F827F85284AFAFA82E27F827F8FD0427
%A17627F8272727F827F85284845227F8272727F8272727F8277DFD06FFA8
%27F827F827F827F827F82776A17C7C517675765176757651767576517675
%7651765176517651514B764B27F827F827F827F827F827F82776A17CA07C
%76F827F827F827F852AFAFA8AFAFAF5927F827F827F8004B52F827F827F8
%27F827A8AFAFAF7D27F827F827F827F827F87DFD07FF2727F8272727F827
%272752A77CA1767C767C767C767C767C767C767C767C767C7676517C7676
%51765127F8272727F8272727F827272752A7A0A17CA12727F8272727F827
%84FFFD05AFFF8427F8272727F8272727F8272727F82752FFAFAFAFFF7D27
%2727F8272727F8277DFD06FF7D27F827F827F827F827277C7CA17CA1FD04
%76517C7676517C7676517C76765176517651764B514B27F827F827F827F8
%27F827F827F87C7CA17CA15127F827F827F82052AFAFAFA8AFAFAFA8FF7D
%20F827F827F827F827F827F82127AFAFAFA8AFAFAF2727F827F827F827F8
%77FD06FFA8F8272727F8272727F852A0A17CA17C7C757C767C767C767C76
%7C767C767C76765176767651765127F8272727F8272752F8272727F84B7C
%A17CA17C27F8272727F85384FD0AAFFF5227F8272727F8272727F87D84FD
%08AF84F8272727F827272752FD06FFA827F827F827F827F80527A17CA076
%A1767651767576517675765176757651765176517651514B4BF827F827F8
%27F82E2727F827F80027A17CA07C76F827F827F82784AFA8AF84AFA8AF84
%AFA8AFAFA8F827F827F827F827F82784AFAFAF84AFA8AF84AF8427F827F8
%27F827F852FD07FFA8522752FD0427F876A1A17CA17C7C767C767C767C76
%7C767C767C767C7676517C767651762727F827272721522E2EF8272727F8
%52A1A17CA74B27F827272752FFFD0DAF52F8272727F8FD0427FD0BAF2E27
%2727F827272752FD0AFFA827F827F8274BA17CA17CA17676517C7676517C
%7676517C767675765176517651752727F827F827F8272E522727F827F800
%4BA17CA17627F827F827F8A8FD04AFA8AFAFAFA8AFAFAFA8FF5920F827F8
%27F827F852FD04AFA8AFAFAFA8AFAF52F827F827F827F852FD0BFF2727F8
%27002776A17CA17C7C767C767C767C767C767C767C767C75767676517651
%27F8272727F8272E522E522727F827F876A0A1A07CF8272727F852FD0FAF
%84F827F8272727F82759FFFD09AFFF5227F8272727F8277DFD0AFFA827F8
%27F827F8517CA17CA075767576517675765176757651767576517651764B
%4BF827F827F82727522E2E2727F827F82752A176A15105F827F8F852AFA8
%AF84AFA8AF84AFA8AF84AFA8AF7D27F827F827F827F87DAFAF84AFA8AF84
%AFA8AFAF52F827F827F827F87DFD0BFF5227F8FD0427A1A0A17CA0767C76
%7C767C767C767C767C767C767C767651762727F8FD0427522E522E522727
%F827277CA0A1A152F8272727F884FD0FAF84F827F8272727F82759FFFD0A
%AF2727F8272727F8277DFD0BFF7DF827F827F82776A17CA1FD0476517C76
%76517C7676517C7676517651764B27F827F827F8272E522E2E2727F827F8
%2752A17CA14B05F827F82784AFAFAFA8AFAFAFA8AFAFAFA8AFAFAF5227F8
%27F827F827F859AFAFA8AFAFAFA8AFAFAF8427F827F827F827F8A8FD0BFF
%7D272727F82727A17CA17CA1767C767C767C767C767C767C767C76765176
%757620272727F82727522E522E52FD0427F876A1A17C52F827F82727FD10
%AF2EF8272727F8FD0427FD0AAF52F8272727F827F827A8FD0BFF7DF827F8
%27F8767CA076A176765176757651767576517675765176517651764B27F8
%27F827F8272E2E27522E27F827F80027A17CA12727F827F82784AF84AFA8
%AF84AFA8AF84AFA8AFAF84F827F827F827F827F82784AFA8AF84AFA8AFAF
%84F827F827F827F82727FD0CFF7D272727F82776A17CA17CA1767C767C76
%7C767C767C767C767C7676517C7676FD0427F82727522E522E52FD0427F8
%277CA17C52F827F82727FD0EAFFF2727F8272727F8272727F852AFFFFD05
%AFA8272721272727F827F852FD0CFFA8F827F827F8767CA17CA17C76517C
%7676517C7676517C7676517C517651764B27F827F827F8272E2E27522E27
%F827F827F876A0A12727F827F8277DAFA8AFAFAFA8AFAFAFA8AFAFAF5927
%F827F827F827F827F827F85284AFAFAF8459F827F827F827F827F8F87DFD
%0CFFA827F82727274BA17CA17CA1767C767C767C767C767C767C767C767C
%757651762727F8FD0427522E522E522E27F8FD0427A1A152F8272727F87D
%FD0BAFFF8427F8272727F8522727F8272727F82727522727F827F8272727
%F8272727F8A8FD0CFFA8F827F827F84B7CA17CA0767C5176517675765176
%757651767576517651764B4BF827F827F827272E2E2E272EF827F827F827
%51A15127F827F8F82EAFA8AF84AFA8AF84AFA8AF8427F827F827F8277676
%F827F827F827F827F820F827F827F827F827F827F827A8FD0DFF27F8FD04
%27A17CA17CA17C7C767C767C767C767C767C767C767C767651764B27F8FD
%0427522E522E522E27F8272727F8277CA121272727F852FD0BAF52F827F8
%272727F852A152F8272727F8272727F8272727F8272727F827272777FD0E
%FF27F8F827F82776A17CA17CA17676517C7676517C7676517C7676517651
%764B51F827F827F82727522E2E27522727F827F827F8517C27F827F827F8
%7DAFAFA8AFAFAFA8AFAF52F827F827F827F827F87CA052F827F827F827F8
%27F827F827F827F827F827F8A8FD0EFF7DF827F827F87C7CA17CA17CA176
%7C767C767C767C767C767C767C517676764B270027F82720272E522E522E
%522727F8272727F8525227F8FD0427FD06AFFF8452F827F8272727F82727
%274BA7A17C2727F827F8272727F8272727F8272727F852FD0FFF7DF8F827
%F8274BA176A17CA0767C517651767576517675765176517651764B512627
%F827F827052E2752272E272EF827F827F827F8272027F827F8F82784FD04
%AF5927F827F827F827F827F827F82751A17CA176524B27F827F827F827F8
%27F827F8F8A8FD0FFFA82727F827F851A0A17CA17CA17C7C767C767C767C
%767C767C767C517C767651520027F8FD04275952522E522E2EF8272727F8
%272727F827272721272752597D2727F8272727F8272727F8272727F82752
%A17CA7A076FD0427F8272727F827272752FD10FFA827F827F827207C7CA1
%7CA17CA17676517C7676517C7676517C757651764B754B27F827F827F828
%2E592E2E27522E27F827F827F827F827F827F827F827F8F8F827F827F827
%F827F82E2727F827F827F8FD0527F827F827F827F827F827F82727FD12FF
%52272727F82776A17CA17CA17CA1767C767C767C767C767C767C76765176
%5152F8272727F82727592E592E522E522E2EF8272727F8272727F8272727
%F8272727F8272727F827272E2E522727F8272727F827F827F8272727F827
%2727F8272727F8A8FD12FF7DF827F827F8517CA076A17CA1767675765176
%757651767576517651754B764B27F827F827F8272E522E592E2E27522E27
%F827F827F827F827F827F827F827F827F827F82705522E522E520527F827
%F827F827F827F827F827F827F827F827F827FD13FFA827F827F82727A17C
%A17CA17CA1767C767C767C767C767C7576767651765152FD0427F8272759
%2E5984592E522E522E522727F8272727F8272727F8272727F82720272759
%52592E595252FD0427F8272727F8272727F8272727F8272727F87DFD13FF
%5227F827F82751A17CA17CA17C7C7576517C767675765176517651514B76
%4B27F827F827F8272E522E8459522E522E2E2E522727F827F827F827F827
%F827F827F8272E522E522E522E522E522727F827F827F827F827F827272E
%F827F827F827F8A8FD12FFA8F8272727F84BA0A17CA17CA1767C767C767C
%7676517676765176517651510027F8FD0427595259848459592E522E522E
%522E27F827F827F8272727F827272E2E5952522E595259525952522E2E27
%27F8FD0427522E522E2E2127F8272727F8FD12FFA827F827F827F87C7CA0
%76A17C7C5176757651765176517651514B514B51F827F827F827F82E2E52
%52845A5952592E522E522E522E2EFD0427F827052727522E522E522E522E
%5952592E522E522E522E5227522E2E272E272E2E27F827F827F8F827FD12
%FF52272727F8274BA17CA17CA17C7C767C767C7676757C517651765176FD
%0427F82727272E595259848B59595259525952595259525952592E595259
%52595259527E598459595359525959592E595259525952592E5952522E52
%2E27F8272727F82752FD11FFA8F827F827F82776A17CA17CA0757C517651
%7651764B764B514B764B27F827F827F82727522E52598460595259525952
%592E595259525952532E5952595259527E6084848459595259525952592E
%592E522E532E532E522727F8270527F827F827F8277DFD11FF52F8272727
%F852A1A17CA17C7C51767676517651764B7651764B270527F82727270053
%52522E84848459595359525953595259535952595359525953595259FD06
%8452595359525953595259525952522727F8272027F8272727F8272727F8
%52FD11FF7DF8F827F827F87C7CA076A15176517651514B514B514B512727
%F827F827F827F82E2E522E52598460592E5952592E595259525952592E59
%52592E595253528460845A8460592E5952592E59525952592727F827F827
%F827F827F827F827F827F827F87DFD11FFFD0427F82752A17CA17C76517C
%75765176517651522727F8272727F8272752525952595284848453595959
%5259527D8484595952595959525959595259FD0684525959595259595952
%522727F8272727F8272727F8272727F8272727F82727FD11FF7DF827F827
%F8277CA17CA1517651764B754B762727F827F827F827F827F8522E522E52
%5259598B595952595259525960846084848452595259525952592E598484
%608459595259525952592727F827F827F827F827F827F827F827F827F827
%F827F8F852FD11FF27F8272727F876A1A17C76517651764B4B20270027F8
%272727F8272752525952522E59527E5959525952595359598B8484608584
%5952595359525953595259597E5959535952595252F8272127F8272727F8
%27202705FD0727F8272727F827A8FD10FF52F8F827F82720A17C7C51764B
%4B2027F827F827F827F827F82727522E522E522E592E5952592E5952592E
%59525960845959607E52522E5952592E5952592E5952592E5952592727F8
%27F827F827F827F827F827272E27522E2E27522E27F827F827F87DFD11FF
%FD0427F82752A776522727F8272727F8272727F82727282E5952592E5952
%5952595959525959595259535952845959527D53592E5952595259595952
%595959527D5952FD0427F8272727F8FD0427522E522E522E522E522E52FD
%0427F82727FD11FF7DF827F827F8272727F827F827F827F827F827F82727
%522E522E522E522E5952595259525952595259525952592E59525952592E
%522E52525952595259525952592E27F827F827F827F827F827052E2E522E
%522E522E522E2E27522E2EF827F827F8277DFD10FFA827F8272727F82700
%27F8272727F8272027F82E2E592E5952532E595259525953595259535952
%7D84846084845952595359525952522E5953595259525952592727F82727
%27F8272727F8272E522E5952592E5952592E532E522E522E2EF8272727F8
%7DFD11FF52F8F827F827F827F827F827F827F82727522E522E522E522E52
%2E5952592E532E522E59525259846084608459532E5952592E522E522E59
%5253525952520527F827F827F827F827052E2E522E522E522E522E522E52
%2E522E2E27522727F827F8F827FD12FFFD0427F8272727F827F827275252
%59525952592E595252527D5959525952592E595259527DFD048459595259
%5959525959595259525959858452F8272727F8272727F82727522E595259
%2E5952592E595259525952592E522E52FD0427F827A8FD11FF52F827F827
%F827F827275959592E532E522E522E522E525284608452592E522E522E53
%5259525959595259525952595259525952592E5960848459F827F827F827
%F827F82727522E522E522E522E522E59525952592E522E522E522E27F827
%F827F8A8FD11FF7D27F8272727F82E5984848B59522E5952522E59525952
%FD04845952592E595252525953595259525952595359525953595259527D
%848B8452F8272727F827212727522E522E5952532E595259598484845984
%5959525952522E522727F82727F87DFD12FF52F8F827F827058484846084
%52522E522E522E595259598484842E5952522E522E592E5952592E595253
%2E5952592E5952592E5960846052F827F827F827F827272E27522E522E52
%2E522E59608460846084608452592E522E2E272EF827F827F852FD13FFFD
%0427F8272E8BFD0484608460845259595952595984FD0459525952595259
%5959525959592E595259525959595259848B8452F827F8272727F8272E52
%2E5952592E59525959FD0B84525952522E522E27F827272752FD13FF7DF8
%27F827F827598460848484608484592E59525952595259525952522E522E
%522E59525952592E522E5252595259525959848452F827F827F827F82727
%522E522E522E522E5959846084608460846084608460592E52FD042EF827
%F827F852FD14FF52F8272727F852FD09847D525953595259535952595253
%2E59525952595359525952532E595959525959848459F827F8272727F82E
%2E522E595253525959848485FD0C8452522E522E52FD0427F82752FD14FF
%7DF8F827F827F85984845A8460845A8460592E5952592E5952522E522E52
%2E5252592E5952522E522E522E5952592E848459F827F827F827F827272E
%2E522E595259528460845A8460845A8460845A84608459522E52272E2E2E
%F827F827F87DFD15FF52272727F82727FD09845A59535952595959525952
%592E59535952595959525952595259595952848484FD0427F827202E2E52
%2E59525952595259FD0F845952592E522E52FD0427F8277DFD16FFF827F8
%27F8272784608460846084608459595259525952592E522E525259525952
%595259525952595259525959842721F827F827F82E2E522E5952522E522E
%59525959846084608460846084608484592E522E5227522E27F827F827F8
%A8FD16FF7DF8272727F827528BFD08845259535952595359525953595284
%59595259525952595259525952595227F827F827F8275259535952595252
%2E595259527DFD0B847D52532E592E522E522727F827F827A8FD17FF52F8
%27F827F82759845A8460845A8460592E5952592E5952592E595284608459
%592E595984595952592E595252F827F827F8272E592E5952522E522E522E
%525259598460845A8460845A8460592E592E52FD042E2727F827F82727FD
%18FFA827F827F827F827608BFD088452595259595952595359848B848B59
%595985848B5959525959595352F827F8272E59525959592E5952592E5952
%5952FD08848B5A595259525952592E522E2E2127F827F87DFD19FF7D27F8
%27F827F8276084608460846084608452595259525952595259598459592E
%59848460845259525952592E27F82727595259525952522E522E522E5952
%595984848460846084605952592E522E522E522E2EF827F827F827A8FD1A
%FF52272727F827F852848BFD088459595259535952595259525952595284
%8485595952595259535952522E5952595359525952592E59595952595259
%59FD04848B847D525953592E592E522E522727F8FD0427FD1CFF27F8F827
%F827F82E608460845A846084608459532E5952592E5952592E595259527D
%59592E5952592E595259525952592E5952592E5952592E5952592E595259
%5259597E595952592E522E522E2E272E2727F827F827F87DFD1DFF272721
%272727F8528485FD0884597D525952595959525959595259525952595259
%525959595259595952595959525959595259525952595959525952595259
%5259525952592E522E522E272127F827F852FD1EFFA8F827F827F827F852
%84846084608460846084607E52535259525952595259525952522E522E59
%525952595259525252595259525952522E522E5252595259525952592E59
%2E522E522E2E27522E27F827F827F8217DFD1FFFA8F827F8272727F85284
%8BFD0A8459595259525952595359525952522E5952595259535952595259
%52595359525952532E59525952595359525952522E5952522E522E522E2E
%2027F827272752FD21FF7DF827F827F827F82759845A8460845A84608460
%846084595952522E5952592E592E522E5952592E5952592E5952592E5952
%592E522E522E5252592E5952522E522E522E522E2E27522E27F827F827F8
%27F8FD23FF52F8272727F827F827848BFD0B848B8484597D595952595959
%52595959525959595259595952595959525952592E595259525952592E59
%52592E522E522E522E2EF8272727F827F8A8FD23FF52F8F827F827F827F8
%598484608460846084608460846084848460845959525952595259525952
%595259525952595259525952595259525952522E522E522E522E2E27522E
%2E2727F827F827F827F87DFD25FF52F8F8272727F8272759848BFD0F848B
%8484597D525952595359525953595259535952595359525952592E595253
%2E5952522E522E522E522E27F8272727F827F87DFD27FF52F8F827F827F8
%27F82E598560845A8460845A8460845A8460845A846084608459592E5952
%592E5952592E5952592E5952592E522E522E522E52272E272E27522E2E27
%27F827F827F827F852FD29FF7D27F827F8272727F8275284848BFD0F8485
%8484597D52595259535952595959525959592E59525952592E522E522E52
%2E522E2EFD0427F8272727F87DFD2BFF7D27F827F827F827F82727525985
%848460846084608460846084608460848484595952595259525952595259
%52592E522E532E522E522E2E27522E2E2727F827F827F827F827F87DFD2D
%FFA852F827F8272727F827F8272E7E848BFD10846084848459845959527D
%5984525952592E522E522E522E52272E2727F8272727F8FD0427A8FD30FF
%7DF8F8F827F827F827F820F8272E5959848484608460845A8460845A8460
%846084608460845A84608484592E522E2E27522E2E2727F827F827F827F8
%27F827F8F827FD34FF5227F827F8272727F8272027F8272E595984848B84
%8B848B848B8484848B8484848B848B848B848B84592E522752FD04272027
%F8272727F8272727F8277DFD36FF7D52F8F8F827F827F827F827F827F827
%F82E2E522E59598459846084608460845984FD045952522727F827F827F8
%27F827F827F827F827F8F8277DA8FD39FFA85227F8272727F8272727F827
%2727F827F827F8FD0427282727272EFD0627F827F827F8272727F8272727
%F8272727F827F8277DFD3EFFA85221F8F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827277DA8FD42FF7D522727F827F8272727F8272727F8272727F8272727
%F8272727F8272727F8272727F8272727F827F827F827277DA8FD48FF7D52
%2727F8F8F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F8F8F827527DA8FD4EFFA87D52522727F827F827F8272127F8272727
%F8272727F827F821F8FD04277D7DA8FD57FFA87D527D52522727F827F827
%F827F8FD042752527D7DA8A8FD20FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-19T17:27:27+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-19T17:27:27+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-19T17:27:27+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>228</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADkAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FWB/nd56k8mfl9f6jayenqd0RZaa3cTzA/GPeONWce4xV8QQ63rMGqDV&#xA;ob64TVA/q/XhK/r+pWvL1K8q+9cVfY/5FfnJB560j9H6m6x+aLBB9aQAKLiMUAuIwNu9HUdD7EYq&#xA;9UxV2KuxViP5lfmb5d8g6Ib/AFN/UvJgw0/TkP724kA6DrxQV+JzsPc0BVfNtr/zld+ZCawt3cRW&#xA;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&#xA;irsVdirsVdir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:7e5b259d-5354-d140-8e2e-829e70baba2d</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:7e5b259d-5354-d140-8e2e-829e70baba2d</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:28647573-841f-f547-9955-9c40713b8bea</stRef:instanceID>
            <stRef:documentID>xmp.did:28647573-841f-f547-9955-9c40713b8bea</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:78ead596-65d4-664f-9311-ff5d6a6a9ec8</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:46:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:170ebbf7-4b79-5343-9e6b-0d3f9d7a2ef3</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:56:13+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d7886bab-91ac-7048-a0fb-9440b5348aa7</stEvt:instanceID>
                  <stEvt:when>2018-02-19T10:52:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d3f5251a-8625-ce47-a7c7-361c56ddbc1d</stEvt:instanceID>
                  <stEvt:when>2018-02-19T15:12:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28647573-841f-f547-9955-9c40713b8bea</stEvt:instanceID>
                  <stEvt:when>2018-02-19T16:25:55+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7e5b259d-5354-d140-8e2e-829e70baba2d</stEvt:instanceID>
                  <stEvt:when>2018-02-19T17:27:27+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>472.275266</stDim:w>
            <stDim:h>531.914000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -531.914 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 531.914 li
472.275 531.914 li
472.275 0 li
cp
clp
459.649 383.93 mo
454.497 367.212 443.066 354.875 433.663 340.57 cv
416.796 314.908 415.027 297.941 427.395 270.238 cv
441.704 238.185 452.183 182.231 433.088 147.198 cv
435.552 121.552 425.467 94.3658 397.479 93.3101 cv
391.857 93.0982 385.474 93.5504 379.639 95.0948 cv
352.82 86.2247 317.886 90.4771 293.709 93.3355 cv
240.652 99.6114 189.586 117.638 139.904 136.558 cv
102.757 150.707 59.5734 171.301 42.6994 209.997 cv
35.3029 226.958 35.2794 242.867 42.0919 260.008 cv
44.3205 265.616 46.4611 271.061 48.5285 276.454 cv
47.1935 279.838 46.9464 283.714 48.4836 287.919 cv
54.0978 303.283 59.7013 318.652 65.3586 334 cv
69.9064 353.861 76.5685 372.536 85.4425 391.444 cv
87.6662 396.177 90.9709 398.899 94.6486 400.122 cv
107.767 432.729 126.005 461.741 155.667 479.284 cv
158.385 483.848 163.165 487.267 170.046 487.622 cv
175.789 489.547 181.53 491.472 187.272 493.397 cv
189.968 494.903 192.585 496.322 194.969 497.549 cv
200.06 500.17 205.5 499.882 210.196 497.878 cv
277.073 542.326 384.229 528.02 437.681 458.621 cv
455.327 435.71 468.725 413.379 459.649 383.93 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.388235 .509804 .517647 rgb
f
436.208 151.249 mo
429.952 110.511 427.341 67.1246 400.133 34.337 cv
394.425 27.4581 380.665 27.3741 375.001 34.337 cv
367.246 43.8726 359.416 53.2989 351.224 62.4664 cv
348.597 65.4044 334.046 82.3726 335.635 81.8516 cv
335.377 81.9371 312.539 41.5787 308.632 34.8712 cv
300.92 21.627 279.314 23.9493 275.492 39.2017 cv
270.205 60.3013 262.79 79.9273 253.05 99.0675 cv
238.851 84.5533 225.663 69.4615 213.517 52.9888 cv
205.085 41.5528 182.532 39.9747 179.394 57.4488 cv
175.495 79.1495 169.787 99.8604 162.255 120.435 cv
160.564 119.208 158.873 117.98 157.181 116.752 cv
150.63 111.996 143.831 112.734 138.48 116.309 cv
132.101 111.866 125.9 107.122 119.927 102.007 cv
103.675 88.0914 81.423 107.913 92.4201 124.262 cv
91.2716 133.501 89.9894 142.813 89.2043 152.085 cv
83.2199 154.316 77.3273 157.02 71.2589 159.871 cv
70.6232 159.473 69.9933 159.017 69.3703 158.463 cv
65.4718 155.356 60.7912 154.345 56.3673 154.823 cv
51.9103 150.149 47.549 145.399 42.9982 140.792 cv
32.4035 130.062 15.0841 141.105 18.4123 155.106 cv
24.9386 182.558 34.0324 209.451 40.2355 237.308 cv
43.7853 253.251 45.9015 275.71 53.9709 292.833 cv
51.5949 307.248 56.4709 320.765 62.1144 334.403 cv
63.8869 345.224 68.1701 354.503 74.9884 363.07 cv
75.7003 374.233 84.6076 384.447 98.6212 379.983 cv
100.236 379.47 101.852 378.954 103.467 378.44 cv
104.559 378.093 105.576 377.637 106.552 377.126 cv
127.644 369.38 148.551 359.96 162.433 341.485 cv
179.18 319.196 175.908 301.23 171.161 276.01 cv
164.236 239.207 195.184 207.04 227.784 191.98 cv
246.054 183.54 265.524 181.81 283.718 175.526 cv
327.329 181.533 375.008 177.046 417.027 176.428 cv
431.121 176.221 438.157 163.946 436.208 151.249 cv
cp
.580392 .458824 .352941 rgb
f
334.786 493.53 mo
329.251 490.717 324.367 491.73 318.522 492.936 cv
313.513 493.967 308.469 494.659 303.402 495.215 cv
295.964 490.305 286.202 491.134 277.2 491.069 cv
276.638 491.065 276.088 491.053 275.526 491.047 cv
274.972 489.755 274.184 488.538 272.929 487.541 cv
251.737 470.704 221.63 469.938 197.666 457.4 cv
183.432 449.955 170.926 440.666 160.034 429.781 cv
159.91 428.411 159.611 427.035 158.888 425.708 cv
150.793 410.867 139.179 398.904 128.081 386.245 cv
114.232 370.451 92.7658 390.547 100.717 407.359 cv
116.75 441.259 142.064 469.669 174.05 489.368 cv
198.447 504.394 238.041 522.179 266.15 508.076 cv
269.418 508.68 272.686 509.242 275.95 509.722 cv
285.063 511.059 294.995 512.642 302.851 508.105 cv
308.456 507.785 314.042 507.309 319.611 506.514 cv
326.254 505.564 332.075 504.483 336.138 498.688 cv
337.26 497.087 336.491 494.398 334.786 493.53 cv
cp
.54902 .796078 .807843 rgb
f
306.23 382.247 mo
289.583 385.122 278.543 407.216 271.05 420.4 cv
269.423 423.263 273.54 425.528 275.389 422.938 cv
280.692 415.506 286.893 409.951 293.694 403.958 cv
299.491 398.851 306.633 394.6 310.385 387.652 cv
312.006 384.65 309.346 381.71 306.23 382.247 cv
cp
f
409.501 392.832 mo
399.346 388.622 388.263 392.391 379.725 399.667 cv
379.589 399.721 379.45 399.74 379.314 399.8 cv
372.027 403.041 364.859 406.69 357.911 410.607 cv
352.725 413.531 356.174 422.442 362.025 420.453 cv
361.764 422.537 362.007 424.682 362.736 426.85 cv
355.254 433.728 364.266 448.361 373.943 444.626 cv
374.023 444.595 374.098 444.554 374.178 444.523 cv
374.46 444.723 374.648 444.967 374.944 445.161 cv
380.043 448.503 389.066 447.692 393.106 442.818 cv
395.165 440.333 396.34 437.867 396.882 435.42 cv
404.678 430.838 411.732 423.937 416.232 418.33 cv
423.921 408.753 420.662 397.459 409.501 392.832 cv
cp
f
208.367 294.389 mo
206.983 294.389 206.981 296.543 208.367 296.543 cv
209.753 296.543 209.755 294.389 208.367 294.389 cv
cp
f
207.694 304.701 mo
205.993 301.577 201.723 304.326 203.045 307.419 cv
206.748 316.094 208.667 324.98 208.056 334.408 cv
207.566 341.954 205.198 349.42 205.498 356.946 cv
205.646 360.668 209.978 361.377 212.021 358.713 cv
223.216 344.113 215.523 319.078 207.694 304.701 cv
cp
f
244.158 374.83 mo
239.608 372.54 234.954 375.773 230.159 374.537 cv
222.541 372.576 219.28 384.476 226.915 386.306 cv
233.545 387.895 245.592 387.54 246.309 378.578 cv
246.42 377.159 245.418 375.466 244.158 374.83 cv
cp
f
256.512 349.245 mo
255.327 347.659 253.571 347.048 251.723 347.989 cv
248.597 349.579 246.861 353.106 244.661 355.703 cv
242.034 358.803 241.926 363.238 245.351 365.881 cv
248.311 368.165 253.614 367.725 255.372 363.968 cv
257.368 359.698 259.717 353.539 256.512 349.245 cv
cp
f
264.673 352.824 mo
259.531 352.212 256.875 357.298 258.771 361.631 cv
259.155 362.506 259.533 363.381 259.9 364.263 cv
260.784 366.382 263.303 367.459 265.15 365.648 cv
266.116 364.701 267.09 363.762 268.073 362.829 cv
271.564 359.521 269.332 353.379 264.673 352.824 cv
cp
f
179.562 392.663 mo
179.461 387.997 175.009 384.46 170.444 385.717 cv
166.355 386.844 163.252 392.531 166.138 396.298 cv
166.443 396.694 166.746 397.091 167.051 397.487 cv
168.9 399.9 171.511 401.443 174.651 400.579 cv
177.456 399.809 179.655 397.034 179.592 394.09 cv
179.58 393.614 179.57 393.139 179.562 392.663 cv
cp
f
182.523 377.402 mo
182.029 377.402 182.029 378.169 182.523 378.169 cv
183.017 378.169 183.017 377.402 182.523 377.402 cv
cp
f
196.881 421.435 mo
196.388 421.435 196.388 422.2 196.881 422.2 cv
197.375 422.2 197.375 421.435 196.881 421.435 cv
cp
f
223.969 430.41 mo
222.061 428.237 219.501 427.683 216.813 426.898 cv
207.868 424.291 205.481 439.462 215.094 439.59 cv
217.953 439.629 220.442 439.789 222.961 438.229 cv
225.818 436.46 226.11 432.844 223.969 430.41 cv
cp
f
250.214 433.575 mo
248.9 432.208 248.256 430.311 246.465 429.264 cv
244.279 427.985 241.701 427.849 239.495 429.145 cv
234.443 432.111 235.095 438.75 238.094 442.929 cv
240.771 446.66 245.52 448.112 249.433 445.094 cv
253.101 442.263 253.433 436.923 250.214 433.575 cv
cp
f
321.889 334.593 mo
321.529 334.538 321.171 334.481 320.81 334.423 cv
315.882 333.644 311.387 334.57 308.172 338.733 cv
305.203 342.573 304.84 347.82 307.232 352.089 cv
307.402 352.392 307.569 352.694 307.741 352.998 cv
312.083 360.75 323.154 361.054 328.397 354.267 cv
333.265 347.964 330.862 336.013 321.889 334.593 cv
cp
f
463.178 396.573 mo
464.737 376.492 448.614 358.084 428.795 355.538 cv
413.457 353.567 392.453 356.815 381.769 369.406 cv
379.349 370.618 376.971 371.841 374.693 373.024 cv
353.153 384.221 335.153 399.303 317.342 415.526 cv
314.674 417.956 317.46 423.214 321.008 421.826 cv
338.986 414.792 355.875 406.708 373.182 398.112 cv
382.656 393.406 392.406 389.029 402.73 386.54 cv
407.342 385.427 411.317 384.939 415.095 384.123 cv
417.436 387.829 420.603 390.9 424.826 393.131 cv
424.876 396.169 424.45 399.616 423.508 403.887 cv
421.907 411.145 419.153 418.295 416.916 425.379 cv
414.478 433.095 411.513 439.713 407.877 445.532 cv
406.295 445.675 404.758 446.026 403.373 446.671 cv
388.557 453.572 376.333 464.186 360.68 470.207 cv
348.223 474.998 331.466 478.805 323.788 490.42 cv
322.664 492.118 322.676 494.789 323.788 496.489 cv
334.735 513.193 361.001 502.999 376.253 497.561 cv
394.059 491.211 412.257 482.55 421.292 465.596 cv
421.369 465.523 421.437 465.434 421.513 465.361 cv
422.708 465.779 423.949 466.036 425.243 465.889 cv
451.695 462.857 466.549 428.662 466.375 404.898 cv
466.351 401.468 465.094 398.68 463.178 396.573 cv
cp
.329412 .443137 .447059 rgb
f
345.961 448.845 mo
345.804 448.736 345.647 448.628 345.489 448.521 cv
338.257 443.534 329.814 450.336 329.282 457.82 cv
329.268 458.026 329.253 458.234 329.237 458.441 cv
328.628 467.022 339.079 472.064 345.961 468.037 cv
353.569 463.585 352.686 453.481 345.961 448.845 cv
cp
f
340.463 418.288 mo
334.058 418.288 330.789 423.134 330.613 428.107 cv
330.37 428.125 330.128 428.148 329.885 428.164 cv
322.249 428.699 318.701 438.864 325.854 443.048 cv
330.481 445.753 336.007 442.708 337.516 438.315 cv
338.421 438.567 339.38 438.748 340.463 438.748 cv
353.628 438.748 353.651 418.288 340.463 418.288 cv
cp
f
394.488 307.134 mo
373.356 306.88 358.64 312.331 342.575 293.845 cv
336.703 287.088 326.359 289.967 321.981 296.5 cv
315.439 306.257 301.819 304.04 292.015 305.394 cv
287.977 305.952 279.093 306.183 276.399 308.248 cv
275.032 307.932 273.695 307.593 272.477 307.16 cv
269.094 305.954 265.395 307.101 262.735 309.408 cv
257.262 306.642 250.241 307.589 247.073 313.178 cv
246.54 312.757 245.802 312.333 244.7 311.903 cv
242.788 310.019 240.883 308.127 238.987 306.227 cv
235.843 303.234 232.631 300.424 229.237 297.702 cv
223.918 293.436 218.289 289.95 212.477 286.6 cv
212.409 285.688 212.391 284.774 212.315 283.861 cv
215.9 282.839 218.766 279.839 219.023 275.066 cv
219.518 265.832 214.617 256.838 210.282 248.033 cv
210.312 247.586 210.301 247.142 210.336 246.693 cv
210.473 245.022 210.28 243.568 209.938 242.231 cv
210.091 242.094 210.242 241.956 210.396 241.817 cv
214.094 238.474 214.319 232.688 212.111 228.53 cv
208.179 221.119 198.594 219.482 191.563 223.338 cv
184.994 226.94 181.985 233.776 179.582 240.506 cv
175.604 251.651 172.6 269.61 183.129 276.339 cv
183.203 277.593 183.37 278.872 183.473 280.132 cv
182.543 286.368 182.764 292.981 181.394 299.125 cv
179.73 306.586 178.481 314.617 175.712 321.879 cv
167.731 330.705 163.449 343.335 155.833 352.442 cv
146.784 363.26 133.587 367.554 122.935 376.226 cv
115.458 382.312 119.099 397.747 128.976 399.107 cv
147.598 401.669 164.387 392.158 177.785 379.737 cv
190.545 367.909 207.942 344.926 206.29 326.784 cv
206.229 326.096 206.03 325.491 205.9 324.844 cv
208.461 319.592 210.606 314.18 211.793 308.5 cv
219.058 318.542 226.992 328.473 236.861 334.233 cv
245.273 339.144 255.076 338.213 261.819 332.766 cv
264.577 336.482 269.247 339.258 273.611 338.847 cv
293.875 336.938 319.027 335.235 334.714 321.998 cv
338.851 325.175 343.304 327.876 348.116 329.927 cv
364.004 347.034 406.213 346.883 405.88 318.526 cv
405.807 312.313 400.718 307.21 394.488 307.134 cv
cp
f
211.135 385.313 mo
209.563 379.607 203.389 376.094 197.666 377.666 cv
191.362 379.399 186.885 387.928 191.123 393.75 cv
193.867 397.516 197.27 399.62 202.033 398.977 cv
208.487 398.104 212.888 391.684 211.135 385.313 cv
cp
f
214.41 405.22 mo
208.273 399.187 197.94 402.83 191.205 406.069 cv
186.077 408.534 185.387 415.803 188.562 419.914 cv
191.811 424.125 198.821 425.133 202.622 420.867 cv
206.349 416.686 211.834 415.086 215.113 410.656 cv
216.271 409.092 215.719 406.504 214.41 405.22 cv
cp
f
245.698 397.768 mo
239.415 397.768 236.301 402.687 236.346 407.567 cv
233.719 409.184 232.073 413.054 235.923 414.951 cv
237.699 415.827 239.231 415.966 240.399 415.605 cv
241.807 416.551 243.555 417.151 245.698 417.151 cv
258.172 417.151 258.192 397.768 245.698 397.768 cv
cp
f
273.025 365.519 mo
266.249 369.482 268.363 378.766 275.082 381.265 cv
275.217 381.361 li
278.821 383.167 284.276 381.873 285.157 377.316 cv
285.255 376.607 285.429 375.918 285.679 375.248 cv
287.964 367.944 279.349 361.819 273.025 365.519 cv
cp
f
264.002 454.247 mo
263.379 453.592 262.757 452.939 262.136 452.284 cv
258.703 448.677 252.643 450.14 250.787 454.537 cv
248.707 459.478 252.369 463.656 257.186 464.233 cv
258.036 464.336 258.887 464.438 259.739 464.54 cv
265.236 465.198 267.268 457.681 264.002 454.247 cv
cp
f
300.26 454.632 mo
296.911 454.632 296.905 459.837 300.26 459.837 cv
303.61 459.837 303.613 454.632 300.26 454.632 cv
cp
f
301.217 447.278 mo
300.724 447.278 300.724 448.045 301.217 448.045 cv
301.71 448.045 301.71 447.278 301.217 447.278 cv
cp
f
419.679 134.832 mo
417.705 133.331 415.314 132.067 412.609 131.009 cv
411.276 127.5 409.677 124.137 407.464 121.152 cv
396.827 106.813 380.332 106.53 364.157 108.765 cv
360.882 109.217 358.365 110.805 356.507 112.982 cv
346.021 115.514 340.748 129.386 347.828 137.318 cv
347.889 140.282 348.836 143.338 350.451 146.023 cv
342.336 146.736 334.24 147.76 326.097 148.298 cv
324.803 148.384 323.621 148.738 322.537 149.246 cv
309.37 150.612 296.199 151.937 283 153.044 cv
279.899 153.303 277.462 154.539 275.626 156.279 cv
257.305 157.405 239.54 160.945 222.025 167.205 cv
220.203 167.856 218.811 168.864 217.725 170.052 cv
216.732 169.794 215.687 169.621 214.502 169.679 cv
197.889 170.495 179.811 180.944 167.008 192.046 cv
162.528 190.681 157.544 191.638 153.455 196.527 cv
142.599 209.511 138.768 223.458 138.074 237.891 cv
138.009 238.099 137.911 238.298 137.85 238.506 cv
136.917 241.582 137.087 244.281 137.974 246.545 cv
138.355 259.918 140.757 273.626 142.272 287.315 cv
142.526 296.161 142.709 305.188 142.675 312.249 cv
133.19 317.846 125.734 326.558 116.799 333.038 cv
109.097 338.624 101.553 344.203 94.0724 350.006 cv
93.0929 350.592 92.13 351.15 91.2033 351.655 cv
81.3918 356.989 88.0656 373.927 98.9464 370.025 cv
104.774 367.935 112.594 365.628 120.05 362.451 cv
133.408 357.912 146.527 350.971 154.95 340.604 cv
163.492 335.882 168.973 322.997 171.537 313.477 cv
177.364 291.867 181.929 263.453 167.992 244.416 cv
168.574 241.254 169.294 238.124 170.108 235.012 cv
170.705 234.303 171.269 233.509 171.747 232.533 cv
174.974 225.936 179.247 220.667 184.133 216.201 cv
185.161 215.425 186.073 214.561 187.159 213.83 cv
194.724 208.737 203.687 205.318 211.61 200.595 cv
216.177 198.964 220.859 197.512 225.618 196.222 cv
239.452 192.47 256.348 190.78 266.397 180.419 cv
275.421 179.75 284.518 179.26 293.903 178.207 cv
296.777 177.884 301.606 176.89 306.046 175.068 cv
317.592 174.199 329.127 173.161 340.644 171.993 cv
354.785 174.92 370.865 177.939 385.444 176.973 cv
385.47 177.269 385.492 177.565 385.519 177.861 cv
386.53 188.986 399.262 200.192 410.37 192.122 cv
421.913 183.738 426.442 169.452 434.649 157.938 cv
442.735 146.595 431.076 134.299 419.679 134.832 cv
cp
.529412 .407843 .317647 rgb
f
422.054 62.9835 mo
416.346 56.2662 411.184 47.9185 403.631 43.3072 cv
394.911 37.982 385.087 46.7462 387.152 55.9752 cv
388.195 60.6314 390.555 64.2154 393.311 67.774 cv
392.946 67.8057 392.584 67.835 392.221 67.8668 cv
382.206 68.7164 372.144 69.6334 362.262 71.5186 cv
346.311 74.5616 351.482 97.3282 366.022 97.9498 cv
365.973 98.0357 365.924 98.1207 365.873 98.2056 cv
375.963 98.2432 385.95 96.9991 395.985 96.1158 cv
405.04 95.3189 413.138 98.1041 422.072 96.8316 cv
427.846 96.0089 430.773 89.7506 431.285 84.73 cv
432.189 75.8663 427.52 69.4185 422.054 62.9835 cv
cp
f
330.574 68.5977 mo
331.051 68.9136 331.527 69.2286 332.003 69.5435 cv
330.934 68.2369 329.423 67.5826 327.817 67.1993 cv
326.275 58.7657 318.338 52.4888 312.18 47.168 cv
305.782 41.6387 297.24 48.4512 300.742 55.9932 cv
302.533 59.8482 304.313 63.8668 306.581 67.4703 cv
306.659 67.5958 308.236 70.2335 308.7 70.2281 cv
308.295 71.5181 304.819 73.2154 303.982 73.7296 cv
298.344 77.189 290.62 79.8057 284.881 82.0538 cv
284.855 82.064 284.824 82.0548 284.799 82.066 cv
284.759 82.0826 284.734 82.109 284.694 82.1256 cv
284.55 82.1817 284.374 82.2452 284.233 82.3023 cv
284.253 82.3184 284.276 82.335 284.296 82.3502 cv
279.441 84.775 279.295 90.4771 284.03 93.6124 cv
291.727 98.7125 303.607 94.3321 310.982 90.9166 cv
313.388 89.8023 315.821 88.3907 318.095 86.7462 cv
318.873 87.3511 319.634 87.9678 320.658 88.4 cv
333.117 93.6495 342.007 75.6778 330.574 68.5977 cv
cp
f
232.073 60.4229 mo
220.828 51.6382 204.744 66.5787 215.954 76.5416 cv
217.559 77.9649 219.569 79.4039 221.619 80.8638 cv
202.417 88.942 180.055 92.1026 165.194 106.817 cv
162.261 109.718 163.506 115.3 167.688 116.266 cv
190.693 121.579 216.799 107.344 237.383 98.2823 cv
244.265 95.252 252.369 91.8306 252.216 82.8756 cv
252.042 72.8658 238.906 65.7633 232.073 60.4229 cv
cp
f
145.535 116.215 mo
143.137 110.868 137.596 108.337 132.08 109.79 cv
127.618 110.965 125.838 117.061 129.31 120.289 cv
129.323 120.302 129.338 120.311 129.351 120.323 cv
126.948 121.521 124.393 122.503 122.084 123.706 cv
117.488 126.098 112.594 128.15 108.152 130.818 cv
100.861 135.195 93.9533 142.426 89.9445 149.921 cv
89.9728 149.925 90.0031 149.929 90.0324 149.933 cv
87.9347 154.158 91.5841 161.139 97.9777 157.955 cv
105.123 154.396 111.361 149.07 118.47 145.305 cv
126.962 140.811 133.537 138.214 140.073 131.044 cv
144.083 126.644 148.402 122.607 145.535 116.215 cv
cp
f
70.0773 159.446 mo
66.6916 155.148 59.4191 155.968 55.8644 159.446 cv
52.3048 162.928 52.3908 167.548 54.4572 171.451 cv
53.8341 172.207 53.1427 172.894 52.4289 173.571 cv
49.4093 176.435 46.255 179.127 43.3185 182.081 cv
39.1847 186.241 32.3546 190.909 32.8097 197.453 cv
33.1613 202.496 39.674 206.29 43.5724 201.951 cv
43.7482 201.876 43.8527 201.831 44.0675 201.74 cv
45.4826 200.805 46.8966 199.869 48.3117 198.935 cv
50.4318 197.534 52.5851 196.167 54.6798 194.729 cv
59.0275 191.741 63.8722 188.528 67.716 184.884 cv
75.4669 177.533 76.7492 167.914 70.0773 159.446 cv
cp
f
351.324 107.235 mo
339.509 104.378 327.327 104.383 315.232 105.309 cv
301.565 103.276 286.423 106.045 271.835 109.55 cv
271.308 109.67 270.78 109.788 270.261 109.922 cv
260.506 112.304 251.042 114.932 242.494 116.554 cv
241.638 116.717 241.006 117.118 240.477 117.601 cv
231.449 119.369 222.519 122.056 214.081 124.898 cv
189.668 125.765 166.179 134.458 142.905 141.598 cv
125.55 146.922 112.362 153.789 100.053 164.326 cv
91.799 168.636 84.2648 175.517 78.3087 181.431 cv
67.2199 192.437 58.5871 206.291 51.1349 219.927 cv
50.0314 221.944 50.9269 223.681 52.4044 224.455 cv
51.2599 228.304 50.2726 232.201 49.6164 236.169 cv
49.383 237.591 49.6125 238.832 50.0207 239.974 cv
49.7345 270.153 47.1486 305.141 66.6896 329.942 cv
66.6945 329.955 66.7003 329.97 66.7082 329.985 cv
66.7101 329.982 66.714 329.98 66.716 329.978 cv
67.1603 330.541 67.549 331.128 68.0148 331.679 cv
69.7687 333.751 71.7521 334.518 73.6681 334.463 cv
73.7023 334.592 73.7375 334.718 73.7716 334.846 cv
72.9259 336.158 72.6378 337.772 73.1154 339.553 cv
72.9523 339.576 li
73.2736 341.357 73.7091 343.102 74.1603 344.842 cv
74.1974 345.092 li
74.089 346.252 74.4328 347.206 75.0275 347.951 cv
76.6994 353.586 78.8185 359.083 80.8732 364.624 cv
83.3507 371.299 95.3986 373.483 96.7179 364.624 cv
99.1818 348.093 97.7111 332.947 93.5753 316.737 cv
90.7687 305.735 88.0773 290.294 79.3146 281.999 cv
77.5138 268.857 75.4347 255.752 72.9826 242.687 cv
73.925 236.965 74.6798 231.237 74.59 225.422 cv
74.5373 222.14 72.7003 219.957 70.3332 218.915 cv
71.8097 215.787 73.4289 212.713 75.3752 209.758 cv
79.7316 203.148 87.4699 197.705 90.8664 190.461 cv
100.357 183.291 112.395 177.044 118.839 167.146 cv
118.884 167.078 118.861 167 118.899 166.931 cv
147.326 151.32 181.614 145.169 212.442 134.315 cv
230.561 130.005 249.44 129.956 267.543 126.372 cv
268.32 126.395 269.11 126.406 269.891 126.427 cv
278.246 128.62 287.392 127.27 296.515 125.866 cv
302.036 125.333 307.394 124.411 312.474 122.931 cv
325.398 120.281 338.231 117.191 351.324 115.196 cv
355.445 114.57 355.069 108.142 351.324 107.235 cv
cp
.709804 .580392 .486275 rgb
f
42.213 170.896 mo
40.2541 162.631 37.2794 150.798 31.3439 144.391 cv
26.3634 139.015 19.3302 144.883 20.2199 150.867 cv
21.4298 158.994 23.2707 199.668 38.758 192.727 cv
46.9582 189.053 43.7316 177.305 42.213 170.896 cv
cp
f
104.196 104.56 mo
102.706 98.4376 94.5939 100.479 93.9718 105.944 cv
92.7775 116.438 87.4377 127.405 88.1593 137.969 cv
88.6935 145.793 98.3351 148.515 102.745 141.919 cv
109.821 131.331 107.002 116.101 104.196 104.56 cv
cp
f
192.602 47.6661 mo
187.879 48.9732 186.148 53.0684 184.951 57.3775 cv
183.394 62.9908 182.063 68.3873 179.995 73.8453 cv
177.826 79.5718 171.521 94.9854 183.361 94.7071 cv
188.358 94.5899 192.493 89.2169 194.836 85.3917 cv
197.842 80.4805 199.749 75.0391 200.953 69.4205 cv
202.146 63.8546 203.928 44.5338 192.602 47.6661 cv
cp
f
298.357 34.2764 mo
298.082 30.5157 292.644 28.2491 290.663 32.1929 cv
283.129 47.1929 274.984 64.1856 271.994 80.8013 cv
270.25 90.5069 283.642 97.8189 288.921 87.9371 cv
297.402 72.0694 299.643 51.9102 298.357 34.2764 cv
cp
f
383.274 31.1675 mo
372.477 42.4874 364.43 55.3853 355.397 68.0333 cv
352.222 72.4771 359.165 77.606 362.865 73.7969 cv
373.752 62.5953 384.924 52.2784 394.175 39.5787 cv
398.857 33.1568 388.633 25.5465 383.274 31.1675 cv
cp
f
280.82 203.512 mo
283.779 195.968 276.281 187.886 268.963 187.95 cv
250.406 188.11 235.878 209.32 229.448 224.94 cv
220.699 246.194 224.85 265.065 228.955 286.131 cv
225.382 301.506 259.447 312.017 258.159 288.551 cv
257.219 271.427 250.002 254.701 256.031 237.77 cv
261.185 223.299 275.447 217.202 280.82 203.512 cv
cp
f
361.577 184.754 mo
359.934 184.938 358.337 184.988 356.685 184.947 cv
356.468 184.93 356.249 184.914 356.032 184.896 cv
356.2 184.893 355.853 184.812 354.896 184.64 cv
353.808 184.308 352.688 184.045 351.633 183.605 cv
351.598 183.485 349.089 182.014 348.76 181.795 cv
338.851 175.186 327.293 188.021 332.895 197.66 cv
335.659 202.417 339.92 205.503 344.896 207.642 cv
345.604 207.945 346.318 208.227 347.03 208.514 cv
347.541 209.592 347.967 210.657 348.221 211.736 cv
350.324 220.628 364.053 222.791 368.287 214.358 cv
369.777 211.394 370.403 208.39 370.287 205.471 cv
371.179 203.426 371.906 201.278 372.608 199.234 cv
374.838 192.734 368.78 183.953 361.577 184.754 cv
cp
f
389.211 290.343 mo
387.39 283.718 380.37 279.885 373.797 281.592 cv
373.518 281.664 371.845 282.065 371.321 282.207 cv
371.043 282.169 370.678 282.11 370.446 281.99 cv
370.486 282.011 368.498 280.44 367.633 279.586 cv
364.505 276.494 362.041 272.479 359.868 268.675 cv
357.397 264.351 351.156 265.577 349.698 270.003 cv
346.685 279.15 346.366 288.637 352.385 296.722 cv
359.044 305.668 369.977 308.175 380.46 305.756 cv
387.056 304.234 390.949 296.671 389.211 290.343 cv
cp
f
330.744 220.774 mo
329.855 216.43 327.888 212.384 324.005 209.036 cv
317.312 203.265 307.779 201.681 299.503 204.77 cv
297.048 205.686 294.699 207.107 292.479 208.875 cv
290.806 208.946 289.087 209.178 287.319 209.685 cv
274.884 213.25 269.494 228.628 266.961 239.859 cv
263.736 254.154 260.76 271.778 266.155 285.776 cv
277.821 316.042 312.76 308.263 330.597 288.836 cv
347.229 270.722 353.119 236.095 330.744 220.774 cv
cp
.788235 .956863 .956863 rgb
f
402.02 199.973 mo
388.998 199.352 376.597 209.452 371.338 221.647 cv
362.385 232.798 361.704 248.135 369.195 260.369 cv
378.003 274.753 397.944 281.669 413.171 273.414 cv
426.862 265.991 437.814 246.743 436.402 231.41 cv
434.906 215.159 418.233 200.745 402.02 199.973 cv
cp
f
428.697 125.29 mo
426.791 121.012 424.319 117.146 421.885 113.154 cv
418.434 107.49 412.702 106.595 408.019 108.482 cv
403.94 103.117 395.891 104.63 391.213 108.54 cv
387.244 111.857 388.211 119.717 392.937 121.908 cv
394.698 122.725 396.409 123.635 398.133 124.529 cv
399.529 125.253 400.851 125.419 402.104 125.359 cv
405.43 131.9 405.551 140.027 406.851 147.162 cv
407.405 150.212 409.468 154.872 408.869 157.762 cv
407.914 162.372 411.212 159.233 405.403 161.183 cv
399.871 163.04 391.06 161.024 385.177 161.163 cv
376.866 161.359 368.904 160.83 360.647 159.861 cv
358.852 159.652 357.425 160.226 356.346 161.194 cv
339.658 160.703 317.702 165.224 311.748 165.656 cv
309.945 165.788 308.606 166.517 307.581 167.487 cv
289.283 161.625 268.468 168.03 249.558 176.514 cv
240.789 177.831 233.065 183.02 225.163 187.009 cv
216.603 191.334 207.93 195.338 199.156 199.152 cv
189.764 193.616 176.258 205.926 170.382 212.254 cv
166.54 216.391 163.6 220.932 161.556 225.804 cv
159.213 227.203 157.501 229.699 157.434 233.52 cv
157.377 236.59 157.264 239.978 157.205 243.5 cv
155.802 245.214 154.947 247.503 154.975 249.542 cv
155.222 267.703 157.485 286.742 155.633 304.851 cv
154.502 309.041 153.84 313.481 152.202 317.323 cv
150.28 321.821 147.63 326.139 144.304 329.766 cv
143.392 329.94 142.466 330.251 141.542 330.759 cv
137.942 332.747 135.431 335.687 132.266 338.201 cv
132.021 338.381 131.729 338.527 131.522 338.727 cv
128.641 340.888 125.38 342.7 122.361 344.62 cv
114.898 349.367 110.422 354.682 104.413 360.971 cv
100.954 364.593 105.327 370.294 109.741 367.877 cv
113.69 365.718 118.394 365.851 122.636 364.553 cv
127.093 363.19 131.701 361.258 135.885 359.237 cv
142.605 355.992 150.29 351.076 153.324 343.967 cv
159.953 340.681 165.761 335.974 169.693 329.361 cv
174.847 320.691 179.229 304.434 171.116 296.367 cv
175.078 280.588 176.802 265.672 173.473 248.259 cv
174.166 244.164 175.007 240.097 176.039 236.038 cv
176.311 234.973 176.372 233.999 176.346 233.067 cv
180.396 226.797 185.902 221.462 192.338 217.659 cv
194.524 216.367 197.418 214.34 199.688 211.988 cv
209.115 208.339 218.465 204.488 227.616 200.18 cv
233.94 197.205 241.006 194.203 246.871 189.956 cv
254.916 187.873 263.052 186.215 271.545 184.663 cv
283.44 182.489 295.891 181.305 306.731 175.902 cv
307.745 177.36 309.362 178.456 311.748 178.579 cv
320.515 179.028 364.705 187.527 374.401 176.658 cv
380.221 177.921 386.074 179.028 391.909 179.65 cv
400.651 180.582 412.152 181.808 419.969 176.832 cv
432.463 168.877 428.376 154.24 425.15 140.53 cv
429.384 137.704 431.831 132.325 428.697 125.29 cv
cp
.466667 .34902 .266667 rgb
f
422.111 56.7418 mo
420.157 50.4986 413.674 46.5035 407.209 48.2803 cv
401.212 49.9283 396.586 56.9757 398.747 63.1837 cv
399.716 65.9674 400.654 68.8004 401.668 71.5992 cv
401.451 71.9835 401.286 72.3585 400.957 72.7725 cv
397.757 76.8023 393.025 77.6754 388.267 78.8243 cv
384.343 79.7711 382.928 82.7603 383.171 85.7525 cv
378.686 85.3218 374.236 84.7872 369.71 85.2481 cv
364.907 85.7379 361.446 87.9215 357.065 89.7779 cv
354.084 91.0396 355.991 95.0845 358.558 95.2969 cv
364.232 95.7652 370.499 99.2525 376.141 100.519 cv
380.925 101.593 385.893 102.753 390.812 102.823 cv
396.344 102.904 409.456 100.068 406.831 91.483 cv
406.587 90.6807 406.17 90.0303 405.682 89.4439 cv
407.89 88.6168 409.91 87.5118 411.782 86.2198 cv
412.051 86.4136 412.279 86.6192 412.564 86.8092 cv
417.454 90.0826 423.366 86.5694 425.093 81.7125 cv
428.122 73.2003 424.667 64.9092 422.111 56.7418 cv
cp
f
319.951 62.086 mo
310.658 64.5425 306.022 75.128 305.866 83.9849 cv
305.805 87.482 308.14 90.8209 311.327 92.1036 cv
314.905 93.543 318.111 92.5987 321.032 90.2676 cv
325.755 86.5006 331.68 82.2716 333.751 75.8853 cv
336.444 67.5733 327.906 59.9835 319.951 62.086 cv
cp
f
421.19 315.146 mo
402.356 303.613 376.394 318.033 358.743 304.218 cv
352.79 299.559 350.384 290.524 341.997 289.307 cv
333.977 288.141 326.142 295.669 320.337 300.267 cv
298.694 301.71 276.322 309.747 254.655 306.024 cv
217.811 299.691 217.921 262.91 210.396 232.34 cv
208.072 222.899 196.49 221.003 189.848 226.916 cv
174.826 240.289 181.665 260.364 179.73 278.533 cv
178.893 286.406 177.342 293.37 175.28 299.747 cv
176.221 301.974 176.785 304.516 176.779 307.431 cv
176.755 319.106 171.224 330.948 164.616 340.357 cv
160.522 346.189 155.94 350.756 149.795 354.482 cv
144.562 357.656 138.798 359.606 133.795 363.207 cv
131.714 364.704 129.359 365.538 126.919 365.838 cv
124.826 368.191 122.731 370.595 120.635 373.118 cv
116.343 378.29 121.581 384.748 127.596 382.138 cv
153.044 371.095 169.777 350.07 185.193 327.622 cv
192.503 316.974 197.717 306.997 201.045 294.959 cv
207.138 309.648 216.272 321.985 231.537 326.96 cv
255.843 334.881 303.034 331.131 324.717 314.309 cv
324.927 314.276 325.095 314.322 325.312 314.274 cv
328.206 313.633 336.05 310.345 339.161 310.629 cv
342.891 308.797 342.889 309.521 339.152 312.802 cv
343.017 317.597 li
346.352 322.681 352.017 325.02 357.554 326.702 cv
374.041 331.714 392.982 329.13 406.968 339.477 cv
421.306 350.083 436.918 324.776 421.19 315.146 cv
cp
.270588 .376471 .376471 rgb
f
464.437 396.989 mo
464.11 395.767 463.607 394.72 462.995 393.805 cv
461.751 377.4 453.264 362.19 434.703 352.554 cv
392.335 330.556 335.923 383.574 311.421 413.091 cv
307.487 417.829 312.56 426.181 318.487 422.253 cv
343.899 405.416 367.545 372.82 400.333 371.917 cv
422.809 371.299 441.027 385.053 435.08 409.275 cv
432.226 420.909 428.535 428.033 426.926 437.775 cv
418.812 449.991 406.783 458.837 394.251 466.825 cv
373.466 480.076 346.135 486.737 327.757 502.463 cv
325.852 504.095 326.992 507.232 329.184 507.863 cv
359.038 516.462 399.802 494.333 424.021 478.218 cv
450.549 460.564 473.486 430.859 464.437 396.989 cv
cp
f
442.754 435.542 mo
425.933 473.836 386.194 493.452 347.259 501.18 cv
287.422 513.055 210.821 511.582 160.038 473.116 cv
160.157 469.998 158.971 466.802 155.795 464.273 cv
131.131 444.634 114.223 419.926 99.7765 393.054 cv
127.706 381.712 161.333 370.807 181.549 350.123 cv
200.403 330.832 194.946 311.231 188.569 288.001 cv
180.381 258.171 189.685 236.872 208.721 221.882 cv
204.86 247.359 210.686 279.905 218.096 292.673 cv
237.115 325.444 284.685 348.582 315.251 317.392 cv
315.486 317.152 315.631 316.904 315.838 316.661 cv
323.195 312.483 330.135 306.959 336.077 300.789 cv
343.027 315.677 356.442 326.752 373.801 328.037 cv
385.298 328.887 396.279 324.74 404.919 317.657 cv
405.304 318.893 405.892 320.017 406.717 320.904 cv
411.588 326.146 416.368 331.67 420.892 337.407 cv
395.866 335.67 368.968 351.63 347.811 362.682 cv
320.295 377.054 296.174 395.637 279.993 422.489 cv
272.444 435.015 290.444 449.325 298.059 436.686 cv
310.949 415.293 328.757 399.659 350.396 387.407 cv
366.613 378.224 404.068 354.752 422.787 360.512 cv
427.622 362.001 431.853 360.431 434.778 357.597 cv
448.546 381.185 455.002 407.661 442.754 435.542 cv
cp
85.4425 364.518 mo
69.8654 331.844 54.5285 298.938 54.1896 262.631 cv
56.8097 259.782 58.1173 255.725 56.4543 251.062 cv
55.6007 248.669 54.7492 246.278 53.8957 243.886 cv
53.2726 242.139 52.2052 240.862 50.9894 239.792 cv
45.0529 174.83 183.137 130.32 230.874 118.682 cv
258.41 111.968 286.741 107.98 315.074 106.97 cv
334.273 106.287 353.481 107.071 372.562 109.285 cv
380.279 110.181 405.183 110.378 413.748 115.115 cv
414.423 116.753 415.422 118.228 416.642 119.465 cv
419.997 136.829 424.187 155.68 427.48 174.851 cv
354.279 157.814 263.529 160.351 199.087 202.905 cv
176.523 217.806 157.707 240.116 159.702 268.732 cv
161.395 292.992 178.112 316.552 157.614 339.95 cv
145.165 354.159 111.776 364.337 89.4386 372.732 cv
88.1046 369.997 86.758 367.277 85.4425 364.518 cv
cp
37.1027 202.651 mo
37.6076 193.452 37.3781 184.226 36.0695 174.952 cv
34.5861 164.431 30.0959 153.795 26.7326 143.193 cv
39.3664 151.698 51.089 161.294 62.1349 172.05 cv
51.7531 181.339 43.0734 191.524 37.1027 202.651 cv
cp
136.62 126.993 mo
123.193 132.899 109.483 139.696 96.5002 147.381 cv
99.5705 133.209 100.692 118.775 100.918 104.08 cv
113.304 111.033 125.151 118.639 136.62 126.993 cv
cp
183.361 76.2056 mo
186.848 63.6436 185.817 51.2286 197.094 51.1011 cv
205.493 51.0064 228.696 76.4307 243.5 92.5074 cv
225.344 96.1544 207.399 100.883 189.811 106.741 cv
184.733 108.433 179.164 110.358 173.319 112.46 cv
176.663 100.375 180.006 88.2891 183.361 76.2056 cv
cp
294.059 33.192 mo
306.596 48.9136 317.153 65.587 326.285 83.9224 cv
326.105 83.9239 325.903 83.9273 325.726 83.9283 cv
308.952 84.0357 292.211 85.1802 275.591 87.2554 cv
280.928 68.897 287.067 50.9263 294.059 33.192 cv
cp
389.467 32.8384 mo
404.897 50.0801 416.2 69.3907 423.612 91.1807 cv
421.891 91.3868 420.211 91.8912 418.743 92.7398 cv
400.787 85.1758 375.57 83.7398 353.796 83.6519 cv
363.13 64.2696 374.465 47.9298 389.467 32.8384 cv
cp
354.399 273.906 mo
361.348 289.241 376.142 297.247 391.682 298.122 cv
379.97 308.711 359.813 306.8 355.158 287.581 cv
354.431 284.578 352.811 282.38 350.784 280.849 cv
352.074 278.551 353.338 276.248 354.399 273.906 cv
cp
340.936 198.627 mo
337.521 195.273 333.672 192.582 329.61 190.426 cv
344.523 189.979 359.194 190.277 372.846 191.103 cv
365.226 197.566 359.32 207.567 355.398 218.725 cv
352.095 211.712 347.372 204.947 340.936 198.627 cv
cp
280.343 225.432 mo
284.397 225.544 288.411 223.602 290.43 218.693 cv
301.248 192.395 328.631 215.117 335.121 230.848 cv
343.245 250.536 334.464 267.533 321.51 282.896 cv
312.784 293.244 294.802 310.936 279.109 295.264 cv
272.902 289.067 270.719 276.621 269.899 268.482 cv
268.34 253.04 272.451 238.355 280.343 225.432 cv
cp
255.159 299.915 mo
247.794 294.262 241.596 287.23 238.111 281.212 cv
232.805 272.046 229.962 261.993 229.433 251.357 cv
229.223 247.158 231.937 209.908 238.898 211.024 cv
246.171 212.19 250.596 207.128 251.405 201.466 cv
260.276 198.884 269.63 196.766 279.329 195.145 cv
277.697 196.645 276.161 198.29 274.763 200.122 cv
271.894 200.217 269.023 201.525 266.753 204.559 cv
246.919 231.05 239.07 269.697 255.159 299.915 cv
cp
422.355 237.903 mo
423.73 253.752 416.533 272.005 399.266 275.075 cv
371.632 279.988 368.828 247.917 377.481 225.212 cv
383.215 226.082 389.635 223.249 390.874 215.884 cv
392.965 203.451 407.86 208.949 413.347 215.135 cv
418.803 221.281 421.652 229.814 422.355 237.903 cv
cp
431.031 313.705 mo
473.679 258.268 450.69 178.143 438.766 113.231 cv
445.594 113.788 452.465 109.389 450.292 101.031 cv
440.747 64.3052 423.726 34.4957 396.974 7.61677 cv
393.692 4.31794 386.351 4.3819 382.94 7.49323 cv
365.516 23.3829 351.378 40.7193 340.031 60.5069 cv
328.78 40.3653 315.56 21.8526 299.742 4.35944 cv
294.107 -1.87445 283.645 -1.71966 280.031 6.75641 cv
270.765 28.4952 262.897 50.4175 256.068 72.8443 cv
236.664 51.6348 208.195 19.4883 186.501 24.0884 cv
164.1 28.8375 155.629 78.6778 149.873 108.448 cv
132.207 95.6085 113.71 84.2681 94.006 74.4678 cv
85.3722 70.1734 77.9328 78.4888 78.0793 86.5347 cv
78.4836 108.729 78.175 129.595 72.1769 150.203 cv
55.0539 134.58 36.5871 121.223 15.9201 109.8 cv
9.91617 106.482 .0499573 111.679 .00112915 118.785 cv
-.0984802 134.34 4.74234 145.314 9.13687 160.38 cv
15.2843 181.457 15.4552 202.042 11.4103 223.61 cv
9.43375 234.145 20.8146 238.632 28.2824 234.815 cv
28.1037 242.042 29.0568 249.568 31.3478 257.41 cv
30.4806 298.884 46.3048 335.74 64.2082 373.293 cv
66.6027 378.315 69.0461 383.285 71.5226 388.223 cv
71.7209 391.887 73.506 395.474 76.3234 397.623 cv
89.255 422.275 103.906 445.447 123.203 465.384 cv
122.854 467.935 123.621 470.688 126.084 473.268 cv
188.516 538.685 307.428 545.293 388.329 513.183 cv
424.902 498.668 457.286 470.19 468.52 431.483 cv
481.352 387.262 459.436 346.282 431.031 313.705 cv
cp
.129412 .12549 .129412 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (head.eps)
%%CreationDate: 2/19/2018 5:27 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQBLXGp`="!WIlG7=[41PqsU>+u6N`"jYYnKk*'jnr*`^d%K#;M.8Hs@'a(gr;(i6kDa8K4B9@YmBME]/65c@bfI<,pKRXX
%-\jWF]`.'TlTZEHr6$a:cD9:BdhI!\g"jt[S=b6"PFqd)QbU66IXTn?$-qPaE&X8#OW2O#m$=&`h9@B"\FoLV`=Lk_^OGq=gG^eR
%^]4<.k1,s1hu@/0r9Nt+]3df&PC2qKp\XhhYMT1gGBifY`BVO/qd93'0/$\g?f&HopA)=+\=;.8^?3]?n@dU'"5nCsa01!gX`Su6
%s6cH%:<(<85Pa^(*Vr8u0AB;&l*pD:HMRNO\'NsFI.R2ar!\q[Ii3@lYO9/PXrk_m^XsE<5Eub'Vu&\Bs5DKiIHI\<-,71kfa^CI
%?b>3CLS!s[=-*YihEL%5Zn8\\[%A<8CR8?,L>VCDm:LdlQX??R%'(1tBfCD7f]F-seH=1i;bdrepq-EA^O,YOh*'*2H[ciVL1-\A
%OrW+D=1M2RK/ZpTEJ;V_$?G!H8\;sr]<k+q'qk'FP4Cd'kjO"KH2j4<m/H>Lo5F'SjqHUdIJ;:8s!9$Q7semDG<>9;>r$L#r3no'
%\psSfY@##-4UpaNH:kr$o?I4afn23.jjeFDHaa1V5@<rmkAUBBs%X^3c)Vq*8AEe/;u,eKJ,&_=ci8;%O>QbV^\R<sp$^c82pPN+
%3Vtnuj3@p(LQprWFQ[j[QAq61Q4oh,cIh\qSpMM"@pu2(N/0k!;P<\ADdWM.jm-8!(Nr#MU<S5dGAgi;e)34>h4jphke!\g:?=Q5
%>.3AF]DL2k'uk]Nr,mc,e(q4Bb0Tk=T7?Y0&$MV?`"j98HeB!.%tYV$:X@o]`u3VkbA$pumdShPpYX/lPC,BGs$OU%.H1<eZ1L)4
%T?cCokO>HlqW[+Yg\!H**/FRa<sZ;e"C)_Zj\c:W$.fIH"oOu*Dbg\+V1d%])udlha!32u*c^N9Lej%$>][I6e&s$?hL<#nK$-T$
%dRibhF[l4$r=l`,c^g9SnH5+d?2,M.@9mHPqAC'&s)AJ`L&\^WZ5n6IeqO.o(D_`)0pHRA%ZNp9J$'g,TH!46;ftlY#.P(7_uI7/
%E^=%m,u.cj>5(q($NKFo\p@Y4:1%Y3cfaB4;3afH$^Y:]p`Dlf60cVcZ[?`e"d`YWjeR$7oOb0:s5Pa`:uMESkK0J,s5Pl9&c_0*
%._+^)l4!1+!XkNGJY[=.3^qkO>c*ulp-r,e$fL)gCAMH]],[;H;SI)Z(0FrY$fp]dEr?hj`;d>@@3'.5IF4PS5H_g(jn8c;"d='*
%oGJ##"e5tI'Y*2a'kA",$BgX[e_SjQl/(`iFn7TgE\M'Q3dk76T!-&t!;a6TjiK$I.V.kulNZSb(Ode]2sf.CjS"2=%F<1/2*=]+
%00%<$Ogd8_.[]*g]BjZ%%Etef-Z<p-;PmZq>b8#!l`J0#r5-cR.S]oJ<^1=`okU/ln+K\pjEC""X8UPO)"m@k;nnVes'D#foHf"S
%p\IbaWF(F5rnW%gQe[$NBik22?g"cph1"Y@<512Z`u3ld4^\0"r1uW_7QV])IlYXF`EO97,!fI/f[P/W/=/ePp<2Q.S6gcmICrf9
%(aq"%e(]hl>kX*Tc!+!#UIU(ghmd^TVrOQCP^LARk"u?&\'3qjS]]mAi.&:CJ&QYm+3)cYiDfD2/m$s*F?8@/4SeMO-g1355^lq[
%4Et)e':maZG5fg-gY_$e/ANiS<pf.Kln?pkpL,p0%\MJ<S!2/oM0dkK*9u6<dV5/\I7q26(I^K>[f>rms#WFcPBI(uXgs\@SG(tX
%*WfA)NYcd8^5'6]jfg]#N51(DTA3]0lILu^/^m.s_%^]p)\3`iK8WtSj"VV0m0Yri"*?udX6pHKp'[<WOP:_W*NSW^Q](Vr%O4eY
%@YhkDs)o<(*i!3\j,2q!ThIEF4ADO9IKeGMg`)9$*4P8i^iu?#bVjdX>/'UZPtQo_VVKZsHU"X!==2?m?D"GaJZBbVV^EG94HKqG
%#FFFs50Sd>&@lKX?0jQe*08m#^sY&^)g'J-[i=Hs^*-n/"`SbTdkE*qh9Vo+>f`2DoK\Zr:6omabmE1S,ApZcc"09Y>`$"!nj/mj
%$g'DskC]PX3<:D:V\^2Yk;Dho8Lmd(Z?jUMm?pK[>WR$eG[:>,(@&,k]]Zeur$4t>5fk"2KTcIC)N%NuL\8&&DXBn(F62JnFh0$-
%+^kMs!e]k_gOX['mhMZFGM0HhblmXFVLiB/o]ZNY<r4ps3'HNd30P)s.=gPZ%c`5cIe6H-N&1@3a^mpqDB60o;4NU6"h(mJ0!B75
%\#b#7%W8\\jjN?3Lc1ueq/14T_V[,C.gFm,%3P36O,>^Jmq]oS:EYpi"1Ak2EhJ'_>AhJbE!`FGVr&"TBNV]RNJd1pFBB3u][KqY
%=17u1It-bXNSC]P/8!g&-SmHuDW`OK<7+MqCBV9:G(Tc6"qLP05:a"m\cdtrkO@*8hpK#%<VPQkj(4VC29'i9s01r&]"NWVEg^'3
%Gtlae9^$[&[%L:Sq2fg7OFX7sq$,Kart$YWEubA$D$YoKIAd(5.pD]B\%lN9@R=Wq=T*+srNpJa*+>E/&tkeOHZ&__b^7;.e[]H3
%%UtEAj3M$5&cM#\R8ui(4>)+6ASXM]B=M24eXNkgPt\7V'MHObcub5aL^-=[:JuIrb!-3p7A7rt76qPA:0WHJIJ#BPO$U4bB#!@Y
%k=#dt:'On)polrb/8N@h[fC`,_mZ0=#t@]Y:*<GN5*"OU]'Jd9PUcf\gn=75"B4`s#0b*]qLaEfR`U9+WV026Y@hCh);L\YemcMh
%,-lGIIOhbCd1&n7!lcg0i^$U*H]^.c"\!59.b!97\-hojYVluk_41ELe.qK*q"=fF)h)7I>^J]/[_c5_^=R;6p.6MWTO.eVLCOei
%m11fX#GYMbY7[a8#g,pXa>YbX+(SSP4!u>>2eX-`RR^)8qp*l3b&r[lb*,VThN?r;S5:S1^W1Q;63Z):X/re"n>U*i)mjLUZBraG
%1^;lCDBEEog7HHjVW^O%1&b/<_<+8d;Jpo(m>@M&<-u2tRhB=K@F$r''n?-e[@*%l'nQ8bNp_/Xp-rDmI]eCtEc;mflU1h-;>b2$
%FqiJ,el^%:\A`YSD8a+F^+"iNn^7'VX+S$4Y%tEq)`_D,PVU6e\tbqucqbsd+Jmc\ZD'9"EH'mj(iUFmbM)7lpCeQM8*9]$q<:aN
%9'FPg;5#OZQqt.34Fh?ce/c7^=leW#S&P]9Fii.1.:U?S#VmI\+;Ut_Xodp9+'a:t%ku%9l-ZV[!h9@;f2@^!H']Q`op1An1.sNj
%<'D2SY)i!*N3gKL0Ri>m;%Y=np;W+ETr=<(ZGEs%0")<)U0k1`^)t@3@U">d<<[9?Koeg^s2:`)3c-[2b_L4=1%R":MFM:B]fs)<
%J?1Nn'/4=q]>M-orSd;8>F(IE[@;WTJrb=eOf3nalDSf8.e<W`h3Mnqi`a)^4R.Z3p!fTm<M?.;%$p.Qc<t/JiaBoV.aHimQ.2\/
%gB[Gn_7eI22drZZ5k[C?[P((\GoraP$Aa7[^A4S]fB=tIYL*1&g6O`?gbB:B,R1rFE39u)%.#nbZ\\T&FDu3Zfm!l/Y&?7QZM&_i
%b[Z'O<<[j"_/3X(J[Q`\Q4,WS/2o78Y"V%(?2)^lI!ZP"g(*`ZhXLkA!HjSpDLD=YOtPWBFT>IK>FsbF1dYCrTDipH/IO.c3mbG^
%%V:@S[T5Vsa;tfVH>i76cUn*@nmjg65M0MqfaK%q@F#8b*[&sLSN""HaK;N8omN4'=,'FBklZ]_<&*q>ZVIO5T%*`DY?h%I]A*3b
%K8hGkeW05Hom]6P_E-7iEStgkCT/Om!-qi3rFHK?k1ih-\bMi832YQ:bhL=^JjS\\0!;sq\a'i^\KR3?p%_fZ6RCI%3"`d4:B#b5
%WW-e'+QI;Y>e0dd3mo,8%I$3N(uI]IXIrh;KA0oK6Pks(`m^9BIP/BjXlC!>(mZ1JUh\9rU/<r$X^1.I3WNfc2@gtq[4]4FEGb'-
%3],sYX9Z>7[hQ;If*B95).:*gPKq3N+S^8hjI+!2F551pf?2/A:"T:"F$KF4Rdo>r4OqPnSu2JcEg(m@E!6NTXA")V!g^-fom/Jl
%Vtq`0Qh\I%,7^n)Xl\KdD-&5TL.-4"7a`:%[J[tlbJA!a)eCdIl#0kip![CdpnC6cjgEDb)LEb6D/#+7d.Z4.N=:3CkCH@SjFGWf
%+!*bLl"N3G0E#&*J>In6i;!`?8gN*D#L[<c>=.QiLBf&/6b,?=#K'!*2d7D$J#UH'oGH.59uuM)^%5;aXL\5l^#JDZPiaNDKM_Ld
%V61j&=P^2J%@R8*p5"[;S,GcIjY@>)2+Sj,i>X4S4e$ofc0OA]V?kUj1(#BgHU(V]A/Z?kqH*U1R?]Kqk&QGQqX^.Ta4#i.*QG4B
%W!(A(OV";+q3[#N6_!*6mE_YeKdq\rqDna&]t4tV[W+3P:4AC$*B)qR134pIEf3M+g2(lbrM_p&6"1fMp7O:*\ji)=Fk@-EkL8"Y
%NOB;kGfW(JT#,EW05mFRp5"]KH97WS\a2[q0./R?c?I41;R?<mjn-/Y\su>u42oT]*JF(sa3dg''epa:%qj.,"p&"4`D)T]iTq^7
%[3?Fc[S4^r<,;"$5OKO?&D2=\Y"p<Yd+=%.SbJITiRf7f.LTj9<t7,\oX]REn+PK$-C<tHhF=#Y5,3Bf'Q(*!l0/5E8InouWr=3_
%,fJ[,F!YE0NK/E4itY(4OQU^\j;Sg#4:oYdR,u[_0`/73IdQC_T\[<jUp:VaeR:aeCnu>5Hjh(cOo;A,&!%)tmbIP8)<o+Yq>\+P
%F4MTelS9CaG=t>b6ZR]l'*EZ0UA[\-Z.^h]#LstI8;1d@U$#D%X)fbAg-<hc7A`PU`7fu'LD<s:6qnlFXW8ib6l5qn-'8+EZAE@E
%g+p)jZ?=]I;h*+IGTQ\IB\@`#4D74_c4E*\_V:IkopV':iWq@Z7Aqr=6[s.IK&KRLW=bc2Lh'/(aY8bt,SAunAmM_kKS5AjKt\VY
%'kW_2=1!jLHW2[<m1\NhYI5YMV:M8_#FCM:dP@(%:mr/HND_:%;ZfU0LKM:/o/LZe6K@J`G0.]p)<=/`6VjXq;:tDU#<q22Vj5GB
%;YVb+WJBuDb8=>u*[cH'S\L=<DLIQM^NT$t"OA[k[tau<)k/Y5DTEA"1TBM9>*C?cL>Nq?2?(7*V`jeNe@;aVpQa9bJ\H:Q'&I_=
%Br4s4\!`K<1AKtMUmofO_r$Yrgn:1[;f?;Ti0C@P\(f[tVEnj3&tPUjL-!C/m@^mUK@S;Ih@Anh&G/RW1$XJOn?,+6'l@YSXrEZ1
%29.o0:uppE_K$REN@O`>b4K=^\+\c!D9+'DmK.OEohNU'[!b,4VHlVhPo/58eg6cu;h%9JFm#f>onZPf,_sIuR=RRA1DB(TX^Wl)
%3W2<9lZ,tfPpq,D+T5V`*D_<OQPJn1>2uanRAaLMq''tRhme*p7Q%^k3ASdB"2RrO8("95G(Vb<ZD?hJDG(ps;V^M_6jF]/\(ANA
%\LsY9I`ICodTl35mF'Oe2K.DTNbfTLrEa[nHtnS<Y)P&Ak*jHS*QQsPeB`h1^RC`5s,Q7r!F56%L1QV(0tPQc(!"mAMF><dV,^Q+
%B7mq7IaWo=(+KDXcTBs.P(u*3ZKmSLKZ$@aI.O(a=WMLpVKmR#Y%Z%n<K'g3gGShlfTU)/E@t'pNiAPd(ANiAg&_(i9R_Kget2Ru
%aJ?sE270K"Nh-/5ddKolZV<KQOAgP*-j*gD#?Rsu32Cpg_^?Dor'N^')%CA"^7\ee]+o83BMt7G\g@qIJVkutj9#:#3tH(c9/d^:
%9chmn#7QPN)qmd3*!!'&BI-O-,Ka6pjK"c:dq*"B12"qThnZ:WDf$nu=FQeObK5"=<Q9Y8\"1O3E'#qWOA4N>i`T;ejU))N/lVI.
%9_$nZe=/\WjDW-MK-i`8WIdfY[qYVjaI7m7GSt/AG(,E%:@V!WN[O`f&<,+V0:/JMamRjge_:K;(:hG_IcB,ZP@^6RJ8Xo-/$a<#
%[r5WbrDY8i]k#Y"7BpP["*9o#Wud%aY.[/#-.eF]%LX1oK9h^[5t^H4:8<0p<f;jkeubNmh?6riXd2-!m(C2Y+/1;jVk:AReMEA[
%KJ"\uPO#BP8$&N7Q'H7OXmMKn4ak47<<U'Zrb]E7*b@Bp/&VAkUhKm*UW`mQH<aC[mu*`MMs#4li<0")Yf18/BDUP_N^6TV8F'2,
%(m.U%gj.KZV2r^%"YMaEbViR^k]q"VXgaX>'aJ4)W6>Uj5V#+-5r5JkaO6+:)H!Y+2d49Wp=1=S@50"\VBS>B*nR0"8#A(*[j*q.
%?>mkb<hXWC<VZs7keFs2g]lDq6OHn,eXlN::o4OD'hR_"Xf[?m,[?[*X`S/8kUH-+1lP9&icl@lPdtBnW`<o)=g+bu^(!R(.SX3:
%h94<aN<TSmaAYl[DfD7E!PaBUiH!K(2pPj$a//;7g:%Pf$?.%_L+A]GKD1QGb##%OYQaV#fW7<cGmr.tX5-!a?rIB?!\=J^,PSqd
%#FZL)F&ajAV\868p(&W!CS9M[W82JgU^I$\P>@r'[.,qPUo#_XF=%($rON]'mQR`lSQ9*S<M&p78,_<PM&j3sWo[b#Q8#UgZu<A8
%S7*i1cCK3!%;"jn>QaW6,1gcDP1f6q\_H2Qh<#KC%q`m5dJ0,a@@M4A5Dca[\Y5U-M0C5p)rDm=XRK]SH&_O=)!5XQk3h:;c8N][
%?W!:_TKW<+-e#jX[=]s@4$`Rd$S+!!Bfj*&oL<7YiJ;T)X8Ih`d-l;lbc[%F0^ZOE&;3(j=OfXj:OLCnCp2%GP@T4B(77#7AZN86
%@`5MB>>TMOTQMT/H=73AF$"[5MEM[+05Ib]V9nfT_o`Vgc.*.l=166k"C:_Ld-B3>KR"-j!Ua6ak1-R9m4SlO\b^@1q8kM4(XFM0
%9,3l,o1@KGhVV977RjP4fekIb-MtU)C3XGnMLMa/'^>^f?usKP'DhQJgi6\E4R^-0h-BDtIJSpr2lZfLmIk;SZ,&Hrl$7.@c*dF<
%GUq[Y@(>l?=.m0S\hDM(#*c<Hag[<m]r'lAE3CqneD"#6npp3-2+tMYKWk:=jOZ03m3)ZR`8iu^0)!q(fe9dj352rp*B,"'mnlL+
%qUo)oli(cm3B&k)\ok*dC]q[f_K!Ym=b4,9aS,\g/So5mjt!I_B!Lf:2f@kFBt)'6D*^V*D[RpO5^2#'lr[D[**?[s\*8(IHck)g
%_9\'["*o.8\^7di'?JeS>?NI9T=Eal_W.:<qZitNOoDMVmM92jF"5JCC;\g\FV8Q>R'k=uCNHt-rh6I+TcWq!l-)>,o+!_FE%?,8
%"4a=,K"5+2X;/.bPAqQ*\H,ZPD@Fiqe\LQ`\Tl\b1;ceSoerShf!]ZjeIA%d"EOamWeddS2cYEF-+JnA<,(1bj!Mf2ZjRo,n:)4C
%mD\R["gsuM+g["LAEl",TA=^_9hi^5\!+=)g6W_4@bC@il*oO+PanNS1[7o0d:3n`E5Oc11Z7f!P!uZ6b@g.89R0q>&n8^-Z*5<Z
%[J%3"F+1!3f_#'62t6A+qK-$-Cj!3WV;q9q)[EkOfnRY1=nFFklQ0BmUMJK9JV5$AX@6-m:YH:RXm;N:jmZ*/'gqe!L:SG/4[&[L
%E)EUSD5UW%kU5QFhr(UPq:FYrDt-F4][K4)Gk'nM2m;*9.=^(Ni+HEQ^\d!%BDNqcG's8_DrcY>YOPeUB4(SMI^XY&jf9Ka_nUQq
%k(iDSq>-.jSpg.XrASZoE529gpFkC:H2I/^h1)d.bocq_r:.,L:\h/^h='2aIj&=Cht<GMk:aUIfcpT*?9Ndb^XH!??N+)V53;dm
%r?'q0rO*0.^$"!3hS4C.>rSuopQQ9)I.dF1o=$f1:^?pKb9,i0kH[m#86gE>mN8&Xk5F''^QWNn.(j.LrW<sY+$J^_^O#_PC'aMr
%J,AXeDr1IL%d_`H+8ERC2fJ0Qs5j6b&\n2*qfa^m]H/m'Idj:C5(E=ih;Qo_lYjM@]:aY^*QG6thc!R)I/`E]b<N[grnX2R^=XI_
%rp]lYGJALrk#EFMj7E,Cr\K"V4.l)jYQ"Cc+5XYVq>Ieq0n%B7Z99jJ]Xn..YM[+,Ii@t<V)N="s5p`Wch/dY"mZ?YhnIQdhJ;ib
%[SNrJD*:HSr/^K7Y?l0\[[o4&<1fAds#5<t3TTcj0*QW>&?#i;q<BWZKc'aQjW>O0<,D.J?bZM/k5Eg@0AkSEgjJ_\GBb"[m]/Q:
%s6cJG;m-%u%I(VCNn/9QTE"gt?=r?UiH9Xlhn=I;btI#]^CV1Pr#=TuDg"YHo,dQ'rr0;fB"NOOmG..!c*K)&l.Hm%SZ"Ni3rESV
%MKma<_&njq$\.^B78)*8nB59RId![TEoF\.ak)<WT4j=(1:o:MhQ3Q+m)g0W1;kf+Yd6DUmE@Cq*5"`+l]3%JnGPl%`.*r,plD#e
%-^f_7ic&WD>Cc,G+Fa.(g[AJ)s39sjDkFfD'DU_$B*>q_E]++!k'Sl&j0t8C[J5`2/@.,8Q`sTT#sqRZ$uRPVoD^rM@NY;Mg:VWV
%X&W3K=kY;Fd[kB.>#GpNB21)4A>DrCGr^_q,p+[X$)2e"`P`-OC/YhNN$6Ko72%<%:=9V<L'S1EYiWbB>d2XMR)7o;da%h;mH>'e
%r<A1@d_)28?&[+Dn7KC*43pE21=\D0nq]<aK%W`%o/'82im,tImO1eqj-!WB74/Va7<2F0^5\?DEKe)?6"`@6UU5Z\]p2#ur<eb\
%<ee&CY;S]_f7[`gjt,mFm3!?kOA1j;$V3["_(`%@aCB1A1"/SFGreMYb4f>u91s)Z[(th%3B*jsGkT,VbL;T1RG)KOP>`P%/ltcD
%*A7-4mEG#T+B!Y0jo;*_rS\mVqa3EcJKCOBIgA#gK9M$A_1[s(Fd@38L<B`S6l-/_*!%a0[D39G-XEO="FcBZE$<"b^k*+#(fDd!
%ih9PH"I>(r%YU`C?g]3)&)euh*lfYT-1D'D>:+p,ZY2[<J[A?DC$`O?,i=OX+6EM.^]A*Sr)k"0SDk5N>7sIh92fLdb4bqcYAb?_
%/qZD9@'`*Gi6u63]OV;e\%l]<S`pf;4Yi`Dp^"0JLZrV%JZg2XG;*Y1(akE6jLEJFDtik/D+Ad_E"^roB3A9(&+eIMh?h%MJmg$V
%QM!7@Fd-/kL5YD_'>.U]02DY87^+r379ae!(HF,R#E)E3;j+hYPBM!;Ma5.!J(e647]\jK'I_ZC9Uu@\N1f)[>8?7=nHu[fJA4*)
%fu,"jm)&5QZp,R+Vj!&fkiC$\/Y&StTDeS15"X5,MkH.H!eA02;%_/HQUBA"QZI!kT$G7V!mkmH!$VEl/3r<.BsLV<)h;fZ^]tuE
%&KEP!6p_,^i!?b4Duq_Bp4\#Q^@niM#6O^XjRNAR-Mb#:LRCOF0STWnMdQVD:R8KVZq#Qq2GU,p0LRaA5Z"U2!WirM4FkLu+K>K[
%cTl2^0+d"%:%h(;6#JP<HS7csNuP=jda#l@?G",X&5"=*0MD$5-u]a'"ADAs"#laSmjIJc"=bek;)j=NO&01)%h;.=$&b*Z_PGm_
%iLm'++_;C'>`VSJQDTnb/CB>=Ju>j5@>dG$YlQ!:QlmH*gP%D7T$g!c#ep'H\0[&8#g<TZNK"T@E?p^=#YTD!W2h(."0mF8Su<]t
%:B2ksUW#M>8/R@4&SJlr8;BGAL^<d,n.?9KT2VleME2BA6o&j,"$D].S[i-^]H6c["t0>&$@`3\HPe;1fYaC-**,TU@3m0+9_Qi#
%iNY_FXUs1'A:_lE/i.%(dh,,1$;Bet80D`1D4LiVXME4/0Qe.=3=;#<jfs^p4il4#!g-kY':B;3bTSd/GS$iANbBbD0k;bHGo@OB
%T'R^P43:sQ,V+BVEm.tuQq/lbJ:5L4A[fH;p9GPDR0J6R*#V4S(.UA&0F9Fg5j"`@@3S?(OW!N-"sVp'=p5U-iT-L4PC43>!lYe^
%<fQTbLa4@!fE4R*-&X$)"VRR3M23&]8.JcBJM?)i-t4TXW;*'\a$R&KB9C)B;<&qc%RD=j$hABD_-[A^?',5571A7HF]A_&'cCsl
%7)1D%s!%bHU&-&=nOEBRr+TbB#1H]]#8@H,98$m_2!GC5n"b#FGh4WsV@F5%A^kt,"anu$n#6<b_s>q#^V0YZpSZf#?%j3$fe:8?
%U'q`-`/8s#Kk_pMr1hVI,;R+eoF"R6;5c82KNS:+$*]u#X:PLc%g&J<OV`rVY88l.U*;jNU<I":F?sXP_D@FHc6T'>Z3/4F&5/,,
%RD^hC,T]Jdc\;<)Z53/7bdT:_T'7#VlSGLjA<)n3,jnW'S=in0F!`\L-$2cEPh7Fq;h>f9fkZ8E^,T)]a>QWr$ScJbSD0ks0^l04
%m3Vg@YF=3^o8VnQ7P]:jKps[NDDL4Rc^#)W1?-cd:/>RZifgNlHM]haXXcHg`X#:Ye2dq:3=B,\7'C`(OX"Et#_N1qZ.))aWQS/k
%g-ljK'35o?@>(?\OIn:nER[T)Kg(B?=hKB#[nr_Z:lmc&hC-A5UcAg^%Ri6`ejWOo'[R3[Bk#bhMI\2uWAmq4Ytbk*.NgS5O@?EQ
%;[9TV<eN2oKs=+DHBG;9e-Tdb/>/[WCHM3rX9`[s.(W,QV(`pDZdc`nEt>X'ebiDlFefK1<f9ak95?<Bnt%Erggn>nY'Ajtj:S$^
%,pRluYQ#Re5"8C1HEmgD6bA%H_fX>LJb2@+6(oZ4K]kj$:q/BY(==msLteMAb<i03MPHlN3)`]@k_Z6k-7a^;%D5D4$;Kcab+=R^
%R+8k@MQ40Y<Reqe>?3I7oT\HBPe9UmPe*dre-lkIb#Hne-qYHn^f9Ej6>*H8baQrg'M%8`Ja/29B17A0g5>H3S)Dbodd>U_.N.cF
%H9L&$e$R/ph?UI7,Q:o,q!V[A27]\"^p2/6\,rXtd^-V8"0hB(Gd5?iUht1MDMe@EUI\'NiN,j8c\O4#\7:enCt?g^;EDln7<0$c
%%"p2<XTO_+4*p'\miXms!Rq[(U&<uWXZ'-[JO0>mf7h3r),]T;W*H.\Q>">`Fe]6N<39hNOhqPZNO/^9j\gq+BiN;g;Z0KCUp`Ud
%.tqFH*%tr.#[#Zr3mHubFYTk:29i/QS9bWXe6geTD>,?>0YU:$mC_8DB4\DPH>B,+k,1$RnO_?[!;rW>,<kqWs-#o''F"<8Q\.!0
%GjuSo1$?aU,Y+I0)8)W83F,B-!>1\e_eD;;RR0fj"-&t)##I\I-VU.h\oj[n'.-Kl4CRZ2Yu=AfC?Re-=/JG^20!41k@!)hVG31$
%MK/5:VTmDr8^h9igs"p*B3u3meAPLKS8.1c6`6A6e_$k`c9q<B/i7mkm&@_O=hV(,UL4'Zfdg;)ZD[&Y4jY1[=0ds:Zn_Glq+uBQ
%B;])P9k6Du<0cfn^0?t#[2%1@AsPbuMFb/)Q=DbPQT&G^DejFGgsFVZVDT6rqM<1(/iVM[_0-IZEI)Xe5,HAW:V,tK3GYD3LekbY
%s-sZ5U&17PI&8<a.EZ:\nnCSk9MmuPPg:'*1I_+],A)g26]o!1VYp>d%iM,R"[s7&mfgPX;]`RXBn8c[E1&k$658h,0,pSlT4U4\
%kN0jWE<mAJKXTE$XLcT?_;#q(g:@#3QnD?Hla(V-PVKf[4$27YS)SD5qQk4g&:RG;5!GRRgk[=36ZB="QpWaL'Wt@rCA:j$rR>L\
%%1/1uHA!sW`l5qFpN3[^lf\"<Y0T3M:N`Ih39UTr?NF_sF!;/I_O1Zt/fI!4n@0p9(/f2Ob9g&7MX`N2-!GsXE@g(MqurSui@`;a
%dgXm$C>@"t(BJN2&XG/GrmQj0k4l4IrNs32#nY&!gB]#%.g-^kDAJ[h:NU-l!mD%s]PrcJ]!8n%o^!>0dD4,=)b$hfdNK+peP*<P
%)KfcBA_a%!F;MNlHKUQk+Vuc3;`MfH4/ub4:n?O1U(CpN]F?^Q_YllhG+*05:!DQR3K>se$p#;=@uadDR+4!OYRGX$?km%D<&I-F
%%B#O2SZ;4Z@r,o&EN(6>odo<RAo+KeVj7TgQQoHAUY85;VJHoH40<t&F1Z,0lE`.hPI)lbSR$,SD8$2mCFnf(QE-<^7#c?VgL(iS
%Co<8Y^LY9bYKO%k9/:9WP_+%MI<*e-h,TXNYPLGcI3.p,mi7j&l8FF(C!#uO_)U^B<u4eC5`Q'GSJ\q$Aa6&_-dfmYjH53];/n&Q
%oS(H5M2nH+%0R*-+rs4<cBTkn*-Nm,3fL[71YTEnlM)8?W,^?+,&!BV0Je.rZjNhl0aHlTSFincoB\BmB1Gm?PM>@6LRUlkhSm_K
%#I__a-H?5mFTL[`Ot+6i['']);%?W4D!p<OdJDe.I2@Zg/5@C_L*[nU`8m8`r'L@H!r<h1YAL8@H0V`_Ud'q==&2dJA#kj#VkBp8
%;/+@j34Y#,he`:S(1bAQj;'].Z>MGW<Smm14l0_f-X?=.m6C?$-"1E^eE3V+BO5/ls)B_G=f..cF@2&Y0/<Ih*8fYJq\e-Ae=hrk
%InFO,1G63jp$g`L\i*8U<oa*nV#Q`hWL9#.mQVYU7%P@B8o(2"0e%fk;B!eO=/I7:gWbs>)NqOf827T]l)6BVab\OqULl'gAK4kk
%JGM`Fd*iC\2^42S)Ol\ql7pJG>MNsm#=#;Dm3X(7puFfsJ*%>EL?p-kXEb+ECG(gl_+.Cm7ATMmo]A8mk^6hd'(V,@$OJgaRXqil
%FN61B6F2_FmSV7l@QJ;J3dQjWUM!q=AK>&+<S@t/7j[c*j;o'4U]tcqJIA#XH?AA6<-+KXo,:8Zl8h4R@H``K:]#:'lE`-a%^?qq
%c^@cTF$fOCa2=`Ih__l)1/LLjSL.OdfpM2pE,DpYh'i6F1f.CRV2EXHi_Wh06Asiua<oD5UD]E$`NFnpo;d'-,pU!\AoBU!80c*&
%C*R;>Zp"<GC"MHiI_<dY:Uo\<g4/5s#>2n`@%fJL(Z$t)FV,l.Uc\Wm7j`#=XcJCdeC]hX7Sjp7BbG4bJu#-W"4_!].'R9e6=fo0
%$?7E+3\d+)Q%_B--kk^oaBZm'HqL#.8AkUmhNYF#NG>j$Q1E7sF!oDI@kk1L*$s,UMDdb0PB@:"I\DLf3LST+eP'0*!45o\TG@k_
%XTcZ)LPd@$lpL!*OdM;<CL_tB(m6hR,uHR*-S]Ha6#EMn?)L`VS8e/*k@8g1.u@RNHMAQKr)f-p+2-gQG$6gBnZ)'<g?0(*VnJ-A
%NP5YV`QQ2Y;3<H#bmC5q&o<4=hTd>BdfutCV&S9G%iq?bHHgp+muj8lAJ^TEOjY`X43Y!5fJg,?O'QL$9qe4RG$1Y?oLTcG?m-5m
%VGrLg'k;ha8`gp)/5hg@EM.t5KNCY0dk%ZM\8"Wi.;9OqB9Y=#]X*uVrk/Ysr+h7)Ee&PB=JhA&Ei+Qq>@k6AQF5m]fe+BL"h0_V
%Bn7X_AVdYa:"fD3]0OLO2[%u8OQan$0RHFB./@=nOV^R4qc\;:Uu5A`%RGhT6m@>.Da[2Z1%>N1Hk_.\LsQ-=HnUQSd%3Z;3/SIZ
%h/d2u+-c[p;e1_,-bFD/2f$Nu9tT3Jd-p@ti@]sV7U-8[X0u9@Gh!#W>XmK]dBA8ra+a+9Hri$s/I[iOm/AtW;='OLTSG(['p5R)
%A^[#D7^7o;ASqlfT\N6mlU<Rq$XK,LLoD4<.%`r4I20G)/q2ccR&/eB&ZO&UJ6H#X;Sf9"q)8RTaa#ON4k<%b1e4R1o17D77sA7a
%R$_RF/hXc_3UL!QR7gUZAu;Q=(6cjOABlkeMhnC1ATc=Qm$?,;0rM0f%,>`AY3!"N1,2;1^Fm&ZN0]2)f04J1;:>:N_'IETq5].3
%(VDBF/?gJQ/T=@8X$uj6c"##,%j*'`MjP7fhJ!sC:M-_0#+at<0(C29bbDUc1$9&ei8_B6%KEiLnm>IZBCUQh"B+lk.+E>X+AkV(
%96P!?)EJ1D'SKXNKF/HfMMZ;+:kMN,H;-k*XeD&a)N<u=R&7?o23suC1bD.[hg:?YBH^Tk8(0'd!beD9g9E.FZ)90F9;4!q,c7@p
%q-70CVNn-g>V7V;:,^28QmtUrX+X;["I24DJaKM7S]@mEBdVT=[bDQf-jf=E[VAuHBhCjbY$711MF9A2#G!oWjAXe&JbJ0)&i\ml
%O(^R`%6KGMcW62n<]jPf8?WQ'4jrL*1n^/nZj31l=.*[2E!Hk(W<b-^Cl"u?`@NR=BN`LG/.^QLa[KbWf_YZ[99rd%M^8]3$Y;J5
%fd3jrU<2uLM<,?"s.GX5eAG,J&4)9'.R`n5#Y3Im9bA["fg)us@1WnU/T5kP$6-u9mECdpbq5@H8Q+VrIsiC.J+"!LPr'JFb&pk=
%85-f^ZP8rG(-lEKO\gGNKh>tR_N8kdWhfkkZ'$Bb+\7U8?&XGeTSe=IOTbs_XB(Z<e?M,6X%K9%&VmOA5c[+.#LD[E+dX2t<TfB9
%`m+2=fM&G)VkjVj@W'K+XbBJODbbDD^?XKrh)S]?cafLc)cggT"]2!$*GRIrDGfAaXq+LHX&s#X:Z3(KJ%2Yc_6t-9FR\Bm@hm#L
%p(>h?C71Bbiu^0bjjtdmDR?LcI_qs,G+'UHZ#XB?,Lj<(G$UBAe4!Rc_UP!ScJA&fmU*j+ZS+(;q!'\:(NP)%Ef0."/eV'e.@6Ec
%&ppN/lUq^GdUmN8aU7.1WJS?t:g5JFOKq/nP>HSYWnE/g?0gNXf$8uc%5TtiekVr:HbFSe("ZF^]%3&CQ*W!F(=H7,)S(fOXefsY
%DRho6>(cM(T&-'#Jkg=GZ1^HDd<3'0$i,U5&Xu^T]=r6nYeh%0<X="b!H&o<f)XTcC/dJgmjd:]C/gl7bH81NE_X2I0.(jB@ZIQ;
%*X-DE>5?JueAP9ajB-qUZja%ZccR]=$d]qeq,u='^T@mj*bsWf\d0mf*bZ_NGpl/:6@MpEl2uN3-(&NapoC+'E.t\rZp'SQ%ffP?
%]BX^_>e%3Q#elOR?o/&kQ\^o2Ttu0m)E``ZG6,Nn3@OZrYi+i_i0sb`=$aY]6\0<8h']UiT\tlI*3nMLTQ2,9KmRnOY+:0rY/%cW
%iO-S,3VPEOGW4Dq]fYE0[GGEHJ+^*4?^5H/E42oD1Y*K`$1,7gdCNdb<W6RJ_$n]"Q+N\L%G#A-;M8eT#,B"8H`.)*_rB'WH?eZ>
%V>tg=KSpr/C0dnM'?Gs:Cm4gN%3r#\Kpoi"Cf]+Z%ndOgd_A\S4.#-EZEr,0W50\5m(o$KdZ;KhRBDaJgK[H"NZk+JKo7$+?$oqj
%\BOFl!4-81`Z15m"^_b5QX/6T)3"Z+(E+N:PcK7*Z0G+nM8";$ap3s"2WuE,6pPWj'PUu)mbK]=Z`rHYlnM&$o,C1X1VQ&#N1AiQ
%6AJuEef7"s`JuMXQnX%@'pt>N,IYn^qOm^Med?<^V@d(E=!$Lo1SKN5%U!Y[A0jf?F+pbVf1D6r>b5`.>*>h'*&VZ/g,9T81CfXe
%c>&8&0sI+G;%aqf:_ZU02D1PXQ=hn1];MJ7US$k^l`p>,%n+4IjHqG5OA;.<"2O)=VM?kjM<3VFG&$f:L/*F-SoMBdr:$LCXp/P[
%=6'1Yn^jgD4e\rgUTAc8Sp3<,BG"Sp^P$=0>'mo.E8]6^:V"RDCCL!*;%s9&]L9s0AT*5-j-P$l>S>9*%],%RP=p'TA,;sTq,iSt
%gHcpAA^'<I,BF8t>fX-mma]@j5c;on;p$+6c/"gWb9B\>+nCql=N&*.%TWV7#^q,09=GQ6MPsT#Mb@mV4psk8$O&Cb=X0'4ifHP$
%'D*S09'#N4,EC*&[m6]/TTU@r^Ha"a:411367-K%]n3eHXWkU_mjomD!PC20P0#5,(W[9j7OV2nE:A7sd3Nht-o;5`1O:1`i?>i&
%J"jH>l`ZJ^k?0-0@pr7e'IfcsFQk4DO;QEDKa^Nrh7K`a[o\hOOHKSfBE%7UReG-,4\V-fg:OFiW^]Rt-n,j<-pGDtC,VfYQZlYr
%oh>/j=6KFGX.s-(FpDHlC>%/s>rC4FVgneo&D44hS2T^`UK+/"WAKM?m4$Aq./&m?9:>+X"]F&U)p5"S55VJCk8HoH;bmii*(>d[
%(h4sp&JV^K-h+F,)?[<$8)A(]JJMFQ&];uTc*fa]3X&JP**(GAZ*8ug>*m>Z,9AeNU;JJ%3?FZU1KGg)Fbb=GV7LhD:3;3*f!Guq
%>A&\mo#8/n>"UQXSAol8X,r&jW8ZC/@,uEn-!LsNem\;bS9H=bg0=_AjoPTEJQG@d[`N9Tm-Kp2h+\c]1q_Z+FRL,V<MHNPFJ$NJ
%;:UrRj6bH$EmLpJ_7Nd;b*&&POW$QipjC0M=lWVWSj6e)0ra_#BFN!$eqQ`Pi]<)2X9_YBom4YKN)DL)i$frU+a&%_,=aFBbUc0@
%A>H_3@cJs]FTcc@f?b!'c\IRUo+7AQ(5D>`TmEDk?m$k,KIjZjOL^#R"mgkZs&`tgC^PLiZ<j__jW_jDKQ=/AnMk2U9j\g]-P$L"
%'$>gqlC,kag7Y>qUSa@U\h1t9ErrS517\Ds@WU__/HqE_.k)HFK@@0,SlmpoeM4.<?Ym:TaudJk0;U(.j,_)^_1m0_6$ccr#1i7@
%COXIMn=I4n(ZqZQZb=_Z]`+R7cBm/BoIn!/0=5FHX!t6BaVj`8_M]XI/@p40?EfUm8t#&J*@#r2aXP+u%jes=kk?WZ2<r_pe*9jV
%WKg?5SlKUC%.haYDL1KnWP5R]FAAXgNRSq>]dl[IW"XGG836H_U?dK)-N:A2c^jp!&Kj=7`iDjDY,fq+37kp$@!p^6pDP@s='JdA
%K<62p7Yke_;(KWC?4s!9h^FT:TW<^M!Y`*]HDsi*QpZ;CYC7lp>+;(d5!)]lJCCFA\S%;c=Bp5Z'oR5r0MPSKlLX9(an-ck'hVUo
%h<)iqb937>QXH5=ja%^0*L)E<"j;sZj0'8$H_Ij<__E1CnDN:3"EsOb5g*4aPS<8OJgG+*Yj^HNGUu07p#>6dls,:"DltY+g[6q$
%[d3>X9jbV_O:mhQ*4'_Wn5/umV'h_$Y7-e>8o8inJEhfIZ>J#Jk,iRl^dcf$(&.=m'`nPGCjs@XP(NapI*%kW043.2;lDOLr+uc;
%>ee6gpb!;YoHgbG=mE(GV9"W3<b4:T,0[.(!k::T;p=;1M*0]o>n2*VCf-ITZBS?8&[Fo<l.!7.kkl9<4>k#t?aDhBcKmA%GL^4`
%)@UPQ4QX\Wi2r@E4"hJ7s3Ybuln`#>X-,^<Xd=HA%&&]Ri2r@E4"l;>J+Qquak:<q*K1#:kps0&1c$Bq(dcNPZ"d+V0_)EPYVL_b
%1uT*6K>KsPGn33YHb]`VJT$qSAFKS4&=E6g&A^''pP"E!"r$e8q_RS7Ys6;.,l=q7:D;l`G+q-KpLi3Nl@A!p\^lrZ.VcQDmE`7k
%bADaGr>G@-SBk=`Pc890*G]MKEn]8jEGi<u=VF,H7lg8AgtTsFBA]>1rtaDhr3a75JUnjLDE3u/8EaKucm1'E+>@dTi1Yp^"qtKD
%coFNfdm93Ci9Ot72"TP,Bem$@[Z&K-TC7,BH"1`^(=gS/"E;K04^=O48EAURmGIBHO&kPT1Q0+tV:Ot!\MAM=X)<@E\sSCf*i]l3
%4$Ws#<q`^IAM$e;f]O[/F&q^7;=6Ar`_e.R4#JhT2q+U<Ud*?hT0&C?Xm^FR"MA3>BSMBkW#`(s]!I91=#2XXDQXWhHVne)`W,XW
%06LlDFr,\CZ(.5aZh*kg;_^cNmtj.3cL"#QdeTk%Bs$\@&t_k#b']Egj??29>"O*YDJaQ6IVjgVNgoHGKF)PcrT9?YEZ4,r[>o0A
%e/K:gf$A6(hg&4=AEi:Pm#.BpBC_(CoB^*NcIJ.q]5(#OQYE<9=GU!eY+hki7NK?&;<!pOWYF_IFCiq+r%Z*N!bS`Of[aSNlbed[
%AT<ou`V6$9`I6@-.17F@"$0%6M.:p];q%mJ:R][F1cb6kVQgg_$8iPc`mW!4G>ZN;I^B>BBd+r^?Wuus2.OU8n*D+QfM0ftUCkhC
%Bqi;?]/)M)0KC18PN01j,!*V//)T$p6b@geG5iWL(?3st$KYQ4I;.$t*H53eb/-Hqmf6U6\T<$,?q6-1i#EX`M^mU'ZleFUF3]Zq
%0N%DS(2K9Te!7B$g\V9N<K-g]0=k\jhC/2Q[k=imOa\_Ig7,Pj7#_fI]kP+)MXU/rc^Hc(C"aW%XG=.QcJe^%Dk3kA0M-/p(&e;D
%@QP:*UDeaiY_S$HZIURr/X,jEUU@jgLsFPURIMun4;<Tr*$u_VDsdg7#Ya<'k2(3-9P`f]1Jh`%kYO&Ya$F(E5.2T0]PTQK`p0W!
%>Nb`aDnR+d5GE`"esEp&>o%/(%?b`OTj'uKXXN&'lYc==VctLk'+2Kc*]OqUmn;[_X1>O#`Rd&<3[RV]D5Ls[`>!5E9oK9:o:;_L
%-)>lTA`A&,0._,3X-jT_d8m$:qfiT?F#4!\WY,LFPjYl/o!<o<&Hh--R.q('T4-_89KWFks1S][Is^j9q^kgq%+4'G3NUiNp#p<r
%OQOks79q(V>+G+MD_*>u/![>?$G(c&.MPpuK*hd78<=@/5lW5)I5jc&L[0B8m5[l.I;[kse,,6]5NKr<Oa/$hH[52Ko,XM-f*-S"
%eIoQ.5i6++`h\T$Y#D,[_.`:oE<#m_0AkUcc0k)dq29_,V@A$)[Xik8JUOtXIC=]T[Xik8JUOtXIC=]T[XikXD*Qc:5/Y<OR.q('
%T5@u.ap'1U?iU(of3c7?q>/pjf73Ymc[/[*s5_iLJ,^NRF8FRVcelFJJ,<EVpqmVlHN&[YDkOn4?['Nd]-r!O:,_oc%b&([IC`&Q
%009uo?'nJ:'f4_4O+7'8If?!ijRgCH5Q4[_rr;'Rs!bX2O_rbLHM:58A(lA&N-G5dY66<#.O4Dr7JG=7GJ>'-lcaf8%!&+i*99!V
%qqM)(GGgc\hS"=.qYAm\mXCk5-i)N7Rl@No5Mc>pDp[,!DdL/)oChLfo,%EXg\CI1?G=#NqR?2PhYh9b2n7oJ`d`.$s5aJ+jeOF,
%9mIto:Bl>(9dppl$f0)Po]7@@Lt#;VJt)c0\W/C^j6W'n2oW!WcJA<#/:!Re]L,7ml%[$pL7KIBh1Sa1A(.!aTlcY`j-!_X7'PR^
%coWW..)3!5Foog<VD@`'V+9qfq/>HEEehl9SXIB$9[<*e\/!h3P+cH3_1T_ML%.o7fh0S<-d/aB'CHVPP4Z7Gd6Xkj.eMZEHC92M
%mt=0_SPY-SH'45P]:26ph>O:=q)\iR9(pPeG-XKUinQ/[`m8,i2kj?>FQZI;s$aKA0?3@E#TQMXHkH4a>Crqd`bk,R[<?^$Y)IG4
%ce`r@8\8QJ$Pn(KbEgC*TE?+Fls[I56>OqVQOq:T0)4(l=3(q*P=8:<YmbQp*2Q$"4\qSuPo5h`j>ff_/Fs:[9P,R!&X].%FrQb'
%mrb,%ClR%a.sceP-hEdmR3r\&@j`3<!2O6S6@172KTobFT3Qe'cO1cp!5gT>RA4^5h.UtA6d4WQ@2L^BY?//7:AA]>/V;<9KEt53
%Q0F^LgCCj^-Zg=*,1"%_>MuCNbfJQT7H"_k[J%hQhE'O#"]*jS\&q9:!)iO3)5&?PH2'DP\_Lp&j9/3(*G(6m(Xnr%?,HtQa1m%E
%\1n'Ao6o%;HgS<f;-4GQTMUTLP6L)S?Y#9Rn#-KJi/pV+%""-DEXiILmE>r6AeoeYn%-ip7UU]Yp9t^Kl:uH0!,/j9:?=Y5:4PD-
%[KU)N1iG((i.S1F6H>U2LN)ginl^u.TJ(l1\QMbSiaMQ+-9M\rC(83h]Kg&B9?oC4i`DYSYC[Dg5V$nJ$i^nDo9_?.4l7Q4,?ld6
%SZG(!rYFi5r(@C](`%8sE&JEl.^o]a^o.c7;#lC[32LGU/B%rfd63e%fO:T1hMM#Y6c>2*_B+ba6Kmr\9^E>uRIVDSGiqIMOi+u:
%EhFV,geC+fN0.E/VAfO<J@#n4dVZoHRjh8lZMRtD!_[L.:spSo%/*"ORdHh:#q%0G)N9;QA_N7OA<\'ij<5'H4Z>q(FAQ6j4]AhN
%$Vj>Q;\!";W5q(fD+Ut,ctT.S'W;U`Mq$6cMRlXK%^XRN3Q^IJ&[nqmfq"Z,#YiZ]P*P4oXYsb_Z9hqq36g+[S$fK@TL>58UAUiM
%^]pL"T_S(NFBk5q#qLA]KS:`e2djrU,[4?))K0qqX@'p#\I_7nahGs9HjZ0&_M&V*9FUJh^(mr:>P&1;TV=l3K4Q3Ie!8%W_@CP/
%U`cqt.X/rj"U+:%g"9^Oc:s&J.7]?%KPmFi(4$bTK]UL@W<=%eDiJdJnAZ;2\!R;+12P)6b1/QcC/O[)(CCBL/bMA!S09Kk!.GI*
%9P&8.?3#5%hu__3+5u]cl1$[nLOqsg8(Lb7>1OqhZofQ=6,A?e4CZ,`!`Lf\m;S_EG]^`=F5,f\(Pc4-9O)a+G$CbTGt%cUPZ*'/
%DA=Rd&YhH5/pr<X`e$2_kMU>ma:F7Qks>OEST;Xu>/=IR_r"3sJisL/%XO?h990'o_&T[.!^Hl`)?T7N;S+J%E9QSYq[?/I&Lu&C
%OdQ?&0]bIkaDhPDE93:MBB>ZtLqtNCU%SsnihB0R89jA1[P\@'WuEG-/on@.N&c)RF9F*7Z7cNG,F;(8@]U,oBrQ1jne2;+Km^8K
%jO(<Lfk,rT,_pNa/EBr*HGEgE5_:#B1WG,(q#G4DE0c7_klD)!\omSJ`#_!7"dfEd4l4A;mRd&X*B$h;(-%Ze7j,Y^*p38t>FDP=
%9=oG<kIW-tU_I9iYT-L*bitudPVnS@RD#k+q&3DIoXH=fnidfTUrPu.5pf>_YRQ+,]Ml=uk_ZSG!QP2a`4Fmn'K)-\1KB5:TEI"P
%S;r,:igiDGFOt(`N9)3*l\:nJeQWjL4uQ]o&go`b]MY=1la2b)/C.G.8g2("*@C+*4W2$qKE2=g<gG+4*V+tajp<Tub)\tf#nSl=
%XU#?Wd0Auh(_36PNg&<K5DtIOf5Ys\$#Bt_c$'6FKW>;.lc4$S>_G#Xfuqt9'G_7-=oTc1ik;2Dk@6o@<B4;#-7h9(e9d<q@3q%6
%G7q#`SfpTV\AOoBGWZ_*4VhLgJk?OXK")eub'e8%>_ek;!>9[b732X55Su[S<;])']\#X:eP4[jGh/c=bFl_XiJV#ee.u6)Ck6Uh
%0jpHcZjQ[se:m&F]]GfLd&S$X<+oDu>2c>&%LIM#G#2RG5oOR_-h[mfj0Aq3'buE+%])ZDb!I'[O^ooJ)G6-rj&nYOZl2(8GU_QN
%V[IoE*[*\2fBYd?jf[6YOfSZrjbQp,#tDnMhj6Kdn?.Cs6PG*<Zj<-IRI_K`-(:&"U6fY*V^)S;@aF/I&/*M6fsJ\h`J:<:`R:5@
%dUs0-XMC1r#YAT'#&NODP:\8FS;EfD3uYrH).F86&d%3,Vt#!'M@W$to50Ss.,j3b+m/8L@oH\q/HmQLP`.5AZ)6=!BEP+$A=B6Z
%gefD\%M>8Y&KrLIj:7(J5u[*DFb/?u)[^\NMLm/#_RdmEUDn:bCRKRk(IFj[V[LPf4k's('V\Rs+_A%SXRB\FTtlA>#9b_Ris_=,
%%*dLn!p9T*8CW(0]V+/EJ>k_FfMV;FOaNGrKX+:LRRVg:%Q+pn1s.b=IBU&-hY>,qp5>RB*,f_[8'aESrU!\ThS+C9Vqk,ZL]*,I
%5CE@_2t*?uijI`S;JQGd3)Mr(bnIhTe\D/-enks('k$RMIn#g`Hpr8_nW\+bAl7-LWgkH*PULDV)BOP@6@K%gb!ALS"#s+M3@`7,
%W_'*3c%Um>o!a.q6/E0k&.q-hQAW?=W#Pr]&MFKr&dk^dKbXocW2Y@`,igdrca_7r^SUtl+$Sq&K2IJq3\4HYeS#[S@AMcB[,%7S
%4(UJd%UkJ?;T0">`j^Zrq`kf)(]bHW[9UZkjef?(9*4;GT_sM3$G0LN&Of[9!5]lne-k;7&HP6"g]];Qp47HfZ6h76)ij,TffUK"
%U&[Q<Lepu8KIprjHHHs,-#AW2M)>UH6U^9dR\7;Z9f/t>H)[I'j5fKJJj?VIJQ%\Jb;-6Hdh&LWJ.D41#X4$S)"/mp>>d?r'IFY/
%CCc@8[d&Y7L))(%6pdG&*=O34JL,iUii+Urd,pNYPO`gAMl\jW@Bp#N;/&o_=-m)OQ;4WMBnY7NgQq23%)=JU\0/qm&k-X-j?XLM
%j>h226a2<k'PU/'PmFmE"Je0sS!d(I"Lp-2:SUCmLt=stRr'oF(=Fo<R&n9s_1n2^*%T06K&?\JJWcj`!h)G%]2#%kUfZ5lW7D8E
%8-j!1=1g_=''PQ$!>dcL-G]uDE9qaU(?i$U!;)'Y1p[FQ(3K=R2]\,'p$+(<"mYV/%,Rb2*dU5@'&G9.!5'kq[H[:hLbb?dAa)G-
%CY>(?OY/p8dOh)FrQs,]P0,eh0T,Ad<A%KdZ7o!V7--`$'A?TW#mN`)]h#VO..#;*81IDp:i&RLr3:2]#J:i+/GL.TKp6Zp(mQ[,
%;j]\3&ITf@$E8Xpk!\[(DV9H!F]bS-,)03^GD0DHoPftdP3AS^O`0n84*ZM,<B2F!>RiLuH@QX79kAD`:VH3"/r8Wt^bH^YX.5;g
%J05L[PN2^!M'__^C1W)bHU`3;X$KM=[L7p>hoND^ie5CHlkRbOH^mVPfKlRC0R$]@d$*NEMnB4m;&G_/TMRI(bNW--.Dkb0RtdL<
%"n/M6);RWrC]L$N6;/#$+BU3t#Q]bdXk&W2+e1#o;D&?5du8RBe918+7;g^`TBF00XjbAU3VPcf8dMaCJ)hfK.E9K_q`CgifJ=B=
%d6X6CHOT+goISIuYfAht/Q!]oMKm!Z.6[qrTEm8N6pXZgKYT*3/lQ'jLb774HE^I;1U;fAIF8bB_-Mpa*/"t@<l#\WXDHH=`/7_5
%H7690`^6.h"F-A,p!uOY_%Sjt.2QNLYnbuf4@*Lt3HZK@2"Y7c,"7iR64a]+9N3gPs(RPXU_ZjOK(P"+@1:12/Zp#]8`+%j&<<HB
%c4GG_hBhGb<h=t4WjZ\.8lN[-_G7Th`D?[MD:ajk;:;JNPO=hs-I=ccB)t.-Sg%p6$[,Su25q39(]0qQH4VMRR[1r;3FOT;(2[6N
%PlPcpQT$V1i%U[&6]nk2YUtGfO%0JWRZB2S["LP'DmSR,EZVJloYCG,H^p1$q:hnM:G>t+p3`X[B47KOb-Ha#5`bX"1*V`Ip/ij[
%4ee`a<"gH)T@8AoZ^)a&9P"Lh1Ai?4eQksRE"PO-ijZ_*)GYu,#MCbPKLeQB_u,\")BNo^c+:b05rXMrA.p[YWcuV'XA:?Il1Vgs
%(#\-!!Be_p9$9O=2hS/EIBYR]AC;pJhKqf@!V.Y;0s(?-j!ePqb`FPdH_$ii,!)[Y[BTiZA=@Rg.!ui<.=4u7MV5h.,^=#9B3/+V
%.,b;Onku1#Pb&\697U@&%@7hgP<QedIR@2T$lB^nf>dFui.U`a1n"\e(T]n47d[)2=g#o$Jk^"YMc5@3GW"_kO9Lc2HR_?R<Tb6c
%l9%46oXfVZGZb7kO:Y83a-(Fh.Le)Tc;A:f^(mXm/?uGU6f[hn_GY+Ns+[0iij-c1U67W/LiIupn?N3-0mGLr\e6_l/Sl,G!1Rq(
%@`r=h)8ab$4suF9:oQHCptZpLY\LEKON7IQEDk7u`bMQo50RU#_PUHf(A'r0m@qrf/]HTd<F]ML>m[`T/D/m,/'K6@)"g&f.@su4
%=MVcrAjH3'%nWLWHinA\\#*V2!"'X,*9`35"=6,a6b%X]RV%)/S0g<2AXO=r13iH)Td^%BbQm\q3E.l8OY.X^HP%ZdlG=2i7W'E5
%R\faV8A-O$#hiX](FnFh3OfR&6AGAp;#k!3L^Joib?#&TQk/O@Y`6b.jJj?d/OUZ`(MmoB#=bp5*?t.*q`oQ4FTd_!'KG4]_SuRq
%RJ-lWp%euLM.2hT1T6m<2Z\s:SA?1m!qo+>1mg9=&:.3YG[(f'4Ol=R=l@SuLO@CV6=?k6M+Q>DpO\V>?@J/B-c@0q@YBB=(u>91
%6Ek'D9M*5sM]->C"!Li)'C[baf3hEt=pTdtM,6MV+9#gWK$kgbTL^Jp;bORc[@C/-U]G0rj:Fp+!j>i4+1F?ZJY^.#LU6PZWA8OG
%[CHV4;h0`1D_EsUOZ,_mU15.]M)Z4/Nn!m\AdY5drZ7K55Xh>gAXRs)K#OH;/]He?\Ha-E!&>^)FB?lY:OJ=s)$\E%cLKDk,!nF>
%=:c]PdBQ3\2:*0Fo+O51&F5?fpClDJ67^6R-:JT#>)^tl6*WnmdSR7@DW'nTT];]4TI8+?eO)h+!PI$""2JF?%LWNB8agRaK&38_
%EeoE7q/;19/OH!Q,nOoh5fppY$;@Tc65Dsf9C:;h+ee[r^dG>Wm"'"Jpo6SJbdYHK5uFjGr:Lq(LBYW[biLr&Wn+Q_'*\saDoEmE
%AGbI+liA$TH!IKEdr4P>Au#qSD)<K^P5n?c:sq2bHc-Q!FaVG9I\U!tZNNbC4>F5mH+7Z!U1iInPn!]#Lc.&f2XEm;iX*]:`niu[
%&_L$=<^\3!N$=^$`u2N#_PPA-Tfs@ZXtq>"3<Kdci$WSH9"YUPj/K$-/dW0S%#J_mbF";(#d84PZ:PRD3dRi:XIdkYkX:F#oU(7%
%_ZqE<=QZDu&X">5n?1`r)8@Hlh]SjpeVtL9;58u\n3tOi$G(X>d?(nk#d$kbM)Qe.f0smkY-]&h:1K#D#.`A(7S4g@P-R(o["8$t
%fr#/A-+&FQgBo['&RbZ[#K^43k_5@GODF"U@#L#eOp%KN3fP#Om%;BCY+m\2?4f),6)$6`YCg*qat*?_592"MkRgf*JQt^Y&X8]W
%3fk?`AI%2GA9^<S*KI.jR:%=mJdFdsjZ9oei,bFi22Dp`TsaA*k_[^LLm%g7h@,SeWA&3!@.nR!-&B<lBPLCOZupoq:YAQq*]i0!
%>A!0(LlPW&gPC5S.)!\8$R@Oi3=loJM)]=&R8eQg:-1taiP?6d'a9Ch,tfp/3`%e/5"?F:nG<#+`D,u'#QsQ&]*np']srk^RH6[s
%p6FnhbY*q`GV#&0/OHN=!d)l;M'o2mP<eg`V&WrRi&4iG#DQZOn1j+9435DYC5GsTAdf8n&SPiu@Pj->'O%3u=h:[SAuRL?4qpKp
%\gId)#a>phGNOU6K)m\`Cl]`lJKZC^YrqWO(3?_\h-`3&&J(Fe3[1R-oCin4#O)g7YOdIF'K$H@l^J3oC7Xi%M"KrSY59bscU(qb
%m]k)W7n4Jr$=MIrI6nKc0%)1Z#](MjVkB!on<dt3#q4Y@.2-?G,a>&Aj?+EX<kCYU_7S25Mkd/j!Rm"=5eIFI08`Us`)p7M)\)EG
%W.5;+U&WE_jGt2j6g%a_>f#ZcQT:e0ei'VF-)Y',$geO![2PAT,]bE1(VQWcE2j*;QouVij/gH$X,\^p6/#3k,t2tL6I)9Y#pT''
%UH8-;V(AL>W(%d!12_%H2X>':JT$V[ap=OhWKQJ&E>MfV`]aR=1s`5>$Hoa&c.<FDI\:YI<)%.a**sJ7'/VOYB&LJ!U7fjtJM/Fu
%KL#m!<=Qnk!Y!<b#Qo_\/6(I*0LemUJK]qkKctNG(Ib<sd([;GYRm_o`3E(@ln/BP"B3.r-b(Ai\!fKCA=6gr7hjj.Fp>]0FCY[`
%k6-kiZjPq=eNq$UTtmE.4u@?a.#du'@"lQe'DNlX$^N_@efcg!'JgB0,*,/<b+>2^P>[$t<&hb[M&e9%1/+SY;WDJD7*&>*)D!pW
%?k7)h+QsMIEGMo\KCTsLOhlRnn5J$L+i0gA9q:,O)B8n:=ZhZ$,no+TLi8$_dN^_Z[PNJfr$F3aTk^pai!777d:BZgm1It^![3e+
%XTj>b@R\?\+##bAM1cq$7ptO_fc7#RJO#TU8UKPc\BZlM!h,@)@DWkXdhYV#V98Y:)HUp+Ygpj3)1j\Z*"D%&obBXN[[$G?a:$h1
%_[7#YQI2'>!&[0(5dMgpmF7)=,4gC%,"*V?8qT,W,S]7.i/O/Sm^MCfZYK)3]U91h'h$.6&W4mXLDg-+4Mk"S#P!bG6$Ofs3ps0\
%qG<%g_5SBV8q[73C.M9fT^0ci`^c.:UPFRMoV<C)/7_Z/DHJ2&Pm%QF&qZrQ9.:d<6H/\!K<8O!;QI/ngjgBELI7>h.RB'U*q>^*
%$Ud[G9iXkT8;Gfi(JiCunk4WP%S.1aUJ4aM:SEs1GYRi'<(O.2A3i[C;pYnPN!>>rh3Pd!kb?+4oV0/)nP8!PYb3Qne-K0.Xm="_
%]8<3q_A)4;Td>f+)qY;Ogf(3YfumNXq62HNi<KQ]J/rq[X=^XcdW,e4UP=!@fl%8'JkM\>&7POW(*NBiarrR""T!PO^hL;46:)fF
%E;)3_6bm*g8XkP>P+8HN$#DI;iAbK0#?NXr#6'3j%Ijk@"Y6Cp8^>Nf!Ln[>djgM+4G)iFkcitOVHP5]B_i8Ll%0,"^qUV*QmGZN
%d$$tTgVB0+dnAkhgOR9G%]i-gi<:+i88-1GU^>&[VTcPX0R0&A"@TM>N<r$]"lcD.?bfoB`ZkP,_QKR;!IlnB?aJUh4n(O,`VN,S
%#9JG@90$"?b`j?nJ7Z1URiERDA2p>MSC"#3KFZBP&/J_@BP2\"$/5aV#T6@D9frG:!N#uO_r;+KJ;SrL25)8P$;"W'R8Pa]:Xoi4
%k*^JHSr""Dhb\^p=I7/m+F.qAHT:)<$F0rjpCIt=MQna^bTlnBZ5r.]:thHYKnBU.LoRsA86&k+*;^"#TN2B(AY/O]TmTb@LH!m&
%)-aMn=hEifOpS;p%-eB;*Hac;:9@]H!bAfNZ&6H0J_d!]^dpUsS5<H&\qc:K5X9:]Defu7!@A'e1dH[`+Js_(*YTZFXnFtknHde;
%Bb'TK8-8H^<u8`#!/06q^!u/$j?:=lY']CjS2qc3!5q`1Ss!U&/bkk\:!0-cPB'/.ob!?Z_8nl<<nW]T'ebI*V7VcWmj2(.>'$EQ
%k/dqFL_Vp8?E:mSN)nuX>RpN3(X/PE@stO^qWTs3+Z%OON4+U5RUiI44;+KW_+;t*S^=MB"UbgZSDY_$<N5L?qIRb!,`%3?@o^o"
%A?-k%0?#&l5[sM.5uDV7\<,BJ&CAPE&8)Vbopm:u*?(aX",-u>DH@%h_Fe_1lV>T,iEmtUcar_BU$WUZ#b&HC@A&E\#-ET5g0%tQ
%W/p4'YIBZ?^mdAh)!TEM/d60n4MHJciYdt4&FBT3`A:'#i+8b&"$Mj%Mja2^G",2YBO:#oepE-.Ga2jf,=m[db7%qJ$!lVh0UK^a
%K1lst"Xjbp*i>&%-?$H<8X0&%8PN-BHRXL\$`GENafn4-8+=lGWP46[2<Y^#Z9[cslt@g+jrrCOpLSZpF[J*Fdr7)<,[f!))SIkH
%@3/=G08_]?Xe:,FAF91*J&qf@Gd*?1Lp/"W:^Pe$Bskd/@UKG#m#4hnK$Kr+CrJs'$$1*n[Q-gfi9fjo^`28MB3_'#7nX>Z=k&JX
%WQa!VoK\FG%i>=nOJpAE`\$:VKDK9KS/ia9&Ln;>T!MQ"KAi(9(4j6D<1bYHK0rI'BpAp3(f;.mM6J\GjHu?sIHmKm+E$Djo+<$p
%+je(#"E_"5/4;g=r";a7g'g<F6I63q.-=6Z@^%P(VF9MgR[SO6>gC\"i#uQISgA>Tj$,@cX1cm.B:*HP.517&@!F5]IS`lnKY1,u
%!#$+Me^3J5g*msX'k77gco3?/M%K"4:I-pVTU&>EN=:_rnNE)5RgG<G%5I3XaBH;6db9];8@R3@c(m8Y35`Dh?EI=c-rGtJc;$f_
%!\m$&4kQHYgo=?5E1j$Y?8#i4*C@IAjF04DF+M(Z6J,gE6X`>r2mD%(aIEiX&$%CU_:Ua>0O3FgSE?2W[EP*RJu0/)`mTlMZP,##
%d3TIdCJm5X,d,?f^6(X6-r;IF^)KPs33/OU:eRZ_A1=cUkRLY*26PbJJcc)_j/(lhXIt@'X*6>Z/SKMDc)*`EPTaFb&C[7mdK*6i
%!1+8t:L&LC(A'rU0JV8jG&)aNF\XB+ENXN-amk2#8smgXBaUKV9LqAlUhD6\naeGS,!qDe3KQT2d_LEh\2\f`0jc8&,CZeMlU.3F
%/Oq/j>D_@HPJBR\_?+c(TM(%4L$Hl;RLZa89L`aV"f6fr$hQ1VB%31b*1*CrkQHdS3*/E_6L:BF6[>]c1O9r/(?ZZ-##u6r&474I
%Egr8iLnJC;WKM/"d82_U1>F>[L9]1(UcEN]('6TA_VDs31t-Zl'H\P_==k?o<"Ain40IaYNQZ>b6T?N,\06`X_T#dhYm2S!;[sAa
%2s0TMFAKa9:ja+Vq7mlD&h[5\M`h(a>5;3L13uU]3_Z1I&WmYK&&C2j`tb6d72qM5)[*#^n3A9*T:&-l(A]Rs37Y\^IH*neIK5/?
%>T!)%A%<.-)6;,g;bpa*Q_,h5)=k\`9/)8BcJ`h$JHK2!lE[7Y*ut^kJREbV-QYFpq6.eSKB.3!,LulMMbM371h&4*@T(CZA%#Jj
%f"baoFu7+c/SnF6_?)\+g?3S$Rn3uHJs-6s-tlP,Jg#]TN.dV3jZ06+>>CbVo;PeHTW'g\g>Eem@@0sGEhq!+_#CWQQl<ldO9=ZR
%E$J)/hk/<AAl;!22(UP6fn#A_=d!@5KJQ@:@qe5`9rhUlU=dYgnV\HNJW>IamQ-<8n;Qn+W97QO?eVV=M""dc_rZKM:I:aSn]!R_
%!UPi-Y=kDn-1I@%Mu@5;#,!W,^Sk'S.3Vfn9Fu%VQ!lMTf\T0!(>+8V29fT(Dne_;-\L#b?3*nqRB+WWd/t&H>DXEG@S?j<!$F-'
%B_"0,=W(2_DHTe=3^m4s&%N4FpL1(S$Ud!.&dN3f4ELa1%:MY4KI/g(KEsFATS#-DEls-%af#dhn]NI3!.QAm7'$P(VV0cc/)<J"
%l54I_j/aeak<P;1e8Qo,(e1Fb.'&`a7rdaO(]rfh$]g_oTEQQ[d!09i+o0[mVBG!Tq8/LF4/DD`U5,/a=^[Y%=llXDe>8+AlJ:(n
%)OM'b4$fIZ>N`CX"[s<K.>?"8n;5.SJUnss'^"2Mnnho7;F"Y?&A>Lp4:H?jl?N<5R/NH7@&^le1V@6n#Wb'1*\-%1Z+bcaddeLr
%l3i^\V@?>c4Q\31KqW'6"_ojFI:(o"%oaX=.BVG3KP/1&C^Gl;L(Pdkk@+tPhjZ#0_aE]S2o2):,e2,cFau/rKq_ZLVU^(<#Wo?!
%+#D!jk!\8aBuWLL17h%d5\I4=dNjU(>0*eL.A02M=s1K)]1+\mW^\*[*%U5,eBLn:m6S6B1)nWYa^tmBX#4;BBTq&(E!?FmFY][]
%_lHWET_[c$Y*KqI6#@q;JD#dY+YH8j?WdLQ1Q"SFjTM%/5@b)bj]'s=M`AaqbFY_#%TJ3*(pnmLB]/faO\"tLGf:"%ri2\up'/AE
%6s?V'6l,PY&_%%[2CNadn)UKe*#=8t`Em6RlHY,@7/7o$%#$aeRO:AXIb!jD7%Z(og^88*<CKA6A@&mSl)3FgLFc0g5MFAu2QAV4
%o)#V?rVYdCYE*V9qs2jPrlD*6J+rZ]&)ZJ7[r;*0rHJ"^hq`eR[6/!uoX+M[cZ]?`hsp#%BrC^L_F)U0$-aGi_uEba*HaitfFb!m
%0-FKkN@1h?&/Y+JQB!XA.UJ-4Nmg:U(;L$T`goq8Ne2dj\5m':D\Fi@"?@[R%&oI\o,.tT)<>HTk(6d:doo4>:&R>e)ad1@.B<5U
%TJbiGJ(0C<<m`NSl6;#\(hp>GGN1jFGVo#Y\-gfa5VD9;oR@;RU^rC&Pi)PF*MEj<em;K<`%]-Cl9IZnd\Qm5r4I\D3)&#WqoZ8W
%UcTHRgU!iSO_,'@f<lbI'ci2_pFVh3b2-9$D$JHVFFb%gpU\+97th0*Tb&-H_$lN?5+>J.)lS]TXW#[u6^q,HZ*UHeTV&U]+SLLh
%*k983ZX?lT'&4XnJUGW)#"H1#]1.hc-+W@F<,b,l(W5_oRQ3*c#kLN,Muuak88)X(0]H8QEQF6)X"PjtL<r;+4_q!h&dis7[j=2^
%4$l:X$o!WITp`kgAc(\"TK\<?J^-tXiS%bPK!@rh1+4mZ2&%lf60]:3^J[W_TGS>:%N:h9D0iSo+]sZ-GEdrOd"*Sdj@nd?,=?lF
%GR]=T"NdBn'i)&W62)?Znr.Wm5\jlDN7D-u*,eS^=(9<CQ6:8ahW9-5a:lq3@C)[E(`=OipKE=D9Ubjh/1$&h"t=9p#eQ`?P^In1
%$OoCbMS6G,T/=VXD[gb_ej*q%n8FbB?q,m/QInaHB,rNI\uE/:^U25MTG%[0N4eOD'/=XaiOab)N%o`MKksK]5S*W1/I`-970%rn
%H1FX%ACcE><(5p=YgaKmOa.jkS-iF\4*E!r-"*AbB?-H70uk(Rs%oK)997qeoN9K%Fs5XFKNSe>be2Ne=B[!-$/LOP$<aOm=A(8c
%A3#QMiYdC"o#`I7/u'jGQ-`qr]4MCb*iE&&B!'*C58A*jSqjnIUdk"D6Qr8I;JC,%3O^PYiAKMIq-iInOR$n>e@lp(IMQm_h3s4U
%mSKZJ?2dSN@]7&;=WU,PKDtspPlr(=_LAH?D%qU8empT>)Wd]fk(DY"9]pF)4ODci*)>"U&qS''598l#m>7:39naBH)R(6'6u'FN
%KJ"ZYkK]o,*N>"P7.,R,B(B,b!;(fm;2\m3&=Q^\N0jauBP(C0UWRXAks^fecqT[uAN?8]2a`<RH4gQZTSF9j4YGmVbXtP2o$pn5
%b5rqS26.l)e]392eEb<91<0Gm\X"<J7o&Xcp"M?_2O,bE%Zq88p'qtH=>,!]UbmEgPM0IFc?VKmX4u]J4U^RU8RjnE?l*Qg_8VEE
%j(@C;'GL(t7T2k:h$1Q6$kc#Q]:d-![,(urnjt'oP>PO(XcpgNpGAm170'.&/Z%+M!ek24k@J3qj=FDDm\6J2TV/<<&2R73;2:6A
%q1ti$!6]D=7Ta$'II0)6ntT;PRP\Z8eJ7%M!A.WF>i@Nk"ek0hY.56A,L9ao79F1C#jF`Z4J*uhJ'%5"H5gKC6mFIgDHE_FEs(^p
%kir;99#lk$$,@h[dcTYune^;)k#rW1FtT$TdQh?Vbb0Cb_M]SG36";nn:F6VZ'Ko-<k.%L,m#V0":6@f+]BN<W1IORrhG)u17_Fh
%2Xlf,%ir""j_0'=-B0MgK'\lUChh3)"Aht+'nCs/P_ON5e3QM1'Qp/5&j"<9<&t8E(#]1!PWb^d)ss"9W`2?L*[D$D<++5,j\:rm
%"@-OKW9Bn]904T0YETD%+O@R-$;m,jTmCg8@5007L/M0\fAsr1X/o&!;gb`a`t"=X#jQW8pS"b**,D7PRH`jQc,.k^b%u0^Z%E`#
%7>t&2b&o/<=Rn;",^SRYTO\Pl4u*1<;=hVa&o%eCUT)b/j["T6a%7e2JisEiQ,?7CBfRRZ1Lgo^q[049kon7^Go<$@GZAZ,XIL]r
%Kj_b']/Oc!:ut:D&<"DWh4&`[L@4:HCB$PdL/jE1IDcM?Y):U>'/Usn0c<T%Ug;gDIa2ogRF=q=d>#+7dTkcP-'hYiFk"pZKQoT2
%A<<TS87&Yg<L-Qq2)1hYdS+.Y%e!u3QW*>^K<YNRi/<gTk:g1dI$UQ\<6@K4-%N0CbD&k]WFi#j);:!NZ3mChp,G$0Om_3Gmoj=a
%cuqBR=n``<LI2)DDNB?20XCu&N;O71@V%tH-ZJH\KV0P'iGBDHZn]o`cQWGsY?n4kLhHj`c4CnRQE@AF0,UI-6-TU(U4DQ=Eq(EP
%HlK6iCp7h3lkdZH6tg6/gM!O6betSDK)9Q.\r*g4&W&D#B?=dhDGks(9Z\V#<"^$0,T_hG+dYEi_ldZFXO/.@@u2?5AjS5)l$V&I
%;-"H`#)l`^-#!?;-!HM7dKrt'$V\fDW4^R&+1$iPE-<4,?P'gl`rW<W/Q/j)Yru9MAYl4C0eKec`FEbu/Rq'N>-\0biTPgl0L6jJ
%#![$IbZ82T0tiXCHd/RdMb,;3>aEgUM9^*`-Vahq>p"S,KN$ALX;CZr\+3l`,OXSZR6V3/_]Zjq`V-[kdZdD.6)P6XP3M^mYR54e
%KcqEL-B.)mYf^K'P6c'"319A'.FgnO$^`p]`)ai=L5!4%CMm"[00)aS5]eVa.j5^I"1h\N!4%LeN`%C,2_q=e+cE9.a;uW$6DtV*
%1cmJf"E8^R>(n7:eYE<=>B1&S*[.gn@S[B1Z.*!O7l[]$J*K^aTo>WP+Ff@IB3\tSJd-O-Y'B?A\.2&X=B'+^C)L,bb%5$lWO[Uu
%AfNO.[cjk<N9$_;E(82/cYR'WP9]Y#Q>R,^De%#)9[5XHn(>h*(T,+#BGl=(<@$gnaq;752C@BZ"J3Hq;_bYq4Hqsm[ooaKUOtis
%)Is\k:^fLXW>Zn"eu1Td&Wo(YSi-RNbLfb<=>o5&96NZiYk/PnX^D<Gm4a1t3]W)n#kSnc>=RZ'ostGI;s845;La@sYd&"kM+a`1
%fs;)ne5ShqWaWbJdc_)L[NmFd`WB98W@Z?;S0^P.30f)LYh@[7j7#-,;[H<R2X,V<P?ATBd)3F\>!125:2dIYaQIqGR&#,/:-6!!
%I))DYaOHtoo0B1^om3[8R2lUNW$'&iUft>@h+W0'+Uc6S+V7D,+(Hu%U>^\\9HXnser#.EAqE"d%h<=eisHT,d$9`?6(&m3EQ2bb
%E&lg=OlMb:7eL(4jU(VCUhA't(\H'.R,nu\8@$r$MVCfZaiBq%:A\nbp]X0eFqs&$<pF*r/Qu?;S9pW#"V8^Q>j26*bm0#jdD0hb
%-V[LS1Xo$Re3oV<6r-2/'#qp0`^k<-GDpmBdIg(X=BY]Uq+J1P:Zj;c%Y@]sNWj0+W^nt"qPdHW=M"?mk[pb*\mpVTS7K's*^E@C
%b%T((n&%mHLPjn=@_bT\oW1@cbm!@AYNTD*VC;\_nh*Y*Rfq1IbKg39W0f>+"B#+^(5!b\6)0qF\.!(_AfQbPE1PIVaLoU5p/2%#
%3`#@,dp5ERb<NeZakSk/bW-'"^7_!1[@&.4'?Ete-V5NK'LAef:qNE*d:j>e>'Q;%EEW?teMNO$1#ZM3Kts@9$I56_doZbbPhK=5
%!L]6K)Z>7D78<R7(Q"#-#99'S-[^qXgM]rFTG=et093Ir#c%$C(&ucUB@W59b:mD%csol[<c_DAV;L377e<+8`Fs*:!Jm/#:^1M)
%1',]U^R?mrLd@s3VjV?9e.j35<@_0qN";3B*E358)'kf1jr>Xe1$f(L2/,,>Ud"aOM!D@2i!IVtV6%B2IARFGkeXk`fn3b)q+duY
%h-(L/>QX=2-;UphEiJ9KH>lsh\io=HOaT#M#.mJV!fm,67rL4p.pGZ!eo52oBFP^X0kDQdUA5*[Q4#PmG"UH%O$FJQMgD_F*Q<h4
%@bB;&,WqO,*jVp'9ZESp2(94?Qo,Y5:,f5A"Bj$YRY]7,BY)R.=h,M8ZuF`.rk^HqWAY%?X=9igG*.)69t!aJj!<P^id"4UArkJ(
%C%27`pk39GN!cn/*Ad/5?]<b2Cm6-"lBN1%FChD_N-L-EL.Vt%%hR`\`E_\Jc3@lug&bD/a/VabQP$MN+\`5*4r.ce9Md8FBph\U
%3fCt3%J>TY$R,'rWjH)rbls=1L$Ue9*CON$1FD;?lS[V+L464I-NgKUafKAOHNCDe;>i"2L;mZlh&%E*WRR9?[/YD/K3Q!$"WL."
%";9`hRI"?M2(:jA1'5C4'q&"'CcM[$OD/t'oee3Y^Sn!^B!np<.V>*5fdlD:/DO_0ZBnC3ACcpS=N(?7JAHt+7B@d>:5)n$YHjHr
%Win65I'J`1joAQ3Z3USdUkj%FeN(aOi1sgJ;i+mMZ,u'C2MQ=Z&lM[5erUQb.7`M'6'c0.^f`^dB&2&3.L?KnB$nb@0]sh7/>DCW
%l$E_MkV<Q8D3\2=aoR?\`dn8?JUpbWK>&O^Bg._I2)UPEVndQ"LK6'u=Lj-*J$XGLZmmPW03c,&k"nC[KKU!?6#6PG`=O:mEn.:r
%B]^tE)B+c:iI#Xn>[cG_5NcM0oed^8YEhb;*`c.(n1^;?`(K9>n"s?^%0@m"(>D`C*tdk24Y1;aEZO9TSW+Fpb]Eq3a-$^^lrZL6
%gcs+DGedl,[G\<.DrC[4!JE5("NF+sjm5XQIg.(Dc;69"[,Q5-F6**O!u>Q>VE(`r^h/mYdrKFiQkS"o2CG%r"ni38&Y;R82JF@.
%5XUV&,qjh&E@r^:Npo%ZKr5&hQ$/<aR)4/"m6o;QbO\pZf;q)dQ-:+#!K(M<=jpa39Zj_]A)AI;Y0cc0h_s\hcgdK2MfI)1[3*1c
%,f:Rf;qpQ+"5/EY7X\KBL4Oi^LaE[!FXtA+Mc9P^d!Gu]1-@m_bcIjZpbEMXgS0rc@P37:*N8g<(C3-bCoR:]VBiRZ6E-fdQ^%i)
%A\+'pE)NnL?BmJk]?9qM`Mp3q)TKT0<E1>Ph4T#]6HmGd.Y9e&R4DAmoQ*:H^KEf8gmKEC6WNY:j;0,-U>f"SP\B0QiqUXflb95U
%PE]LS.OE&DY&.DoMUUl0rMlMM9V*fT;$r2U;A3Dc=6bX?-!(<ib)(a009^<S_N=l/0^ZNV-B=#cN?$$Q/6!0iX!Nea4iNf&PW3!!
%i;'7&;G)=O28lCmnSg?I\lLm4GDe_N>4$9%):,BVLY'Y4b2J_*bY]Q8*0-*_<:_+<LL]k]QBf&?W.>!Lj]FE'5q.em<Xjhg2(..9
%L@[r<)JLT<%OK@cT-uS7@B3ccg/'OejRA.,1#/ZHG[(T1;g1WDg7_h4U)U!MG=:m@,@Tg:ajn9(=sS#f`PQ?T@ch%#(!`1L"LOLn
%iJan0c)O`&NGC),Rk'2fVJ2Jt.hp9foQaF`4RtpIVA0G.r"0=!N.o+X?]>0(TbIi(a[-2sejA=D-q/(M==>0^)d#n4e-Q@'AH;C"
%-61a>cdC]^LO?]SNh[9p`uFkGeGBm;L_`=u6*1\N:k2Wh[K>F[V*bJ.l@VJ$?t&J$*^$tQ-Cq2iZP9b?X5`%dW\;"##=jVB=H.*5
%E9n)CZk'"LYt$TJ"A36EeCr%K?b4D<.(//FV6?0#q._n$FJZfN!mBN((1V&t^)IOll<5*rk@#3XSkF][4ah$`mC&jeGLT5mRfA\3
%Ie/86bk:7:K-TT3j\P2R/0QsA<ZJdF%+W2%Rot`]4?1AJoLphIc2q:u_T26*kiQ)RC41%:8jM/uXUi]L??iZk=<F'ABNU^=I;ftP
%RTS[`Y7IdSWQY*IX:J&qJYKW]5WF[:)&DQ+$A;?:S;_:g_YK3Lk+@q@i=LqcUc6d.B>%]=^+T)p=W!%b'.=%$dA*oE)%)&7n>aIN
%F+&"NnG%$LE5%g$=j'0XE0tfaoJf"+&GrP=2=J7C3!79%$.&:\)9k1XU0Ho8_sp*=*:&4r-H[4`l@Yje[EWH7E0gCG"iFPiE%if.
%k,ROZ_5FZ1qbS?(VAs-7eahWT!A_e^QNsG50'5"`<ZW53!<qb'F`>57Z[a6cqVX'eZ"2Kh*usW:O.t,/2lm,mX%B9$NZQH)+6nIt
%^8id:<Z`<A,Nb/JotfT7U:IAT#A4@b6rd7QK55/e1p?1s>F*Q?I'!os=^#fOPm:q6+hequFG%caG?W1BK?m7CH9@Ds8&58QdX@rS
%GYXIdb(FJj266T3g.h0cXq0@n/+paOWAHg5otbcse8]PXn@"!J%:#7RFhDBL;S2,YEgrV(Pm?IfKAG&Ji,f5C<l3,C_-+72+?bqo
%2ka3..cnLK(54TI4?./Yb]t,MK>XdfL@A(^*4@j"5aCou\7X\-7>LHlQH=6,D<8TBfk&ik=rs2VA@5fi?QL2cRgY8>o&)>)9\FJS
%n]!Nt**LesLLs-$?`aj!*f>0L4ugCZ?*QW$qV\Ft\)_"[X:NUN_lS,=e-Dnga4a+]5.L;;Z.0(t[gr)IWMD9"\'tXq_'sdGC9A)m
%noI`1ITq5>S:DA/bk8di]BE-teHb8A7d4Y?ot_*p/.ba\&!"Lb\_;@:*urLXRF&?*30'6.$=eL'FR(GO97_%g#V0F7&.V`0>=i0E
%*/nc%QuXVeY&u[?WWg6?)@dL'LDm9u\Q1KoQitGSKPS16#WJjU0pu$mE0`gok1C#oK2!kh%gBgIY#FXOQNH+s0,g2,$A9?8:0kTA
%('n:B:=E5bI$q:53`H?>hMrGT;B-Zgdj;q9)k=`i."p=kh#@?,He7C@N[mcp]-HqinAQ!q'..#\c>7na.GM?#Q#26:T!@:p%0Zld
%&k4":!C=im?[m.!]ec_SS-,K.JNDsZ2=@`kbrYO=a3OWg.n*%S2Iu;f"m)EYK?#1Gg/D6q/he)'/3"J!]]l*IZ.4*F0YntXQLGt2
%&tC[$e'M5@Lf.S@#6[O\L#o`P&)7_a!f"u'&"H!_gjR-DBA#!GR2R,+3tMOuIYn@?Z(hi[nA*_n+T,2r#7cU;4jEK31V)aTLBE=&
%6/mQP##6+,Tg_I2nA#s#321tZQC)T(i*1[-#:k!RD#ZD:!t:]5\AW<(d,0N?U7XJ=OuN\fCi/O-i)gr%+P\0GBa!^eT456@Lu*B2
%&.CM]Dg;irZ+>U]L=#_eT<aI6:EDfQS%Q_kQQB;ge'EOG7hqUPBhb;:@<mqH9qf?/R0^j2@=c=:_toliJ[=*J"9Kt$.D&+h'"D@/
%[4<1ei(X.VUUD@t,IF-Yd#%tOVAmQJV(!$::$Rg1+E.UnTjnE4:@;)S;DoqB#d!8Ui2/4;c%*V"^?i@G:uI"$7BpNY!p>Ic*^52X
%B2]>8!Y#L,-En'fEC,5_S#9Fqo2>jM(H@Tf$(N#"5T+6+i/BCY1^=(0&gTc=)\=t<BpM%YJ\[,Ba]>,?"O7]+[8I).B0\G]H#!`i
%:/YlESi%X06I4(NQiVcEGQo8FE560Fd"#mki.,lZs8O&DS-7S_*bdUlKPR@VD)gHA4_.@3$jW<5Ls1[@`[&V+MAGT>!tGX<fB5-O
%@PSF)_uYXh>1mN+!B9?hK0_<2!U!C,'IXGNKB**@5/dP8H]04S'F1.37PLGL#99V7n8HTk^p.n#>M`c'%A@MKd@A%',8e9ITah1M
%=1&l^K`Qtr5[9d=%QI6Z,XOO%\3^'PNRNUa%LKBmB/&7uYf'MnXXJ*a>1a;eNaG6Y%q[NRHmU"1)[n\8)tr2I(iVj<<O75XNpi4d
%QA,H9r(T(abtu2YQUDUTL'#XE-a(%8!`$k1DSq83DE>%#6NQ@3T[]^2JCEh.$MZTTJ?qn(TjU:ia+t=DUSE>YEb2'V&9&glnr\e1
%NY*7%X/Z`h(b1hPcQU*WLf^;m+i*XEL62?C!o+(B6_$Mo;bC'F+M]EL/Q@?&VZa-eEsQa]8ldC1(dqh+'J_^j#]SKY:(b6t!RC3R
%oKm#;'DIYY7oKh8*!D3#FUW6:7ja3<i4K7FcZ9Y:>#)'e+<)uiY>,\@M#gA=:=^H00YiPDB[nXZ"utC&6MGU2E%D>J\sm/ZF&>f^
%2\^3HZO'Ru'Eq`>dqOC9DAp;_`rQua>9/k=#973t0e3_n'E.!BC,k.-$4+6=$j[hkc"(r%!lpYLk+2U)e,/Z="sI$72l[?+&3+RI
%IYepP3(BQc<r=?U3;"N.H5d@(jKf*+JHHCeTQ)h/E!Zu6.,[3,OI_o:J7G^fUS+B4ZXA`g`A83I(5^[!5lkV/N8tBV"e5a<;(F@k
%'QBjG"V@N(J2:7Qm,:kWE!Bi.a!ERs2bMn3LB2$KM/hJl$omWN_$_&!E;"c:f[c/"V-B.,f+\PHA;(M,8Dl&q,7n3L!f*Tq\;W3h
%E+Xf[_UFU^&PEeO^P2k$M4j^iOME#O?!'Gqa!6g4IYn9R-m+"m)\P+\%;FBN,]Gr3p;RLI*33!4fbtJ_VO/44*=85R(P9KIOMJ+h
%"?`S*JRb9BmFRK9=f9hK=rlmk6_!'@"HN%!$dt#p">9@ULr7K!^ff"(J96DF2f)$%Q(BF^V'pF;1FR4r^>?I6$J[<cmc"KUc2oZ)
%dE\E#-,???^H<fEq+$-%K*#\&?.+h:<nhm/nMDY5CD8%:%L(._E15T.>`hL&o1=]=[mgJ9F!tu9>36AQ-udho3N'4b"cd8#19QR4
%i#FnoYX!b\o'$t7TYQ],/$Yn6%L%kZDco"4-ubi:emge4F=;,%E.pUOZJ]m1`?(X;J[5H;mFMdS*$rWlG0utufgdB5T0e+($Vd9&
%'FUGuARqfU@,Q9f.%'I%0Q=ZWD7PB)NeK+1m5$;4/9I;KL'91B`.AmC3.EE@.2Fmps,,U)=Pt#g762Kp^a2G77OW3iTp$+_6\.V!
%NnP0S*:k9m*XrIHQ2-$pX\drcL9AB%#olt4OjNk4$(MN#E<H>51./Lf$j[gp-'h=/!_;f^ip;O*%\-dlK,G@_0e`mZd%J/l!:JW*
%*=<bo=MdH8$ClQV_[JJGEMN*8bcnn%h)&]]!b[OK79p?1*"mE/cEY01<]%N2C!.`57t"K,",DF*I5<^!Aqt=B2DfB%5)bPW#JT<s
%h\Z"]a`u_pRAB:3_ZMj!]45c:ido:'P"/=<^nD9EC.;ag?NQ=_.6YP!Za*Dp(DRFM7HF[3R,NU+1T+8K7m(aVK4JhT@<;L&akS!p
%4E-l]7Dj28J1>F7.j"KZQTkDA*]P3#4-U<+TAtLOP_A5Un\DF%M.kW5^^4DdhS^9Q36%GjA]FmcR[#ID%1h7$_NQu$35gV"F?"5U
%,DPVJ*&tAiJ`Q!5i:s.5fJbd/8m)!RK*19]fNQY[_!qh:XrS!WE#8S93.h=2LPRS[%L:99IZAT)",CYuf9i2JJ]!Nr^huLAB5E+;
%X:5UYd==mmFG9u00bHN/)E@Y0!?Z)ji.f1u9FFYD^`h!X`70YKcIe_"*Q&R#*,fJGVq]S6%E[uD9rD[_GRm)tSY:TZE0i^LL_L:<
%&qYGR^qc(f#9Hpd!_:6R\d9-3Mc,;B!<nKo7YtPA!_6NGqZn)QGYofp3=n/ZJ^O9*#98?3jUh\:0gJN&_'o^Ne/&b&*<_m<s4NDL
%i'k1?jq-H>\MH8J3+=(@gWpGH%Jq'<*>-(1OZ?8AE's><6:FZ^^]A&f\tfN1%P%eOIWGMY`$K.gr,6[pd/e"Ohb9KS)OR4J_mq*0
%Y+gE@O.T7F%K%/iB7OWc@t2C&9"^QWIn)sBgZEUj%pRHD^u+Y7LCs6L*7lat;:KM`=g?(c#5Xm\J.["PD[_nL-t+@a2oUHGBqX@F
%#Xiq?rMB](]/f(6<\O?f46SUcbqakJ#4;_4auSI*CR=C<hrr$85acG5hf'P5#1tjE/p\uVloQ`^GR++8rE./\:u=[J$tVj'``k5R
%duh?^U_@Fg.FL/o//;$XD[I$Xl:Bfock)TiI2@JbQ4`=":7j=R"6[95M:Zm;DtGS.k=:bTe2IcHlP/D!-aV,D`&BFdW;($+h]Uc5
%0Z.PuhF2::Npf[b*,OL:mu?+cF^^$m%9?0\b]IfBCgP+F)R_T3:1P6u'\XL_;ki/.BQ&a^'"N2nm0td7U-j8p6M.r$mEHP02XJYl
%]cgucTS%SY;QR>(9.18J6L7U=JU=.d@L..qp4bnfrAd7=`g8^F<\(C5ZPR;"BXlnfBf0M<hFp^,D*;>t!>nT<j`Y$M`;Q['kK)Kg
%rhK%],C;67T9:4W]c#p%A*P&e)p*s<9\(6<S+1LV>0WbSEIRF&3j^gU]'=(B&_\0O24`qkZo9U*fka1PVP"L+H]%/!0stkRp4e5l
%PE,$)a/'?4AW#m"-o),1)R_T+$YJZc[Po`KVUXe]hDCC9F<e4Q6Lt:'JK<Ja''[&s@=(WQg4g3oS+1i0Crc5r[UE-gogtC*7:_ok
%7JEZ:'GOAl7/*Qmk/%Dlc*%t#)Ss+$K!>tt#4@I9\Fcs^E,X<`\S+KPDaTut/RUARD^$3(T17aVM<\SB2fN]H!N<MqK6nR-i6)Do
%/\t:C@XH9E@0>5Q,tUWDG%be0PR)_h6@0rH5jlB9Z8WFGD#S@ohABKuc?<`::/k,?LCr:1@;sr6%GRAdW$$miZ+]\4$t+6pDo6gV
%)kjt(-S]?uL\><kQmuC8]cgc&G),d'iaW65aPO#AiG$c&]j]g)%VLO_9rjm/Ru6Qlp]=:s)mZprl'CiYaPLb)k7Q4*]ifVMZYp'8
%%HgT]`uDBE*)&iJ3jcB3EG0"`#jmU*Nj*jeBQ">pL(W./JPTGY1MC^8`#phdTtM<i'NB%*p;WRVr]c237\lY:iXY@8+eTo66hZ8!
%5XQ"5S!OT,.&'.)"(<G:^tsl.M':;t]c!ENap9d)HS\:?P5GON%>c'W%G2UCHQbJ>!IHW*a6nK_ljZO::?fRN9[$WDl__JSlpEMQ
%N6'k=:[iWtp84T,#dl`_p*Tc2i%l)#)l_["R*#p+c'01UZ=hhHbT!=1W+10Q)8cB@@s_-#P,gsT]r;EW1aBFf,Rd#bTY4KI9U;!!
%m>\g*j.V*PZWc-$[fPpAW1LpI(#5;U'bf-6]cdsncPa5O2lu74X7FHNBP#*ThY-C+$ZQ%):,o1;ku!gVHa>=Zckoi#DmnmBS=sA<
%'7>"#qfTjNQGQ!j7Vm!(YfVjNhJc,A[V?$6%>0Rp+V!.0;UdU`d,+DT1J)M^d,),U=C'gW]iih1daa*>^&=dg5H)>k<k)*6eg-!O
%$D;]A$&Np,^k/N7_H3DhW)Kl/EC:?>O;$1N'$J]8LO:l44#GR[/-@1-S(+5s(mp/?IG@\.=F5Z:c6C1TfcCPH'[02QZ37HU$b@?V
%QcQa",VsaD-cE)V!oP66RiUcrO\GpK+cD(\;4\q%L=g7r_7_I#+(u&q,'P\gU%DcfBuF>rqP!XlKdmJ(1h%1"0dql$.B*J&MR3"<
%@:::M/a++G)md!CYV6A:_2,I0SU-4AHPA%IjV>p);.Kh$%2*5<_Ki6N$1gW!D0gjs!O+(n<knj&#AlV4/fmE$OsHj,fQfiOmU4X=
%e\/JS8>5BK2q!R8:n:$(m+B[F64`(0_WSmcA`+a5/<mk",f+\09),&9)ZW!9M*3mjQGODs#(5;\P^t:KejCWd#q.DY!,=ptQt)=E
%YjXUU01+OZ%m]$REC;9FQR7*C@O-C0W6t]XWK9O&&QR6=`M4G_q'dWjp&HC]=[S@niW+gRDR>$bjqWUp,<"an#8P4cUC$@u5+HkT
%6q*<3_QmXdWalF$i>Jr&XkHZ.nEal<5u!)aZ7,/8$98*:,R7FeYc0qjF'cjL+AV/)XMj+#,snb3=tPd<N/W+6`N?dYB[6]GY#%2l
%blTk3R`%t\K`M,F&eL_diBZYCVAeB)UO:1gUr\@5c\S@q0F/(3I=@[oJ/4/M_ar6$)W_7\jeX8me"Aqu_YjJ-S3\icla@HD&MAOf
%>^3L+h;&&UnLDtg=Yul@#a,K?@6kRW:ha@K>&"^$-7j+Ffi.qX]Pe(3_XGjed*ki%7G$b3!)*D%)i':rno5g.jq:0bfqO'Dch]W`
%,ebE47skAbkNK>F<o+.M5%=Z-B,'R3lq/TO8`3Pcd1Plg#2k/BK\4/niAg[!ZM4o=C#fNGQD6W67i+B(.LPCT:9d.H6cgHf6qe]C
%Of"O6'EmkF&m'<P'L4&AWR^VgJJM(Mlc:8ATETMZ9eeSO6C9%S=+I]WVgoQi8dPdT;2F=aY*9FgMc6W]85'`U6*SZWTFWI`U)SW%
%$4kD^Yl8_U">`dr4^uDKZClrqQSCjBjRH_M*I`S33*rq[^O\VJ448(-#sSL,&`E_B7@ZG!1WeGb"bOS4T+Y`M)!"G\Z#jP<Bh38N
%&V;1b9(i]fKRa;`MP*/V[TWil!RM@^8,.a55`n2T/0gsDGhB609<1=toS(B*4@n]`c;aMJ@l9b.>&PBBmdOnkHLdHV,11a-VDf_,
%.`8%bau?$JcIu&38T](8pt^`K@XB>?:YZ8>gYo-1rTL@B5V'hmAjH]g'iO$F;'!9A)kJdkZpUU1c]U>g6nK+ZV$JSp5^B,7Rq>_,
%5o141!BE/rC?&G_o1P)pA],]M'9GiLZsf:*$G,&m;L#E[`E43BL\=\3BO)*&@?:cbW*;a=/$<="&BR(^^e[^>A!G.MYr/Eh*Q^kb
%eAQ,6*YC6#6ap&L`-&QJ_CRZbfXiEeJg<T)Ecb0I!/\lda/3:cKq[.n]S>_d]e+I5]0<Jh)1';LN-upQWKsL4I,QVh-7on4RuBsT
%4no4qDo;*Ud%8Nm%Yq\Ak7GWj/,qXU#r*,o:L<Ta"R9U32-M:-7!B;26C;lsjC)qBI;=6o,WeOqMUVc,AmBjEaM9mUCk;<)Jq&/7
%rTCV^OI`@l#7aag"s&=.i+7QS#@ODr^aAVYaCI3T$fX.u+:g%l-3rIGOF&[Ti)%LJK@H$!UKOsaIA,9nJB6\-c4!!rKQ2.%69YkL
%e(asNE$8R!Ipa$bIYpjTU5.Ath&n%%/^,rHa;dh$$BB=lV\.i-<Yj?hJL/iNjrKP]:gXEH_QiJ6f7]uSr_YL!5n`-6i]W36@+(Po
%dQkZe1V>TN7731\Yl24(dN`BZDhoHqLN/ZC+OUTD5-+/qWU%)LF<YUn\14kde2)!e.5R.4<^'M6gsP'6'f%erU]M-4jq^M4`'62t
%pZjk!/HZZ?dNI>f8IE/@O&;baRcBdG;66FEWF]t#aV9Y"fIX;6H(pV#YD]?Dk6GaB66DZhN($YO!"Bp!]"FDRYuR-!Le3I377M2)
%G:)YbQ(=]8b.82t^dOH-pS?H:%n07a"LpWHj)KmdU%GmB;Q5KZQ4M8PMhZ%?!\%,Z>MDS=da]Ql&m`C23c-c^2`7Tie:<H_g[IKl
%X2)OlJ@UEB_lF2qB;A',6t=.;i.o?JDV>B0@I=Ko.#%d"&QN=p0;#&_&X&h2$1]<4W/?BNSqLFeU?MH,%b(M48mBD<9"7fa=HP9T
%9*lRB*qCQ3"iT3I?=AS!dAi0kOp"<XW<NYh!-FW!8P2A1o)p:n3&I!B+)%3tkM0;JEe0`<&"ek!91m!pN&q97'o9&EO^pO3E*mj%
%i5omYhK@uelU75]85AYK>K/E0m#fPeKVB]Z#f(ko&6B,d.@*e/p@(tS/e!:X91munM(E*M0XX7UMl@9<fLa/JBj=I8Jq\r&#I%@X
%ND6gLkt,(`%aUTP,39S7!Jp8G@UR#K-GJEhG<Z"f^+\L='CPR8i0GASa\E%tT\j[V!>$I84Aini`UfA.,3LCYn;7k-e:lfC2+f5G
%SOt_#H?@0)W.r/#AAJrI""YHdT?1D*O#gSN]t'*Z?ol,d%d/jP=.j"T^h\OE_2aMAc)!9gFMj#G4"?O).5RDX#ro:NC:oRKb]'ja
%rp"4a76NR!)VrgN!q_@/@4a2,Z__,@<sD"n9nL`0Dr2*\Hn",Q*/?RGG<_$h(<"9MTn!sdl;SPtjbP6FM"AHc?;(oi?2;ho8/!*&
%A/nYb4!h.lgh&ieCVOOm5(l5s=G2+T3QWi!2FJ2jj&?<I1Zj:A\]4c.gk5uG`dh\?nk.bPW93uS3X.,^cUo?/Mk]X"#<N1udVrC<
%^'*W2l[<.PF#A7:JRK.Qp'u"pC-=;$U/\\@/oVgn&*P;?@8Z=r3t$VY!0C,"\L^8_H\$]92I4uLD45k:E0=XE&qV(r"7^A>BW$Fn
%VO`&+I]+oF!eVdE6rdrfEtYe:D(6X=&SMh[@C1(eIS9_aL6[H8&-A1bn:JZIP58SgcW04/fqnn/!@0PeE*]N+`i2=q1[qAU'W1Ig
%)EPZW5SKZ#pFDu;a\cb/qZU1LKBu]Sgb@)taX9\Wc%$>#M?MZhN<oJo&BZV$Y:[h?\O-:1!%\P8jRW9;"PXm_XW[8dm"E/hNM)@'
%XBrs"6PmN\n_Er2pRXZh`4D]Jg0c5JW$=!P;aX%q7MY9*F>dO7!%HdJGpQ=!fHUgf+HC/?.*n)!"G\QQ3(Cd99J_!urA,,/'F$h@
%d!)^K]NR![[Y+1AjTRgr]h4Wi0pI?^I(V/==$gh*gaM)*S)H!JTW]\ajjj3hX[e%an?bh[#32TJ,=0nP-*WmOs+c,e4\4489]Gbs
%]3Na3jHlh3b++faLEL)F8S#7UZ]al0&,K!o.O1Yt0EMg^`h3MWEIkX6PmpDNMVZ5mjNq&0$qT?IF>;-_o0r!?\`.\n3bHDqaJ#=p
%5_Fn3%H<t8%j]*E(2LX%Bmm`-P@YSXc-[?#KT,SSm>((fT-?Zu<d<*RqUBDC6d=sEDW.)B`KXTi=/Nau=KS6lf'J6HaWt'r8T:7j
%#fI5Om9#O,GRrfW,ccqk\pS5g6kWthr)+n[7(in';K+ItYH]ncX"Zg?$r,EZL&rlBPPS=9('Ub$DJXF?:&pV&,0?Ds&'YIf<o"8N
%.su4WdL$d6kq7Ur'#hc9O]iJQUbWVIGRF3`l>j09L:YVYZ1pqig=5(TK$g;!L/S@J+cHh\B@b.ML@l`[$fKlTI%qmLd>8R6%,<4A
%WQ0SW6Yf^2n4OVQ`Bo=P*DgCk5VXNIIhc.bDAS)T9F=\\<gu:GfU,DA%Xd#qDa7&<<KMGC@"JX%jH-6JJ.Su8OTZR?,F5?#EMg"t
%Ztcr;<j5]QYThC]PX6d0)tG.Z%Qg48[X>XZ!O.`;[O,A(n;BoaqN,*/M&;X5f!dDX1.YE;$p.(&);L8+rs9!S,9f(JG/r*'oX(<7
%]PO'/6@d!PX)Ed3-Yq&@^nq5q5t1_6&cXmGVap2.8u=bE8J^Fp,ITS>X5P=S8oQ(sgKXbZ<G9F(4$fUuJ2f)32FIqRC("F^,'>$q
%Vj9g]360Aligb%aGu9l1,&+9'YVM&d:)r64lj9Y%TTBCD)$;]2OUN3i=efY!p&d8eWjoJka^0nO!b_m)CX<8j30Yt&Q%_6ZQ4?[L
%X&6`=!eMu%9cnkB/_0+_!`9Jli%L:!_S^U"Z_p?m%:S(tZ40$8p$&&QMH2F2Golj]rD/4q0ERnodn"d^kUN89=Z"AG6kJ'GiBY^5
%TiQKmcBc%pPHnmH'Uk"<o@kH[+aO@Gk:@K;TF;Qe\BHZp%+K`6$/tN^OX4A56u9,"*-4#?.3W24S4@]J$fSC7;L9/f8&:u@&IDj^
%(ketnF:2I_:*fFo=n+tS^$45a<5/YcE?:&f:!b-D9Td:8J94mM7>rpY#:@$DIknQpSkC;%S-/=#9VZt5.K/QRTbqe][O8(::[Bq`
%X@k*J;kqdMP2d`'DmY<m&IAQJeF8=VJd>ZTmkB_b!b55f"K&N0Op0EM1.[2)[V]tCC/Q#0>TqKH8eVf"ZU$C+X9XEt*_A5?fOHT'
%KU@9T*'@>qN6ul'"Ki>^4PYn*:I<:Zh\Ru29E>UVR#X]FaTPmG1^S;sEXMoWo7Z4aaS^Tg"\C7G#]Pu93To1-N5TV[<,;[bJ:olk
%<-;:jNgp)MdNfk+K_&+Zk)VjU#S5*4R#8UI#!cka8E+sZN45`;#FH>!HXu0]61\\k.S@21!V_:4IPQosr#j+X7ji'09s_<#iWJR5
%Z<A*]e_j4:$#Ho3b4nok0!SuW14dM7&1!1Xp'LO@1)p!bS%HKW2,+H[N@P+7_8,pr1")o/nP^6X4Ec)V--1/9f@]rJ`uieu`Gl5U
%i>>VN^j22*L2eDf!rso<Osn-'#[420HRK"E(,"o\Hg<K+bbn%I6sU1OQqa!FboYq0!=<iZ09S[@HWlG$)hlq-)./UW"r*UuVM9`a
%<W^1;,ZG3ck)l:1ZieD\Sf=U]%a:c4BSDk_Ai)SXH@]QjfZ;7Kd/>6Kj9g!ZP88oF!i,h?6DKpgpj/uT:;Rn3,4A.lcKloI+F%=G
%8L6/uZ=5UOPEeqaHJ7aChWDjV[IiELAi\6=L`4o"c^GImN=!Pc/BYD63ikC/H=-s8[&Uj6>f\rN8)Ku%pY\B,lO]7<#]>?lIB:k4
%<KgT)nAq-Ih%WZAPX0CKl[*#H84+7kB001fB15B-qJLHZ_;Z#@*G!6QQhBj[=D:g5Pq[/%M;jP@A_!U^aoIY]IgSip,KX#=:qMZ"
%jp>*0P*1PEG(K09;9s!IRU2qXjT#WTCV97Tlp7mZBr2#l'us(.6-O,S]OX#L.s"(:j$S)W$qah+"-,?g9G/I!qaIj`fI-)hF,a$<
%@.FbibKf=I%=lZspPG:&GdtOoaAM/D=n9iP%Wd#2i[?t!<4!'F:d.0[9[l0j'&Xk;,*-"]70rL2=@@NOpi$WAGjT;m6P#VkR,[[Q
%FYH](X?UjUF,g_9ZH5CAGVet!8^X.D:^1lo`#b9-;ZT/dl]e'cGe5`XJh9mtJhJ8</0lJPn%#ZU4jJ'^e.`(ZI_mgN%8Lfj^k!LS
%<he^ZN.ZckO(FQ3*^N,@#a]$h?2&k4:L4AjkcZ0M+c-J/UmfpD`/p6&^G016f_-S"B%(ag8[9+q9cF5O)p+0EYtE;FfS?C*LbuH?
%bem"_Pmkqha"u4Yh$g:g]$'II=d(-3c$13l_%e>C2\5p$heK!8K@C((3@mH21lEp$!=h]NPT;3b3)%P4H0(mNBN(()0PfDSKS%TG
%j9l``K[u]Lp`dR;OL!^STgaS39(J(0^(go5qMhI-PVd%T(LV)'Lf96"'%BGdMlB:#`.m3(\.6j.=Cl*P:6ZqDcf,#%^sMsq,j\)F
%,UR9<YDSBs#Xpi''d.Z.AEBbEV:[n%q4f+l6$Lmb+56@[<Ij\$c5iSN@YB"&l-_s9'o.G:?MM.N7mN/rnV,8M/a"uoI+D7'#o"M*
%8C&E/,d&W/&o=FuM%+W"oHd4"I685.3>/\HWA0)-'`^&^IJ`eS&4k60-r4fa6m$s%:PPW]&(EXb5>e83YmWC*MF.Ur-#2*6U)BP=
%Y>-:04Zreq:NBp1d\:9&0h!E7EMPApMW6upL^'QKe=RN@'li$8o`.pPCTJ$f2gY00/'Wn5O*W%*e8c60dE;X>D2OQRO>B6^#U02+
%]Wsu^.3q<Q`FlGIq>1rN6\dTn$ucL23^Pa0e,ugOJZ0JU[I^20*&#S-9?DE+*lBO-)Pk^a02)&*/lGGi4Si1e"u5'J6R/@XKM+A1
%XIR[K0%jj:(a4uNSO3a8;*Zh!9-OSaW^0fI%,D^\r8#L=\i:o*K_NM3A2a`F:B$tN_pSPk?LSg,<8)R:@@C6\n;:,;_DGOW&*l5c
%=N)X,JtX2)@tPtd6c.1`nis"<+pY#03A[3Sh*R&M"166]D,?iJl-iO?@mq/";A-FXP[gcr.V2c*U+L,2SNM`'"4o&GMc!StV/V-h
%b;&DFV"?*(#$jq@,UU=$^!R<"FAT*hD8BU,g^4iOD/,;+,-]7j%JZeRHXI7J'e+m=LBE-EAEIJ5.[",q\!J%9COr\r&ipF91,q[@
%>7Uhnk\`X$Zj3$21M:N[<KhRb+<`:n@t:d5;+)Y*#*dWM%H\3\,g.%aRkSXiNAH2&e?D^3M\`+PMINalUHnro&h7EN5%`LW<0'=A
%O^nG'b)n_UD-@Fb-K)1<5,%X!"r?I/Jh7>OE^3PiF:s"5)f%]f'mO<"fa%Zn88\UU`#LXdhV]kT>*$ch#tX^^.&V!"-\55I5u&AP
%Z>glm^Ar,$W,Z4MA<?p6hb1oi.u:m'O"s^c!KckL,(DL1E%H."*^<2B]gts:kd#^in>@HrDPFt!KrFM.W)Y"/@R./b#mrq?Q>u6k
%!Qd**/($(BUsos&QNfflgD\F0UDq/d]90s=U@Eu6E"u:/N"&6c*>Us<$!M2=2)'i#.Jk2_Pma]NX9>UiD@9qW>Q:dQR2A*j1kQho
%p4Cr'D"\9.j&eO/;X+d`efI1QTK-3XaAMdA#\_tZXFuZ@0M9*CH6;?%S7q\m@c$.<BVr65T8<)@2QmhkT7u+f0G`'M(W;]*(_C[D
%?FK>`%RY?%d=K*F,54c4(1;HMPX)E08uoXS<"Mr;\tn7#J](/J.nMra6NZuc6[gf%'@`E1`":/08po)W;na)2"j!jiGQoV3k*A@T
%3Tm"-A)C\8:o,_V"N4?W0e"G6Wh!fE)<#Ue/fC(`@;j8t,PM1W!#SbNcpnIa,2c.\*TG9g(`Bi(2/:1Sd(g[?eZY7SgL'gPKDN+A
%:/A#gO3GXT&n2enSPMO&L\&<Y:h3"7gnN8c<Ofi-@KA.Y70gbV$#`!?[53;-[MphS_=S,r&jm+:'W)nB3WLJco&JjI7("RB6*.o/
%e-&A$m?k:(2B1?'@<T`<OECu-?q078FGpU/#H5-/nP66_(_f2>GaG_OA<L7gaci*p#3PYn4qdOAXJ1Ap1%GT.KogDr$hQc-b4EKO
%\Ge7>rZT!#Rugei"XLtR%Cg0A]s;Rc+sM3'#=T5;*!X*^lmX0!076qB)m]e@`M&KQ-V5MF6C&EkDX0i,_D0KXR7#r!-"QfoZcfdk
%9GVW:d?lHr/P^:YA^oE19DDZW5U*$?Z%`H=!C3:p!A4@%$:d5g@hLN4-ZaqpWs4^7&Yp1V[d4UFQkCl[&=e-!O<cAL&jBm(pE:]u
%Nr0Tn6@8idg4LMg-3Q7r@MPZ%XJCr:']4Wj8TH!!061S>"mmUG1aMFa[#HD#IgWj:/;-.(IKc#eY'3M6.t`l%js4>Bm#J@;VBQ+B
%OKL>=U1PDBOA)mQOe*a:,2GI?p(Id?g#B'_ej(SoVBs;p<b-9W%[0usS5f^&c?>GVhVh.WC08G?]\+teEKS@`01!NcCcf_eGui'@
%d05lM^n;%M5:U)/:_(K9R+!=GpLHk^4AQLrkl`3$-5biX!n(506K7^9d<W9_rIOZ6^d)=fk__&l-q?O$e(RY*2@GgTb8+X6X"q4P
%680VCrd+-\AZ6l;V9[j:&K]W=CcRqa?N`Pd:t;k+ETJ6i9SbN!-s<jd&lMl[K?5\F0*68!][>*2'TuL$>=''5rm7Q9GVOBI;56N*
%>=1r/(a_U!0FRrm6_,86ZB4rD.rZ?dO[n,d?u(Q$l$$`*+;]:M-kNn[o^RBl3cHj\B3k[jN"0V8XWecfj]Y#T4Hc;Z$MV[K#QdMe
%>93eh@V]3?CdQ"YIftH2ha'6:e=e=cfJJn"F'7ES"F^>#-4='?X77dh?DaA2JsD)d98'ML`"]S`eIF2/'G\1\!,+D58._p,SlhX1
%-2=;_/fou/9H[&a2B^']>9@QY<+V1g'0cU01p(^`?Q_tA\?j7)7mUH,WjlVn)`_M0J.Nq9f:Z:h0XsJ?Q_9]kPWfIm5+_lJ>iOk>
%YD!TWh&r+^6_V[0a`HBl#b$*<?=BWD_)/7BjTUeP@b1<qU'VqY"\)<b=U)]G@/05mrK8cL!S:cn"F2>(E&s*sP17[&.*C=7cF^$7
%@2'[>$UXiC-3sp]:o4>MMEHM38NU&U=+lgO%)?s;%>(e/>0$Ka\rp1Lc,hC;^qk8WGLX'_5!Br49fd*Hc(cZikZS,]J<Rba>;'hL
%IFqY]i>>/k-mh5fN:c+mDDj9AQ'ed`Ni<O.%t-sR#Gq$XNZ5cC'Cu?/H>&%!"^JN6%*-`B.2/kGW1[@6L'2,p".QD81"e<s$mV_0
%oH=MFSm"C;#FuT7I7F-bb1DP^#`qj&Jo?RMHN`Qb5ou3)Co[&KMD>uE0P!VW.@<h1l>u!NV_9I`SgpQ^n7VqYi,Sf83g:6WYh5-L
%M<8EOJ?@#\+mK>2HU=PP>Y%\!`^ZZA#R6lSjqM01HVGU@kp,$L6"m1sg27#A6s5uD/b9"U<tH>SrFsVJ[m@9e?kmYV&eg7[7[3Mn
%;G6(_a2/r:]V$n"mKM/JJY>mUa4ET/'(nn^PchQV2H;N;9@+CPe7k'W+81,pO>t$,0]N)=.,?%g5plIj/3j6O7`5t[\Jeso@.t?k
%2Z[-q3ma:O_EpA'39@+f]"uIF89SIA<arM("s?P(3<0=gX#91=r#]Ap4(t6i_),`2(@5/C>R3T!>*U?+2s\)[&'7#PXkg5<=EPtJ
%+10srLi%r\@=nqq!@N&P2$udtrcm=D$/S6O%tg2>''1kZZC$TI:,IRa+h>OoW2#\a,F/IZ'-Kk[Bbf\k_E^.R&HN@qjmf6<c;b_$
%K-"-(`dfZEQJiWsLo'#X"SL%OMBN06c8p'SfLCZhkY^Cg])/:RR13ae#u6*1Rtcds'Zj?K^Q41a7G<GEJ_A`c6OK8J%B'L4>1K3F
%W=C&FC-tlf\sg,TbS$?C;m_o$1B01NGTh[Qo(dp&&2;JR02IdedSGKai)nd-#mC_BGn_jr>`/TcNnBp#9QYUmTSlho:3tcU61.bY
%9ekV[d%+8E7LTU^fsUUB'%3)?MQK8!:i,W7J2V@;d+X3/M=oT_%#G-h]RXWPOFAj%M"$07DCeAD>T>gFH7VJ/6;or]r".<$MD)if
%-o"GE'\atm9\PL1g_Z"HaaJGZ!m;eo56gc92f0GU0G)S>XqZHn6uN)aM'qN<+F.-3c+,J`:fms.)2&6hI34*cA>VLT?4W'qp>G12
%'cS'a_Gj0E4-2,uo.a(2!m-)W4kg%bQ4^7#4pC6)nQduQ?lc#:Hi$/PInUBO0b:UPO<g`""^g:a49&G2KsWgs)sHi:3bXonVsacn
%Fb7Ruq1h-mn7!dSjP'*_UBO\M;<(N@<X>,Jkq#Y!7mq-g]t&P9i^=4P=N0ug-05gEanFj.6R4#,OMc_q)b#i\n1NtTZ.;T%1Qj-+
%WsGg`9O+0XGRHH(Lgq0<(*S;QoT.4.#p9n,?FhCWC77Rr"B(?sZ>qb2Fi^%3V-F?/cYKG3?iBZ'(MIX\!%139`jZJ<Ta<'K4^1`O
%/833.T9tlb6?JsOkW=&DR4;#iN7*#7PK8@b:*FDj$Ed\G%P8r>2(4<T@04I\LT/\rbkK?l@H!_RgeF.=,q5W,&R?NQD94UB15!/B
%Z.+T._K70n7/B2--@=FYdXu,;&>O@=75I#o.tU/%p`qD7NC8@pA9j=fTiq[d-':qnn)BM'HTS,rH>p".Ne#p)kf6%,8UAB'j[PqD
%*jcn<[4VW7>UH52A.6s2NCP,PU4mk\bTmNt$.<L\AeV77<8:lf0IDC#G0cs1Tr#MBLQ5?J,V.f0]SqS?;FX;eS:blXJ<)a>:iP.I
%O"q89<es1AUoB"b@*9ad6(0u!TJ95iZq!I*lFo4`XU%cfLqLk?"5^[]aie@7Z+U6O$k4;gTHK@^cBd4JWkbi[ePG[Z,fU:K+_c<5
%b?N"Lb)%9O%Vl-s(p!RnJA-kl5Qq6jATf!.Bt3soib0BCX$p=.`@?``]<U!c:.KVp\-XOMLl:mIYk!c,a4A#(eOD)_pWeg4q'j1!
%d+RH5,XK:njiq2XNY4:e.AiIi:4,2u2/\]p(J,%7e1)H5TRl@*C@6mFa07d#X]X!X$%fF`[kDhn1q:Gq_TN>n687^FX<:FRXrbR(
%ba_:d/c`UkO:E9P^lV*V/:n'.HU#0]N$0>Km@!l/[Mf,n."_R[W/H8i)`#':aQ15,\S`163d*h/WN'UU/t,?$$qJ9%pOo_3[XBo4
%);'3K"l3B.8Qr_6+P\*%RdR+SWqoYqX!m*)be$FQk9)(BlnOTuM&dZ4mnPR[\0MYgZYV-+:J[@I&;2psg*Y!D&m.6HX%7Sg65?i+
%=?9HfU)EjjIl_VOHVpV-3@@dnKj+_WM1r+7lrb/l#o\A.OgKQc-m5EX)JPT<NPbB8,7rB)J6"$Z/0lQ(l2$MpGZM7E^X(!/cH_Or
%-]8.,$IM)B_9e?qHoh^S*!+#T+ji"`\E9oD=dMI:FOSf]'TZHp3^B'*-Q7-QieTY3XsXF[F+VS)e,Y(IG784cPmM@35\jhpmKV*\
%;ps,rBW`%5M'b]_)/K"mT#2LT=dU?:[@IBW@H%GfhalW@+WC`O$cS(_5:,Z[5qT_C^%oN:AK'qKduZ>01Ea71;hn.;bTTQsSG\I%
%#MU)"'8`OT"/9fhaHnZmW04JN,hQHJp4@<4$,[H&`i$`B&D>X$93EkmTFZSNM#g(Lga&f\8;W-#)&7!heghB)kX!4N7?pUfV#b0C
%MG?dM+riCb;-XgD1?-BMTgCdr*8n?(TIA-l7D<UmJkQW03O%_C#RZ2#_O;kg#;dKiF^Z\_fQn<1CfAA%o;CB>0Ol<o5b+($V9crW
%Z!r-9WabU!LR(r"=UKm,@HTD:7g:Sr*afi$L_9]QT7S#`#\b-Dnq^S'\-;J%LfN]B2OXr,dn96p8oPsH(3*j<:T\XNb(g!s_[@%t
%EEHU>"e'Rd?s5Uc,aGGqli;:O;[1?!o3f#.-<0+C"9Q;Nk?#JD7BAd=R^f/P7gsu0.\Mi'Jnbr94/:Vn9]r*U"knO]*#TpnHfumm
%Uga]l-t.$Z=X)>4liX*`?lLE&e2rX)c8f(a^^(s>e<Uc4#mmphlaQ[*k\=nJ)^O9lU`W5g3Ib-^\<@IaTl(L#MHjk*F:s\0=P_24
%Q6\U7]$-(KSM+11KtU*S'9\Y?XV6Gb0Vq&h9IFi(gqeW1C-]nEC&"MmcF-#Pg'HcCG%FQ@3Q,j`YJue3W_4IC`0R3M,h7Vnl6Wgu
%*$bb<!6.QVK8>?6JZA$%npeN2$"S_;#*0`t_ObXBc&)o=4)FD,AB2Y=(/dU%]pY0(-2Wo\AW$HN8:]rln!5L2#bP?91=O@g,&toX
%c_-6?LpRG*/Ri1_<T4[I+-lb_T*\OP>1<cXk@X":AH>P9D!]X>i>k_?.gG5N-=jle6\8KZYsGZbV4r4fVLc[h%([_P.Ca_WPQaSX
%KE_q8?@L=oJ1X@#!C+UY3sfId8h1SX+I]kV&\'Ionrm;L"9plCQOXJoVO?5^(hBI`Q37Z`ZL&9Ha\\'H0uQsHbJ^a*88M<nK#jLH
%kd.X1+nS(("Q0r,3&sRrb$2A<Omm49gAEBHM,XZW)3?h`/[Y9)r6WJ+dR.lqF3NPb$\kZY"P2Ed$cbPeUKW3h.k#Hd/da+N"Ho20
%T4b;jo\*S:KL-F\Ymn'6deh!Z&Z&r*".NT<[HqS/27"*E$82uj#IP"Z.\lVCdJ#3:i_dd.+CV'9IYfOW`#O#4TWuTnO(ot27D=]K
%gP'10JOU>i:=N>G>_lq>1u7@$%pBasCQI+d5N&I'&gq./."XcrfF4FeA4GH0C,X'U&B@fk,942CG*?*7!qrtI,ZukWBtV\c-?*(3
%(*+4qj9FToN,9tJab$2Fg%$%7kGnNG5),/"$@jj.pg?J<22E1?+GMA)FY``c1Kdmi"rVTi>+kqZe3o[m@J!Jhk(9DM@&1;fd(?Y;
%"taEd^:AL\r5adiUf53X1O420;N5q9K9alKYmeX[4p!M0'$D0,5$<`1@Om%@/GuWKJ/W(E,RKJrb_QJhIrd\o*$*f[KXN_j>&U08
%"fHMZ0l#jI4+R]0>2+^3Jq5c=bN;0;:7r=:kmN*>Oa7PK!n0aVLb9ODab+&XJ^TV4?JqrZ98*qfJUFgrTL:XQJA.%0,3oARB-N,A
%5,/\K@M5?SL*\7H?=m1T'IRXe=EGhtB3?)/5haa#m4E+5n9&^/Z>pkgrWbq)HZ>J=P1m)W[4BID,b9U8=kV1,\QNVMJ$G9V+cFph
%dtqYT>15qZ8/OcPXK7c*(OUcYUDgA,4%pPu1k=)mJn7`8@,qYNj2ap<$?[Qs2b\W\,)9:&Shs?_:7VZ7K.1nJm&8VR_F@60CJUtW
%:eEFgZ+A?k`3Z%^5YDSBrQM,`ED)f2cEeL7=uR\-N\.12ERfAd@<s(WL._#>kSRIHLEf_)B$f)YI;QVj)6>MK1*hYLY@jW+:&r1^
%mke)?V-/3AZAjq/An9`5<^MYIbXCt33C:r+TiIi)h4kL;0t<nT#`]'57T)^8P)ZT<9NGAs0LSOD*lCi2LY0q4A<"<4mXW]d"*=rk
%$Kf7aU^`b\SckQ0X]s0AAd;L/)EX)3:`3&crltXcFGde&g3$NTCq8p3.>t\?8]m48%4)E.49a@UX<$kI6&"(W-a4W\GA*L9-U`.1
%bTZLnNLY<#&+Ei?kEA4MP/L=/TQ)1nVQ<\B<:O+4'+*e+0`d!\XpO2/PS]V@R`sKY[OX1<7.rAQNI;AVK</S.Bjq$<>aqdqj]2A@
%#]RK(CJ6=Q2P)`]YRN]i@*aXNmu+!qQ*2`1NsL._7PMn()l3dc9FsbS5pL6J;e7A>a[d*r_@;]-_+N[?mgM7;AT17:_3QC`nRl]>
%P&j(t4Xq3RgjK7r,*\Bs-EJV;WC.EXTuCoGJAT6LH#$m=68FXNLO:Q,ej*G=+_.,;O:(].OgnJ)mflt1(eUC.GiPVF;2)hl`ulF-
%2P%)@OV!S,"^1PVlhtsNB7\`H(NL9bDo(o`]W>mN)Sn6?`&nLpOj6^rDht9bS;dfFA5?/1Sg;rK8hcu(%EbOTc:GgrA)eK.DK'C&
%@U.81[1G3g5\+q3@uRPALCV1c4<d$&81!G"9bA,TMST:f#jB>rA=h"G]):&q;i_o<"\*&7S>uE\gOZ<MfTE5VZ*>F0?li5)'a.Hi
%(n@8;?qWOJkq(;k;RSp-,5l6,&GEp!EG7u8AH$&=>O2q!Z3IR87OpGH"giema$H#p=ORC*f8>hKF@$8O;?j,2kJ9E>:FbTk8B0um
%p.Zi[l-*R"L[d[aCqq!G?MIT40-CGPR2llZF?[bc&FTZ5!SnnXVpY4o,ZXV-^X-=KAN_7p=;7V?&kB13W:r7p0IK<-5q2RgCj]U:
%Zpc;B!#Iup84u2eN=j*#;;?1A5B^kcOr:,kiRI':eM71`6"$E0f9%?t%@]\^M.#Yr=pTq"6q/,-VuasFfS[buS"t"q^dmD?Of<ID
%b7SX(bu+Zi:oje_<!p$`(';A2)(j0T]i'g)rreDh=u(hdc@TB0-$@uDEh@;o!4]gZ4%`$Fm=b.l^D)M:7X,q8,=n[_Y<_OpgItJ;
%!G[^)*'/1h(9-()U];ekbMm!J4$-&F7jH%$D/h<Q:e+[hT`[i-8;aC_P3+;P"k[[r&nCCuL+Ns>6Rj%IO-Ig3qbmb,cQ.S]gZ`J[
%+A[@).+U!)S/IM\b5dA%OLjBrQoM'!@k0<TW2Ljbmumm5MpSRrg[X$$];5O5+_?7X$)J.=-^pX*=S4u$0[H18lD1S==LN<5$&MD=
%d3^$`n4]sJ`klh<Kck"/7tcm)hD`nnKuN>QR@6ZHE#_C3%"'_-Pj*u*KhT"hkgcDf>-Y9o+bBO-+[<LpO(9KpH7I.mRl7;;h-_NN
%']Fo<WsFHC0U?uGY(C%/qi$>MM6U\AE\\i<]oSp]N$K7a1dI$W@%9)19SVF\2/![J4sm+L-d"m)I6qm#n&IdsC<N+_LVi$%^kJ'Y
%Dh%'4O6Yd!k%tkd%1'!WZt,BM/\r"FW"W!(J.&A/EE-LV,n]DW]1ZX.W44a%S4u=+nYY!,;F?<U16T=]p4WMOQiUVj%[&65`>Eq'
%#^+5D3`Z:-Ug1\`FFQs3%U#bZGl!='NLXf^YscSDG)9`]YhDF*;)+92+.E#ur_rMDYmo;5q%t'=ODQ_VKtm*&+IjA0^\#CZYJuO#
%<GW5GiAHda)3MPq+gO?QJJ6U!,`]N&/!1:1L_bVN.#n#F[-32F/dSVeKEgKu/MKF"V^P>=(qKh:UnWmbOKAj7AS"=$69UWcSB"*.
%1Hn]o6^`Q:?BVjXQ#PZ%"(0'KfqKg-a]ZuiXS/@"TN'q]qhAhOga^Ba]%3'3+OWjA-)n?>[;WK2C,$@IhH;L?)[,K/O;UXJ*I8]<
%^2WNtZ^Kpl!#22q+_fNUdS':34CO)U8J6e4iK:J5bULE@`V+.@@.R9JecL)k!mlT_?YBkmXNh9Db[Y+8[K&+j8A?i6J=GYpKG?J8
%qbp'^"=JhF+ed89Wrp=2[O(:e.*8!+8CE@=I(@H2R\rL'd^SG*32H:_iRYrYonltn7]+2OAC5iTU[G?iZ_5Q6r=1TQ2TSZ7+B#0n
%!M@Zq@dadpPq=^R:o,#:6Vlp\J@FT;*ddVEO**JnT!.3d$E`0N_en.WFkWBhP]VF4b5J<=;>.qZ[G7ur!DA$EB:LVG$n!dXK@IAE
%U25pV$?9Z]/7krKO'7^Fj.6E+`Xt47q3VI;mfZ9T-%lU,G?/P(p<q;T"A#:NGjsu&4[l1!%]DI"It;.c_\d97R`%MMgh7+"RN]gj
%A*I5f_4VVl?P^^[/Ogs[:_`ScT.(NbfF/4[[Z&E\OL!=W[5g[SS[JJn?n\T>#/b"!\o;O!22Xsr:'QNMdCu\M$n5jU"YCMAYjHRl
%#'#(t1!JX$p-(_d+NK7pD!b'?;RHrg#D1Ma&YB&p%'@`gGRRHTPB7P"nDK#ZN?_,PMpmq*n-Kl@ZQssO.G?;%&</H)[ZDDi4ZH>,
%-ZLa3>n__!ZgFst6?&QT,cS>t$).HWkS>ZXBMnjJH^5&Ud4>f)9fcs,+smU\W=BuFC5/!QgmG$K&Q4O]h6P,k.!O:=OV`Oj>kr3*
%[R*$sP#3QN&:J&,!b85uBdnJ9:`!XFNbKWJ[$N0f&:W8HVqTltK7lJjC$^f>4Tl?`a!WBK@BYinCHV<pC=,-GX5B#W'lT_0kR2VA
%;DP=EZ)mcJOL*O5O:a)J9bK6GKnhE<D^<=*!Ej10QW>gK95B&*g7g#g)V,jIEmV!TSf14TLGr(;P*JdJo%jmGMF&2[mu`'B$^2iq
%L#&D%j\\HN^,-i=0i`9D>,9<$A&=oYTm!(@dC?SFd5YX^SjZa_)d8?]&g2=els:):5T@!)B+ifC^`oRjfO?HKa"J]9fMT$P`t)cK
%:`qLY>SKD[)<7BTLLaQ1g''o$*!*u!i.<p%EuRQ/ge0>p+t;9*5Y>ae$Cd)F+!bll95T<GUIo//$o^X-0Z-.$IbA2n_OsEE!=#!p
%<*O]mW=:$pNX>[5cng+BOH#?SOHH'\D(KGsnQCARZhU!f)NC*odU;FpFrEl<(ick'VE'GSL]Ort;\NUN/kaK*-?*N.WsGsN3oL2n
%-'VXYA48"OB&QpTC/0>ToWkSA(jsm;"2.D%QaT(*(uJdUkJl[?&?%QCHo)u]*[I^[!Wk"s_%Kn6h3$`Z/U_jM2BTn%+A/]O!#9"3
%85VY\0FZ!PL9[3'8.+B6<W_ds6Er`VGDo;'jH,2_]u$@OGgp/!Y]15kPg\0^5lsT14;8$4hjPs]@Utn#2bl4AA>s"QOl@;\)_92c
%9U_c*PH^r&K6&TNZ\$iIqCA'oIO%9L!gXtTa_Ja'R;aN"ZpG>Ib0N@S2;JlC-!%Cu>/,#!6nuii3>92d+WF7:'?c8UU9*NG5]oUQ
%!]astX\"LBTm+o3U1$ntBdY"n02bE-Umk"*j>mTa_i#c;QGC@!B3M/m[n8W5q:QVcbE?+9[S]jFp#M'n_:&2ro!.W/K3a(W%,T0N
%!q6C,>E$`ek+Ij78j`)+aWLurX-8r206j+@.#)7`Ml)Ve-8DZ%P_bq,'fo\,bX4$4i^A4tVe#-",YS(pBn</GAs=V#Te*jP5%N\/
%+Hb%snO:oU_Z,G7>bc%34pI>=0M(^CPltS?V%lY0XLT`.je-;X4<I[`^h+]'V]1?3j6Pu*+/Bkc"",gL`(-5^nWIpGJ/JG3#E51^
%fWOGI`LmS8.LODA&<.jWXUTUm'Y#eK!lo6#_sm/AVIHqh!jQi@jI<%6HUoTk)4'W-?E?sJPtFd`>bdHHS[C7C8<%$Y_60X#bFO4d
%=B<^ZY[R_iXJm8eRNY.RB%jZZ^WVU;O@HsLOsTtHG[[KF]8J?(r(QBi`MF,f1@aN2UO)pAO$B`7$TC6HDN>)-[1qTa@Ej$f&5n#%
%8Fi-A=-@FZ[6o<pR#rVSk_V38:uie71%]EqSbAjq?(E+aTS/%NG>irQeBALd[diCOU*eMLdc8/7[7[b\ZK'onbsN=>mkRa6g]fcF
%A2Mr!;Ih4QE7LrX/Fcj/N#@\IU#bTWb]q#rM)T6iiCPTJNDt/tFc>t6PR>abF>Fk0Gl:V\&KZu\m9q1k"B*KTVjd/6iR=V:5\]_L
%VF<*8S-=uIF=JLA*fMLSm)Xau)(?i;S9!Q(q/W-?BbYgBO'r`8c@?_=]r2V&&`sl^9&m[]<s[aQ)>tT*&j;i+IMZ.L)b9H\FL@;m
%D9@8Sc/>9ohiWm;XD3ajN^3ng2ONqM0N5t=B(Ulp!opTVh@VfrDm8*KO^tbooA1A;`=/3]Gjc(35igX8]QXSBYbC;7]QXSY_qp^h
%hRi+Wr3t/35s(8!HH(8tXd$#2d^s=lT<WIoU#1L`6W;":N3u&u@O8Z33YT.Fjh$/3KRUHlh&T`-ZoE6;41IN^N,4L?Nl5CQit51J
%?#9#7)V6!C'G1T<<-R!GU`5gYh%_aZ,0ebrmYpB=k>S*:K/=i?mu?PV+G4P&K^#X#jGMJBA%KPe,?c<1diG=gjT;";DBbK(h20d]
%Om.lZ8"T.g?tW0!P3t?\SH6eZW$'(faaJ]ifspH>ac,R]_utW-[QE=RX^.Lbc2]5Z^@d`X%T8uCDKL(,QDCj9Uq;7I.Ni>FGP/J-
%;UJ6`B*`OMg]lRT`'Q3.kjAjE%pY&<hjkqB4fRVAI!5eb:SdG@h]5OZfZV\<mXUm^EhGGK*<;]oWSAEJ*FPUp*4,1k)=hI'LMt=Z
%#FHq`j&<NN$93UZG)%0F'RS,K#Cn-&VfoX5")o[N5A,(^L+U.3Xd/>"OL,!Rg.$:!i6n7uFA@$ma:E"%89\\b"@oB%K-VuIh8jbp
%2JhBo2mtfBHBFb;b'%F=49u\Nf^=R`7M<>QG/kX9E,EhPmZ;$L-#+g>1Lq@MkGH\`+lu=@q\e310]-CbPjXPCF=G.jmZ,Y6kdR,3
%h&-jO"(&Rdh&/_a4gRFuB38O+bXcqjS2RWo\iWHqKEnArGEsLN3K/'(bW/nB_01V%,3O"e`CT:#m_6$`&IOX_?8K#O,#XM;6J:d_
%XiP$EA%ND22&gX],%a)Gl0cQ<27bkpBPccs]kPGD[.Zt52h"%;\!&J9#gUF%l!hG%3X#_[Ze]V[nWf[4c7mp;+t$s6_osC/kS`+q
%p6ad,/))*@?_fnkg$UE]Z![p`f^;Rm/>;INFpBQ.8LQI)43K<WoQ.H&^d=HPmDsGU/4Ppa2mtdKP:W2>G6F*Dp,qa2!ed%2-l^p3
%@E2-!)g$;D3K<,X\iWGV)9PKoB@mPYHZr)+#;e%V3,!DX">M-Ger9#,O:6a4h<=8pJdWORh>#G:h&V"gKWhW-h#XWP11H72%_>]f
%H=q>D:s?e`dHL"kpIHSdVn9k27E2l5G@u^TR`\0FB*\qbncmp@@CS\@N/.UlPD"ou1V,Y=V:)C6h=3P'Jf<Mec7,JdcM?mIc3[<\
%j1@,([]$7th&3D$F`V"86UIXe7_Ut0,TFE8hjkp`ojB]Qm\'R$rRUf4E)b#$TCL_TeF&OBXRY,_luB+aCj^F2-FhNsNdQ%AAgB=@
%h#U#2_C8Eh4*]hfW+oR]E!3J4"q]K?($U:;1Yi@c<>p_^^]7hcN50K>Rk?&"6$(*>k2OI&#D9g]OlJ'K``"gm\3n@X>$<u)*I;$`
%rmV5A?nAScHH'lYPR76()nhd[^pei-jG_q*@M[aCH94Y+q8OAeSJg.YRaKkUm-%A*H96`nJrm/D]c@5BAj3!!_h9]Kg=Ye#GE<ZK
%Ok\9\;.c>\h%"[f..QT`G+kbh)nFdj)h24*j<ln5_:P@e2s7W%<D6$%c=@/9;co;T8^\7G)-IsQ:iJgC&5kM#fJN0EaY2<V4sd/F
%,>r7D(`%h<#!u<q_MUGq!qW#s<6\2[6%Kt^@d?)tIn1*XJPHOt#qIhfgC\)E0U8T\G*\XDg-nBh#=XYhB:1L/&[lDjCM0&[$>(Ql
%,GZu7aILlmp1E8leVNV>7jaHpNS"`LCN(gqRM+?er0\ZSb%h65,*5KDm7^Ad`Qi;?AnX!kg6osT4m05j/!IoO1Y]000uSfP=6*rG
%Qoefd@q/dQIUol#KP'>a'.ckfmS$-sc6&9,Z?NejgDSk9\;<goB:.OK)n^?K8LPoK'etB-2@CU=]QUfHG'W8YK**9Mgl9q2ORBp'
%%:2+uGTPN9]naZ?LW$_4?9?&6KfIN7dB\:Zf4jUPW`pjfD:%")<or4Qm0jRB;Aj399Gk-mE^jgL0k2;reddl>V08ZBK1(5)B!c_8
%/I4nqC$d%j"rjDH1W2L-H/A/.L[nhd[!%1,1h/IXm9m\CRRLrX+>H2jVR1NbY/OYlC$c<Gh,4=q`K61-.G-Y]*F^>=kBBrgl:NmB
%F]LTV'l5Rme(P\V<L5Pjg)490(r\Zb"th0-o=JLHXr3IOXg?_I,&fN$e]n^B2VAO?4$Jmf4H7mO<Y+_q)QTDP7]k>d[DS>'8P:;9
%'D,J*XJVe:&.@N;,IJcm)4"PU[A.8/cXJ0-1S%(LOkRY3BCfIX[:<1O%=*TU%^rTpMArN8Nj05<\Yl6HL@jtLK@:<.Do,%ZB.SnL
%7RfI,!*0ak)!q_DXJ6jTmI:*%%r#R]_hS`=+ua)?UR7L\1"oJk,4rlg7nN5bK@(0@Fgan@c8_$(XZ_erVMo[01BlS`m>TLBJ#BY0
%THe'Vd>ZN!0L6;g88/>'PO3XdduN#['lqT6B2G5QlC++Y__[f<c8imMMDiAs..,q48EEO?ZnpQ1h.<Lk1PFtNAqSMAmS,i]-DYh;
%e/g#fF&G)UKd*eLg-HfKVd/_%nUW/%DTs'$*Q4CQ<a%RUK_`:.g(BR;$'uO5*T!7[if2P"+3#r.3NjIZ,Hp2>r.AFI.AJ`BCPR6K
%3,_9%LB/fpKg&+E7hnT<^.)mN6Ha(=C$d#pE@<'6SV.JC;EGp09M3T$mBG(H?(n';K\'iknVks-LDoK23iO,EB;?G_UiqKX][:VY
%g&YdBO:/=Ug0oA_BlQUWB2YMHCTM^SW>+)E<]`_>80C$-[DQ3!rLMBj!Q@<UEK/UGL]hPH+LX(/i@m?u*Dm7'\ohIDfGf8FDGG!Q
%]-L8p2I\bdqh1WD&_iFdJhVI+@QX9mYSaGRgYi`e:T"Y23sGc.JCTJCa@?iLO,bf1Hn#Sc)6k1j/k_kM7Vmj!%`tG+YoS2_aZ)I/
%[R2E,SaT<iLN$3$W:OcBG*^CZRdh;Qm1=\TI(Jk%U$8(p'qO!;4;%r_M_eg(La?NdR-b=@e?lq'Q"#EH8L\I0gX-T+hMoa&L:M7>
%7qOhME'@BA1M/]TJe>7_RI*Q(5]o5"[NcJ=RE$8Q*Q*Jf"#X[P_N-(H%IN?r#W#Yi?T)LX8;N;TRI-eeT&IF5Z^kZS"9q,Zm0N'/
%5-R&R*H;^Np5Fk8Jt_5j2J,$G53['"b]]fWLaA&)G&2?b\sY;-Tmb.s+cX]h6kB^ZQRPJ`8;WF(DoQT`"<uh12J,&1I$)(L1#!;^
%88^Y'[Nc4`\O7CE*IDqM`nn5mn/bG?%&_m(lust'Upe0M(OX4?[2leL3'WDV:*dr@e9:bh8>am[K^o`5;5L]G$CPjV9r[M&cD86S
%Aiita$e&`u[UYM_phj#B43WHCb/S6Fe0;G^b]^K#HYuSpLN<)Z^;i]Za+s4Hjg@JO]PNHCY8t7&B`9hp42Phj*8cS>a>CkMQnd>-
%`K_:8NS0?.i_E)$]0<K_-$gi\G4[U1!?NVW/udCt[uoB>*)O)i.(()[Cfo3;W9m,R^p<5C[2i++)N1t1%M<fKSZte)-hLN[D33KQ
%"GJusS_Qu=[aKicDDNna?UWs&pWsMnMdGV+hMt]Br9?ai-\I;YXRp\_M_6kcZ>D@[&@&aIZ.kDXLpheC[j)Isd:?n^G%A"BJi]a;
%,OnNHXY>A_p;ekSdG*'8/fM3/\Md]Bh#^2e\,E.a5H%ABhQFT6+7&t+iBQ.bJ%U*(^S`2>nE"#\Y<K!oFB^upfe\o.3<-S(cK&=r
%qTWB^j1h!JrpfU[q<'tJ>h3,-oUFb45N;iqs3JH-qUb%7kPXrLgY_Tu+.rJc^YW4%eUMsI?h!4;X*;&9Du!7Q#]EHsY;uLBiptXE
%\I?&4q>GeLh2_Mks181!]6!s]*O7?uE;A<KVdGn7geBI#rq,cP?@25-NbbdmhoI,:*H9Epp@L)WDt!^^IkCGMJ*l\<bcp.Q^,`t'
%qO?4C?d^Phj;Ic5_0>g%kVMeI`N.a3(4:pE\$(k'rp#!*TA@5kIWtIb^?1@>]6;*Qb?e+krR]T=mFqg%2nSp1b<G%7FQ2]"S$1[S
%SmS%Zh`j0mX*]Vuhg@(!FERQXmD\JG?0cS&3H'3!5;"S7QV@,>lFj0al65!`@:,S>4oa!Uq>Y_AVfdj5fslK<+,?\;s2Wrc^O:=:
%j>^fhmd"r\rSMYgm`jY7DGS#SZiI!?02siR]sr@FMr1]`ci8!Wd[7]AqhKYS1NRPYs3t;'GCFUZH[W5.@`D(8[F@CTIWojVro]d"
%n%Q=l>@?4Bp&-]$p?L!^_8Xr1>AX9ZG45=ijn5,3Y2<R@0&&!#kUgJLh#@Gjs5a+Nai?p3b5'SQ>@"eiQ2@O:ZFY'Pa-D""F'@tK
%bJ.@j]Nq)=UN#?2`$&2hmLXcV"]iY.bH8M6lHB-*9sFJ7^M7-D`VK8kQ_/bKqWdp4-]spGAtOZNkF[u7[qneLh5aa:-P,t:NmZaH
%PEK@I-ZDg50JVJA^A?pgq[9M\=lA@70AkB*I<GARY*8-`H33uN!rdTDmd8bee#O:/J)+PfbmTilX!P@HeK1"7P&FHC`kL0e+hMQ;
%*5)!VIf9-1q<`NP_\)A1^[^'=EgN8(_5["]q:WC'e!iT$lauJ`o;a/NZi-*$fgErtn)a5mgY:0^IGag`I=:")C6,jmDI/s,SUZ*3
%HFY;o426/MhfT64!+i$?f9b)Js7*ucG<=;1"6dd:h^I*Y3rN]>#'Ri?hVGSHIK>.OB\Kh>OMe:fU]1">U%n(>3l5=Q<ucI,igEq-
%)9X&sIG,O1?!gjmI_%(no",G,)P??3pSk1UUGR:g>Y8D/,!PcHjaeSELZARJHY/;_kBU0qj3TWu!jCNd[pUt1d/eSPh_*S(hsPK2
%/3'69]dnmpqZ_Q&hf.1Pc+_$\mi,#?/oJFLF+1_HTmTfej&8U:5N&>%pp9M]iqB_-M`]rNlf!)Y:@LUp]are7qjc$JSDS^BNfcFr
%CM3H4H^aQr6/Q.Rnp.ktT9n0]QS37%ci8>XW;#dSI)9f_5)/d\.XW"[cCn>7R'gkmf@@?=ShFal^,^UanSZI)ZjZUcjf^9h:RC/5
%NmQ+".]$_b^>W`d1R?8*"&+Qb>.rNHhgKQoH2[Df'C#SROB%8\]Gc,(b3LLaPq?^/=d@Slj#T;RHItZ7<enE&(Z`8iB7E-d0@N*D
%p^pTD/t.M^h\^-Qs06_@0//0B[(H@=-'nP8.-Um]ej$(As'R5<=:UoI#:TBEJh4a]DbdL=c7_CH^H=_bk"BUlA7&!s%gsTL&-'B2
%TBtn@m]$qiSk_p_0D=.AnKc>O7@NW5MdsJ)YcNlI"C:RQa)]m]Eq/k8bL<fh2s48OIl[Jq.$'nWV#BIel]5ZOa8>%ZIp?IVZjRCj
%&K\N,HZNA/[ie7g'^jdY$Y!kkUZ3C5BQTk-mNm03s73n#G1cY.d9I[f<aX:cI$Ajt$iK8Lg%>_:k-9./U$]8l$ha2;op[8H3kT99
%F#i#e`D#<3i%nOLLQh&todQ4D=6HIhlE@8'H1mTj-"XHI9DA*V$b"dVob+%_HB6sf@#_j'Jf#b7mHZQ'07Pt[EP\PPomD+4ZVZe-
%Q2CERX6ZeiBp2KB\@m5bji@"_VAJ^eZYn(QXY0CS=0F5o0>:fc?2`3"IFSD:BDQ?0iIBrZh#DfolhC(7Y8:6V^V74j>ZM/X\S'7J
%o]kG\U94%!&+p-&!1<.V?7Sk__Eg818sLet53>ta(Iq_eZ=k-dI:K@D.*#AFnq9R:c^n#`aqD5(UT6gd1.0*&oW5GK46C+V7JWdo
%Dh2\C,df$r_@TnHfabb4jm4GHU+H,-@l\CtA1`]7("As/>(h[6h4@Rtb1T^n79T19a.hUS]bY2,>TET@J#]n)B2>KBA]_t4bH??=
%/Bop#e1@'3#AB*FcK0%uk:N_'>%cji^aY:V,!P3pm.1[X)LgWm`.[r,%hXO`)iQ'TUD<$+msnsk";lKhMY1C+1TOi/LgH"??<])d
%X'T$'g8`bb6Eg@XVFjm1m:hu(kEsb!X0#Rmf<*S(A*li*CTCK?[G%ffX%bB:?g])PI:u!R?jM4!9(o1rJEo+>pbkb12Hhd;lS_qU
%d;7'\i?TtQ7[/u5qkA\\agM#O`i=(Sm,DC8Q_.QTrqPS"G6@9pK2ul`"bUo:p$2JJ`RWdLQ*X)]n'4^I5?S+b0tDI7oDaL5>i'o7
%7$md8kG[lTb`W99_,+/dPSFVgrU&21fGV_jKQ;/5k5*BFp_cUNqb_\fk$pKCQr*g032urXj8.s8^E;'W3;G6k0)P6**eO0-BVs2+
%iq3*O*8USCk:Rqs5FNeqAY8R0/E>WOHh>6s/dp:_Tkgt>ViD8%ankkYGLpc6+9&`nGNl*!WR(:;#[XsC4%_*/+<'t@>pV>VahU>l
%1HQD#_idabm2l#CJtVG=GNHeUhr#%B)t'/qff,9]7QbQ@DSLI<I_/#@*nBNM0I;)lVrV:tk,?SH%g9WA,S%q+9LM!^DNCY3B^PFr
%o=r>4s*\EK^,>q;W+pP$ruOQ,pIXq$XSLcJfV<6]pB,foRf?[b^O+<,dX":cfFAuVZm=7nmt!r%%Qs`sk'YdNn!`irk]H`IIX-5;
%_u16hH1CPd\+P>cB7Qpc0KGUefULj5FROUk&1`-Oo`9QmX,GT5hn;1&H$r][l`2>3@I"_VZPjUXnom$rX*)$rdcQl<\F)HNP?-;W
%'0;?nJ'h3`&6gAiCP6M28(pQO]10lm#h^FNLBX"?)CE'[UbJ3]@39uIF+/T2EO?G*5HY7]`Ri]`It)HdH%,Y\c2"E$YA[1>m`]IM
%n[!Y6=F!1loCTdNhRpJ6MbA&uZ.bK?>(pt4kF>o1^FbD:9s3;nR-'S?HF0;22=@k1jV)Vj5#iVOSBHA<HiDjs=ZtSZrqN\cWpR#=
%qQTp^]ih';p-F&[#D?0eJ$Qhqo.Duq8OWL-nBjOWO4leMC[]<;.Fg<FZ3FXd^rmX@R=EX'GZb,%CZ+<l*kM]a8Dlq30T<cJJX8at
%5hEfp!s1.Q;he)GcKAR:8=usSFOUnu-O2Ku+IDf[*V?8\8UD!LLC^3mNZ2eD#sc;"K2!omL)"Oa+DN*%Y_i=M.3F6BikR&K&-%$i
%]X[q,o]".9ep9:sYX1GD_f8+S3fLsr7:J=9_f<3g5593hJY)AYS;f$#e'gWkHGI1rkY!H&d_;%3+9(lTcbDJgFoB3M;Y+Z).=,0'
%q$XF7eunq'0aWlSSUCN9jJrGXV7^JK95DX.gnd#Dhsdg:h]<$+]rk_WIX?O%h/IH7C8"6`[QXXLIcIWZ#P]aSq_Xjp6^sLA8s[/:
%BM[8JHO;I4cV4-$rL^@5qUhS5@GJ*F,JH0F<m9)I4R>(2@b'noW&9%GSG[?rC/MsI?FRp/%bS@=>&fM2`\ELpV`FT57XbDYN$[Ac
%`\@tSdlk-&^W&"Z36%Z:bSnN(itt9#a1+9<<*OM7;2j$i>;/T\O'MOe+$,4Ie$IfXbJ.@j/?-UShqe/qrUtU'q>^BdiqD`A0Z_Js
%`-)*i\6RO+4M,oH+#c;h!7(2dl.beoh44M;GNW%?9:VN3lhC'hB+"dV7tZW1"9[uTh4)10h=plBjYsmJOCr5qGWoH,Td@kCp!*0!
%,ptf.gXhcS8XuL5q#ZG>gZp-jo_&3t@KfE9qnu[SP!6Zo4\`/V,rXV;Q*bfb26<VP"b.Qp)t]g*5Q>tPo@:Ir\o<Zc./;lM:DTAK
%LE9%^J=n:e%+RPCa_M?MhS2ndn=O'J$L#[FqQGr/>e6^dkKll9L*p!l[H(g-^#3\RN3!1ih6K-=KYm,)B%\)Zs4nheieOENMT8VB
%6G`F#PuKsq(;EZBFS4`*bElGAF&m3s5J(M"k!#k*\)9YZ]t$N#*EI+Hct6h]k+7Sl[oQNMRm4@^2e$pm%`+]?0N"l4\%6X]41DeB
%X#p&`GOBrd?bcI6k&e^G5'UH&R<].r>^00'gp/q#FFS2US?2_Fe+)Um)?I_W,C0N(fY=VrY^udEB]+ml=(9.h>]D'M&6E>%+89lA
%fAcjAlmEWu=e.V4<W8&_/l0g-rV/cKfAE-j?/5GS+,ckcDf:-<>S<malh7aS(=G\pbs#>+4iajfre,uLPe6/$75pR9XJ^<%*W^K1
%PI:tX'(kkYe'`*Rc'S1B2iG9$09nTqg&':>FCI.XYcf@^R"O\qZdV?tcKsfur[K5KI!L-/(A9&gh<$BaolUWlb20kEH$t!^^3%fc
%Q`gncch`U>1p0>i/hJHJIH!L>`\#hiVuM28k1uaO8&'(O',q`1nsj(<^F]k<:TiO*-h1U#"")?L17pb@i+_fIZ:sEL53.Vu$%/b-
%b>DGa9+\$?gZTaZp"f;kq'+!iq^2Vbpp?B9JE=-9PC7l:;`D`ue*`l']*C&&IjhPeK2\eN;03LAd:s=XqMTa(qV\<3U*gboIir+r
%JY+qEYYP#`BBRnQ,E=k<^#7iGp+C<Yl"&_HI4_WKhlpXPI(RENZK)tmW_Jk/K0O$Fo\7!\R=0_@h`%(^>hjf"k'Rbl_,6bb:T\S[
%H%>b\cc=4egWrVJmYo>jLZ8CcZpR%tQ[H\s3$-'uXG>iP/)Z%E(E_iIY@lncT8gl.6!hY;&(Tn>0Y6auk2V*.`DNdoVa\G8+qbn4
%,10<nR(X=!jqp_r5;_QX5*(jO#:;2RKDoN8T=X+_q;WQ`b[%jM(j=QJ+'ie[lg5J';B3ZLp#l2;\*p;03bm"/o(qK%n!gDr<YJ9P
%i-VI8+!83ADP):>kV4ia/MLB>*[Ke!;aAJ"E)ELGI*UVuTmkXBmf"F8R<Wb[FUp1UT&e`gJg:Y#$2CHKHn^66-]of;K"3o:*FtJ?
%UE?<q4e8MTh1WhWMiQYeIS/c7f%N>qTATS2ib"8AO$fCFHa4c9I!b_?jn\p])Ln8_]s$,O90@[UDP,YD:[bI3rdL)HjEWd(:=a!"
%4Nm*;a19F<Wm$K;Q+bgcE<ohii!B8@k4Is+lQo43#Irog>j13VB%k(*SIb,h3JtV-I+<Ztkr&+<CN`hNp4pi7e\h3^lZFear%KF_
%+6X.T8:pKg5Q%Ds^AR$AX%nC;=b,_Z^Kt8q<prA2RV++"EW5XMeb!34qTWB^C\QdPIfAAsYHBPE]@8:Ero)qeo@LJOrm>]ULQ?m?
%SG_u6O+-]'rSMSb2uHaXrqY`<ptPgSs7F(,m"Z61SG_L0s8DtPP?7G/s8;aa^Nl->$dZ/;q'6,BSe$I[-Z:CDm^X@t6sO:X4a1qK
%F3fj;F'0?O#@)MnhiI@)Vjo:kmPiD!hfO6s-BoI:r7o?"EUht2giX=V?X]1[Y<1T`nm1![nFE@3]_Dhd-i\J^%9ClkrRVeHqpig?
%2lEi3Wa0gXlRDXGW'<"h[3rk5=5UDf<*MN[_r-HuK`(S&3jHsopXqY-rE9#U]KmEoX`%UroAYLPntJmsCV7KA(S'4ZJa';g-_'oW
%(P2tgK,LtS-[:Ibq%CN!Tk+(p`$+(Md3]sZaZiQ[Aiq"MXuC45PBUFZQSH^4_!;HI>hB8YAK1-o#M]idSBPkT#<1ufn];f'`RgUT
%`A-ejm3nL>_^M.in9E^0VeqJ^]u-Hrd@Y68PF[_4?,XRd<?0#\d2ndLS,2u&iPms&H!LJo`O*=P\#gm`A"<,^%eX`ef(Co4G]5`^
%3smq/b3aH4n[=WWgE)-:GDskG>dFCi^HVM=J'$RCkGsYm'2SVphbX7I^NRf!ZT_7*Kbs7)^!".H1Kj(#W+/#UkJl_]]))I%AU&[d
%Q^-a57(XU!1L8Ahc=7<?1+67nfQ>%+[=/#+R54<k\ZmI,0<XW@/i\fVFjF!pZIn_hlN6g$II"`4EG^I^GHU50pkXjAIi_nE7sFE^
%ZcN]J?b<T+dN';!Ch&+K+`i8eOLftt?tF.kOLoDVK5/>1=tof&Y=ceC`B_g69B!F^^T0E"%X9^43mbh.+k9A;(@-j%VXES[Sm.8l
%1K=nHThT(57+^$?cZAX8jI^QDR&Voo:FFJ9HCgYs]74Ur%`M]5&(-,Po&B#65PE(Ea+g+VQV]n/KcrX(Z"di4[k%"K_WVHToB^GQ
%h@I5ZEI[PGO0DmS*+uul>r]Bd41[ZAL9D6sH19-S-p`&u?1$!bZ0HrS1-[JD<Pm9(l:VVd1k!_o=K4k_2V_`LIUoldRoi-g;]Vh+
%X=\@W8tKB0_aGFShJW\13__ON]%ko(/8AOFqE'<]k-<TsgqgDEFnN/+l,Q;CT'N-pY=fuuSeP0:e.^6.Y\oSeSHF02ScpaEI,,_j
%EJ7oOehc%0D2cH>[DEAr:RqT+T%C)Ds*tC]Ff_4c'kt2clh"/)?mB9Xe=54hiEY@7dgQH,(TbQbqmSII2nlH43Z[n!Wm#%2s2=*7
%=T$sjeA[P07FdJTf$0QVDniA[amImPqX'W%g>=St:X7nr^:S]6o(JR%n'4_cd(T2p/q`Qhjdensh6:X<*@+k$"pXNdZ<jj.mBoT,
%\nsnsQ^Qs8YD^gTIUefd`4WBLKX,4U6k!'?bV-+<Y<_\Z+k0)L_kmo_84Ic)XN,BDb3KD;M]MB`4OmTrr79\U?2Vn74S([<\[G\t
%53ThGTc<L"qRK^1oaK$ooIR7M1f^_*\[381nROiG6WKR`;lCB"So'h(m7\t**jO@@6f$34[WNMX^DjeFg8]T)FE;J&$Tu<M<u:,C
%Z[-0Z-n;?J[u==d#CYFAgiO<)*N!;R*im;e4+@U&iT_N\("Hb#>l-bUW@o#N23d[eEcomb2ppci1Zb3f;6MDBSh@>6gCf$V@@O[j
%7L(&lr6l+#8DX-+[==7mS#LeJcX$+QVC'XFIa:gYYtXG4$9YWZfKj.gXIA+DSt4D=MC3Q"%VjL14;gef?K\dNWCp>G_5o2ueVcM-
%L%1-i4e4JYGdgTL[qBinl96V9&t4(8iX][7n)"!@qK=F%l&,.?j5U`D[<'Gij0^.jf8-D*".4S:??/2-@:T.qg=r1d>+fKVVL>f0
%L=C&s>sP0fbHln)mZW"0q`]5GlVa:p\)1->U.63Z?Y&:-6VB4RFm]Kq*b:iObU>EV!?U]NQ[EhGX1Q*eSG`B*p%9W5M=B3;^WnJs
%426&hIWd5-ZN'7_lIG")7IcT0ouARn7DD"c;/\Be/pEqYhVOj]>fejQIWt<S_m7&UdZ3Hb^Zo1`?/OH:UW"5=PN,4t"mc2Va>Nto
%^Rq-)8okUDH1p:hq;m;15M+Tco?G7Ts/3V/fRD?-cbI2=H[EYuSNLk4G/l#-`YNcP)uoKsmD[`sBj;mBCSYs02#`pfNHEW-6]Ge]
%W%m*?C.uY^C(,<>)XYQ<Ga);TeCH8mCJ5Z=K8]Dd@u]H`Z,VP`G"8WRpL?)3(ji@3I@s];rRnGFIn-TFKgKCf7WSRG`o-s77UHo9
%)so9lD!Z_b]H-VP^'4J`,hAn;5?i=2P+fmhKc3<-]0_KMTDE$];]08E\s#CS?NZ:K&noM$!f_I71p2DL`saeFLMS"sHE><lJOBD%
%kS/u,Y\JJX",BoPQ<=3.G($='e8Dgf`-6rFXib]bXs1'E4]j^uB4235#3P?8j-QaJO+*]u?L9tX2HR.G!AUQ"bP]r!D*tq@eFQ/s
%5$1uc0<PP1RXHMD=kfW&DEVKMOf>AC4Yi%1/b2lk8(&iNC[:8Hr+H=j=ACm/QVJ$nC7]\1g@J$;*8$'=:-Vg8df_k9T&Cj_5cZ75
%:33"_oabAIJA5[!EarUoJJsMjKgG*R+W$2jibI%Dj&O.Ip@3iZ$X7sVc9\RMKZ_>T&'qBN4GI^dUn/YPF?\qT<kW.@(](^q<3qlO
%1H+NX#>>"mN>rt63oAeOVK-h;lUI"48V?EfNAHYFoK#Il6BfGi2-jIOfbf;QF^'XXaF",ZXR.#^F[i:33o7FCZ\?tN*@j4m%`^>b
%:#"4M2U,WbS>m1le;f<DXnK_^QM"XQ=(KCbhPZ`e*:F0$f7C/K`p3E$MCNBegZqbVlA>15C16^Kku[1nkI$,<7h]BjT.deEMu2td
%@!X[tk=Y)R7\FB+iW1P"c%`mrf=G#,,bg6?\f$p-?-gE.Vn?ADF`c/=8`_sV:#r>rTi27VA"oYdL\hQAI[RJ`mk`+WmeaRcl6].J
%j8fTrK'#ruf$t@KRKnUqdYin-U($]3$*s=mnguteMj30C<?K\'=[_Fq#8oPRX#d>O^5*k:=+s`3=Vk`_@=TMDf!KJH?1i!__5b+(
%)t"FlP,e,!LB69RA>9QYk]ai"]GJ,`WS^!sAuNj&FQGA,&aGC[HY,ng"WXG^mSZs<[438R^)kO<+%8b#j^gh^Puh[Sg/*r=M'5^O
%1I-;d<\&e2*M\_'$ZYN8B2k_hqO)(Gi@HtSrgXjh\h)Njp8Va;iWbna[IiA`(nSZ*$L/5QPaCd[Wu@:[>j,W<jK<VNWp-PGaUmPn
%1XE>%ch[]=e=R:">M9PK]BouDA][SeK6p<fr+_E/\*%OE@a.WK\VW1&nS?9A`*Kp1Aoc+9'Ch+<6n;G#MVNm",<'$p88]X?0/ml@
%IUP$(i$Z'lgl_g1ICT[5OqVh:DIW-G?S$W,jsHbe,WG7E;A82*V^C1>WJS,82*q+]^SqN@*g2u5Mc1;OK;Ku)9+p=[,RG=QPpCo"
%Et_en9G=qJP7nG"0MP<\8TNhLc[E(n\P,eP0g--"oYdN#-do0i6sA%QCO5!&l_*3-Qu7!48lZ9I?an\=(oNrD^gePYAs@-D$[,0\
%,b3u$3/3`KE2.,N#M(00-*JgQjZ9-*pM]N,=Vs;aF+CuB+_KmS5ROO3hR!iYGDt#0bcJk)Fsm`\GOa$rDk!`(8QD0m/k!d`hP07f
%;%B'?"HCVqBm3rE;J]IYG`kPN9cf`uYR(/@!5*c*Il/&`RM72R?D=G1gB.A,oc(3iHZa=Yl`&9XS81SaeQCGKrJ_tIaW[5"::6=e
%:#qcI1<W.?Z!+ZkXJmLdS8m;ihsPP]3IB9Z2A^0#M3bQUd;2=/^8eJL$N@La\J?7T3>;i/@H]HB-m$_&Mg_Q?8,Z!edP&6(MZn;7
%d8s=dc$V>IO#pi\%m*&^F^aSjj>-=9aSaT+Vn)Z')@n%ddlHs>41Q+]JK"QqkN=t&giT,SgQC7b^OHaZK*R&`A.IpSY(tdQP?<SF
%CP,b-1#qmX2Wh4r;-WeAc>.i:MCMB!nD=&V\Gs9(J_MON0#M5&F!%S++O8JWQhsog4q\O/Q8doJ],-U]?gm2sWKV2i[QMFY2.>hM
%@@"RZIa:fZ%]SW_o*gc!=&-;AjA7]h@n"a53TR;Q6%IP5TY0_3g")X+WcJm*5rCek43FT+(Q]&ea#/kC7n'&]7]q(\S$%l@e&YOc
%qXLeo9d?.-OaU0-2QIWM+I+dKD7ipddiD#[I&dRO")=pOf%,qB)L2_kUoI"=gM1+_ihRVLD'DX)aAn'tdrW.k8FJ>=F<4F4<?!<l
%Je)"t(t0=PCg&8]hoh@hQ/LEn31g"A/(Jbu`3,B6mbdn<2L7L:>fs65Qh&fY=P#c61<$,]aV:51-<&>5acsF_R?D_>;pl].PdDs/
%P'83Nddgq+h0=W#r349W5>A$M?-*f\$RSg#*QaO(i7$K"L9-C/mT`@'n7aLda++C8n7Pt9'O>j$a)*bV.;<uY-1+=$Cb@fuDt'>t
%9"H74dPf)r1D+i-;UQSbPd2O!Z8G=$3_UKl'Y/HEPu;e%;UQSbPdi6/ZFrCKGM&3GH7Hn&45)f;c^IP]4OSu2bZ)DJRn"u4R&!W%
%aQKOe?M1Ob9!N5Abu,uP1+C`tfpt\h4#/7K=V'!+Z*VWkDX9f0NkB^gmS9R2Sk5>lH))IKPkr`scD5!qBXg,h@5]n[APAm&9kZ67
%HY4D=[QI0f@j:$n:OTM;WL?;m:RO[,iPW-L`&mN</VQ@4UI[dkUW'!'nEq'Qh")qX(6>sURN(^Ok/L]SgpAT#S*n@mPa4h-[WnTR
%H'C/1UPpcGEj0HB;2dZk3KbJe`?QpL[dZA)4RPao8<8PlE&..#E&./NG.YlVNlQ#qH'I@5U?"DA.!\l0-1/jLUcYk1Bic&rn&V4_
%5L#orRQP'*U.h"<I^smI/;i>I7aVq!7N0848u'J<[ZO%9RmN[&7o#g)V[3gN,U=o![M'RH84dKZ8K&mj63FLR*C#fG8nr()AB$IK
%_k6d7iDV%^@^R]A`#XuPLZMCifBM87b5YW,A1X<pZOFi%hl'c)pW4fW\Ym)gE/8=jLbN8lTc-\k@Pkt6:5mY@k:h<\ahEI6$P'qa
%I@[S5@SltUiR[nppYu/G_hZ:4"Qkp@N+KR^LY**KLY**KLXP$6o\9-?5XXn^mNKTmSIWbd?+#pR1W8&BHZ@C1Fq4&50#l3J@/FqW
%B)ug5Cs"uuON2VH]A+cXRt54]onYOYYI=&MUO<%HGK24NhnOpf[mkEJ62jb*aLW1Cl9e#<Y<CrSj>Y]"f5"sl>1pSiG40[2[Bb..
%gF#tRXcp?U>HdhQ/&(\6DnY.7YP?[EV650a[pJC35C?c2ntL#&&4arcS_:j0):o-":g0S]K1rK96Q*2+[1Ic"3jgSg';QMlpRQk%
%B#j79'>A:&Zl#/WgCYm&hnmo`%RG^sedah-kXnEfRKK]X>F3mmX,FU2G>*WR.,SN-r`kJsT80EDfsD_X,h]_LTgs^.N)nfFPsT3#
%#8<nKigu[a*nJ1nZSu[:Qb@u)1T'Ot_(ogEb5<S5DEi!&l&2P;M4<Dml)),-OU]R087$$@;<t9(]!YRFl3dK#XKJ`?Bk-*7WUlH^
%>>UD/e)a.nF6]q&?A6eJM-$]Pjf&Dd0p@ltWI*DCM4WaJP3RbKhj^]%1E5"e:!O=$+h)%C*qe:t[_7AI"lN7Bd]UN\H7`fr@SFkN
%k.V1d$#/]8ai#eOX8?B>Y@k:7*U>H9[X;kLk8b$<1:WtW(VpnD7T?LP4ogk+[S)8,7tVK$As>UWG?gssL51Bmna)i,1:$:E%XEUP
%4DQ#Q6aKA=`J@Vdn`7^ENl(TB9]Y7"NjkR,fCg>Wbm%kj$gT]rZQYoYPDQrtG"`?EWp1c+cL$T3AfD\a-Q^=@0H*s-Jm]JooHn_V
%Bn&]3,iW'2+)GtePu6fIS1i>h?a:q/lKpNQp!hragaj9u;+5%@YG@fR7R,BuO^Pg6hf<KdHSr+^4j7Ni>q?loR^M$sii!B#0+D#4
%<1n'A1cB'*@K,A2LK..+cc9]CS.+R/SW#[S\Da\KR3Se%:F@FCTu"WYp-:i\Z<GJTF_.usiQL&0\KD2Y'hC@L0NK(2k)LulFdQXg
%@"((Ln55Cf"ep=3KrW95Q%.Q?%7"HE\RhK&^#+`pmRKX[mq@LpD4@/aG%.;^C>o8O@dF.Hg<`\+T.mDtCIR?Zs&^h#*YPFso'*/>
%i/2u"'>A9T>Er.r)bN<[WANJ-RQ7V87G)H!\?\O4Xf:\$>&\5*Y!I,@S$qCoFIQt!+^kd$Am'.q+^i7.#hR_a"dRmJBbWY'-Cr@%
%k0g1qqO9A$b@YlT)e[0YK!pJEb5<S5D*Mm%l&4f?8XnW-l)),-OcAs?+V%fNVm[Aa`:B$NZt\I`5`9+?JV2TuZ'`^7=I5llX3D=-
%&1X*j%)UHYXsSuo$_o)?[$?k5gs]?K\@cFigW=K+,n)5phkGu:_Lh=k=i)qIgD]_Y<HJ#aR*&_N&aQ$We^Ve^45)e.VCij*VO2NX
%cFWS;^asBE2huWOil6;k$_3PLDdBhql7WQoQmR=&0Wa%5h2tI++hOh%AYqi"FYNsk7?S8C4fbhMA;O*C0@5Ab4]WqjdH"biMBb:&
%a_aQ,r"URLnTDn,:;1Lj&C0#)9_rgA:MdK,cM,7F?DfdFG.q%Sj5a.IGB'#;@LScr?/0k5+[g21RbT1@f!a*<SM$uS*Y"Z;)Fd(!
%IPq^:5H\OIo(goHh8u/Z2th;GZ%&@;G_<opYk<OTgGPASd':3<g$ZFE<@;B,)p]Ighu'=%5UUe-o9ZWWW['XcP:s,oap$tk@l+cm
%L3&SS7NU=<Y[i#77p(Lt2&PaXfCOh?5B!i2m&kJB[hdrGh1I`238GI#r09,i?(V%?#e`jY1N5JL!Nq!rm_;ujrW7XXZ<QS2'aX`#
%m7L0V5i<7NQ.?"f#8IMlR!,;flN?Qh=.3ud?1e4[]9SDR52]:WhsrPX2uD7CDnDY=9*)f0o`8iV^fhhaed!0[IDF-_V1$o"e,e.O
%+nM:!rRa0l-hRM>Aa8l6l2sAR%oDru';,,1iD[-mM:96AJSh-f8)g?_H!T(f@ODusK2W=92S!PgAAk]m]B/E<90-ZiFsge?9\`[J
%XhuIEJ#g:a,d!3?JSd$=\'6Ua;=;$JJ5O1;=msSJGCHgXcI,/QW3dKgD1tphUbS2_',-*ad'Lo`9A(J,\+t.-'DTNc:qS]ZQidgP
%I=?WkF8!l4J[0Hl*.39Nm6LL3!N)u=>!#PEE.H'4*@P\.b1_EP7[Va4di)Xu,>;kXb*2-V\IT9B-a@FD\g#q*@Ok(8DQ8K)jQQ]@
%/34M4Q.9H5C!+pE,hMA[TRV#ZS9tj%g0X;OUjfMi8QDk/OL1t5'h,)goooHI`VRopQ+O:.Sa?f-h:8K]@nflV_XqX6%*@V-<\+UD
%\F`+aUc")@ot_*MYWb/bYFLZ2Z7KH8'qcNHW>d#a\Pmg)W"bRP4AM'$0S_P!Rfe%&&A&=hO$N'W_7SJ4^/]SKX>njfc8QGZf1$B*
%A^q5!(9$XF;ua<'@UH'ZM?_rRhYG-B47fM$fY@f`1duiK$D?[]:m,(=MR>CF1t$WH[D!oVGfF32+,ZBK(:>!ZeQjc2WDG,F:ph>B
%r*n$&QD/M`APhCeEDC8JTOpT1[F!@]J2X?BoF<kg4fHD7'Kn(Ce<;*9MZ0/QIHZ8a\SFU;An'be(gBR@np)_OQ13Hd^N&f5g^]l;
%3gAdN#s)JEou(QG-N^BO?@,';+T4Ir&;ie&%Gdn8`nOF32Cl#>^tB7`CQYq!9rg+'IM_+-]PhB76ZA%V](ir.OX`J/'t-]8dE0@@
%.+'X\co"3/BK0!d=LF2/-T_V`(7(N_XWCDJ(aKGUhnH*q!c[!`?S;"6:CPA7I+=-rHa.<u-eM17LXQ$6$5sQ&=p]$<enBN-RmIt@
%iM?9M-B,pMZ!p_cqe?bYD0ddC#I]uu.WctNIRRkrHIUP=P/:>05UjdfD/WY*%a^ZcMRQb.Qr>Z([35"baue&J_l>D53.*bb]9^>2
%bisoH2DuQ+Da;]-R&hR-+503&7RKIQmt>YtS_"?"d/X.!HdDEXDPV:IH+hgpmf:?2N5;DakIAsrE!>u.#Ff<tZH8%)B7FM_VZOm;
%V/:BoD\=]3dRY9N=4;!9p-lp!0-EaSJB2a,=N%$*rI[`PZ=Q3ZAfVlgX>oq,&EsB"[-]YUfPd;f;k6u':bF'M9ha1Dg&qN&S5%%]
%A"ZQd,.@`_$oD'n;j`#-D<T8>Uq1UP0Q!<q#$M*ABtAWs_D]aj53+:(2!.MCq^HYd0GaB3Gum6c--&9'@5<On`O>/dT(j#5/r52Z
%<,A89%CD#G((8+r95.&oe3nU0M62`ffZac_?<g,PilOXF\Xgr`:(T,LnqI]lgHL1AR[SZ=d[#%a=L%I3[XE0(j*NnOCn:AZ/T$JC
%:.rfWB*)=Ia$+3tI6nZb*@1i[[>%;/Y_:0I*;]lG`\SB2+&p9E+g]8`e(hB[_H54*A(g8uCnS+cfsX[o@<@YaqZO()D/h,m"Aq!:
%d$Ah6p*Oe+7%,CDK#Y'tPP#42b__^k:5Yg0'_*HZF,8O2`M6j&9m7(H=Ome?=fE%[&1sPD,g[O:C.o=B*:!`.7d%3!?s>#B/a&!Q
%e[BT%7^Gi$E5srsPN35>g;]!/$tl.S8/G\^-t/BF#<Y_m?`:(ADHI`@+Kb%h-LN(]fWHd'5`Xe5Gi;,"C=G"65U9#+qq9L$3l`AQ
%3)JceN9dVj9VrM`E8T&9PV&toU$42-J1b@5l`^^0;m"d0"f#ceffnV0RjZ"t22Bdoa#p'>)>8>Eb<42$@:imo03#T`C=<hIID1^>
%qh^=NMisiAs.?O]rVM;/mh\#Q_>jG!p[8nZ^0g*n"2A4,R%Y%=$^0C#FF:jM0d0o]06DTVd..'$8)X8uNpdcFrmtK?R(F4"]%GfM
%qbC!8iV<fT`-j0&1Um\9-Q-]VRjqok``hMtI-,=#\+7JOLHmt_7tC<RFR=01$!/2r*fl\D0D,W8g@fF`\_GusLr&RTO#dTn:Vcof
%T"'#/Jp[!7mt^plOC9X3F9U_%IZWN848ehrq![V>s/3<CHa6H8IX"Z^8XTQRmt^XJTDnZ`iH;>KbY18"M&YHfl)2;nap$l;Cl&,L
%g4VI*id\Vo)&qRJ2euutR%8esEB<ehcTqHS%Ir-W)ra!u.!J1o-Nj#`gC`nr5^g3ghNNNeCe)//p[!]K?V:RI83iU7&lA:NG^KJM
%mqd,-s7AUXPPHTn^GGo^O4t+^bh<MEI.)gih@9K,H]LHn%,7UT\a#dV[sT<`cBR#:gCUO2p;U7JS_q+r>*gd"BH,V,(JI'`^8^F_
%IK]E$>--t<3rB5T](P)LZ-n$/-p)Cl3E[!3R6H<0iNg(fJ(@Q0^4(M:=!uo;gmDH'H]hMR_>WiS_E=jX8Vnn+T7?G"<]0(*HNaN#
%l%CG$`J*Ff%jZ+@=5Gc=\?Gl7kqmkhqZN@/%TN%2o^L"$<TP9HhM"UWn/)#H@,Ho("o%&LBHQclDH#:Yn$r&3ag^4MI,rN9g/PgH
%Rgo,NpU@?adfm)ph6,p'4)5j!nDbb'UegZAnF5+=+8Ql"lVl:\Q4gAg(fRM*Y-jnEKSD&I%(Q9[nS']4Hbm%$n=')'"V81I\*7ZM
%0VsMqQ1B(m<.Cd5`@hoHB!lgc:,9uti#-;4;qS!:7A2tl6<"QB][n4:pk53*!M:(JRJ?C!KuU:\nLoeo_*&GX9ksi_P>q@i7!tj$
%fl5i.nPcIWCWe,nR558K>H90YG5Nlcb)6is*Jt(H,s/HkQjf!.CKRL&<:QX&m)%[Z`Ar8.es??>@8;4O1KlU;dmS]I;[BhZ^t]%$
%=,Fa2ZAjeiDG&,7E9hK`4Q43F/b+Y;E]TT6kti@t@o?7X`r%(Vj@^qO2Z*ee&GP5$4I;q4Zf''#KHb;_kBmUGJn=\4_Q4!bIGOf4
%Y"c]S4AYWM\4brpiI6ce3:&=&pTmZP[lkdn6<M#"brqY'UMIgrSgH-VZ`DO_FU5GjN8Hdc_XH\BMQ&%]U7&`mR;JX7Gi".<ma:Y5
%%^8*U.C^J7gGGW;chdG(L?UZ8ne<SBjnPDgg#o(ViBHn:imo-.WV[C=ij]g$jSW0KL#4ZN[X0_<p7_5ibbh=5N+9(@C(jib;cG&"
%W]V6GAeCMe^qK2>G_W;&:GY[PdUq<?:YCOAY@ZpXoC+X4<.B:CiTGLt9:G]VQ\[<ID"*D&lm_9b=\rdqhLl`7p-VH@3lPMQmaLYS
%ELVgBSK:k-pg)/o\7_OK834S@/"o]mOuD,rK$/N[c`D;l"dJIes6k"UD-ZGr[E"hA@)(7e^&d\Lao?_0s*Mlfs4!4H26#Ili-jL5
%pO*/#pC2B)2rK,AJG6gak5Ti3hY3K=J,BL5hp]/cLY([KafLDpoB?sEl:hnlMXt5\$cgG[1cG`cm!Ijl8\jTiI'U>8f.+l\g1T`5
%$>=.-cWF_olZ#aH.C-@ciUB&YF?tGqnd<)@C'*Ej("5Fpi!7M1=nrb;C-F].#UVb/l'kn>'Jc)$V\V(*MNajq[Yp":ii(.\nE<s]
%]?"sI6apFj2S!P(@OcsQ>o9Mec#A]HH/Nr3Q73<8WqQ*>GQFLI?(/a'h&i:NnU,9/kqZhB<E\rRD^2^Y:"&$Y,-FS$nK&OdH8SaN
%XJ_(aTYG+L>R)>Z'retU%ZRlR@sN%B2#G46rA*!O/(AeaTFMHcC/#oIppRYm(X4]31+nOLnbM8!Kd#kS`PsJ6qBG(O(GMU)1-e9&
%o9*gW21.eq2b`s7B\bMH,d.?UWQe'I*&5?'c"kCu0j=%MJcuR2A?Pf\r[IHS_4T2X.rJ&Dl7*(-ls&[a45@WpS^:M4gO2o:%=+<T
%`B1Es[ahc,ho>PaFR+<2VL(.8986kYGMfnqJ);5*3m=O\"Bt^!-&gdk]>G;(qm6&(-PB5\A@uDO'qQ^WRO"a4-cTQ"I9mDpM&/L,
%:fu`@ce=0:^5+fB(!J'p5`7)'o-[l3VRp7co,/SS5-^N14859@i2W8JiSs7s8N6naR_bokpbtZ9pW'n9A8<"]Z@N\]K-i?RkNQ_*
%Y._A?ejVV,0,CoO1.Re&'0se50o&[J3!p(\CgNIHCOR,L.+UgaL80pJ9f&=2^t<:>Z^cM2#h[fA0AGfcPJu(C10u9'=Z[iB9jD)g
%!rZEr^^]Hr:qWsT)DTl'8bbMK<(f;KV+\8gb35F$_i8>H[0/D;?*VBW\Z@a:R98,W128IM@MiTg'0ncJ*B;9XVK)L@HWr)\)sc)R
%@u@%IcihKL6(tNbQ2m9<h!'`/fhtHuW$Ud/0AY#@3r4:=^koe9E#gkcE6H`4N(AM'hR#@,5rV)-Y@N*c)h"n/H.IuG]jJL?NP:a=
%^6ahnQ]:tt/K:rt-UmDk&Dt&2qdA7$hN7G<Z#6@cY\k`d,pu-@s3AZqg".;.rj1MET&&bjoes;WLY%O8&(Z`mXFm5]q>Y(DNl7O)
%Y9"B8^:\D1s.p)nb[/*\i8QCn^nE$d33oNp$V/-M']5i2*u.dMeN#,%4:=YDhJVW%mF&k6mN*.o^DDq0P_C>GCZ1)!0-#Bn*;uF(
%-TNOgr<l+JHt)%?;pNOEKd59_E28rn'H@pLR.DG_Me?KDqG_sYZuC\bNk$TCR#qmpN][\4P'<TiZQC(%[qTA:UDT@8N$u2[h.R;,
%e9l(Afgq^[oIEtV%hmOh\jON`/]m!#,:<97L,k/]WqBIQXsdCj$\8jFg,Y/,W]C10I.!g9%d)BW[9g8uZbWrEPG'oqh0G&qIU$VY
%gBb;C^3'/VF4Z?ZHlYRbq3e&gH/-^CRZcd9fH@rXCI-@Q@B/_()hr+@*22R_[7sNa9BlC.n;9cRC]:t-/t7\h&4q+nW=f)'+SA6Y
%AR+A]ARBc`;p;5E?l&#*l)dR-k0#@%@3U2Ihh=k%pG)?A:7prR]pBh@RWFe<Kqj!-4^;IVd:SnqSE`o,F26.KRK^$tpaTLg[aqnR
%J8!q2+\m>*<4=JVC"AJ]\6d<k<>)Xc.[ts^!S&1CET!4CAr=9TWMoN%,[@dMUB83[HH([0iFs53VfOEQc_24rP5C!NXL2&\3ENs7
%ej1KYQ@'g)Y8esZ%aDFML*7$<K43/M>KA25oppd8:-oUZa7%>%^$aRHeK$qcZ'Y]mgpHgBTDiu]Vr%pQgKAk3Io"7k5eN`g'i%eV
%j]Wca(_<*ej&3A9W!rg+K5,67q<Z.Ppbc>l[p,NCqor0\.Tuu'Y6WQBIhWDu?rXBp>o$C&i:,=u2P+!h?W[j2"V.JnCR7M_<[d[]
%Q0-TB!lqOU*XTb:1')+f7/@8sr]r3"Y$NU)GGGWF/,jTATesO1^U&?2Z?[2anMW#uKoPEJ36nF8>7]rIRS!PYPqC<oO($M+!epXP
%;(DJb[P>a>TEGXt?e`!I:]FT_lLo\kdPo[1iDdEgH)$!ad+@D.&m.@!:C=MMH4n`icS_WaHJ48BF0.@!*3,QIQ<N*p-mHG=U"HG%
%CU:&V7bHr&C8oXc<UhutlW2'.d7<:adfn=K8qYM]D18=^PASU;BTa?2ortnJQ,@)$;@A`4\sQ5@>dNZ6T"uM"ojV^dVOnSih*)hn
%7YBQeQk?MJK8JlQ/o$Xmkg1gYC0L<6lpA0i)8l,1@%`E]*K#3_+n41+f"KiTfF3G8m]E23BGhn.jIukBJ4YV]qG"GGOD2NRM8Z-C
%VdEN%6&WsOs#8@<h:cg-h+4EoYB?n`;c1FkNccHSn2iNfm'fX&MQ^LQJo2A$_G"6sH`ZM4=>JnDY40=6h39(_TMS?KIp(2/A*/Q9
%j@=!hQt4\8>5)C^BE&=?Cdm[U)46-&!,uZ)dkO&rCoU3lLhPaDaA3?DB=m`aY7pR$,Mrn@;[**Y1FWR.2PBt9G38AX3am!j!]RK6
%FUd(m3>]lZSY&+Z9:4iOjbG/N"'/>/o_0Y*BcH%66j`X?'lJQ?""Ouf.(VJ"_`V8SEF8b7ij@CFrMM-gds?FE)[4#/D,)V&K6DT8
%?>=BiYPl'k>:o\*\GC1D'PKCsGM9/o`0s,XMq@Bq:B5^`<T/,;?@=g0!>5)b"[?T+P^g7n#h[uer\I@*^b"CZb\u&2("J?A;`+)a
%;=/jrg-WpX,NF!r".-o/p?,WRZs"2<LPT6%qltQR=;4mGe!nL=oHj\NU78Cu/uQSATSL*R?iIC%_7plJ04t\R@L'ID4a`rQH2N/l
%1\b<;_u.iPi4mt<rsP_Cl=Bp#X,O;>i^Z<i,O$q#Pfg\ro3UCJS+$-!,*a6XbMO1Cr1Q6uT.R>=QR15FObi$D\r""FO4ZT"qS,\9
%s.C#(qZm3GWQ\&b`7WR='HI9Ye)YbdMM<-1(rHO:=\FX%!@@^UC+G7340<B,1V85!qmc:E<Ee9Og4+Q^rm+Bg)NlFE8sV1LhgZm`
%N%<nL")cq))CNcSRnPU"#4IHK*OpU^ADNb,kF/EtM&BU><35"/_+,.+Rl9MeN<pROZ+ksuribKmRBE"93S<d?ljr2c^X`+'rq2nJ
%KTTj549,/,SM=sRKnkFr15THdl2R5Tj?"+R"'Rt;rp"%kIjJB"krV?48!?,*n,_DJWV3h;32rTAnP;mTr/K*nWbGqsN,31sNto>_
%LtQ`3Fe#KPYHYq3mnD^:%#7`8acrpLeGcPrm6=,QNU%3o-rP.JKS>a\5R:"p5-?EANi21%N37q$]$S,&+-T.l+!HQf<4lX4_UDCX
%qFIsGKZPu5jbLl/<*_6AcpR[PTa*A24=cIs=m-H.5nFcu6.4s\&Q9nB&.#*'3V:\YqYpgikV<J&$&.Ea<Iu8IBFbNBnC0!1eq6jB
%AV"ZLn3<*VJ!/Ra2cA&].O0YJb7^D3P\a4'm\d<(nf3D\/(s/?8<BkO:%?\^'-e?DX_.A:=@(?LH/Ysc"X)`Q)(YV:SFDTn8+FR&
%nrN,iq$mdFKn]7$09+_]7rLXpBQa/g2^#KEH!bH[[UofskGnj+5>9,D*4'JMju<J12"HWWcCng]<R3,$c]>E'Q.iXnW$V^h<rS5Q
%L[VpS@36^^Kq$t]HN#"8qU\k](8\n"c.8h*s855SlG\$0(N\@g<Q/?68(fJ:Z'Pf&e>c7W&sEcF0&e5,+gqj4R1lLjD6;X6>9U*U
%9OW1(X,YV1FDk!VFe+],N*"&_K8Xr_X3Oh<o''LSDK3Qj.C@)FV00c5p#IQ_8I;<-_I\R\`HW`/h!'frr,J]5l]+S4'q#r:9[j/'
%*%tZZRgM*qAk7.tMdd9h)%<tSa:P([1:cSTl7]AZbGH31gK)QaC0T.m1.ld="VP,"9XLH`>[3jK)<g<P;^Phc6C4*sn42%`+LD_2
%0S[8X]S'j#AY+2.VFau)9UpH\:_l^C[UE+*T)'$#CiA'mHjI!g6:9@uA":,F0Sq+tgV<q]5hpBG3uqiM]o*O#.)TE-.=!t2Qd8Qg
%CN'G:8g#q.%G)-p@U+QZ8sSp`G8ls1rPK,C[WU'd+?lQq#Rm^W)lA;tK4]__-%3j66r+&UK%*_UI&]9gL;A#WmLHu&-opMtln!="
%)OF,RTkJm[3o8b.cj[uhY`YpEKa<i#PdLf&UloiKi>PG-Z's<.VKrB8iRQ4?>_2@G7#FC&W/)u*Pd2/r&VRN1l80;R-ah2V=,`Ln
%EE06FFak7BX0,RLk]X&,E'.B=j.bCE3"sN,#nt?P%&RbPoaPM!VZUK;P;GuLmZk`ThU+;pI158U-m8n>=%r*5'pJPse8:'gVF.ei
%e/>4CC^ZH,3TH?8%k[rF7A=RT!J<R8'T7R1Kp0.e-oTmA]IeV;f"%j89MY/XdHN[=28&,%;S5'<_G9V-7%.Llm$j`Z6=t2]+R.Jm
%`[&fO75^;0O"]e_%L>(:a"UchK?iYKfFt".M,?jpAANebcj?@R<T4`rA5Jfl[CaHZZUX!)m,!kNLC'3U6F3P'pi[:M,s6"$fPRTa
%XgF$5'dOKl:%/RIbJCcm$0fl\d5TMs'`sSlT^]rY=,17>N&6JF((s4k^7YWMFJi.q2)7V!:3HCUaf<]kGTe[qHlC/YI_(ms8)h%\
%Ve+,<3#2%oA/4,SV]/3Ij?Q2'A8=7:rb,kN/7^HA]knb$l-V(JF@Nb95_m1m$.]3LJiF45lFbU\rH*.?@[#:5.T2I'Gh4=e$OEkG
%QlX'fF>7B7m7VXD]:mZk.'dV0($c:5_H#&!dqS*5[c04&0G?\0#M6\X`6nhrLPKiGTp$,@?rgu,3cHc!4(1H$189B\KmqFNUWYOr
%d;%Z8aXG*_UJla@Li4GGU[BlD83d;SR7*"pQoWn(W'3!B3W[JF::/tGbaHBQ5)jG9Ah'-<Gjr4"%7G=qTf#2p:uW6s"+*_)c#aIr
%R@jUT%UK9lGU]I>aYIR$8,kZm?;9t8(7G4GK[*,K>[=DQ\gCCK8P_LCABD9/1W\Zf(*,6*JT(URB=BTO'R#nGQD(gER3FP\l!./d
%"ToTm4<,2s9TsB60@dM`QKdoW0="k)D5isZ'Be$<YrG+<CJthHY&j#>!jl2JT?.afLV-8$JB(*0$0/te*%e9($7<r&i]'"SSK2g8
%Qc^Y<6I=@2Z%anVO?HV6P!>ZDQc8c66e9>V;X=n:[a7T4AQstI`[Y\;>L]a^8FkQf!l>?>3;0]0+T7"BBQBqa/Ptd;dbqW%W$jdn
%cd9q<j?n8P*^HC,(-!>!\rGFA#UbK;<'PIY_(#;o@MrSe;5JOh%JUng#4Oj_;bU96n)0iS`8[;X5+ha\CJ(*Z]Wl\8A#brrW?hF9
%<E.BO9Tb%gd1*_q4[=9.lTa.s6F3kjDU;[KMu*nHOFh@@$8IYq3iXsH>n%T6XF<lmYg@ER#'@#Y8!B@2'D(O_@`V9l-%M'W6R4o2
%e=?PdL)'`_RW5_939d`ITdjLPchS^BrF49:h7:W<2K"4J(e#qDf9J!c-fbYcGR:4LlDcC7(hbOB:RLaGh_=9ZUq)VT8QGgR*oV*j
%pi7^_Qa9@@n\N5eKaB!YcWp^)(LrZgP[QhQT0Rnc-$^1<3<.[e,&(S];4k^42a/t[DG^b3--Q9B74dT>9tNoZ*uncB;4)s:XgerW
%G]m>d*_D7/7$(i*5STN1pA_l@P*$u_iCq-rGG`2MPCj*h0'A+J""Y[ngC?/`0,j@?gp0P<K[Bq7;Zb7-0LU-ga'IN.27m?fX^a@$
%[rC)^.N\<e@jthW_/UY$NVNoMT84JXb:.h$Nu^7/eCYd(9=`^r-\q;'[hRq._iZV&2.J_db[W@l9j_Po5O:>"M\9n*cJ+W^cZ^M3
%rss<&%gK^S!r6#j>!Hfr7]:dR=064s4rfW=XU>#+)@o]GLC9k`T)e9,YG)/2T7!hn9Y;ebQ"m-]V&>]4e'70tS0;%rcL`T:Y<0mk
%7O>VqcN]20npIuF!o+dY:O:RF#=!,2_Z0&2]20VN)N=s'1(;%6)fHa1;YjVFr(4#8b#On4G'-XI:0dO+s,;Fsm_sP3jmMX6kL*bJ
%l.Hg=/c0SqZY3BJr*f@d6/5[UhrY`Z9<S4HOfI4%<ajYO=""4t/_!6;7$B9cb?KA]+#2DcYPV2KI04?\.W;`[QNh.?rA0l$NtXjO
%:Pc4!FUPD+r/tT<ATn+6PQ0Z8@H6OSWs('OcX:c5B4X1FofE*Qp%OfYkf0i[CN!lR6.((N;u[?<JI_Y-qX_HJb/='/rrE&t0@8cI
%]ZU#!B'rZHc\&4Bl+2r=rG-KR&(0*U)nd\9T8opSZS%.6Ht[]NJ&M+k-GGEa9?*kSr:N^8qt2$d/r_@mog=-+fs#p><TuL3k<lRJ
%rZd0\gf3k'\B;JsGT%E<T+5$9fR@Oje!9ne:'G@T6>nube5EgNn"8Q=J?euAoV5>(Q)`b[r<]#Ls);U;<@__Q-(a^m(=hl7CXq"G
%'=atMHgS)G>KK0q4HSZTPEZ+:C##V-etZEX2@,f^C3W/('AL[@HaN[c$lmlRc+lb^33!Ek^X8&h:HQ!6PC-A*a.rWYoN<KI&bc)(
%;]X)K\rC^/;%&oeqW#:A3A]M"'11M(%H$Nd0Y8k6;Ul7imA;AHp:p_iF\D+f/XkHq,1V,m5$;dUmu?*o80.nsj&+,?UeO"Ll`0id
%Jf,sG7cdrj:^o\=]g4mn1rLT"Ya(*C(`sPp!WsemrtOo4'J6qupLt/Nh3C2U32(u0^h?R0%f7O`PKL(ZV,[s5>q1+A_iOsY56p&V
%]ujOi=Jmn;3OA^!(Ho\+i&(W8;BHa'f]nFM,nJm]cuofLZS\Z_[Mn7i-LD#&->=@q>RM6]ruM?Le^gZuDRE[ngPFl6Wp96,k36ue
%qf?IRn-ra/BW>@=<A2_2\LRDEiVC%:l[+,'mbQQ3pWB?+7BJdl%t15Ee4%:9X)'c1T@F.`IZ;VQij0cRe;N\.8$61gUIpZFq][e3
%G7p5olcO8L,Un_:GMK7EiWpu0GOuPf6bCmN"\(cH)+BskBW4(."[JML[Q''4TrPU]+o%?caGnqkHXa.NgH[gpocjo%@B9jEp3p]Y
%eapIHWJsMk8-NUpG,Os5Y2gX7HtC"+(GW)3VIqU=/7K$%cal85bp+3o@`Q<VO%[Q^JUHkJ>5P)b5qe`255_c?hO;:K,_obDL@/h3
%+8)V]DY<7r`cgb,TS+56h,1)A(M:<[#,F%b56JfR!!<n$\s4^/D5'e_QFu)#[6Ym9+rl))OYs9Z\AuX)/j8FkPCm$f4WY#:(>M;i
%FgkpX&7]J02KZnrm!7f5daC/]R9=-"<WZY?p?\!dV/FhhRr^0XW0PC@"nYcPoZFP?oX,tMZ=ek5DbO.-8o$Y-R(\\Q@nItEUb/IR
%n1fW(HI7\GfHsI3?*4"791-tJF^ofV)i&lW8Pd/M4jo,IMQY*a]lp7,F."`/lAC?hLUbl]dS/@#-X##!K#TNF^ahEE6F[p!=$gFq
%+,Z"B2fkXaZ+I-4fA26orO#^eQWp4[$,t6:,n=^9bP)sH[s/e87B^$YMr;\M8j4f`.1P-g;s!*Yh=76^%r8tNA=PcG3P//m<5Oka
%5#hrE42RJU^-9Jd-St:$j$W"f`n]-6Wk7-Y[Qb_i^iTLj/rN6A53d$n<_%o6`oCDCgW1Pka(.Uh?7l[NV10Rd7]Tb^c"k!JW5a1:
%7f;F0aKQ)3V;LVKIf#qnYgRGkIf2lkbrI=&0NG^%H*`H`7]j,>CQq#!E!VIk/`*"M%>BhL6-mFVb.N=;/&%X6Z<A3U)Vk]qGihhK
%"#MR$QL+>NEUr\`'l"9=*M8\mnL.!sTkZbWkNLd.fUXt1E2D0?iZjE<L3"XPHf5:;^S%^_\2@b;G9MC'4h:^`1[uTUZ`Wr&6:5G3
%FlU3_]?_0i]fV*Qg\jFOk:oW%EUD(ZDr4P9q?L7p2Ug]/bT:r<Ka)<f))2[5O6NO%M9OY$KIQG+_3p9LRB"mq1iM*@PYg"5+TpWX
%1ecr)Apm8;g"I67[5ss/-Wk.BbLGbCaQf]"%G8F$l?ef]r.=Ms'?itUetBVU5@L\Q\3(bU+nBU%[Y[\`>T:nP:+U:JlhXl!\VU.5
%c]Rq%a?"/K<bKHTi4;rqVu9Z^a#s_"CL.h,8%r<A>pJ7Lj*uO5VI1@PG@>.qXE-6qr\]cT!,Vr_["AeHkpUSBWQaNNT1am$TmfmJ
%n9$AVq$/#*^JA-qb1C/k+Ic?-T6W,_ajC[e_hbbLHu)54EBEm\NLI8s<7aN8AC4G%*p7n><B@nKp+&8D,E<#^1nIlZ0u]KeR&]Rs
%$pJ@BUC_&_)H6r/^BU0+Y12k44G0*"4-d+Hp#/#o5a374/"`*s/%AaSrc]IV9HU5oquuiQ48ekFpc*iB,>tj/"!r9llM.[uQ/6."
%L:):@ljNZ<69Q_#&hm0ZSSbj@CpR*C%;MMCCs*[4QL"q?ZRe"n^n7R!7V<GT9SJ@g^6hp-0e98o<R>dH7_X\+:-k!bqkRo;2:'g+
%&suKHq%FD`Wf[drTf\?1-Y&*<Jtu[5i5tO]+3!WdO)geY9UM(tnYQ[^b2KDs!`=8=]&qHefj'TPh6sZ_T1(,@6VF3M.LXGQpoL5D
%F)_]*AKD7q4aJ/qIaR+YWt4_gpMCDdG_bs+5;D*hp<h1sLV<6Z7)N>KprY'-cIKRtf4U:)]=Y35>C-W.>@gVQ][*:8<NZD>k%J4'
%#MlihmMHK0PLrW6H6S3u06Ngf`k&PR/<dCEKNX[KIjB9cTCN)i"]!$4hI1Knc^/p8Gue2j^7SZ4.!2#QF$8'ZWL#03%h9"2!u.ib
%"W9temcj:jFR+7"A[?KbG,R$c`_qZ0?Dk?]kQVQ=_6rc)\lFUu(YRo!QA%40Q[:g7g?qH0@HBI'(ftr7WuN'OZDN=$Bpa1j1tJJA
%`9(!G26jR?+!u_4auVACfZXR*G,`AVWj.&F:MaaQ6FsS<;ouu<.ugO:o$prXOCrT,)uOSlP^.[NBm6hiA>bb9-4^HYAorf^`jq&:
%Gb'.tYM^AfRC[KBSr%<HRrs1&IfGK\VW1`"\*>QSnX.sTb<711L@J"qZaM^9L%hTiBSP`9H[.dqBBkQ04Om36D`6m[js]'HGI!8R
%0?]c@S:==NmB0\%7*t1,qPj#7K29\ZR=jcj0GQBM(R'PTW%0oK;lYkO)=o^*X^isYGrXX0Si=-A9BpOSFgC]R9r(iCF6VD'Fm&$D
%eD.-)8oOL((!Y>$:!p=!XdAgU[J7&TH9/.)g.T%.YsJ"jSBMe8hf/XY`9(K,KkB!"eRKfVXfQW=gW,fL]^rA`id?/V=-J9ZJK0*m
%O<'RNbi/$u.*#D(r*#Ac)m/aY#pre=h@@TWC8j*Ul\I:Nk*H_FK<<LCG0SP,?B`UL4U^ZHFRLZiF]H-4:s,J%_Rn9&Jg'NceIYL!
%4hG=h>pRrql7Kk^(5#pno90"g3mOgn[[)!NkhQ6.@JI_R@A+mlN)X+Cd-+,E-b!Z8g:GQNM=To=m#/ZVgaWQE_)G86B.(<gA9JpH
%(8C-^Xj-.saV2prdpp1;RaUS8TN(4'l,'4M"Za5DJYd*"_=V+bo1\5je:tRR]48%0A23Zoc.(@+hQs',b$p6n0@.nLV45ZhBf^C&
%W>Ab,M>,&M"uMOlDMuhmTQdJ`Q[P0p="3M`H()ph?9b>lYAAWnhH=USde-TXBXmZNq*h^S2J<f]4%IEAr9@-3'<*#ZlI`HZ,(M3u
%lGq5G]2thQ0r,h%PS0J)d6b-`3#YR'DM#A>9%]>I1C2^5$6VX4Bfo%Q]rNbCPaAN.N0JZ[W5JpF03bsqnAslu1t=CS-KiQJ>jpb-
%P9JRk[lGEAST$Dl;B=ooP0\n=n]b+A^\O$#f8no_BrcKV6l)E'6r3^p@H.a%Q4#A?,O$PeGfrSJnXRe++:#A=;Ds5F'cAk0da_KT
%_1a)t7Pd-eS!D0T,em9\-g0H)^O>32^9Er`Xd..6dpg&ANmc9JZ?TW6K!O&a1TC<>gT:BP;,=a9>@%QnaXWIZV]AR>cfcnr3GWQq
%1A[OSh:[.k_b]^I?sJtC/t:76MT&>o8GC'arMqej27*;1?VS4oWh!,$Hdtb)Rl?7Uj!a18k\&Ln-VA8:`p]*-p#ZT\HX'=NBYJ2[
%c:FhHZHo2Y]r"V_frLTj>GFOn7up(rQY:3mTY>otPdTXrnoC]boTrcW?52k_`bRZE7G?"o$eUDBTQ_f$V;B)f<c2\K%XV1Rh8O-N
%9,=``*n;i8j`*2krI4-;Sr$g:Tu/,3J.C-;;[&,HkiT^c%f3dMdSo_HI@i('*2]iFc/_N,CHihp+tm#j&+[mmq/6,#/<#LUq^WCN
%SHb0N@Sk`[(/s?1eFhRuh:$J4?dp$'\bpQ;<0r5q=_-p,]U-nknC*D>\0l2f[IV>?]G=923j9X6"uP?U,qsdBTjCDk:&<!>H0$#q
%h%nQ.(=EI]$#I_c=H;^Pb_>V8f?[og/Ll]d1XM*0_%`1rE=n%>YX(L6K[]l?VoC%u_=!gjT:>p0W@-%$NDtiS]>`+iO,F:u,]%?S
%KO^0;G,H]lV6:BCK&)AaSLSJc!?0%^92-m3*>F1n2E&l%+r#j/:,?)fdt]L4T<0"&q`?-7@OCGR6m\XqMjsu<V".GpS&XQ=-#??*
%HS[^FQp$n/c_j3RRQ`_[7B?EkJiD$fI)I'JncflT46(AWAL>+S#A!%4H>ST!Op'GPflflFKhl@/F[BUZ)K&bIRi!T:A]'R=fAE.+
%e$NNMM,pU[.t,LcmZdOEG/n0#.Z_M=c4HC<Vi,2J)A0&C5M0.inGYDXk;*QESHqfSD,-Rs%;BdAN;aYMMJ7'@a\n\Zb6qq'O]2*%
%V>pifh8_a(I\1R:=hHf\jq92P,/aM)`G7]^A/D=[,G0<C^>6j6=6!uFE+k!n!Q5biT?4_lY!\P8FR/0OOfc:00+6OsnM0[`fuN'3
%f,'9M;n.J-RQof*Y%ATWaKG"=cOM-0Y0lj[@o=^p[1YCHc1/bYk32"ljW.7a\X'nlAkj"nVa22kgNK;9qjWF?BX)P$[@ap;0=fs#
%YNlRYHO*TSqUs"pEBV:lPaEi*PZ-[5VRDrLG?lhATFT#>9,l&9HSA2Xd@JmqJG9i]@'cEieV2a9L#>FQC9cXln\mj.4,+4Zq"":;
%*sl8f&@ml)o`p,9017G$46SA5$jS-]CL;bmo]AUs7QWfd\)uXil-47<D@TV+iOYh*;>nfE*Y`PI&_I"Ljs\2LTS5osFe6*M9q<q#
%NlY3iXheY3ar@>lp[>>]GimqLQX%[Ai.8hQVBFRJk?%%u0mS(j"DeTX.X9J1a[\(@+R'AGX,\1dV:r"j:U'pWj+[ff?*0Z0p>2*M
%+D9kAR/X&"VmXoYJ"^\Id7s#HO#R))%(!?N.@\"]Tq.!+ou=UK\_'&F&sko5$>59t25&Qjp.99i\U+^\Rh*=Ekje8NblWrG(iUJ&
%5jI_r$A$?&?#p-["65-6e=3`aFFS7S?J;?$g(I02TeDR@WSCPJ+mras\YmKu:bLKCUNe7]B#bJ\[C3SoDt$Bu0Qhi1!:+XZ3O-.V
%^0O@&T+nF^,e&95IT7sTpQd-)2D1Unq0oui2a"2O-CVB^F/&=l]4kruiQPP90PFd-)opRBeAA)i]D7$Z?s9S"klVIedsc$rV2\E:
%]QQ:DqW?c9.;<Z@`LJ$-g3^Jt'[^*-/MU?egs<)lehg3/f+7qa<P)YA/onMc8?dq\<>/TuVf(Mj4M&2QN##T)%F%s`GE8nu8p0L@
%15CM4(Q6b>q'MKb&Od^3p0mie(b7/J9I>mB2P3RHlK0PYMm90-.)lfMp?LnnYf/$h&A,]=%^YWg$'\f<#'fX/#Jle^@]Y/[F4@'2
%)mU'oL`dME4W>].DWRmcbO)'gC8T]>f5)3200hM3.qR0++^pmM^#2Xj,Rd)Lm<W!oW4ab6/5kl-Xf'nC$Q5$A]&\c71SW-X9B.c(
%r3UPVh/<E0n#<4hA&=ZEpONfdMb?;Do)NW(,?nKhC\^+4dbjd5i`d`lh`qF(?Q]"MIX<])ngu_'b<DJ_T>>$j7,:e&A1LOA+fU1?
%F&7SBL@>_Tp=2uKC\Mj0F3nXWVt@$ZGk-7TXHC.D7PXDb>M=GbWAh@Kn2`8?^hg2e%drqhk^cu8&^]'4Kj!4jMT^p3giI0)2H'jD
%V:rrK>37LY$'WQmC&r?.)G>"a)<SeJIBh.hdAdC_ojX;JY-PXjhVikTT2SOBX2WK-BfZdRg^(2_5'MPdXV^"Phet#2l/7#/bJN5*
%>fu@R^Xh]iXd/KfnFb@q\]jI?lE%htb3;c:B(N9Os"LY+eLEe_Cn=B9frR>*hC.j$ERNKUA_26P18mcM:)<KWj'HB*\q9$M*G%%G
%9;*N]QK+i]Dg'gY?MYpq[6)2If%S.eGRlG"qZY2cin`WQ>,\5V;"tst5bdq8)=nCE5s8[n486J(Q"fE(f0QhlngP9se-dqCFDG;^
%#QE:LPMMd^hCM-j\O#(6m8a#FEID+fSo/)"&t>l7f.FK.[M;OG@ceLbF<\gKX!a=Hq6HU*X,WDm88>jK<f5fC4P_?2c-oZ<R\+.2
%08dJ-\D;pXm2gLSAS7L3Zadr$94j)RDI/Dhq4+FV&(*oUX^UmH5Eneg*uhb4U2dHQ\1JdJc1SR,llsR%f>L\ZTTn3RN',ns]c:3H
%Cg>R1$)9_0VGu]:Ag$5?V>11!3bs1eXMY#/A(fRO+*XG@HuC+oc26>ZXYX02B[,lT;uGgo,Ho:IX*SdP6,(5Ha-l]k23ulSH%#:/
%mdR-q(386<[<1HMm<b!_gf+OFTl19=g?[#;du-rgRc^HfrolDKs"k^-f#kPi<b-47&ifIU4k2RKdANDpHi_IEgDr:NRrT@1T!ebc
%>]Do*0+K*GPj09M-lrd=?hTe+_5"pkoJF_?H\;)%^,<`e2BoXjFH]ALG?%_'m.^cJ#*.qPiHjT$DdHY2U;&QAHTOkXn2j;j1:NOL
%]:jk$1D`6R?=O!3JD0!0;qlW85[k^U@mjst86lZp%"5@*%F3DYC[tG"W=Y'X^*U42qB<%=g>3EhWig[S.1OnsfZp=Z:$T!YF&X%J
%N+T"&FnI2]'PA>`Kj;?]Xls&(3Yme#T[uf!(QNPj&%?2n?EtXOTGaF%Oms$D0K<'1A)fPKJo*(l#JVOi545oBjs'nGo(LK;`4=Mp
%9$2&>**DMqb#WBbH7#oSJ%#fhp!D)rJt)IO'5^p%ZsA^Up>Oi$LHo7%*`HpI=JSL*=qG8T1;R&4W&cOh@eHjS1KJFsicm[3V:t>9
%b=%lhiA?TE05&JVer&(o[nnjM6aC!tiL34A(OMt=75$mJXI[(,D$T?Clu^upDlB)cCh8/\6DP87jKceErhKei^429CE-ekI=^HjH
%rft#HdL<>;)"`#1:(rZ4b],HtYHuX*Ppk#K.5nBbc8!E#d3:E<MpH,VRW2NG:2I=Z&[-gNM669P!2;$ZVbaV\$Q5>qcLB,$'d]kT
%*7]6-4E?>lbfP/]['=3<\ot(.F*jI/_IW$:^M.5B`nkZf$gFp$pb6lVQ7k>;c.^0X#=a+RnM\)PhBDWV2"Y[^k#\,6Uf$P=4;NOu
%n(i8'+.U-<ZrnL&#*XqS\!gIoe8X!+M/tAonLg:7E5i9r>bV8C?5OKZT<g8IaI"B,;8P'Wd'WpMb1:R<Ya0gMBrlK+bn,qJ/)u?H
%U_/M<TW?-\Qji=[\!GJ!W`=4bq06K?h=Q0-H!ajm&8WMpFfmo>NfLO`S9=#:C?VSW9$>o+k2Rb4V#3>).;SAe;#5BS@#""Gj@*:f
%p8R-$9k"sM=i_R'WkeS,<.C3W[5S,Vh=9Lr\;P(567BO<C$9AACMj!r@QX%Z=U:3lhfE#4MT(g?Y&`$VXe%)72RHqRZfUCoJhLYJ
%1BR401!L*VhA3]frPb\%Rh=JT<\),uV6kQ7C<,DphTakN(Zo=oEq=dTaN7A+S9oN$2fT)C$3a51mTNJ_am`'87!D1Z)6'g[Y$q#W
%_oZf,0m*&X&*9#'+fjh[\)G5O"b,jf(he0+"=ihem/Ca>g3']GabqeIbdYN+*X:N4p8'd3dP'3[Zhi*(.;bXJ4c*.4=))<IQs":.
%=16[tO&APZm/ZZ.[r=/L[>pmO&bYMtZ<Y-qpfOLfo(6T;f3K?)8.!8eVt1(r't*q`dWP!n6eqA$lV]?Np0-.IS)u$\T%NFhnh9A#
%o`!B=2Yl.GLWFP!d:P%9@1bYF*/V%IpY\/+!W-CGq](!7j4ju\p#978G&&p4g9hjjYX%MgXcY/HL9'\>W3j/G&TekaY:\GbTS$ej
%f5ERj)fOK!a4>+K_eor.$NIpHF[![9Su8'7C+OGQ:1$f,!KqL&&B]]f;?kFkg"fiX6NUU!SN/a*Ke]U!/Jkb)X!W6hhk;j2?_pH*
%SP6RM.K)SqZmo)Sq3d4Yl/d%>g"d+/j^,fb$4=a>jtKo(g^`&ZT:\"P:A6Eo`m&'47T7K5^*>>%V)Jl19G"!!(P*>C]Qnt7&UOB'
%XsMnONb4?I-:hKc%:lFtbZ8o\!S-:PJ'kpQhCk=WCQ,'_Du5pNO$=qKc,p<=q>YWnh15M'G8[u%j\*3!_tSBl0:cnF%0E+;WkNlC
%@b.\Vm*Sr_pFIpC_3=ZMd@&WQO#>70m?VfcE;#l8gu4&+NdKSgV)da^C73p3?#aB3eD]Y[S#:c&r;26iY]$0'O9r+`!8=5AI;oif
%C[PMI)c:V%l5\hUXY5o%.lD&HT:F]DbM)\jI(=(9HTYkG0.puKDhmLQ.;eIk:(HEX'_1kV_K5]%>\jJ0"/S:80P]/?emY;gYVng?
%%g0R'CYce1oJ<d`W>iXpLep7(F-3j3V'5j%mVTB#)2SSNLP-ND%RiN&ia7&m5T^ged-CmN@WJFe!bhboCi"5_]mtkKecO4&K:iT>
%$B0:eW)=#1k`gBBcn:0$^Z#\QV1'L'?X1i3**8T]iIc$&cA9'Q7*AVX5f#2I\lX);e/AP2h)B^c0)gElg>W@).t^n&PHFiXUuXd-
%Y&!."<pc5,bdb1JUc!Af[U%HECB&uoclFF3q59_LnJ)9o;<P=/#<gFi'%WKD0/I7t4iK6R_%fG9DRD<gJ*-,3D.k$";*N?9/m2Eo
%G^tRcP3(QHF3i,moVWp=3RFKCT>1"&Dm$\HMX!i8#/,%kPV;u=)bf+<11+[lh'3h.X`!f),Ma<'I[r:Aq-"&[jD!)SNTGAHaK(lG
%19L>K-QT<PW5A28l7M2o_Zr@(idEGccgf4+es'TR5<pdG"T?,5/k:1HGMn8Z"gdYUo@Noo4_LB^\3#/c&@AuY6Oo[)@isOm0PS\5
%CVQ3-^7\XpH&l.gl2[HkoVp!BCOLL]euiMrXSM2(-V*\kPa*mO98hj"Yh3o8<-,_rE<mF2??ECGqk1sabGjXG",bNCEL=dtHe;//
%<%BlIST;3hC4F49Z\51=\ZP6,edd'EU.!CUl%Pj]2C9hYo,bu@lY[NYAXqI\GBABuoG%H&1m!K-Z`[9s\r2*rIuW2fM4Kb#+4:e.
%@L-mBB:n8_JP-`mc;fA4,5M01q=@A2R[Ej\W;F]MDdP2)ZS+k=V[+j:kFc#[?[>T`5X5]gKG@'?!U#E:RC[a^mB$!L>5PBZW7RQ'
%E%2"MhXbH!=jabROP8IlBYe(14#YCp;pW;7SK0SoI_'H8k"8:!m8Td.*6P=O-c+a!=pcltq\P*Ke&9=Djc1F31JVl/c.qkr^Alr+
%^BK7PQV9*C]!;kUL(>(S:T`fdVn]eBK4]^-@W6c=_hZ23IOuoBA"sJTQHnI8K!CY7eFl:kQCCuA:L$&s8)V;-$@U15<"9E.lR%$S
%WQ+'QIQ\F"Mg(Eqr*#et8`O(C_h[^_,2Z!2B<QIQ'\UL078,hH`05!+AJIii>jO&USZ)$lm0'J&e#d%u*PYKRoh>9-2M;SqR=<DW
%CP-j/HAQ!=fpA9(0RbFd+&brac16D!MU@g<2l:fS!kEFOEVh\<a84%s\L9&j[PHlR>g;`?Wi>[D=gIfd>fpVVWs[38r0T&hDVX97
%NMXkH=FDBn&NqjG:GWPVL4W,GF.aR)RDo%4l/bOOq!GQPro,':fO:hsMQtnt,o_f>esi5$W')M)*WM0I)Q3)1DGB*TgRS=jIU*on
%F[?I,lf^,*Yr]Z2@Ak\H:B5l[fnC5#E/ID_iKo0)\&4`'-?WYI2:RDF\@e0>]t6gA<-O[-g%CFr4UT4Kmn_?TcJ*Mc\TbBkQ[3$m
%WOIlP>2oLhQ1AmYMtRk\%5E3#:gJNs:Nh&DEGd:NE6?g1"V2XADa^qPGo;qhGVko9SM52+>l!cros_i6@!$$<i"hThLDtE"^PWsI
%H08T`Nk$j8]rU<oZp_QU<0(e,F"^lqo]LJj@(:]T/PBm>jO%hC%eKK79uY?JHcf@g6p#>AC9"BhQ$k);o+;.;iVX8@cM*KUENg<T
%AX3*u;BEdGcsbU"A&fY?9^;CtB6%I`)?#P^q6s`[,0,;/oh$UA:u-U1"uFjL0^g,)%.50sYbql[KLJo`(P7d5S+kk+L:Kq#/nPoW
%=OJ.;`,D>S\7\@IZ0PLRRM\L4#6#<(-4_^6(R?.%Jt]Tr8T7O`Q@hgMUj.1^<(AB>foYoZiSF3U0Tn$[Ju_D2nR2!:+Ve7oHFaI'
%*jVucGW?NGXuBP=6)epK*gDGm(0!Yr`Lo9+A3kWhlS-E26;Km"57`?8i`HYY3Gh!jE>a-2DH85H9u65YCED9a3BRc=?>VWQM67g-
%VD_I2_=W0>3LF(n/-^0.mtp!%;Z@nbE7tg+O(.-[0OJ"0%\E#V,Jg]tFq?bh-X4F(_6FcgP\r++=6%ndi(\,A)n^OS`g+a*_p'J<
%5+T/)JhKQ@/Qf`u-j6S0rP`0X\s!X_H_jU/D->R'FuF6qK>#b/?LYXKr>lr\.JjLhK@4ufe5%)</>khX$fU6mj[(f;.kS\o9.p\$
%EG9J[Q&e#Rb_#i*EO]DHXFqBJ2nBM-4"I/0KuDpCI3IFZ-nOGNNjOLma+O(PraGhKiO!p4/R5[/]*jt#X5_!u"Ge+^m=g8W6L]8o
%gju?gRg7)&lOjbN6N+rYrg@bVc&>[U=_OK_=:?cs]?O0J<PAs^$>_pPX1(Ph?WNpFUJi(c[U(lXTu=q9>psc7GT,9h8@_RrqJA<9
%p2I0gMQbd>ctt2:&pcD3$_c!OBb7:%$D#PEEeK>WU$b@\)&b+T)iG*%]Cj..[<,n5qR"jZPW"S/(\Q]tB@2*OIUCkjl3A-S)0oe5
%?VSNUO/(>'il0VjHgs/2Z+'M4IW`)$g'HLferPl\Mf18dnR@!T(LIMeN\S_l[!ZqX?]'kF*gYlN;KmtWP0p,.PNA@3PZ0:em5<4Z
%9?0QWOei,?-^JWd7Q3t9mC2hdl>);0]fs3$/bSFpc>p-md[!tkWoqRqj\C;.isV@")e\a?Eh\g-6Slo4m-89[pu\]j>[1Ui?G8MY
%.kd6bQF>SIl1`BWb]S;Y*/e(*/.\po/$[h)c&-];(gkrYhgANt*VHe)K@</0jm6DgGNHCNm]Sa4S&[%%FrO`Oj:@h`7W/Sq$kcn"
%fa`bsFn6s(9XYPiIPjURCi8hkHji%k>jN5l_[d9S9"93"c\L7(M1nI!UP6c]W`FtXVk[l:T$QjnG+XNZaPM8U(cdMh<?jGXl0HD`
%06e1Fm1cgnaEu[g=-k]2dFJ$_I;"m/B&6U5pU.K\I<Dg'HG8/bXkrbd:TNT#l!a7eom"54l94#p,E]uU<&&^FdEVWDE]!A3eY=L-
%R<J6!pgt'h/I[u?YK'*p3a0&Od*,\g3L!]GEX*t->I!&`>'?9KXdrLITs`Xq1NfhjU1W"<jgXR.6FZ_*M_4<a@sfMeN$V9VY@C)i
%H7sH<5H(iRL[4!Q>Pt35)`R2\GVjPm*,!IVG!+1=@l*YMX7190._iA.0-+?da4lC*pA2Y"]!WTk\1"O"eW@M:*q)=qT5KV;ot/Db
%VfcB;IJs-2W@Wb@aXp)t%)#6EH7:3^Nm9u><?lQ:Q-WH9l9`DZdQn^oA'"44A6n%E7%3[48NN.jHX)]VEk3WBpWp",V>""g;79Q#
%b"aVE<fYU(\&us1Hr$`m$=%l&LK;nqVU/>2(3rd+qTG^]``%ZXUUcag?h4^o>IZk^TG_TpP`BM5>C9R8]T"OW2lhi]X`h<9e;!8J
%:li>mNcal]0BdcIoTF[6IN$TaZ%f'hYH;iR\sh>aLA\@'EiJ^5.p`p]=h,PjZZl"aRBJefN15qZDOKR4:IdAAC.ER0eNn,=&$'A[
%N_cj<Xo844EKj44`ner&M:"@V]UGPCKOQF=UGF^6I+:1%Zct)nV7$YmDeuOmXL<#m2`>[a5u:q#HQ0H%Aq-RUgr<hoRu9f(hPQUq
%bACiH/&TV@jtXVR]fo]S*0m>c/L_[f[h@rWf%+!1Ej/P!*[4hWot-RXf^<U&HY9`)ffgiB/)/BOMauP#6XAMNgH->?ChLnO4"!P!
%#<U7Ua2e<DrDnDn2\o'$mI$JQ*d:EWq6SmTDCr1Vka0N3qWZj_,0AB#6m92W9N4)lrFGE^nL^`+mT[eLosU!qDHteWY:HG]C1Z_u
%2.`A?4/o!h1e9d+p-PbXTRn\\l1iB#RSG@.STJ9s3_\/KHWQWSRrL=':JZ_5_p`imo6B(bB)41$L$\[,:+Meh<[6;@LL;ml>4(,-
%<j#eb\]sfER6.C]?09;-UZ#Nu,I5"\a,Hq0K?+?WZhLt/3So+D7L&aQH'I13S.4?KDjo@MrQ]/iENiJ+g,V\n,-M6<pQbBeX1:/K
%N/X$c_jssZH<;RR*tOiB[@O)^l2C*bqsN_6#f8>1P\4cr%i^/Ur:[IK-T:RMQ/l\oH$0.5*0GkTa#gD&qRCe';N>*_S&(::D_t7Q
%/:2keXbTYH3a3,_e+dp#o/-%a.AunJj0dA1m+][NdO^*t%X&r6B@!?Nd<Y5d5!CoG]nQ&V1V<k8SCaMeEY2VBP:h%/=+5.#XRBJ;
%:+d%bla>it_VY,X\aX\Zknes[&(.+KgtaHOD1k]CND[B:\QZNN?)I%N2D4G*M=\nVEV&QiJ(g3lNgi,N=7t\AlZFIQ^_8QVa[Z7"
%qT`2H\/s.DZ8ZV"nb)$$)W&,@]H('kUG%Q'2Y2/r^4!XqN4WJs<PR:%k'-9OCE't!:,\9MQg;Q>q]iN=FC0GGmlX"H/&@#5;X<c0
%U"nON$pM[N*VOLEA>B'IH!\QVp53_dUm5'GkqmWdIqnN(bNJZ^AbPpB/G&&I9f)VYd14/Ll)ssXnoR*rPSOeP&#J+#eTL+/EE4KI
%&'iJDRho^Mjf@[s=a@5T^8MkrUFU#T;AdRNQ/9nSWQNd1YLW6%1oPT#mNXUV:ss,lgNTW#42#o:=81T&p!`5rEW*#2:`HF/*]-V"
%bKl0W@5$84cb#[kZh;UDZi)d!['YV0B']A8j1a&,aeNABb0DIAYD%aFkI'2,fR>WCgXWd69Tm."?i-\n<qb<^hi?f%BAo_odn+?j
%3h7WEGM$1-Rk*=]MYti'X@q<]2'*k4%enN>?F.;NeQ8Qq;#dWdr6k%&K87gt]CE2%^L&(I('[&^?5k0LO&pts<PCDN/CdJpb3r;?
%lWO5[>W\`PF5pi0,[S]8h#oj\4^;lO*nD63BD>W?IVI=0\58ksnm9lC&X$&$dd.FgHEDH%Ad5)=I()Jr6S+INXrWSXUK5-892=8n
%ZoMXd)n4O)O3151W4IY#ZJr8P5C"<5V$2sQrZqe[hn.e$%,b(0MN1L$l3PY$J,3668dFEJ+Q'"8"*A5-CKQo.RD;9WP^\A8@TK=<
%.":F9H]B+p`j`pNpuge+TDg^f&#\Da@83J/]iArhL#.biAQ>Llf=@X)_q1o>cN)EUe>>N-f]t<,s%^l@9?oW[2o"@]6hp9\Y[7I;
%'K?TX5>$Ll:[mD`:]KG0L`?-AE/a)e5$)S*3XAaG%,[/-ED;I7aj:*Z.<,N`FH/YRTP(PKi49O['ZL+ulZ%c$2,Jk8WZF*A'+-M4
%N,+Sg#.U\PAQ(>b`"a*t2Zd5oEF">(@'KG$]KoO8^6HjHWiXPLoE!8!\>h8@&CYb;k6bkOXJ,fJ@_*c(RAnA\1t:%VNsp8BR`XQP
%AjAXIbu>"rBadJQ'Ks6C#35s#!9.uci\InlbAdjG!%4^_@[ACBb=,E&j'$u$J4!3K"IW(WB%SYergAL5D;]d-5Y7mY2,"lR>282=
%&]!A@<*HE(MMA7u\d>0F=H3K3ON>"Di1ock%RQ#iSF_78V1>p,/ff;<CHC%s'RUtG1m%ug>`huC!)s+g,#pH_c:pY4W(b3._dIUS
%MeaYY&6)Y\:`<h7A4_es3j_0q%>Vr6*`m@:=BEn4S.$`?#7=:5VT(K@E#kfMMT[b5bOdd%_4Xq:#=>CD7V9fi';eF<$8Tkear%j.
%N<l48'e"eJ=dETO(i`!1R&I#^+^d5<M1_o32_%M@Jt0ll!EF*C##$:m9Jm=/%R#P$!^f4KJ6u`lJ-DDG*^j&fM?1s@!S%>4W1[XO
%ZXK;%&2+Kj>!airTpV9"#V7^gD$('f3CkE7BL%cX3/M&P`BuL#JlIsUX:%tJA<V`T;A;&i$)dt8#!rFYU]GIGkWOGq(0=Is,FiiX
%bNLF7$2TW=@=1=^%AD-U%0iaK8mG@)+Gg+t_ANn[K/"g<J]N@6Z4*A0XpN=L.gXXTs&A&+kddZ:2B3UU'7^q@T17I`'2=alJe!?o
%8V@XD(5ROc`i0pdhnXHUFW$QG`G#KNL'ALbYRFgReR&:X!C.P)\q2#SXos?5;?6n=6T5`W<<WED7SP-2c8CCjcs#BNF@]INWg](P
%$;Cac"K==:,W`.MNg4i+WND:L0jmln$+(JHb.(lq&7b>=ou+4PK;s(DYUZS'H>-Y@9d$E[oj&dO/$%#.4uTV))t"!Zlj)KL(l'H0
%Xlm9U3`(VS#9b:nW<!lJ*Hco6q@FaP-T*9NW0KW11'P'4P0@I8%"M+_<>-9AKa)PV2%W@nE%oa/#%Rc:ZX<i*_l!tR?VP.JN(V0i
%RLCab5`:3%M!H&&XXPAGTSro)K4\3mps3J#WG7eRi$\m>Wb1%NTQ^gS;3=Q=#Z;_r-\1apqLf0:MR%tZ!NKpu"k?T1,c7<<:f*k%
%N(R=[&9WN11@UZgH49*h@*&gf&Wi`sXJf_r#OSO2e4M3>!j)\M?mK#*FC:-5#KUlhi^&5IFUP_&5`2PjARGn5.NKViP>R6iT^#on
%Lu3^h@"_Vq<N6PHf"jTO-fF'aJ-'sg=2F<D1gW^6Qq#IMYdC-Edi+U.dNF\:_1EdG)@*h"T]9FU&;6*',#_Ho=9<Oe'M&VS9`b&I
%TJ[EBe,cSp;9D0>b6BDE&7\_kKfUp(UbEc+BK7[G/Mri!8S+3A!/_Wo_HG9b'I[h^1pm^SbY9ida<;ml"ko!+VM`7k&Q)N3n!]7D
%=!_r2k?qVp>oiD7=O^>J]qYXmW*/=5PCZYpAL+pf4,+aU$_[pF"I9N,Hjj3]Q<$;dU+jtC$rlLWGR_$<DQ#P&5W"M^_.I9NFARYl
%EM04["h@+R'sq^hR:,q*1-)oO3bVZ`HD,=E?)WEP=&A+3)3D149^"IOD!7O>!<i04e6p'DJf--J_3)?P:bX5r"bat."jmVoba=DK
%.u"IA1/SQF"<FTpW&Fes#-.l)Uhb-4d*D]'#;q4A@cFfC=;-&d8XO8BPo<ab["VaSd6Wb,Qo`qfd-V6Y$RikORNaND0G]E0%g5B-
%$5up$3E8q:Tb)i1Jca;1d3o8[9b$RtGSr>cQur^p]*^)<PL4p6!1!d>TVk'\UF$&#$QL>^4Ee_4acDQP!u$dTQcP05;$@&I6.h9$
%0iTZ2=B.(Vn;;>K#;AA=&_n0J#q-pN[Tc8>%ZS>D$:j]D[bH>3(DKnI:/Rk2-j]#Z!9:)ZWX(7WP(8lue;?<?I2k0*`52d;aFSuh
%K#IsJ:]p"b``s8P^skUaBJTDt-p$QUC7t*RLLh_3\q=6XQ@ScsInLEO"?[fKBop`1.^/qj<+0&h"kldl*YAaj$@#iB#8ad&Jri59
%g'h,^6>.&Ii[51/"o&I]&@@S9;(J;gQ8NIo-5lHW7Z'N&ND;[HBis5LM;A<]hF(?M]VkjJ,u.b`d$qBJMR\Q##Yg_)3PXLuiImEd
%LIt#\9+O3F1((Go]Et$i+a]ls$(M>(00E?E!K\[>+5Kgfk\5W?ikf%m`Wu2>_i3HA%]odcdej*sUJauX3=-!`jpg>X!(!qN*"Kt\
%2UE@N?-m":>)j#(=?nK+0VK`/@1+R=%]hX$T5E$fdr'15V,Xf>@.;"0.i@IN8Us/&'/u>td0G3t0L2h8`CIfOJH:$k0NNmka_/Co
%'M]K5$8d>gGrhs+!.fb)lqIK]1Gg_S/hddR.Z@%1;ZoDmED3[(N!=l_(jH[,5_4n3.O,'^TOJQ,@.%T[ET-7%aI,_R&Mr5S>li6(
%8Ma4hUV96[c@e-9f@NA!`J1,#6oibZ]a9>m#T7!e0Plj4.,kr'cGOh!M?*l\A/55t\>!mJSmGYGD\'40KMVDPZ_.RtoIOL,L(OeI
%"LntUU9H,G-C?]51=6h)q[;*t'EK"tL>JRp"B82-J-a6>@"$CO7TqK&%A8+mLa0AJ3l_]ML4WAJ&HI^qD?nik/t?,Pq-+FR0X"Fl
%[@)h@d>!6&-D(pM$`p"`?]GUL"p*YNJRnsgWZa8/?b%MJ/_F$a.\5Q-%99;q7aFK##NH4!]hMH_L4T=?"9;gr_usck5g*hWE+g6%
%5f78/5s[k1al%LLcm)@@!$f(mF;Vk:#7a('1XPqT;4'X-'K")i"5!WrJIXFBK;#Q%4k@.T80(DE]$Fcij-WGhBnSZakZK)8815.H
%5h(Sf!'++kiK>o@[mF>.?jm=5(^:@/Kf>[0_<Wk5P9j@q7C,Z#/e5/!C^QhE!(2<OJ.CmE'b-7b!^m^A"A"\%;?IbTC8?9.L1#m(
%jqp-3.WlWKD^&m5C'%;h#21FlfJA7GX$QpIk_a&J+O`2@^^Ws=b`I+D7MoeR'j[gV`[<IX.ObIWhFTYY&S2fGkpC(_M-2VCapi&5
%iPZm<ToCg]()Gu/>RFL4DC70uP%sN_V!(,pF^7j5.?GB>U='"f#RU_]YU:".!^EI6i#)<Cj!A^Wk\J0l0ERLf_?U>bR''TiXF_Dp
%E,_<K'Ft$o@@R_aS/%B")Ft(O/Mrh']P+<S]J<Rm-j[_`BESVD(0dH$TTpWDL?+:je)W1_\M/i&&HcW@+>C]`:PZ09A,&NqK6f5]
%/s7rDTnpLRJg+_PE[K2r+]La>!XL#"+UIjj"G3eF('r,GN<P\T=;m2S3&l*_:t\*V1AV4Sa>'t%a,(J+J^\2PU*5kockG(8l[m@b
%0+?6rQj`t]OU3;5R!8'"KcN"sY).atO3g9T1rB:oWcCIW^aW_Z@B&HE;X-h@r[4XqBa0r7&6+Xp('aWo.*n,"O`]*DTP\4.&J5jH
%dHO)mKHW9@'MA0584RA<eP;D36'gb$#=B*W$"JH7AY;R,!%e3hEf"!p@Uq'Z`2j,##sJuIDOe:4fad5JN7J2\@-E;1aO&hr9G&:\
%Fq-p[Uksb%1h[eaZ4'Q`<&:H)%')_A@"KalBgHD@*-'IhBHY\bJMS^m)[L7fjGJBjnu)Ok3DF<*9Y"\if`pH/+oj2#5O66r'W4<S
%5L%3"^EIEu49:0D"_8/>)oEF/*>0/<5i`JdA>#[`]6.s%`M&sS-tDHiL`jTjD5paN57A8,H%]i[JN9Yn3X.\0a)_[C29atYJLFpD
%9ENEI2PX[&8J,i&oKa;l5taYKKAloYTht&_^sU2Uq:<p-5nKFkEpcY$m1n"fNl6h6]P5H*(_*HT$ujdj&]73fTk&_W!L(XmE87,a
%(X<un"iD<_PB6g++TkLAQ'6cBT;u!b"061(ImQms4i8uNLp8)?5bEF:#b(lO#\?jE1m0=FJqh)]FKcu&$_6i=AJENrL1!?6.@`\*
%Q(d<8$Db5k'?I^,!bKt`_lCo-4P29fLf/akjEsT7U/HR_1G"bS7e:!nPmkYMX986.*3ClF,]MG`6.\*87UX@aDNPu'3Wo2;iX_T:
%Wk)W"bf!KVN58[s_"`mf1DoM0g-Hp=N#W"5MJuiU$cCAk!tb>#BYQ6hBTW!S.F$jHSWUn/Ttnl=04DqpkTtqQ.Wc6;oMU1SrM)=_
%]lm>Y+F$B6oPnZ89s@:sOph]-_!qV`?t+@9V/A.o<`/4,2(i?+"kh*6IHIJ,&HmY)e:j%D9Ak=0h/pid_NY9O6cIc6L;O0tiMJ&E
%bn+.\$)]1_;%V66TYEgEM^g+\$u(SBK4mg.)2sL_Mu,LeF9#Bo2%a)QR58aR#+SSS)dI]NOC\\8\J$H)6TOiN(D=gX5^,g:2B8Ef
%7eR'8@o0TLZS[Uf$(o4(Y8!`m'plk;'W<ZNHNTmr,Q"[-lOCcf_!4iN%NA7nV+/!B`^NsZO$pT,Y*O#q&5Y]1N@p<)l@LJi5!:i!
%-UBsh)@>h^.?nhWW?\'DR4O3A0NG/N8?(7YUk@4<j>itM!JZ&jQkR]ql8#m`$k4bT.?U[:gAhE\0AI[O;A3gIg_@a7U#9h1_Bd4$
%";+&TBhlr"7r1kPLVdr%?D=I8-qpoD("EHCK5h>;G4N[qF<"!FoI6V*+GgI-i[PbYEb3ddFH[?!L):*&Mb-=!?INStjC"F"\pt//
%"&N.?F9[?DT;:F$LlDKmW,/^ljus5djY+D(&c=0<kS<62H9ireR+1fY[6RcC-ZbDiE=09"&%[U@XU^KT(Ci,39c,e\&1G_:"2,6g
%*g58^dfNMP5+Rk(^4J8a`\uMKeJShF@$oW_0[u>S0`)bXE"qV1U_ZtYoScoa(b,Lc%gH^abqgs=W1[.a2("h)F@/LNO;:8q9O+((
%MCH(37P5;j7q!W-ib3TEJMOB@lRK2)KnBA'%(+?Rl"#Jf-ZGolU'h"@Ygj<1+0OU#&d[T)0uUX=8-sB`HEaiW`'n-I$KkCJ19E(m
%N#8-k<n)+MC26Y_1.D*RRWVRR[%p5f+K"L%=t@Jb'"O-0RXrVMQA[UNZrbYS6<hZUne<Co[Tf%15"ZN]6EB>1U4EM`R=]qrXuK=L
%N2%ZE;mWG'JW5NP6/\K[kU.6Y9:/"<?C1eY9Ji"=-KQcp=@Y/<WYKqbi@-Q^\ABNV-6qf.5GR-T`&+0h(fS?6??E?c(4_Gu=U?HI
%jS&ckq$99dYR0N#5o^+1ZPfZ7#XK0H$J-]n@$QpQaYC#q+;)2=NJRfXn;&O.#aBo081`DdB1<:-^l4X*7u0RL.9^brKGYsiFJ<nd
%^iXAZ"JJ(9-D9;WlVrtHPR2ol5\#\_VPI?;c.&9a;k^5<Fin\[c"`2&3[TV"GYYhf>&1bjF1r@H.i8RqNX!BJ./QOYZ&H:@0]P,e
%@QR<*0EilRedEM)h!b>H9uj'&$n=Zc>o>+E#LWr&ma'h`JYOEd'gc07V;MZFZ%VF`(u8Yi?)$6e':K,YC8bCR51>TIAW0980I2jf
%-g9hdWYG\G_GHrJ63dUZ[;b.-PAU>%`U"_6,ZI7o_-gKIC.H:T9SO*[U*3Qm.#hXnRQOIpJlN0>FBoXLW/^m8KssToB'%8t7\$i=
%0/IAmS>.EC.P:d2k=j%h=qc\rS?+iU<oH@TQ=C9H$mn#GN&/kZi']'===T1cK?0kLWoJCa0b2o%Q0<f-"rQ]X/E#M(R8B&9Ym1H!
%9SIHhlC-p#,,o[HX8k\`@pTr,;F<]'RM$)_nZG9:4-Y/PFE%pM:Au\m2"^,oWEV-cW,WL`bbIr<I]R8ZjA:@.7a?*+lUN:nk!f'C
%BPPA9U:R"9+en#6\KDQA"drrs26knf**#9So_Ik(A)q,3$_T9W=qA;"iLXKk$/38!8Y"3YQn@=7[\1sj7"d5P`Y[ELUS7jB/4Bb0
%![;Zj5UL%WE,JBU7+OCON@P&;o7mKXA/$dA868cdZ%=J3ZDBgSLnuf#_e"B2=kU`MeA\;ER"9Dm'3=%[6M)jfUaLjfesa!]:tco+
%&e4LC8i@>SA'jit-7VhfJA5pfL9T]<P]oKgN!Vl?8LFrIm27+]Y+X)2<5k*0Q/VqbP`;Pf-::LYR2_P.)jk/8=^6nO-BjHo,XC,=
%C\ruujkDd"d1jg!<e_+E?6P&MQ#NK!V=3B,A;W5fK^-'Q83h0Q&qO_9b!78V8g]*+Ve.YHTc9^UmM_0U9a,#VA1(NgOm/fpOm+^n
%>nNkN]!].:67dd#L^i<U!;VK[5#F&>b6ao$i.U-2R4b:j*,4u[d<u1%"u$(W?s$.7!ji3`S^NL3@Ik>=CJ^$nU"kj9GrUMbfE"5@
%U]:FM<JWaR">EFc@r=lHoERAlP_Hu!$o_!rBHN)O0SP%1V$.iukcU(_OThLf@Yj`ETMAO$>mFGWF:1K@L^8[WP6`mCCN"i[4!$os
%1gG7E'HD"/_K>kZTeSsYiso$U!>/`GUPP<no,n,JqDa^D'M3P264@sKd)^5E0^1-/;^h9m7Ssb7kYNNXP[TADMs@6m_$A<m7-h&?
%8MNg6s'%ROSP,:736qcl*I:%;'&6IJ^![rn/K$6-^kOMHB*-I-BECA^5uBQ4p9*kBXT'9FH[$lJ1V*7pl]RUB@R\3r27cN4qnuR"
%Z6hpr`#FI-q.geVEJA).LP>E6iH]%Z5%UsF^/8YZYD6+SS>?DO;[tkfiX'NR_L2pi0`XX<FB5A5"6%Rk$;cH?@r7dG/tDBk>gr*!
%VL[4R?r(21I8h:Un)N;7Kc_CAr+T*VO/Ma>@m5,q/<t2tZ6sb9gt`O0^ht!+i'`+:pLUW'VV247%^jK4%F"6cVe63pkCEs6:%Ch)
%+cu%?WBO7po/(a@-+.+RX.@ZiXM&lcc.u@W)^-0T=Y53t#1ZmLr+-3#Z.\Oq;u#%:9@#OYEt<:d"m^8DEYMCX)Idj8<Xl)/@sr=Z
%)&RiTWu/>D(PXOZ)&/C.#^)Xb2<K9:+PA.??1Kg[LCkZSZ8\bD:cP091mC&9]-ui=;&;B6r2r`%pLaY!Vh?ijZq.Lo<B"J<N;s^S
%&8jF)++6AXI4VX[cpEQA@=S>78T4N#WF-9mOchCYrRK">,pR[Z`cbZV9mA]'"L53AV%J"T7IOkM$i+stFqUr>Ccm!LAV\qpKVbg;
%'AS[tOlnmTeMu"Z&0Caj\iVWlXrTK,/rV77I'0j3<,3A7[)1%i/2Dsk+Xq3)&W-?i.6tONlL!SGcgU;5lNaD1S(3g/I%0M5#''9+
%(R+!OWLuoog*?J-;80h...4F:nCNU;/m#ETP$+k/hP/CZ"nQA_WH=c+:&Tg?nk>2,c5S<e&!E<F_aWq[#*cj)H%*5)&YDKgqYf)^
%@>r#MVjmMIQ+mN6?1Z[&bXR>YXZLJ+:aDsR4Qao)aj?6Yng[dJ:[I(>Y00E0ClqftaS+__ZG6n9.HrIAZ]s0&oq3[X+]!joZ/H?<
%=SJQPl=tn&$iCD3dPGq8>JYDH@R!4'\?>PA;-S,<4=N]a]\8HASPdgijq<fUZ82fsmZo=:UJGXG>mt&cc3K,#QuHlaCTd,QGim*]
%X/4m)JUYq1a`s#r0XRn(>At?W"T$d?iaAT)'MtlH[k.:^&msfQo@/;7?9n4oYBtQ(,SiY&?U3EoocKoh9.%Lgm":((IX;HmYm.Zp
%8(kPkbp3Q&!]=?-o+Redj#V_\70_9;a'LhfhLZckGM/(YGo=QCl\RV`&EsUMpj'4ZP+ECqg3nRLH2'pl_ZDMUDauk:ZhKHNr+;g@
%%3?@@(0%0bqI*.cd.b5dBCaoF@u>Ca=B-A8C)G*O:-R"=hPIp9Sa_qi"1pET=0b7X8]8?FPoO*Q,HY>+;o.g9G8)_<I&`>7jW(pi
%<nV`5Q.,fh&/3qAMP?bIJIS6)g%.U+AXJWHi?2?d1_aW]3qP$J,%r5Cc()`S<0hr\;Lhsf7i*IQab$<3'rphk@.L?;-\6J=D@qs_
%VH#=F#&BMLIp%FIL7r9n&cGu!B<k5,e^JAS+(SrFOIJUnoLufP4dijf<2]-T"=IoJgikc=gi&r;`+l5:6a(H6XW9>kjkL+F(?.<:
%ZF3NMV,<4[jQc0e4O5f&.CAH,;eZk;0<$?[oi[Q<Tg+NL%^buC\!iHf$3htq5GU3*4c/u9Xu7gL5-M)#+Zrumq?ao,1*"VH]Tm;Q
%S2/VH]lp!?;Cip<)BYtFIjac.TZ5rc^WmaD2Y$0Q4<&Zndq1W)!7B@?@-t&hDRFPA`<[J<>8h:e*2Z$\`;7d8^5mh[Ti=En\tja=
%jH"I%;D)@a&o?LfWeXd).bF:IbHio1A6_>SZe1:#Z@Rk8#";.MkB3^DF`6ukotp8=!^M%'i!tYF3.d7Mq:0nkUeSYI2kR"P;LR<J
%R6HM<:CuP7-RYfq1Q^CC?3X)?n`BFATuoB8Sqt2Y\JGZKhTt#e[4!rqb:!)0K6f7]31BMVIr,._RQB$UIkjX#eALBQS=P3!KCZc'
%;8PD4j\&4?muOp\*(*2WDuO'/s,F]IOUrr6_bZKamUQc$Z5U<^h9Nq,i7?i&:Y9l(82dT$i"bCYO7;/IIEmR4AI_G5P<[pl4!I4C
%6E-T)DOGUUT0@gET%&%;W.`#:&K_jeI+78hA7D70L$jS_YO`<-/,)W:roD@"m(rL<^Cbk*6Yd]NOSju5-^+hgU1j)`85IIXK>g.K
%KWkLgX<lDm5#Vs`GY(ie)(e\N(`K[qfGHY#%u0NOf#QZq_H<cu&NRQd7ID:dT.GLVgZn_/SVQ]ERC/hS:b?p_Vt97Iai;/g4IkIh
%#SgnG-I6qfN*5k553KS\gL*P86*eFlUc*fRb[qJQIVk6Q`TTOdc1_QM^g$'@mljt$8A8G#:!L0?q[>'"[e%*W=49up:nEHI(iJ%`
%ZoRRmg6[!f2noNFZ?Ej6\>]@Bb4$e\g&WhK>5+r`4K8K5(aIOO0*OWK=fqN1Z*/B$+j1^Ale)u$o$qs*H2o=kbe&oH3]-TGqJ5!d
%m(&\p:3@R>ENP=;VPdMPb8L9CO>"7qqWW4Md+A37>8G#hqVXI-rjcrspFR+B@0UJ]b?6^t#IIgJ`>&jbKn8bk.L;gE!c!&CRXhf6
%qh/_ormhS\PAfqgeIXYCBNa7W.*fj6lV1uA1iH-M5tWR;/^`8!_H&jr.G\:3%n?c!?6\,QM\rbpoCe4Zkm;Ar!gJ!BHU-WmhfI`8
%$Uc$Fd/,V]BUu%t!"H8q$nc!-P1pQ\dp"o+E[&/VRg;5dZCmM"*JqI1"b>JV(Hps=o.$BSn>s:cd`Ts(hBcnO@\`,5<[dM!0gon+
%`\9fFNSL&E:O;VcphXA+Cc^H),`ND!f%)$pl;r$4Q0I'j/p1JH6YklKKBBkLhD0Bj1'8N"421bj#t?5Uk8G4AX>ta<W[=]RV\eQ[
%A7KI;"mX="$?*Z&HjX]V'GWQL3o;kIM$j@u2/3M'_sN0qT7i5(ln_0-!ZQScP0><W9&ScNQS,*_SE6<8/l.U"i77"')lbE$*Yl1^
%:[Yt3]6)I`p?!\bdncYI4)#b#XGBP2KM+kX6jY>)(j^dp@?`H7>o[%'@R@curT`6pdBMR\Il8hXrZn0f99%1P5t4WOY>Ap`-X^ts
%#c3JrrEMX&e;=*\=osfLRY#N\Bh9;\k4uqL7A8432sOO:0#1:@fI"d[GNq/HQ6j[S./$!X*jS7ZL=XD,6u$duPNS(XGkPa!Kej3s
%eef./Jt:W1D_2`tj6H=9;<sUbI\*Inig!jrV'PEjXu__T&YZfNO(UrF]n7B#+(4#5ojE@b/CgF0$kE^6#d\t>',7!fk9Hfl:mX0=
%U9sdp.%H#p:U2iQ.J%gRcY]'S'HhcK@21@aKIq/0+MNBC17dN\anFe.M[NI\fuWsuZb@n7@-H9EMdkKXjrfc*86K4I>3IY*>f=Kb
%M67Ep,#LcpcNCf'[@"ojF?>^M]7oBK,N:uN[o1nPJuR&i=XVbob4`OGrUH[QWcj@QI()m:$1eYiNT_.<OP,L_,eHBrD#b5fc+5'4
%J2:/.k_bUqg6=D#!YaE@K(H/h#`TsT1R`4,Jnp91Z$&u0Z3Mn&@s[N_PXm`pV!suXKG)C9s$3r'PoqAVaJYV.CB/&Ch9DpA+K$0I
%0:1:[W?hrXN[TX<Ar,oIf=G9"W\i2bM_>47HJ[Zh(fkYbOSji@(e+:DJ0Y1l\"\5I!bj:;gn.GoUHmk`Cl#2WPM!X'7M<ci::MO"
%X%iTZZ_M_E8"eiUbHm3)?#%^lQd3n-/;t(ear*doV=YJ%a2ON[k??7t/`fSpr"&bU)rXV_c_KST5C)&0L/jS)3(OP'&f<.>E^15P
%mG3BdO9cMYcTBQ(O:%""b9'.M+c;lTMo35@lj7=5ED7X7-TH$4d8ND`m@HtVEt6k-KnV2s:g+(EoA=]fFukKP8nmA3#-5Be/G0eS
%MgqlG)>I98nm4d5B$tQ?hgDT%cVn<(KV9DTfOB&F#^33)I87YJ+gXB$C4sJ.[Ppq;7SF2]%i/2*[t%L"oFMVnOPVcE#R=a53Sh55
%jfW`@p5o4KaC2Oi5R:@85%.<t3$^a8\7%]B;`p-2\MlL`W+S;0mm&>g3tYg,T_rm`L1ERG#ZuP3V++E!STtKU6A3tCkWU4Zm"@^K
%n>*+O-8ar,gB(!L;-?1=9^*>+NY6!g2*;^VL3mj*lB&fK%D*'t/>-,Jg5BMW`QVj?V)B4g*GXnQE6el0PrJGr(:XI,[[2O7U^[,/
%_+nC:h=#RBCuZg[[-@&QQJE6t7WWlp_A"I%J5X(dPp;g3b$c5\Gh0?VZ6Y\CcS]E4SQ$'ZA--0fqrI[a>U#[rfNI[%>'=QBMK+E&
%!cskT!<n4Ln0mhm<ff8d.!l"/YXEED8ciZbG4G@Q7@!XuE4FGC"ABh%5&j3%lT/*&0nXITLb&#I>.kI:"2:u-A"i+naq$!fH\&.M
%GW5_NNs$KF`Z_pti"c4`_-&5!A-,oa,D^g^dSJbgO=(Vb9lJkror.giRjHVYN'<_TGZQLULDD.'A6Qs-"mL^jh3WN^g@J"+eP=A;
%gh5]Ber+?dRtg1*Y`BD$-!7=HM/L7bALRH(NT9/&WABBa1@aO9E^OAa/q-:En&]<ekFsZJg=d-7m3idV6;fGeI7?pnR4P2n$Fm%0
%$iHK.d1uVZM%+"\H2%QhW4IlA)<rW,GNu?CN]<+'WWhuM;@b#S66S9=o,]4pTugRtR93UW$l)EL<"s(17:D)?Q]HA^V>\?[]jb>9
%!=tD-,j+C4!+LoQ6fN;)Ac4t'_sNku%JKBZ25hch,U`E;+`]<;7u3pNHjnhVFB%c:#olj7k0UrD)-&P\;00>WJaGK7\BNRt%2n?T
%/OTSGo%i^GX-Ej?lQ8DCLBulZOtl55)jG"%:%`(h,t!9d6cFkf_/&?][6`u4C!;s2>L40la*tn#<.ncLo>)@p'@b4"Cm7c#Q^9B2
%A53Qkl@hl#8AB([0IE274M=4\g:8up_QsT<)XNp?)^nSBjBh#]*Iqe&?m5mKcg>NQeF'?9LNi;oP+73<9%[F)kj^#NrnqT7(b5t[
%>G<4&12c\:<a[*A-OJW`HsI-sap:>4;Xu^hi>lJ6d72C;,^hIkjjc+"jA:m#LMn3$&:*9oA+9l."?5>PL)*QYmRnojUe'9ZI5fl<
%EMP"d#tKt>#4b(N6fRR)7G(#tZn*;V5T4jmqGCp)^`3/"n=buoBB2R#X&1Eu50nM[f$RmL(9X[/*<8Pn!eX`u6QaBGMl@*7pN&e[
%>,=-`oG];U.K8,j3/EXR(k;F7o&e)m^EWjI\>pV97>X$>MWl#.%Wq;9#hPA._MuS@M8q"n>NULm.JC)$/XbXHZ\(.$*hm\,](1As
%c+_\//3nO(&u6%sMKCoeCrt&6ar.cb`Yl'ok0S0o^'4puX3W:]J&Oer,C^3e#Wi5#2!m%h0C&5Q[4.jh6X&jCr?p9heSC@@p?5uA
%*AQOC?B>h7ao2?KI?kY*CQTZ2/S`lQ+-T?."9glg0WnO8V=BS_[rk4ZItgLf);8T66S[.7DnYjm]LJ.TP4L<64A7oO8VdLB2_cFG
%*Ub<O[asstd4V.bfUP7-FOB$^T.rJ090KR:T<^a>O;06@9Ah(AcO`O+/*K@!2PQB5X^fP^Da>ZWU\_*,RBn?*4_sLJZS?M9=-ch+
%1hqU3oE1jf.Je$mR8=jl"rhafF36D9BK:*5:"8%gIZ4k2LM?Tfr_1k36o%FFcLh><79^F4AO"0607;6#ogkfE'$NnYHuCQ(=ChC_
%dqr![CSp%=cjD<kIi.+GC8;L2+,('P+XIW=okpk8At.WZ9:Y<W/&oB$*9!&Y5H((\m?KL5)ktDs)QAj"E/TG>A?u-@]6OnuPE6"=
%Z`BMT!>QgBrc5YY8oe)b4d?OEZ^bY2k8Ra0r]:LNeVa+ElnLUXBl8;!T:9W_R2i<EEc)LQ"TCrd>GbQPA$>?b8>BhZH*4;KNso_c
%mnib)YL%K/OoQgoOiJ9\fCN#.W>ac8jbPu:g\AA))E53G*n/[qYak=uU'cp#+sTj>Y"d`];t1P(fMAKqFpe5ArL.G6c:A9d3)KOn
%qXAA"n/6TH^#sNO2R<+MlTjlrPMh3m"f>4rX#8rpn#so3L5;r;7^qMSTGR*_^8/oVWmM`<1It8#L:k5o'JIfoK$.tk8q>6`Zj].1
%?cc]Lr$BS85>FgK.>GDN$q%^ulK5E"Vnj+/gM65P/2GM-g6)3HURT0*@$fMbHqdK2^5O/<[=VT$:e;KmZ'5L8bFAGkITRCM2AUm=
%Y8i8,2Zdd\.-XS_^b)BsFYA#5@6T@A3trfu!r4jJJ=1$5C"SU]fW%kO#.BS"#][G/I=dRD))P-OEPVB3H7N5bC(ZkJb,b8PI^N\:
%W2Ak5"Y_KR*`1*^Tm&s.o3:X":WTkXYR]f91PuuBdThpDSD&^uS%W:QA70)o+_gC3/':Vd,BQmNI.3#9eoO4pLk+o)F.K!f@TUVU
%]?=NE+'pUM/lMC9jW*S*i#3#^^j+0#Ym^8N;"DfQo5c^D\.h4^:&X8)A*l>3d<uQAQt_`sW8<^!7BG1kE\(nQ6M\.q@*,@;F[k0j
%`bQ7,#UWu="KQ+p/jFf+[J--r.5EaKGA+E@FME<BKpCTNnRr(=YUmuE._.\/1TSf%-<PdQjjY+:*S\t]5iCsU<TmDA%[n^7^BV[.
%)6;P.?H3)I1@si-+Slt1p18gS@Lf!u>!-u,S_=CFERt58SoCkODD2[;`hQu=h(!bROD,sK@l,foJY&HpoN)ptJ^4]WU#g%W,n6EX
%FQ;>:j+Oiln<$m9*b)`-\p&8S'Ci,^f!((bgYaM:1u_b</RA%ZKC.u)SG1VUN7VrI64Q8_Y,lIqZ/hrJB,&ktAO4^&TD1oh9%A+`
%pnZgJ3'n]T\-;8qF-CeZru]"56)3L6<AC_q^`76;4*[:6'8SHs=ps*A0a]$-Ht%fI,-GenfFAL962=eWGB?U('#NL;Vo[Pur=QW=
%:.K9@6Q'e5A>-E'GBn!RMB&+H-\'qb80PF8QsiN]%#ti5_i1[*Tb:C63DO]X(5c^F!<E!l+Vj3Y5Ysj/8\74fjOSeHXdnE%Io38M
%lLg/3KgF1b4QB_g\f478qY=FAH]2AC+VZT]-aB8",q=%5G$BYoT4NA19T(Mp3;E9+eCOS&?#<9W."%+h9<Iq^3A^e-;=Z\-QGoNo
%bm[E9BGeoh9`5g.3NbpDqXO-ios;.V2lm[=cY5:??3H]!.V]22olY9c.V-=/'BGnU$p>-38G?5C9eUb"JOasF4bj6:"KGAh'0;j3
%e4@C?8O"H?]T!P;pXNRs3aKLoTm;fs??UTd%Fa-aYI8_,;OMbk8+'+97tG?(+-%+u-#PU).R-na;5:A<KLWC]IOpro[7.9T#<5/$
%)EEq>V-"8bIjM1iHqk,;?>,LC\B+t(rfa#@A0,ssU`RmZ`#=VDPh=NhW3YPc2O7WmU/=<%Hu1q3=^ES%MW7B.AK4HlN*i3DfeAcF
%m2/)H[\$%6h6`itf#nlO:@%GIKQbeF7Tp8L$-D(XQ-WJ?kGZsT%XJbsEXF"rLRSQG5EjjXrB'bBLHtgE%:cSQ5u!J)8Eub%Cn63S
%bEWgiJO9lU?p:Zj\19!7VPkTj@AI/k]BZ`+1Q=:A-i7-^.OD^n#p0um=9t=iDJ[s%D2Y"r2.3'eQt5Lr,:2sn&#h^I(eJUkj$=hR
%AXTsl@fnj`mHkt!M_^#\.DTA&Z$IK7itK`B!hQWT70nPuW]=t<S4[]WLqQmidG-?VPR..YTsiNtl6<\`GeB\Y,MR@6CN#2Va+JMV
%!n*<6kP\Ep3[^B2:h+*t#Leg.>Y9B"GYnM'f&eY0R)6#qFW7PV@*n)pSKFX9=W..;K(G,qYuaUjD/(7oibiWci><1m90SUlPU3.6
%$=6p]@9f\`CHh^#T(/d?&1>DoSP%UW:l"tV,1_'0OcpqDf"0?m_/04$+%Z,X"4Bba"<pc=6[`_O0c_laj#o0IaH_XjDd^Sr;`<dr
%Jo*&dHgscC"']J<0hisFK"%R[n^k5S4(Cl6K)\7*PS^9`cTn?*Z@)PoXl^Kd$1IFL\D'#R^G@+63Y',u!ud3N#WRf./\2fX]h%7Q
%=/51.HRk5-H9D;;&Jo6."LqAi:6\V0b%9Q+aQs3T`G'=`!U1g!]aSVbQfedX'$4@9I<,@,+efm%($e1&oj_gJTJi\N7-LJ0kI7pI
%etEERlanhoYIMXC%^oIhH)B4)gjs@/#:HupE-!,q9Lem3;a:o69LqFrD2!4^WDh?(#+4-0GH/C(in?*q!E>E"7@lXW$W5Ve/q+"E
%QSZj098Ug[q@J+2.O><%^RpDdHg+7IjCZ;`.!7WZYP-0*7i.m873CHP52&s5:nq>[H+(?e%5t)7qlt%PXWMVngP6ijc]YAjV*JMh
%m5$p6Odr^a4lD1JTfd^Gb+0aU:.8Ch?jL][1!:[>hGX4kiluGRCC9ug'a5-n]u2(;T2K.djS\@c33DqUf%LUsZZh?0/8.+ekoE$H
%iaI@?+b99Q83XMo;IK+nnrg9;Ph2RIZl0d_"K@4Q%dD_F%J'i@'ilO8e.adESLd6tLtWk'<0)%YLZX3hcAJYfNqO^A^(HQ_)WHW_
%CDe5&lTtdVngof2B5X0>RFC$%HK],i1raV3LtG95@dD4EB0uYU]JIB>`/1^PMD5ier[Le;0Y5,Z";oRG!E5XVAL[b-<%?/(\irqB
%lAk*h,UL;W3Fkg^2FU16R=/(*8&A,g%P5s'7.Z4gG0_Qf6MuM!,fmgaRe<Ydd7@R]:LG5"aQj"HQLA3Q,>`50+K;+a6VH_Jcpq['
%DJRVuHnP"MV+[qrf"iWq^oH9p"n*N2CnKELW`2c8!$gR'ipIMI+P)8PWd5:LVu*HHT.(ZI]XV5X]nb!%.dX9BkAp`>!r(Gf"cHlF
%e9RX;Y)CH!-^nBZ>'^rG`'--Q`7f.hGb:EIUIrl2NI2<2Ii5e+c2\0%qc3>=`;:HadM,in"\@tmFR3tMR^"kn^C]3D1G-ZDL0\c>
%\"0g8=:'(&d*;ahW#gY=)k(i;(L5#?Ar_7+koot>7Rm'%cIe>e^5#b?r2ZE2PnU?-B$'Rca@*@*&M`b&:)#-O4[S?nEjr^8>3*?L
%K*AhUYrt^.UEG-cAkj>a(a9=*1An%'6Mp\%^&<BQPL/!Viqu/g(llYuc@BslB[mV2]h7e-.k408#VHk7/BAd@XcGLg?il"I5SABE
%7(+W^\Z]3-KVO4eODIn&fG(6T=''%i`/&&@IY57H;U95BJ=rX(C`<LfZ\ME4E9>I6Hb!<m7a7G;Wp1hHcm2(-\*Wk4`]Y>-33B?R
%?a(:Bbcr3+ft'<@-?ibf$j8k4j0Wl8h`+eJ^4OXFl1K(/B3gB?#iJ]6iY8k^51bTpKf>tt]9BD/]gN2ljMmm:N;/jo-g"eL0uLbZ
%;bje=cC\hZ$G]L>NpjX90?5_IH.Jsco[cqG0;f\6+iqmYKk*oeV>G5^]N2j1Y$\X<*^?BFXSh0g<q%<1of[_XqV-(ih+GJ,aMml^
%0cT[tR0l0`K[:Z<S_Mrg/i@F#9VRHh`*H7GKP#<pXcMcSZ8"1(MX7411sBB*Gk#8F:&F>-A==_dP20ifQ!/t?_4FspG4=BQW->L0
%Td1F?eYU'-VS[R@ZN.,I/t0O>i?/+$LI^.XCBdaQF;R$9@'K'$]7C']lN8o"!T+"8<DR6><F&<?eKkY;G3p7u2qbHDRp$q#iX\@L
%%W&3"Jf17TQ4!\o@^"C5#@h+j"/$#mdPb?20D.YE#7,8#pt6S<*:Jp\7,=b$#_ca0I]K)]I)YY#*57Y<q"Q!l]!t[/!F1`+2h%1m
%LiNNF"AFNrFEp\a4m"F2]2P!Jl#R#M)cQ5YG5-^n]Y-@YrkPL(rCR9=J.K_YqC#?*IL2FXe&Dp!;YW1q+e9Q45.,KqP=u"*_,T!m
%=-HnDEj,ef[56/:%.ftsH64^H+49,U:bT.ViaJK!0io/K#aP/%P$@(TL-rUd&1q4DJ;bQip&foZgmlf?GFZSc$:D3tML:"\;R8o`
%/O2Be'rPc$c$F2>1.#@0&:0r4b\66Y1GeSqLF=;Y+cl4pLpAJn&=VC^S80S+$r(Zp4ho['UIe`P"^uZEj6UZp-qJFHK!soV&CEFM
%VsddW[q'"<iU.qBVIPs@^P91o^]H'N#VO>$B5I9B9k8]hi4g7i5"e&eJ$F4W+16DS.#aNba/"*4VV4#4j$MJP.d&7QhqE&=_@LR0
%,97EOBI6RBYXV$Y9Xp?7%QuY"jN062Yh`CIjhVmY^@_J4j#TT'f5lV/RX,/G4*D"/X5jRPAZLJ1Io/?><(polHCf:&HJT4=QC2&m
%QhDrITqRm?#Xg\]T8Y7>k;^3.D7[_9o:s5nLBE^^0_gbAms3V8BStdSpE=g\="lhTQp[l<6h.Ft+0aSaGDU4Dhq-(%YIPTi_-j#<
%cDT6Rlgt\5_;?Q%*67M:hB,*$qXPkT^bli4_b!I*I$afZ!i]D#f)C5j8h5U*T6LAl6U:aX;e$.fHF<ptK?D/@TVlh,;Prk\"-dJ/
%cbF7cd[h47?]P?R;Cu[H"t9Z1Z?2Ed7XRYm<34g,BBMIf$T%K?7CIOl49D$S(^m+2*5B[qmDkQd`XDkHf,ZAULcK#"?"BWL>7:,m
%Yb.0HYW%i15T`nV'i3V2Hu=In`nTjb:soL!*(q*`VI3uMjJNWYF43F[f^Ir_3Ci-d$O38cCFgk*h[U.N0EsS<?#,R18409g?(-2W
%8C/'SqY,=J.r_MgF2YAlb0!Yg@hi(S1rKs<M2<G2oP<Cd[&@RAEf^`VQmSRK6'9qBC#QOn.[iQ1\!9K5c4l)i94)&-HJ3@uO<\B2
%WW>@%Xf"Gq#pl";9Q<,,fs=33(hC6:j0I;P-'h!a0DT)E`f/'kGt\cIZ6];*6bn,;&I$!-*?he6X/RhO+`P3]0gsS.M),fP'E27M
%7$\*EgGnoD''X&Y4UNs'DOS=UK>hhbY#ia:G$<q]*qHbmUYsK!L20oUp9l^"!TP3K44J2`TfJ\X;<.$7&9QdZ4%Nb0o!tT]P9c5/
%N;+&PYXg,p$&Y/`@79+cB0VKL:.B"&"6_1mIZ6d4\R*_6U:U(Dfu0&B#/ma4im'@A%tnm/Z4nVt!$fud/teO"N?kc_>-k$iMa*2R
%]kY#gcnV>qVf$[;FsnDT*0i.jUNsMVT*i>9cW'A"lHR\-onI=(k:@l.rlJ:`#P`rX.)E#"1HL?2fj=-/iS_/[jO"KFEWeU'7R'cU
%b>L.2+`YcOYGDcZq/`uDc%poHH35??3!--Q;7%p?EFug2^.H.'h42J\PR_lZ&qcs:N;uq=;JjAE*\k=mqNNK6QLWR9Ka<^J%RI?$
%8*[gWb*S)OaVqmMmD&WKa\hA!eY]e(VM*s!2DsiF)c2].kAD&UWn%t`=LXR,ON-i_@aL:AI_OS.\<%$`o-9g0Y\.n1B-^rXhIPtC
%pPPF!ZJ.hiWb"ia13fSa"*]s67B.*31'VA^ZXAd2W!r@5O+ueof-3T$(sBW_F.Yu=)XAb2g/JMT%?)[:%j6(]^`XU&5MJ\<U="EM
%dNk!^Q,^S*/o[*l@'Od`\D4HUXIpdX8N>:%4Z*N5&BKtCD<F6)l_IFpT&;CHa#69ZM&#9_n->4j?sFL6P+?1W(Ss?_PmY%plZ<>_
%ZQFWMck3)Z@HXFde-OQMK9?LdI.UQ(YZI8W+idFq08QKiR':/pj)j"XA8/j/o2qa8d)lKR1;L=_$9LNV8]23&!j%s7BL1RI'][_d
%?q%)%L]g5hN4;I^AkohK?cBifq]n\l&B4K.LRKPVp4T5Y!n&[U1+d<:!/2ZfW_0UA7Z/-oI=#hQO1SZT='B%05B;UnJn8:`;&J+s
%q]?82<%eqc:kcW+G=Ek0IZ5qr1ue#if']!dNgb^G-)*mfK"-*,TK]MA/Fe$9?+@C"pZT"t)aC.1]"<B'_4R_tdoXcQ-"g,`r<IVo
%D7/2[Qo&A_^XhDhC?SW;L/tjre:<VKntZ!D]u*QO&nO=p[!;M#=k?TkOXk$I*^>HdO5G[$W[[nG$<^6$OMd%;XILo>@fN?5&R,$O
%QJ:ONB]pd_6'=HW-.RdAb^A%s2q8.[*Lt!RB];'t$peEZ7JiXRoV+!7['k=[Y+plZO;.SQ3\XG:B=e`8#[2<Z\BdA@^SD2)VpE2V
%CQNZA+%_\>rh>opM%*h,rgVH$&4Y%<`*9;7O4rb<BtZmUKN>XbEEVpAa,5/-_FQoocF^:/4dVNZpb2k=PVM*B2B4)t'-=LTQbU6?
%XM:Q;I?.XT9_2_W^,oY*`-]Qg-o`9@H.3[POrSDl(Osbk<(&^4&kZJ[^K100-R!-WCBHp?T([I72B+[Z2mbO,9SWcojH@<\Q[4><
%Y?s.Aj!$sT0i[TX&i=c[rV-XS4tQO_-,T_]RW(p52.*(WFOS<qLpZo"SrmcN0*sktSN@"C^(P32W&HpdEm.(OK=6?sNEg[HgDpYb
%qd-//g1;l2ej+/UfYV&cES>qVGS#J`Q%-&-S)^e'$M^sa[UhJmfY+RRaI'3@-=MFlLmAVsZhB1uOR#AI1+"^e4I4PF04IUC'c!6>
%Ko<'Joeb*sJtq,)lM#d+P'Dg*K;<cCN[_0F+fZKC*B'e&irTKc30*,i_\eB$E%Wm$U8!p%W&n8o<V)1E$::LL"qD:1ieB-`3Q.:m
%\+FSN%3#pd>4T&D7cd-[?VV>eAA(ohdh_AsHgE"(dWu&4XWAMp&9!eVN"1Xna/:nY\T#>4.DjdQo[61Qrq:p13GHrt&"5"cDTJ'b
%Bp)l=#tlN;XePno`>'V7G0BM<B%65U*\M*`k,oQcEVT#ZVi%DulO4OfTeV/$H35Y4F]c'KLAKqVlI)2pH@T-JL!H;6m5FAW`q6kh
%gW#+Sn9h^t_g4q3J%kf\PfAIW2a[8^Z5O'7bA(R(o(]F[Z)?Tm6IZ[,7)l0@L6\nSeT^Y^7!K@J8Y:uC%T'E34$D)L;X`5TK3qh`
%2D$,IbY'Aac,P3aDb2KobBF@V:)AVa7EI=1!r<ZtMjZfZk*V)DH[O`ffWP"=iO?;X@&8Ve3&8U)9ZDl?fN$Jq]4'2f5VpPlEo(HG
%>V,F+jKV^[Gm>]@67OEK)U@15!CtP(8R^J!#+4Y@DV9j>NcTKo;]=SpHR:/IC4q_eER3CFS)eW_@qUO](&Puljtji%3SOM9'^2AC
%5KfXq7u%S6P9&V\G+i1I_bICbjBM!eT&O]scZ\br(V)DJ-&lq@\lV#(lT3?Oc9OIWBUtgIfMa41k%BYnRT\'u!AR2bDmKb3N-$`V
%14o_RbcPTr=^l2^"e"$;o*l"X6JL+j^b8akbs06$Oc'T!fJn!+R8NgNDXt<a+,e[6J*iIfm1eggR9!]2qgn%88aZ/YM%;[[#n(D!
%QrdXC*Kl8n\I4%)]+3hPr107G.K3EKHuta/a/^("4f9MH"eiTNn-PZ^ANdQ9:1?Z3o>cCOd7?@Zlo=Z1@kh1+8kqc[XQp^ilo@QC
%5Nt56jG]OE;,9?FgLWl8;^D>be./X1.TQ^,+;e56Th"[A;%kG54[T\m7(O>coodO4q?D0S[reU[-N\0:f5g^jfW(0iJ<W\/(7&2N
%T+8i[K)-1k*UUc=l+4dp37Z-fke@_$&<)T$98u^3mW2m9CRa/rU<-cJ@;c0FLh^UGB$)Ej^P4Hb('MT'L@\Zlpi(bc3^=kl<4s>6
%i11H!YjM0DD0J0IIu/ijb"[W&L1(AOd1r)kq*ED>&;2>I4U0;JHS7YFc4u1Y8bjR\g1Ju,+ZmV&XpshfJG?<^qd"'XKZpBW,6rcq
%(8/:u/N.p_BZ+<0p%q1WgPS3!/slo=!C'Tfo5rsM]<Hb%%ArU2nQY5/Br;1s4\=(I:KNF-KLb[<@&P,<F@l5-Y>G*>o]mF2`T+e\
%:^]i5hB>Z*PsHZt4`S7RKM'`NA"6&HMH0u290#?BN!lXs@k,FrijLYE(Yh]!%sN:43A^nEVQ)\<4]@sr8L"Sfc4XOSE\NrfB:j&k
%i/PU-D<P>6mj#3j'l=tB'^=+UadquX6X%ue:A7&WKYuqPAX+d]3e&hPAT6@[qR>,g8m?02[\!*#FTa'-AVc.7kkRs"B,q@8km^>h
%$+UJoFRTBqe?2`4gkRCOIC!cXP6TL/1\F:CQ-!2(CeH'dMnBD#MF59M3+YsF85rNYjp'skW>*5dCJ91>JLuk0M,r\4PLc]?/m=At
%dpRt.^:#62SeE+sh5_@ta-MhOJI@E*RDXJ1[dr-/\;3)g7sgL_AOdEloQl?9R%Mj;Q3QM@UqYTlMR/&,Sc+1c4iN=<01.^U$8i^f
%VRUg8*WqtHSpiIGTn#:X$kVc:NU,t0W4RDFj@gN!J/5"TgH^`D1e!?XbfXoR>3$gL;_k$aEg&Shkarh;?Tb-5nIL-J2h1V_hu3!/
%++O$G^]3sKroMVDAaD'659FM_."D'WYQ)cfs7!YXs7XoKr9`D@c.B0!r54$`a$9Ql&-(ahJ&=eV*WL*^ZHL69YAml]mRs=*Pp7"J
%+J2>G=dkq;Q%NFH/=^lc-Y&]R,=(Rh*,s7k18Q`S0mRMpKXE$[,c-?6`9V_$VC5!;j#T)K@!!+?pIgJlK4+CZ!P$B#YOrr8-)u"$
%"dh-dMmdm?UFBM5USs2#Zu'Bf`/d(%Yr5f#qWttb"p'8,jjSDpe(:5bALPCG&1t#[h]@4;Qb!VkZ!/1oeh@.R0R*/V!,?QG?lM8K
%-fFZ%C728`pB87=."@Lj[cKc8][Eei0KNWoZ?.(P[fL?8')rHjLF,Hb*+t1/Jg=.Q=6DR1mjJB7J9rd?[SRJ89t+AD[]Rs0QftR,
%5Z<^?@uCP])UmD4cX7"Cq2DBbY-Eq9fuqc.boe*Wn;0iU1iM+)gI;seSh1mf-B^i^IMJ-Sg\-fIE[^0UF5-?;QHM)s%>S'ib"0#r
%%gntU)k8r1A[4jRcg(JSMu@pf0e:>RG`hoT^&AS\*FH58IGAu]6F`3=l-dc[X2)fHkWljXoM$>M74K4gK2&5&P-q2lj47hk3C?X3
%^%DJ>!p<pB#=,A0Nob]s*5a]HFgZ)GEoTtPp9G`:+MHSX(.M8nO8HHD""bXH_^Au[K12l0ap(kh.ti_(b%+a+ZqYuP#i"LNg9n@o
%MTn5s7X@"8(Rd8JVPO"pg0O&(>iP37jIc/u!m=lbISTo@j/=+Ophj`U071#7l`$Le6edHd/4pS,kU1/s'2KhIRIsEZPU]8!e0:6p
%-r*b$\rY12^!+29DK#8uSJ-"KiOf%7Z!V&;$<UnF=G[#R96sWRM"8p<p!^nEVtIB@3nsXXme5i":5O;:N#I>_4Y<a?n6:$C4<;Bu
%eplI;FgM/K^bSM<W#7tVqlR4@)/4[fQbB0\?rd>oeSTGd`L_6<@.FU*]bjU3jT4pc_7E^&Ai`dCTslY+m,L&@^Q6hj+!XAkXsp2n
%l3*"lXP^S?T6G0n#fh`g!?_s2%q,KFA"Up.i"h+\UAjAnGG$kt@Oj;`1oMoP^!/b<WN=maN?,h:ql-[\i9S3!jd=9l^i@.?H^O<\
%2h=@4M84/dm;B]qcY8kqp%5E2m(AUNXX(cA5Z1un>(YmrU1`B?n'AZ!dtP$g#NgI,;H3[:a]6*i.cIQGMc)gd<;Q:>lg[Lj@Qs\l
%NNm!L79"HlK9oiC$ulP\$%23&:Sglk.Fa;T%FaPK8m4m<bssmWMtM@*`2rXa]!79VY-;ch)%*qR"CAYs%.lcpfq8'?N23bU3js!i
%;?dL,<6LG:LYX6Z^/nq5_#83ZG3^^IckBmn'rQD/j<mIfCE5/Cne52T-qp*P'u"2WXFTY`9dOAW96f""%;cfUId)^jEa7FuiJ9C>
%j^e**Pd6HM'Yc5Y/BL=Dc7(]Gi?8>AZ%nbLo1^X97b,/0o'_0(nX\k8o5;.D]TtQ>U=k!f<q)QB)`q=UbphVEbqLm:KajLU1anCu
%[d^tj=`_u(m`p%(L7q8R't9[fY8Xn8@+Z#G#:uT&TsXL'Nb@(]?_GS5EI/nf_-ZaqQi-GM:1WQGXB,0eTSN=dUIXQ*buV9!oauTs
%TFIh7YXnQ2\FoRB5MD41TM%DK='T$=rO[&?]-:cQe:,H9XK^nT42GND`+]72C2;1mG33b)(Qs7[Z+-3i3ipq>As[f<68pS4MY1I1
%7N`*hnEnL"]MGkL9fua>@u9+Zj,2#$jdPALM9mYe8+_Fr<M'bT1&"iSG[%C*e=,#hkO,qSUmqcTS7dZu;KDk^kV:M\VPT0O9S31l
%%Y#Y=CE9!3h&3dJfI6G!c<"dB(CTS'Ca,@E=abQbaQ#DPP3-_:g5/.8nZ$/l.3XI-S`'53R(*1JF=7LlM0XQMU:cX$4'm_h`77_+
%BMX<hd>"#NLA&25\q!P$]uSDr#G[ReG/gcNerOK7^LncF9=jlFOJ0qdEHdN*(Cj*]kLcqf:0Kdi-FAXYjg<=+P>QR485\<31_$p"
%s/73*F$Rm_7dbHG\*h*3(F)$l)Q/:19;;Ue51q;?fbMEoGofHoVbGTtp7Z'@7Wk#%$"0tZR=1'qP=2%p"TZe5^]_oJ6NFmMhlDi`
%!`+AJ7iC+Lm%3YYSm%8biEh>>.gd]jZPVf=SJ0R8Sj"&>IuSGYX/?Lm.C7qV\6J1.+J'&:6N'H,pJh@W?fKs>_nr6j.LhYg+cV4A
%9l9$:<o2/LGQ<G76_.G3k9r2>Rp.]NQ6607<cLB]md-Ln%&8aQgibL\Mb>-+]D'rpWh`#C2J^!E>B%K%5?3/@_0Pl&1"t%ig1N0g
%A*M?8Kri^[=rP,SNpVCX^BnOg't+4OoOUs443aXq(tNS/KAGCUk_!RB9;p@L#,b+g'^m.66<YI'B@1o&3[HDEd4D3-B%aFBYTTC;
%St)q751T"r(kYbo7CiCKp`0j?*8tddS$r$`7Y9^WWE;b<#kg6gdgd$<j^A2^oW]&\\fj0,OM_eI!OT1i*k@1+&1Z_fpbc?klFKdY
%H(R9$q,PN)QQ.QGBLFdUOCsN=E&A)V2-WmX6Zkp8WD!LA)Ui_)3VH2/V%=2uK]$hIX4'Ub]po<CO5ti41T:$&j2YoKAqn*kKbB;I
%q,<>eMrKoI%GMJ;V>4_"7Qo"4?q?94U`QOD%t_CckhPTb>%#Gg-pVf[P%o,N=L'R>Q7j?-9BiFq0m)<a:g#-Z%S%&FnCgBD!NT!(
%qc7$QZ[#`G?R%<1WX,R`QBrts;IV+:^/NcY.h@>0o-H_cYJ$hC>cW=P.ODdb4PF7+`n:Qsd5'LE#P?oO&1d`h:&P9j.OA3I9M6mH
%&Yp(DNL4M=7?-8o)2KF%+ehQ4i74u&+Q-tMoo`>;U$SXt*UnqTZGI^AA>,F']n>ZD8-`>f&'O_mdY@&pM.UJ-X3<h:<RLrCW$jL<
%A=s*6Q/&2J25q]IlE3C\[Wn90Yq+Bk]F%dT@.3"@NBcmoqcEgbkPJK0TA#q:i\*OpO8o4BJ+fqXIE)9K5E(*eqqqG"?iBh.Ie/?@
%T:^[Ar23p%p,E$E&&8,"s8L7brqt)kqbP!+^VBU:leh`6^\4/soDDsfIf"oXr6lbfnIND1oM>MQ+9*E-I-KZ!^\Ge*s2TWhkC<4*
%!ADOmKE~>
%AI9_PrivateDataEnd
