%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: body.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/19/2018
%%BoundingBox: 0 0 364 527
%%HiResBoundingBox: 0 0 363.6637 526.2547
%%CropBox: 0 0 363.6637 526.2547
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 88 128 8%%BeginData: 22258 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD25FFA8A87D7D5252FD042704FD042752527DA8FD40FF7D7D5227
%F827F8F8F827F827F827F827F827F827F827F827F85252A8A8FD37FFA87D
%522727F827F827F8272727F8272727F8272727F8272727F8272727F827F8
%2752A8FD32FFA8522DF8F8F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F8F8F8527DFD2EFF7D52F827F8270427272704
%27272704272727F827F827F827F8270427272704272727042727270427F8
%2727A8FD2AFF7D2727F827F827F827F827F827F827F8F8F827F827042D27
%5127522727F827F827F827F827F827F827F827F827F8277DFD26FFA852F8
%27F8272727F8272727F827F8272752527D7DA8A8FFCFFFCFFFFFCA51524B
%524B4BFD0427F8272727F8272727F82752FD24FF7D27F827F827F827F827
%F804F827527DA7CFCAFFFFFFCFFFCFFFCFFFCFFF7D514B524B764B52274B
%2727F827F827F827F827F804F87DFD21FF5227F82727270427F827277C7D
%CFCFFD07FFCFFD07FFA87651765176517651524B524B512727F827272704
%272727F852FD1FFF2704F827F827F8F8F8527DCFCFFFCFFFCFCF7C7DA7FF
%CFFFA7A8A1A8A1A8A1764B764B524B764B522751274B27512727F827F827
%F827F827F852FD1DFF2727F8272727F82752A8FD04FFCFFFFFA82727F827
%7DFFFFCF76A17C52F8274B764B76515127274B5227524B514B524B512727
%0527F8272727F852FD1BFF27F8F827F827F8277DFFCFFFCAFFCFFFCAFF27
%F8F827F827A8FFA1A17C52F827F8274B524B51F827F8272751274B274B27
%4B274B2727F827F827F827F87DFD19FF522727270427F852CAFFFFFFCFFF
%FFFFCFFFFF51F8272727F8FFA8A1A1A127270427F8527676272704270527
%51764B514B524B524B524B27042727270427F8A8FD17FF7DF8F827F827F8
%58CFFFCFFFCFFFCFFFCFFFCFFF52F8F827F8277DA17CA17C27F827F8274B
%A14B27F827F82727524B524B4B2751274B27512727F827F827F82727FD16
%FFA827F827F827F852FFFFCFFFCFFFCFFFCFFFCFFFCFFF2727F82776A17C
%A1A1A151270427F87CA17D27270527F852517651764B514B524B514B5227
%27F8272727F8277DFD15FF52F827F827F851CFFFCAFFCFFFCFFFFFFFCAFF
%CFFFCFFF7D7C76A17CA17CA17CA1272727767CA17C762727F8274B524B52
%4B52274B274B274B27514B27F827F827F852FD14FFA8F8272727F827A8FF
%CFFD04FFA87C7DA8FFFFFFCFFFCAA7A1A7A1A17CFD04A1A77DFD05A17C76
%517651765176517651524B524B524B524B524B2727270427F8A8FD13FF27
%27F827F8F87CFFCFFFCFFFFF7DF8F8F827A7FFCFFFA1A17CA17CA17CA17C
%A17CA17CA17CA17CA17CA176524B524B524B524B7651512751274B275127
%4B2727F827F82752FD12FF7D272727F8272DFFCFFFCFFFCFFF2727F827F8
%52FFCFA1A1A0A1A1A1A0A7A1A17CA1A1A17CA7A1A17CA1A1A1767651764B
%764B51275251514B524B514B524B51FD0427F852FD12FF27F827F827F8A8
%FFFFCAFFCFFFA727F827F82727CA76A17C7C2727274B76A17CA17CA1A0A1
%527C7CA17CA17CA151524B522727F827F84B4B4B274B274B274B4B27F827
%F827F8A8FD10FFA8F8272727F852FFFFCFFFFFFFCFFF27270427F852FD04
%A127270527F827A1A17CA1A17C2727052776A7FD04A176764B2727270427
%27524B524B524B524B524B27272704277DFD10FF27F8F827F827A7FFCFFF
%CFFFCFFFCFA82705F84B7CA17CA17627F827F827F87CA0A17C7CF827F827
%F82776A17CA17CA1764BF827F827F82727512751274B27514B4BF827F827
%F852FD0FFFA8272727F82727FFCFFD05FFCFFFFFFF7D7C7CA1A1A1A0A105
%27F827272752A7A1A751272727F827F87CFD04A17CA75227F8272727F84B
%51514B524B514B524B27F8FD0427FD0FFF7DF827F827F87DFFFFCF7D527D
%A8FFCFFFA8A77CA17CA17CA17C51F805F80527A17CA1A052F827F827F827
%76A17CA17CA17CA12605F827F8272752274B274B274B27512727F827F8F8
%7DFD0EFFFD0427F851CFFFFF7DF827F851CFFFA8A1A0A1A1A7A1A7A1A7A1
%52275251FD05A176270527042727A1A0A1A1A17CA7A176FD05277651524B
%524B524B524B51FD0427F87DFD0DFFA804F827F8F852FFFFA8F827F827F8
%7DA7A17CA1A07D4B5252A17CA1A0A17CA17CA17CA17CA14B27F827277DA0
%A17CA17CA17CA14B524B524B524B764B4B2751274B27514B27F827F80427
%FD0DFF7DF827F827F8A8FFFF7C04F82727057CCF7CA1A0A12727F827277D
%FD04A17CA1A1A17CA1A17C51767CA1A0A1A1A17CA1A1A176765176517651
%7651764B514B524B514B522727F8270427A8FD0CFF2727F827F827CFFFCF
%7DF827F827F87DA7A17CA14B05F827F82727A17CA17CA17CA17CA1A0A17C
%A17CA17CA17CA17CA17CA17C764B524B524B524B524B524B4B274B274B27
%27F827F827F8A8FD0BFFA8272727042752FFCFFFA827F82727277DC9A1A1
%A176F8270427272752A7A1A17CA1A1A1527652FD05A17CFD07A151765176
%517651765152274B27524B524B524B27042727277DFD0BFF7DF827F827F8
%A8FFFFCFFF7D27F80452CA7CA17CA15227F827F827F85176A17CA17CA127
%05F827277C7CA17CA17CA17CA17CA176514B524B524B764B27F827F82720
%514B4B2751F827F827F852FD0BFF2D27F827F827CFFFCFFFCFFF76527DFF
%A7A17CA1A1A14B27F827F84B51767CA1A1A151272727F82727A17CA1A1A1
%272727527C7C51764B76517651270427F8FD0427524B514B272727F82727
%FD0AFFA827F827F80552FFCAFFCFFFA8A1A1FFCFA17CA17CA17CA1512726
%4B4B5251A17CA17C52F827F827F82776A17CA127F8F827F8274B524B524B
%524B51F827F827F827F827274B274B2027F827F827A8FD09FFA8F8270427
%F8A8FD04FFCFFFA1CAFFFFA1A17CA1A1A1A0A7A176517651A17C7651764B
%272727042727A1A1A7762704272727F8515276517651765127272704FD04
%27524B524B5127270427F8A8FD09FF5227F827F827A8FFCFFFCFFFA8A7CF
%FFA8A17CA17CA17CA17CA17C76517C7C524B524B51F827F827F852A0A1A0
%52F827F827F82726764B524B524B522727F827F827274B2751274B2727F8
%27F82752FD09FF52F8FD0427FFFFFFCFFFFFCFA1FFFFCA7CA1A1A17CA1A1
%A17CFD05A151764B76517C4B272776A0A1A1A176272727F827044B517651
%764B765176FD0527524B514B524B5126272727F852FD09FFF827F827F852
%CFFFCFFFCAFFA8A7CFFFA1A17CA17CA17CA17CA17CA17CA176524B524B52
%7CA176A17CA17CA17CA14B27F827F8274B524B524B524B524B52274B274B
%274B274B274B2727F827F82727FD08FFA827042727277DFFFFFFCFFFFFCA
%A7FFFFA8A1A7A1A17CA1A1A17CA1A1A17CA776524B7676A1A0A7A1A1A1A7
%FD04A14B2704515276517651765176517651524B524B524B524B524B52FD
%04270427A8FD07FF7DF827F827F8A8CFFFCFFFCFFFA7CA7D5227527CA17C
%A17CA17CA17CA17CA17CA1767676A17CA17CA17C7C76A17CA151524B5176
%A14B524B524B524B524B522751274B2751274B27514B27F827F827F8A8FD
%07FF52272727F851CFFFCFFFCFFFCFCA5205F827F852A0A1A1A17CA1A1A1
%7CA1A1A17CA1A1A17CA1A1A17C76515251A1A1764B76517CA17C51764B76
%51764B76515227524B514B524B514B522727F827272758FD07FF52F827F8
%F827FFCFFFCAFFCFFF7C27F827F827F8767CA17CA17CA17CA17CA17CA17C
%A17CA17CA17C764B524B5152A17C764B767CA17C764B514B524B524B524B
%4B274B274B274B274B274BF827F827F852FD07FFFD0427F87DFFFFCFFFFF
%FFCFA12727042727274BA7A1A17CA1A1A77627272752A7A1A17CA1A1A176
%7651764B7CA1A1A0A1A1A17CA7A17C767C51765176517651524B524B524B
%524B524B2704FD0427FD06FFA827F827F8F87DFFCFFFCFFFCFCF7D27F827
%F827F84B7CA17CA17CA17627F827F82776A17CA17CA17C764B5127274BA1
%7CA17CA17CA17CA1A17C272727514B524B524B764B4B2751274B27512727
%F827F827A8FD05FFA8F827F827F8A8FFFFCFFFCFFFA8CA52272727F82752
%A1A0FD04A152F827F827F852FD04A17CA1A152F827052727A1A1A17CA1A1
%A1A0A12727F82727525176517651764B514B524B514B4B0527F82704AEFD
%05FF7D27F827F827A8FFCAFFCFFFCFA8A1CF27F8F80427A17C7C517C7CA1
%2705F827F8274BA17CA17CA17CA12727F827F8F852A17CA17CA17CA14B05
%F827F82726524B524B524B4B274B274B274B2727F827F8277DFD05FF7DF8
%27042727FD05FFCFFFA7A7FFFF7D5252A7A17D4B765176A1A127270427F8
%7DFD04A17CA77C2704272727F876A1A17CFD04A17CF82704272727517651
%7651524B524B524B524B5227270427F87DFD05FF5227F827F82DCFFFCFFF
%CFFFCFA7A1FFCFFFA1A17CA151514B524B7CA07C2727F852A0A17CA17CA1
%7CA12727F827F80551A17CA17CA17CA15227F827F827F8524B524B512751
%274B2751274B2727F827F82752FD05FF52F8FD0427FFCFFFCFFFCFFF7DA8
%FFFFCAA1A1A17C7651764B5276A1A1A176FD05A17CFD04A17CF827F82704
%7DA0A1A1A17CA1A1A1FD0427F84B51764B7651514B524B514B524B512627
%2727F852FD05FF2704F827F852CFFFCFFFCAFFCAA1A1FFCFCF7CA17CA151
%514B514BA17CA17CA17CA17CA17CA17CA17CA17C7C2727F8767CA17CA17C
%A17CA17C762027F8274B524B524B52274B274B274B274B2727F827F82727
%FD05FF52F827272752FFFFFFCFFFFFFF7CCAFFFFCAA7767676A1767651A1
%A1A17CA1A1A17CA1A1A17CA1A1A17CA1A1A17CA1A1A17CA1A1A17CA1A1A1
%7676517651765176517651524B524B524B524B52FD0427F827FD05FF2727
%F827F87DCFFFCFFFCFFFA17CA7FFCFCA76524B5276A17CA1A0A17CA17CA1
%7CA17CA17CA17CA17CA17CA17CA17CA17CA17CA17CA17CA17C764B764B52
%4B525151274B274B2751274B27514B27F827F827F8FD04FFA8272727F827
%7DFFCFFFFFA82727277DFFFFA8A04B7651A1A1A1515251A1A1A17CA1A1A1
%7CFD04A1A7A1A17CA1A1A17CA1A1A1A0A1A1A17CA176524B765176515227
%27F827274B4B524B514B522727F8272727A8FFFFFFA8F827F827F8A7FFFF
%CFA8F8F8F827F8A7FFCA76764B767CA12705F80520767CA17C764B5276A1
%52524B7C7CA17CA17CA17CA17C7C76A17CA17C764B524B524B522727F827
%F827F827274B274B274BF827F827F8A8FFFFFFA82727270427A7FFCFFF51
%FD052752FFA7FD04A1A752272727042727A1A17D517651522727F8270576
%FD04A17CA77627042727A1A1A75276517651765151052704FD0427524B52
%4B524B27042727277DFFFFFFA8F827F827F8A8FFFFCF27F827F827F852CF
%A77CA17CA1A04BF827F827F82752A151524B52F827F827F827F87C7CA17C
%A17627F827F82727A17C764B524B524B522727F827F827F8272751274B27
%4BF827F827F87DFFFFFF7D27F8272727A8FFCFFF51272727F82752FFFD04
%A17CA74B27F8272727F876A1764B764B27F8272727F82752A77CA1A176F8
%272727F8277CA1517651764B765152F8272727F82727514B524B51FD0427
%F82752FFFFFF7DF827F827F8A8CFFFCFA8F827F8F8F8A8CAA17CA17CA17C
%76F827F827F80551764B524B51F827F827F827F87C7CA17CA14B05F827F8
%27F87CA0524B524B524B524B4BF827F827F84B274B274B274BF827F827F8
%52FFFFFF7D2704272727A8FD04FFA7272727A8FFCA7CA1A1A17CA7A152F8
%270527517C517651767652F8272727F852A1A17CA1A17CF8272727F8277C
%A151765176517651765152274B27524B524B524B514B272727042752FFFF
%FF7DF827F82727CFCFFFCFFFFFA77CFFFFFFA1A17CA17CA17CA17C51F827
%52A14B524B524BA17C51F82727767CA17CA17CA17C27F827F80551A17C76
%4B524B524B524B524B764B4B2751274B2751274B2627F827F852FFFFFF52
%272727F82DCFFFCFFFCFFFA7A7FFFFA77D7CA17CA1A1A17CA1A1A17CA7A1
%764B76515276A7A1A17CA1A1A17CA1A1A17CA77C52275152A17CA152524B
%7651764B7651764B524B514B524B514B524B27F8FD0427FFFFFF52F827F8
%2727FFCFFFCAFFCFA7A1FF7C514B5276A17CA17CA17CA17CA17CA176514B
%5151A17CA17CA17CA17CA17CA17CA17CA1A0A17CA17CA17C764B524B524B
%524B524B4B274B274B274B274B27512727F827F827A8FFFF52272727F852
%FFFFCFFFFFFFA1CACA764B7651767CA1A1A17CA1A1A17CA1A1A1767C76FD
%05A17CA1A1A17CA1A1A17CFD04A1A7A1A17CA776765176515251524B514B
%524B524B524B524B524B4BF8FD0427FFFFFF52F827F82727FFCFFFCFFFCF
%A1A7CA4B524B524BA17CA17CA17CA17CA17CA17CA17CA17CA17CA17CA17C
%A17CA17CA17CA17CA17CA17CA17CA17C7C4B27F827F8272751274B275127
%4B2751274B27512727F827F827A8FFFF5227F827F852CFFFCFFFCFFFA1A7
%A77651764B76A1A7A1A7A1A17CA1A1A17CA1A1A1A0A1A1A17CA17C7652FD
%05A17CFD05A17CA1A1A15227F827F82704274B524B514B524B514B524B51
%4B510527F82704A8FFFF52F827F82727FFCAFFCFFFA8A17CA152524B5276
%7D515276A17CA17CA17CA17CA17C7C76A17CA176524B514BA1A076F82727
%7C7CA17CA17CA17C51F827F827F827F84B274B274B274B274B274B274B27
%27F827F8277DFFFF52270427F852FD05FFCF7CA17CA77CA17C762727F827
%51A1A0A1A1A17CA77C51042727A1A17C517651767C7CF8FD0427A1A1A17C
%A1A1A14B27272704FD0427524B524B524B524B524B524B5105270427F8A8
%FFFF27F827F82751FFCFFFCFFFA1A17CA17CA1A17CF827F827F82752A17C
%A17CA17C27F827F82727A176524B524B7C2727F827F80552A17CA17CA17C
%51F827F827F827F84B2751274B2751274B2751274B2727F827F8277DFFFF
%FD0427F852FFFFCFFFCFA77CA1A1A17CA75127F8272727F852A1A17CA1A1
%7DF8272727F8277CA151524B7676272727F827F87CFD04A1A0A1514BF827
%2727F8514B514B524B514B524B514B524B4BF8272727F8A8FFA827F827F8
%F827FFCFFFCFCF7CA17CA17CA17C52F827F827F8044BA17CA17CA17627F8
%27F827F8A17C7C527C7C7CF827F827F8277CA17CA17CA176524B27F827F8
%4B4B524B4B27514B4B274B274B27512727F827F8F87DFFFFFD0427F87DFF
%FFCFFFA8A1CFFFA1A17CA77C27F8FD0427A1A1A17CA1A1A1FD0427F852A1
%A1A1A7A1A17C51F827F82752A17CFD04A17D517651764B52517651764B52
%274B27524B524B524B5104272727F87DFFA827F827F8F852FFCFFFCFA8A1
%FFCAA17CA17CA17627F827275151A17CA17CA17CA1272727527CA17CA17C
%A17CA1764B272752A17CA17CA1A1A176524B524B764B524B525151F827F8
%27F84B4B4B27512727F827F8F852FFA80427F827F87DFFFFCFFFA1A8A8A8
%7CA1A1A17CA776514B7651767CA7A1A17CA7A1A17CA1A1A17CA1A1A17CA1
%A1A17CA1A1A17CA1A17C527C76764B7651764B76517651762727F8FD0427
%524B514B512727F827F87DFF7D27F827F8F87CFFCAFFCF7D2027F82776A1
%7CA17C7C4B524B524BA17627F82776A17CA17CA17CA17CA1512727527CA1
%7CA17CA17C52F805F8274B524B524B524B524B522727F827F827F827274B
%274B2727F827F8F852FFA8F8270427F87DFD04FFFD0427F851A1A17CA1A1
%764B76517DA127F827F82776A17CFD05A12727F827F852FD05A17CF82704
%27052751765176517651765152272704FD0427524B524B5127270427F87D
%FF7D27F827F8F87DFFCFFF7DF8F827F827F87CA1A17CA17C76517CA176F8
%27F827F8277CA17CA17CA15127F827F827F8767CA17CA12727F827F82726
%524B524B524B524B524B27F827F827F84B2751274B2727F827F80452FF7D
%F8272727F8A8FFFFFF7DF827F82727274BA1A1A17CA1A1A1A0A75227F8FD
%0427A1A1A17CA1A152F8272727F82752A17CA1A176F8272727F82751764B
%7651764B7651764BFD0427514B514B524B4BF8272727F87DFF52F8F827F8
%277DFFCFFF5227F827F827F8274BA17CA176A17CA17C7CF827F827F82776
%A17CA17CA12705F827F827F876A0A17CA17627F827F82727764B524B524B
%524B524B524B52274B274B274B27512727F827F8F852FF7DF827272704CF
%FFFFFF7DF827042727274B7676A77C76517CA1A7A127F8FD0427A7A1A17C
%A1A17CF8272727F8277CA17CA1A1A1765227274B76517651765176517651
%76517651524B524B524B524B4BF8272727F87DFF52F8F827F827A8FFCFFF
%A727F827F82726524B7CA1764B524BA17CA17627F827047C7CA17CA17CA1
%7C52F827044B76A17CA17CA17CA176524B524B524B524B764B524B524B52
%4B51274B2751274B27512727F827F8F852FF52F827F82727FFCFFFFFFF76
%27F827277C52767CA776524B76A1A17CA77C7651A1A1A17CA1A1A1A0A7A1
%A176A1A1A1A0A7A1A17CA1A1764B7651764B7651524B76517651764B514B
%524B514B524B514B4B0527F827F87DFF2727F827F827CAFFCAFFA8A7A8A8
%7DA17CA17CA17CA1767676A17CA17CA1A0A17CA17CA17CA1767651A17CA1
%7CA1767652A17CA17CA176514B524B524B27F827F84B4B52274B274B274B
%274B274B274B2627F827F8277DFF522727042727FFCFFFFFFFA7FFFFFFA0
%FD04A1A7767652A1A1A17CA1A1A17CA1A1A17CA776524B7652A1A1A77C76
%4B7652FD05A151765176512705270427045151524B524B524B524B524B52
%4B4B27270427F883FF2727F827F852CFFFCFFFCAA7CFFFCFA17CA17CA14B
%27F805F876A0A17CA17CA17CA1A1A1A0764B524B5276A17C764B524B5276
%A17CA17C524B525151F827F827F82726512751274B2751274B2751274B26
%27F827F8277DFF27F827272751FFCFFFCFFFA7FFCFFFA1A17CA77627F827
%2727F87DA1A17CA1A1A17676517C517651764B7DA1A151764B4B2776A1A1
%7CA151764B764B27F8272727F8274B514B524B514B524B514B524B27F827
%2727F8A8FFF827F827F852CFFFCFFFA8A1A8FFCFA17CA17C51F827F827F8
%0527A17CA17CA17627F805F8274B524B5276A17C762727F827F8517CA152
%524B524B51F827F827F827F8524B4B274B274B274B274B27512027F827F8
%277DFF270427272752FFFFFFCFFFA1A7A7CAA1A1A0A74B2704272727F827
%7CA17CA1A151F8272727F852767676A7A1A17C2705270427F87CA17C5176
%51765127F8272727F85151764B524B524B524B524B524B270427272704FF
%FFF827F827F852CFFFCFFFCFA77CA17CA17CA17C7CF827F827F827F8A17C
%A17CA12727F827F82727A17CA17CA1A076F827F827F8274BA151524B524B
%764B27F827F8274B764B524B514B4B2751274B27510427F827F827A8FF27
%2727F8277CFFCFFFCFFFA1A17CA1A1A7A1A17C52F827F827F852A0A1A1A1
%7C270527F82704277CA1A1A17CA77627F8272727F8767C764B7651764B76
%5151275251764B765151274B4B514B524B51FD0427F82727FFFFF827F827
%F87DCFFFCAFFFFA12727265176A17CA17C52F827F82776A17CA17CA12627
%F827F82727A17CA17CA17CA12705F827F82752764B524B524B524B524B52
%4B524B522727F827F827274B274B274BF827F827F827A8FF27272704277D
%FFCFFFFFCFFD0427F8277CA17CA7A1A1767DA1A17CFD04A176F827042727
%7DFD04A17CA1A17D2727F8274BA151765176517651765176517651765127
%2727042705274B524B52FD0427042727FFFFF827F827F87DFFFFCFFF52F8
%F827F827F851A0A17CA17CA17CA17CA17CA17CA17C522727277CA0A17CA1
%7CA17CA1A07C4B5252A176524B524B764B524B524B524B525127F827F827
%F827F84B27514B27F827F827F852FFFF27F82727277CFFCFFFFF52F827F8
%27272704A1A1A17CA1A1A17CA7FD08A17CFD05A17CA1A1A17CFD04A1A7A1
%A151765176517651764B76517651762727F8272727F82727514B522727F8
%27272752FFFFF827F827F87DCFFFCFFF2727F827F827F82776A17CA17CA1
%7CA15151275276A17CA17CA17CA17CA17CA17CA17CA17CA17CA17CA17652
%4B51272727514B524B524B524B27F827F827F827F84B274B2727F827F827
%F87DFFFF27F827272752FD04FFA7F8270427272704A1A1A17CA1A1A12727
%F827F8517CA17CA1A1A17CA1A1A77C7D76FD05A17CA77C7651522727F827
%2751517651765176272704272727F8274B524B522727042727277DFFFF27
%27F827F852CFFFCFFFCF51F827F827F84B7CA17CA17CA15105F827F827F8
%52A0A17CA17CA17C7C2727F827277C7CA17CA176524B52F827F827F827F8
%4B4B524B524B762727F827F82727514B4B2727F827F827F8A8FFFF52F827
%F82727FFFFFFCFFFA852F827F8527CA17CA1A1A1A052F827F8FD0427A1A1
%A17CA1A176F8270527F82727A1A0A1A1764B764B27F8272727F82727764B
%76517651764B27274B4B514B512727F8272727F827A8FFFF2727F827F827
%27A8CFFFCFFFA87C527C7CA17CA17CA17CA12727F827F827F82776A17CA1
%7C7CF827F827F827F8054BA17C764B524B51F827F827F827F8274B524B52
%4B524B51274B27512727F827F827F827F82727FFFFFF7DF82704272727F8
%7CA8FFFFFFA7FD06A1A7A1A1A152F82704FD0427A1A1A17CA75227042727
%27042704527C7D517651765127F827272704272776517651524B524B524B
%522727F827272704272727F852FFFFFF7D27F827F827F827F82752CFCFA7
%7CA17CA1767C7CA17CA17627F827F827F8527CA17CA1A076F827F827F827
%F82727524B524B524B764B27F827F827F8524B512751274B27512727F827
%F827F827F827F827F8F852FFFFFFA8F8272727F8272727F8272776517C76
%A15276517652A1A1A77627F827F852FD06A176270527F8272727F8515176
%517651764B764B4B272727514B524B514B524B4B27270527F8272727F827
%2727F827F87DFFFFFFA827F827F827F827F827F827F827204B4B524B524B
%514B76527C52522752767C767676A17CA14B27F827F827F8274B524B514B
%514B4B27514B4B2751274B2751274B2627F827F827F827F827F827F827F8
%27F8277DFD04FFFD0427042727270427272704FD0427525176517651524B
%765276517651524B76767C52764BFD04274B4B764B524B524B514B524B52
%4B524B524B522727042727270427272704FD0727042727FD05FF52F827F8
%27F827F827F827F827F827F827F82727514B7651524B524B524B524B524B
%524B514B764B4B27514B4B2751274B27514B4B27514B4B274B2727F827F8
%27F827F827F827F827F827274BF827F827F852FD05FF7D27F82727277C52
%F827F8272727F8272727F8FD0427514B524B7651765176517651764B514B
%524B514B524B514B524B514B524B51274B2727F8272727F8272727F82727
%27F827274B4B522727F827272752FD05FFA8F827F827F87DFFA82705F827
%F827F827F827F827F827F827F827264B274B4B524B524B4B274B2751274B
%274B274B274B2727F827F827F827F827F827F827F827F827F827F8272751
%4B4B2727F827F827F87DFD06FF27F8FD0427FFFFFFA77C2727F827272704
%27272704272727F827052704FD0F2726272727F827272704272727042727
%27042727270427275251524B524B52272704272727A8FD06FF52F8F827F8
%27A7FFCFFFCFCF7C2DF805F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F82727
%514B7651522751274B2727F827F82727FD07FFA8F827F827F87DFFFFCFFF
%CFFFFFA852522727F8272727F8272727F8272727F8272727F8272727F827
%2727F8272727F8272727F8272727F827F827042727524B76517651764B51
%4B524B4BF8272727F87DFD07FFA827F827F827F8A8CFFFCFFFCAFFCFFFCA
%A87D522727F8F8F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827275252764B764B524B524B51274B274B27512727F8
%27F8F87DFD08FF272704FD0427FFFFFFCFFD09FFA8A752522727F827F827
%F827F827F8272727F8270527F827F827F8FD042752527C7CA7A1C9767651
%76517651524B524B524B524B2704FD0427FD09FFA8F827F827F8F852FFCF
%FFCFFFCFCAA8FFCFFFCFFFFFFFCFFFA8A87D7D52522752FD042726FD0427
%4B27525152527D7CA17CA7A1A17CA176764B524B524B52274B2751274B27
%4BF827F827F852FD0AFF52F827F82727277DFFFFFFCFFFCAA17CA7A1A77C
%A7A7CFCFFD07FFCFFFCFCFA1A17CA17CFD04A1A7A1A7FD04A1767D76764B
%7651764B76515127524B514B524B51FD0427F8277DFD0AFFA827F827F827
%F8057DFFCFFFCAFFA8A176A17CA176A17CA17DA8A7CAA8CFA8CAA1A77CA1
%7CA17CA17CA17CA17CA1767651764B514B524B514B524B524B4B274B274B
%274B27512727F827F827F8FD0CFFA827F8272727F827A7FFCFFFFFFFCFA7
%7CA17CA1A1A17CA17CA17CA1A1A17CA1A0A17CA1A1A17CA1A1A1A0A15252
%4B76517651765176517651764B524B524B524B524B524B2704272727F852
%FD0DFF7DF8F827F827F8277DFFCFFFCFFFCAA77CA17CA17CA17CA17CA17C
%A17CA17CA17CA17CA17CA17CA17CA176524B524B524B524B524B524B5227
%4B2751274B2751274B2727F827F827F8F87DFD0EFF5204F8272727F8277C
%FFFFFFCFFFCFA77CA17CA1A1A17CA1A1A17CA1A1A17CA1A1A17CA1A1A17C
%A1A1A1517651764B7651765176515127524B514B524B514B524B27F82727
%27F82727FD10FF27F8F827F827F8F827CFCFFFCFFFA8A17CA17CA17CA17C
%A17CA17CA17CA17CA17CA17CA17CA176764B524B524B524B524B51274B27
%4B274B274B274B274B2727F827F827F827F883FD11FF5227272704FD0427
%A7FFFFCFFFA7A1A0A1A1A17CA1A1A17CA1A1A17CFD05A17C7C5176517651
%765176517651524B524B524B524B524B524B51FD042704272727F852FD13
%FF5204F827F827F827F852A1FFFFCF7CA17CA1A0A17CA17CA17CA1A0A17C
%A176764B524B524B524B524B764B514B51274B2751274B27514B4B272726
%27F827F827F827F827A8FD14FF5227F827F8272727F82752A8A77C767676
%7D76A17CA17CA17C7D76764B7651524B765176517651524B524B514B524B
%514B524B5127512727F8272727F8272727F827A8FD16FF7D27F827F827F8
%27F805F82727514B514B524B524B524B524B524B514B524B524B524B514B
%51274B274B274B2751274B27272627F827F827F827F827F827F827A8FD18
%FFA852F827272704272727F8FD0427525176517651765176517651765176
%517651524B524B524B524B512751FD06270427272704272727F827277DFD
%1CFF7DF804F827F827F827F827F827F827274B27524B524B764B524B764B
%524B51274B274B27272627F827F827F827F827F827F827F827F827F82752
%A8FD1FFF5227F827F8272727F8272727F8270427F8FD06274BFD0827F827
%0527F8272727F8272727F8272727F827F827277DA8FD22FFA852F8F8F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F8F8F827277DA8FD28FF522DF827F827272704272727
%042727270427272704272727042727270427272704272727F827F827F852
%52A8A8FD2CFFA8A85227F804F827F827F827F827F827F827F827F827F827
%F827F827F827F827F804F82727527DA8FD34FFA852522727F827F827F827
%2727F8272727F8270427F827F827F82727527DA8A8FD3CFFA87D52522727
%F827F827F827F8FD042752527D7DA8A8FD22FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-19T11:26:19+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-19T11:26:19+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-19T11:26:19+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>180</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAC0AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FUt13&#xA;zN5e0C1+ta1qNvp0H7L3Eix8vZQTVj7DFXlXmP8A5yr/AC704tHpUN3rUwrxeJPQgNPF5uL/AHRn&#xA;FFvONa/5y585XJZdI0ix06NujTGS6kX5NWFPvTAtsG1X8+PzZ1Mn1vMVxAp6JaCO2oPYwqjfecVY&#xA;rfea/NF+S1/rF9dsdyZ7maQ+P7bHFUrJJJJNSdyTirasyMGUlWU1VhsQR3GKptp/nHzbppB0/W7+&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:c5174245-df7a-1449-a2e4-a7e67ec59ef2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:c5174245-df7a-1449-a2e4-a7e67ec59ef2</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:e7890f50-c8ec-344c-89d0-68bce713a96a</stRef:instanceID>
            <stRef:documentID>xmp.did:e7890f50-c8ec-344c-89d0-68bce713a96a</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:68cf48fb-65ae-d247-abc7-767cb7648306</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:45:03+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d741fa58-aad3-c54f-a3ac-601ad698f002</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:54:39+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e7890f50-c8ec-344c-89d0-68bce713a96a</stEvt:instanceID>
                  <stEvt:when>2018-02-19T10:52:36+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c5174245-df7a-1449-a2e4-a7e67ec59ef2</stEvt:instanceID>
                  <stEvt:when>2018-02-19T11:26:19+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>363.663610</stDim:w>
            <stDim:h>526.254683</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -526.255 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 526.255 li
363.664 526.255 li
363.664 0 li
cp
clp
333.129 180.423 mo
333.748 149.045 329.745 117.981 317.656 91.0275 cv
294.761 39.9791 243.895 21.8419 191.02 21.5548 cv
189.237 21.5455 187.616 21.7604 186.076 22.0802 cv
171.721 15.5655 152.722 20.2872 135.213 27.9928 cv
134.769 28.0821 134.345 28.1168 133.892 28.2384 cv
60.9704 47.9606 40.527 118.369 31.8395 185.292 cv
23.3834 250.44 7.44887 335.045 28.2184 401.282 cv
28.9997 406.791 30.278 412.104 32.4206 416.961 cv
31.069 418.505 30.1383 420.449 30.0836 422.735 cv
29.2877 456.015 58.8971 473.547 87.7838 483.328 cv
89.3034 485.922 91.5622 488.26 94.8268 490.034 cv
117.044 502.108 142.001 509.55 166.688 509.128 cv
195.775 513.898 235.216 514.789 266.929 504.045 cv
274.457 505.225 282.488 502.464 286.13 495.452 cv
301.058 486.714 312.475 473.998 317.635 456.178 cv
318.357 454.71 318.963 453.227 319.61 451.75 cv
340.831 425.862 343.592 366.724 345.909 344.132 cv
351.179 292.764 350.861 231.732 333.129 180.423 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.737255 .603922 .521569 rgb
f
350.936 255.875 mo
350.73 251.263 349.291 247.525 347.089 244.656 cv
351.635 203.188 342.558 154.534 332.792 120.77 cv
328.054 104.392 318.793 86.8263 306.751 70.756 cv
307.693 64.6612 305.381 58.2726 298.02 54.3326 cv
295.133 52.7877 292.453 51.2208 289.914 49.6691 cv
288.057 48.4855 286.233 47.1983 284.406 45.9151 cv
273.171 35.5148 260.852 26.9361 248.16 21.3287 cv
243.904 19.2609 239.555 17.5109 234.971 16.566 cv
228.439 14.8424 223.309 16.982 220.03 20.7638 cv
217.646 19.3863 215.304 18.025 213.046 16.6876 cv
199.441 8.63146 185.929 26.9459 196.455 38.19 cv
208.641 51.2076 216.967 66.3307 228.081 79.6857 cv
232.945 85.5299 242.677 91.3199 243.779 95.9874 cv
246.615 107.997 232.472 129.846 233.313 143.214 cv
233.861 151.889 235.043 156.424 241.313 162.713 cv
244.723 166.132 250.164 167.817 254.912 166.516 cv
250.021 189.186 248.226 212.164 249.254 235.521 cv
249.053 238.228 248.96 240.816 249.087 243.13 cv
249.18 244.823 249.55 246.361 250.07 247.793 cv
250.217 249.458 250.227 251.104 250.403 252.774 cv
250.464 253.365 250.605 253.902 250.743 254.44 cv
247.322 265.613 247.367 277.083 245.605 289.001 cv
243.988 288.912 242.39 289.594 241.448 291.604 cv
236.67 301.8 225.239 316.251 229.647 328.161 cv
230.124 329.449 231.53 330.109 232.851 330.642 cv
230.283 338.469 228.381 346.254 228.208 353.755 cv
226.333 356.174 224.366 358.657 222.569 361.277 cv
219.959 365.079 221.825 370.249 225.315 372.828 cv
218.48 379.572 211.782 386.225 206.848 395.023 cv
206.876 395.045 206.902 395.065 206.93 395.086 cv
206.7 395.523 206.556 395.967 206.504 396.431 cv
199.723 398.761 193.006 400.647 187.932 402.545 cv
187.935 402.552 187.939 402.561 187.941 402.568 cv
183.983 403.591 181.486 406.242 180.272 409.432 cv
169.996 410.883 159.625 411.917 149.279 413.197 cv
147.828 410.949 145.358 409.358 141.806 409.402 cv
130.718 409.543 118.315 411.212 107.281 409.798 cv
97.2868 408.518 89.5729 402.583 78.984 402.089 cv
75.4948 401.926 72.9225 404.067 71.5729 406.846 cv
70.361 406.614 69.111 406.406 67.9606 406.13 cv
58.2204 403.797 48.4674 401.999 38.4411 403.039 cv
33.7741 403.523 33.6452 410.072 38.4411 410.397 cv
52.8454 411.373 69.1989 422.791 84.2975 422.799 cv
90.5338 425.735 97.0133 428.279 103.748 428.892 cv
108.289 429.304 112.925 429.298 117.579 429.178 cv
118.202 432.226 120.508 434.972 124.586 435.318 cv
129.129 435.704 133.679 436.064 138.234 436.41 cv
137.953 439.846 141.7 443.567 145.196 442.249 cv
154.538 438.73 165.604 438.822 176.563 438.547 cv
200.834 439.338 225.131 438.846 249.232 435.741 cv
262.944 433.973 277.605 431.964 290.643 427.107 cv
289.48 428.174 288.398 429.374 287.491 430.836 cv
282.079 433.355 276.5 434.885 269.568 434.999 cv
260.304 435.15 257.056 443.688 259.538 450.211 cv
254.615 450.768 250.211 451.553 247.154 452.238 cv
245.604 452.586 244.316 453.15 243.265 453.871 cv
233.579 455.648 223.84 457.19 213.898 458.121 cv
206.133 458.847 203.806 467.409 207.203 472.172 cv
186.956 479.453 166.823 485.149 146.183 489.645 cv
133.951 489.087 121.729 488.102 109.503 486.428 cv
96.2028 484.605 90.1168 504.711 103.825 507.022 cv
135.803 512.414 168.21 515.274 200.628 512.757 cv
216.671 511.512 240.971 512.478 248.361 496.284 cv
252.77 495.214 257.163 494.095 261.542 492.906 cv
270.184 492.169 279.119 489.988 286.092 485.982 cv
287.429 485.752 288.758 485.237 290.018 484.318 cv
290.355 484.072 290.717 483.792 291.062 483.538 cv
296.029 481.7 300.96 479.772 305.794 477.639 cv
310.436 475.59 311.713 470.972 310.829 466.646 cv
325.249 452.286 337.686 434.034 334.376 416.091 cv
334.271 415.521 334 415.093 333.787 414.613 cv
337.453 405.575 339.475 395.068 340.818 386.055 cv
354.118 342.028 351.871 276.753 350.936 255.875 cv
cp
.45098 .34902 .294118 rgb
f
192.465 13.1886 mo
188.988 13.0616 185.632 13.1866 182.319 13.4166 cv
171.137 7.69005 162.108 12.211 150.896 17.2867 cv
144.192 20.3209 137.467 23.3946 130.77 26.5362 cv
114.602 18.3634 94.2018 40.8468 83.7946 51.1983 cv
77.8532 57.1061 70.1666 64.2691 64.3268 72.2608 cv
50.8639 88.2555 42.1832 107.261 39.2672 129.574 cv
39.192 130.148 39.3532 130.606 39.402 131.12 cv
33.7448 143.171 32.7125 157.052 30.9567 170.932 cv
28.5094 190.293 27.2965 209.872 26.5934 229.419 cv
3.91958 257.732 11.6481 305.754 17.7057 345.616 cv
18.7995 358.726 19.945 371.481 20.4948 383.431 cv
20.5114 383.805 20.6559 384.115 20.7438 384.455 cv
18.4791 388.922 18.7389 394.64 22.6266 398.256 cv
29.1081 404.286 46.8092 412.986 53.8307 403.59 cv
57.86 398.196 54.2663 391.967 50.0651 387.992 cv
49.2184 387.19 48.2858 386.462 47.3493 385.74 cv
47.4254 385.208 47.5397 384.702 47.5602 384.13 cv
48.7682 350.347 42.4381 317.906 48.3903 284.152 cv
51.5426 266.28 58.4166 250.069 55.5622 233.287 cv
59.2262 216.34 62.3825 199.377 64.7282 181.854 cv
67.5797 160.557 74.0514 137.08 69.5016 115.82 cv
70.5749 113.204 71.7506 110.531 72.904 107.88 cv
75.8092 107.714 78.7516 106.447 81.3249 103.521 cv
83.2262 101.359 85.2506 99.3233 87.2467 97.2594 cv
86.1666 102.155 92.5192 107.073 97.1579 102.757 cv
110.274 90.5553 124.122 79.2565 138.981 69.2257 cv
150.077 61.7345 164.183 55.5338 171.544 43.9708 cv
172.693 42.1627 171.186 39.795 169.141 39.7848 cv
168.502 39.7818 167.878 39.9156 167.244 39.9523 cv
168.156 39.4474 169.111 38.9752 169.984 38.4405 cv
177.532 38.2584 185.089 38.3155 192.465 38.2628 cv
208.644 38.151 208.568 13.7731 192.465 13.1886 cv
cp
1 .984314 .909804 rgb
f
94.3288 111.252 mo
95.9293 107.223 89.0817 104.299 87.275 108.278 cv
87.2731 108.283 87.2711 108.289 87.2692 108.293 cv
86.9645 108.186 86.6657 108.07 86.2829 108.07 cv
83.1491 108.07 82.6295 112.03 84.65 113.454 cv
84.5602 113.859 84.5602 114.279 84.611 114.69 cv
81.652 121.898 79.0211 129.598 76.8336 137.628 cv
76.7868 137.626 76.7575 137.604 76.7106 137.604 cv
73.6403 137.604 73.2184 141.671 75.4147 142.838 cv
72.0182 156.877 70.2272 171.543 70.9674 185.501 cv
70.1745 193.234 70.1598 201.226 68.9293 208.543 cv
66.3795 223.713 60.4508 239.689 61.528 255.103 cv
61.7555 258.368 65.8854 259.646 67.7165 256.778 cv
82.3454 233.867 84.5553 196.081 83.4 169.505 cv
83.3864 169.188 83.2877 168.905 83.2067 168.615 cv
83.2946 166.927 83.3961 165.247 83.5338 163.581 cv
85.0338 145.42 87.5758 128.243 94.3288 111.252 cv
cp
f
67.1383 201.567 mo
66.2125 201.567 66.2106 203.003 67.1383 203.003 cv
68.0622 203.003 68.0622 201.567 67.1383 201.567 cv
cp
f
62.943 335.531 mo
61.7164 329.692 61.6344 323.63 61.4323 317.684 cv
61.0338 306.014 61.6198 294.344 62.3444 282.697 cv
62.6735 277.393 54.9186 277.696 54.2682 282.697 cv
52.7555 294.335 51.692 306.008 50.5289 317.684 cv
49.6286 326.748 47.9196 335.189 51.5514 343.717 cv
52.7692 346.574 56.5416 347.391 59.2321 346.842 cv
59.6774 346.752 60.1217 346.662 60.567 346.571 cv
62.0045 346.277 63.0104 345.001 63.4498 343.688 cv
64.5993 340.25 63.6666 338.962 62.943 335.531 cv
cp
f
166.261 447.369 mo
153.098 444.449 139.204 448.016 125.738 447.65 cv
118.394 447.451 111.265 446.355 104.245 444.8 cv
104.242 444.118 104.112 443.417 103.797 442.672 cv
99.695 432.964 84.7379 431.159 75.6598 428.667 cv
65.192 425.792 54.612 423.336 44.1129 420.667 cv
42.9127 419.183 41.6715 417.719 40.4967 416.225 cv
35.3463 409.672 23.4879 416.773 26.3971 424.432 cv
33.025 441.871 41.7868 456.561 54.4987 470.321 cv
62.0778 478.524 82.3268 501.054 95.1745 491.229 cv
109.045 480.619 85.0788 464.148 78.4225 457.902 cv
75.2262 454.902 72.0836 451.805 68.9821 448.656 cv
77.4284 451.41 89.9557 455.093 98.442 451.091 cv
121.464 458.793 148.937 463.633 166.968 452.782 cv
169.057 451.525 168.818 447.936 166.261 447.369 cv
cp
f
180.726 256.058 mo
166.983 256.058 166.961 277.416 180.726 277.416 cv
194.469 277.416 194.492 256.058 180.726 256.058 cv
cp
.45098 .34902 .294118 rgb
f
155.202 210.033 mo
145.83 210.033 142.466 219.323 145.069 226.043 cv
130.993 226.645 131.138 248.78 145.63 248.78 cv
155 248.78 158.363 239.49 155.76 232.771 cv
169.837 232.169 169.691 210.033 155.202 210.033 cv
cp
f
157.754 131.542 mo
143.087 131.542 143.062 154.335 157.754 154.335 cv
172.421 154.335 172.444 131.542 157.754 131.542 cv
cp
f
135.418 115.588 mo
120.752 115.588 120.727 138.381 135.418 138.381 cv
150.085 138.381 150.109 115.588 135.418 115.588 cv
cp
f
176.26 92.1427 mo
175.766 92.1427 175.766 92.9083 176.26 92.9083 cv
176.752 92.9083 176.754 92.1427 176.26 92.1427 cv
cp
f
191.576 96.1051 mo
182.22 96.1051 182.206 110.643 191.576 110.643 cv
200.929 110.643 200.944 96.1051 191.576 96.1051 cv
cp
f
137.333 167.268 mo
130.866 167.268 130.854 177.318 137.333 177.318 cv
143.799 177.318 143.81 167.268 137.333 167.268 cv
cp
f
112.445 178.763 mo
97.778 178.763 97.7545 201.557 112.445 201.557 cv
127.112 201.557 127.136 178.763 112.445 178.763 cv
cp
f
94.5778 198.935 mo
85.3385 198.935 85.3239 213.293 94.5778 213.293 cv
103.815 213.293 103.832 198.935 94.5778 198.935 cv
cp
f
90.111 270.237 mo
87.2233 270.237 87.2174 274.723 90.111 274.723 cv
92.9977 274.723 93.0016 270.237 90.111 270.237 cv
cp
f
102.235 279.59 mo
87.569 279.59 87.5446 302.383 102.235 302.383 cv
116.902 302.383 116.926 279.59 102.235 279.59 cv
cp
f
97.7692 312.166 mo
88.0661 312.166 88.0514 327.241 97.7692 327.241 cv
107.468 327.241 107.485 312.166 97.7692 312.166 cv
cp
f
74.1569 307.619 mo
63.5319 307.619 63.5153 324.13 74.1569 324.13 cv
84.7809 324.13 84.7985 307.619 74.1569 307.619 cv
cp
f
77.3483 241.302 mo
62.6813 241.302 62.6569 264.095 77.3483 264.095 cv
92.0143 264.095 92.0387 241.302 77.3483 241.302 cv
cp
f
116.913 227.428 mo
116.42 227.428 116.42 228.194 116.913 228.194 cv
117.405 228.194 117.407 227.428 116.913 227.428 cv
cp
f
167.326 326.353 mo
152.889 326.353 152.865 348.788 167.326 348.788 cv
181.76 348.788 181.785 326.353 167.326 326.353 cv
cp
f
201.148 326.812 mo
186.479 326.812 186.457 349.606 201.148 349.606 cv
215.812 349.606 215.837 326.812 201.148 326.812 cv
cp
f
208.805 268.921 mo
201.759 268.921 201.748 279.869 208.805 279.869 cv
215.85 279.869 215.861 268.921 208.805 268.921 cv
cp
f
193.49 155.153 mo
178.822 155.153 178.799 177.946 193.49 177.946 cv
208.155 177.946 208.179 155.153 193.49 155.153 cv
cp
f
220.292 146 mo
208.626 146 208.607 164.127 220.292 164.127 cv
231.954 164.127 231.974 146 220.292 146 cv
cp
f
332.738 375.552 mo
332.035 375.889 331.33 376.166 330.628 376.497 cv
340.519 358.511 345.989 338.869 348.07 317.959 cv
350.411 294.448 343.335 278.239 337.925 258.713 cv
337.845 254.258 337.653 249.826 337.32 245.426 cv
336.944 240.435 336.136 235.534 335.232 230.655 cv
336.383 228.508 337.094 225.916 337.025 222.745 cv
335.782 208.173 335.836 195.141 337.064 180.567 cv
337.591 174.303 334.713 170.088 330.595 167.658 cv
330.076 165.763 329.481 163.912 328.827 162.097 cv
328.692 157.368 328.512 152.64 328.299 147.912 cv
331.287 144.332 332.66 139.598 330.924 134.092 cv
322.616 107.706 330.775 90.9181 309.862 85.2296 cv
300.735 54.4664 291.015 31.1324 255.752 19.2228 cv
241.195 14.3067 228.505 35.3653 240.434 45.5372 cv
247.034 51.1666 252.497 56.0079 258.103 60.2145 cv
269.454 72.545 273.545 86.3561 279.783 105.031 cv
281.923 111.441 287 116.229 293.516 117.391 cv
293.234 120.465 293.782 124.21 294.672 127.966 cv
289.938 130.686 285.825 134.425 281.672 139.565 cv
273.915 149.161 277.786 167.871 292.919 166.716 cv
294.135 166.623 294.673 166.393 294.949 166.193 cv
294.726 166.828 294.842 168.712 297.906 173.607 cv
298.239 174.138 298.472 174.705 298.762 175.251 cv
298.488 175.615 298.173 175.919 297.942 176.345 cv
292.116 187.07 291.872 192.754 295.048 204.673 cv
296.34 209.52 298.925 214.293 301.251 218.974 cv
300.112 231.773 297.357 241.648 282.05 246.342 cv
266.598 251.081 269.409 274.305 285.876 274.61 cv
287.689 274.643 289.426 274.591 291.185 274.569 cv
290.572 280.932 294.806 286.798 300.541 293.011 cv
301.737 294.309 302.855 295.154 303.883 295.702 cv
303.561 301.21 303.188 306.708 302.87 312.216 cv
300.829 315.536 298.678 316.927 292.713 321.008 cv
282.6 327.927 283.481 340.094 292.713 347.162 cv
295.317 349.152 297.877 351.231 300.457 353.273 cv
300.299 360.456 304.755 365.028 310.378 366.714 cv
308.559 370.813 306.632 374.866 304.481 378.805 cv
302.685 382.094 302.769 385.235 303.921 387.846 cv
291.514 392.679 279.026 397.181 266.383 402.049 cv
230.731 405.492 194.659 413.746 159.498 420.298 cv
152.812 421.546 154.25 432.939 161.121 432.285 cv
175.983 430.871 190.796 429.425 205.599 427.797 cv
203.189 431.233 204.146 436.861 209.002 437.998 cv
231.42 443.249 249.964 427.426 271.208 422.366 cv
289.233 418.071 304.971 413.572 320.579 406.737 cv
321.324 408.301 322.517 409.651 323.987 410.72 cv
320.884 410.336 317.676 411.29 315.132 414.325 cv
313.981 415.518 312.829 416.711 311.677 417.904 cv
309.696 418.759 307.895 420.158 306.568 422.129 cv
305.895 423.129 305.22 424.129 304.547 425.13 cv
302.115 428.743 301.841 432.201 302.886 435.13 cv
302.404 435.989 301.931 436.855 301.453 437.714 cv
299.974 438.2 298.507 438.917 297.108 440.002 cv
268.158 462.407 233.311 486.871 196.511 492.907 cv
188.066 494.293 189.986 508.461 198.538 507.89 cv
227.582 505.95 251.589 497.995 274.406 485.422 cv
275.06 486.065 275.673 486.714 276.5 487.331 cv
293.839 500.257 319.675 476.4 329.169 463.429 cv
334.576 456.042 328.866 449.062 321.779 447.735 cv
325.731 441.366 329.649 434.969 333.577 428.556 cv
337.072 422.85 334.402 416.535 329.81 413.125 cv
333.848 413.744 338.001 412.411 339.949 408.066 cv
342.527 402.24 345.163 396.442 347.855 390.669 cv
352.531 380.512 343.045 370.601 332.738 375.552 cv
cp
.356863 .270588 .231373 rgb
f
287.91 481.839 mo
260.029 494.361 219.59 500.058 189.573 502.459 cv
129.682 507.25 67.3024 490.499 34.6715 436.552 cv
34.6979 434.922 34.3991 433.217 33.6588 431.479 cv
31.9459 427.45 30.5582 423.264 29.3131 419.012 cv
119.867 467.154 238.191 459.898 328.485 413.059 cv
323.789 441.602 317.715 468.453 287.91 481.839 cv
cp
27.7467 280.282 mo
29.4928 228.584 29.736 176.435 45.3356 126.608 cv
52.3092 104.334 60.776 80.2252 75.9743 62.1026 cv
93.9606 40.6549 118.575 34.8092 144.975 29.3566 cv
196.714 18.67 243.006 21.4689 286.812 49.7569 cv
286.889 50.1935 286.882 50.6593 287.024 51.0665 cv
287.218 51.6285 287.415 52.19 287.609 52.7521 cv
289.517 58.2643 294.166 60.607 298.776 60.5997 cv
312.724 75.214 317.564 111.651 321.252 127.728 cv
328.296 158.459 333.507 189.617 336.572 221 cv
341.891 275.422 340.904 330.549 332.957 384.672 cv
332.353 384.909 331.747 385.15 331.135 385.508 cv
241.706 437.856 116.472 446.69 26.7223 391.22 cv
25.7877 390.643 24.8639 390.261 23.9518 389.971 cv
20.5377 353.743 26.61 313.941 27.7467 280.282 cv
cp
359.546 221 mo
355.843 182.961 349.418 145.141 340.154 108.06 cv
335.043 87.5968 329.085 56.7428 311.716 41.3356 cv
310.931 39.4967 309.682 37.7706 307.76 36.357 cv
262.508 3.04747 212.009 -5.94325 157.175 3.58214 cv
100.356 13.4523 61.9879 28.4376 37.3971 83.1398 cv
12.0202 139.595 7.56313 198.485 5.47524 259.545 cv
3.50649 317.089 -9.14488 384.392 12.4127 439.355 cv
12.0319 441.639 12.3981 444.148 13.9088 446.719 cv
45.9899 501.339 105.812 526.122 167.537 526.255 cv
209.621 526.343 254.22 517.319 294.017 503.992 cv
317.768 496.039 331.485 484.508 340.174 460.229 cv
366.42 386.893 366.986 297.438 359.546 221 cv
cp
.129412 .141176 .129412 rgb
f
75.985 375.388 mo
76.0133 367.752 70.442 360.737 62.9245 358.668 cv
53.2965 356.017 43.3727 362.68 43.3483 372.962 cv
43.3385 377.144 44.9469 381.409 47.5924 384.813 cv
47.9401 385.281 48.3229 385.713 48.7194 386.142 cv
48.9752 386.419 49.234 386.685 49.5045 386.945 cv
49.8971 387.316 50.3034 387.668 50.735 387.999 cv
52.5465 389.448 54.5895 390.573 56.8424 391.132 cv
66.0543 393.415 76.3493 386.996 76.2057 376.92 cv
76.1979 376.393 76.0485 375.903 75.985 375.388 cv
cp
f
116.217 375.567 mo
104.96 377.081 97.9948 389.521 104.324 399.623 cv
104.75 400.304 105.244 400.926 105.784 401.497 cv
107.839 404.567 110.881 407.01 114.595 408.135 cv
124.698 411.193 134.61 402.812 134.7 392.603 cv
134.786 382.697 126.362 374.205 116.217 375.567 cv
cp
f
187.692 383.494 mo
182.711 380.757 176.464 380.982 171.544 383.748 cv
171.313 383.877 171.164 384.063 170.943 384.2 cv
159.627 385.242 154.515 399.789 161.609 408.439 cv
168.344 416.652 183.925 418.046 191.482 410.075 cv
198.83 402.326 197.291 388.762 187.692 383.494 cv
cp
f
233.282 378.258 mo
226.484 382.202 224.413 390.779 228.202 397.565 cv
230.804 402.226 235.474 404.453 240.468 405.123 cv
249.158 407.399 259.393 403.416 259.608 392.519 cv
259.867 379.433 244.286 371.874 233.282 378.258 cv
cp
f
303.677 355.908 mo
295.878 354.059 288.536 358.576 285.61 365.377 cv
284.612 366.562 283.831 367.968 283.383 369.595 cv
280.714 379.324 288.448 389.098 298.519 389.225 cv
306.583 389.327 314.031 383.623 315.877 375.754 cv
317.897 367.136 312.307 357.954 303.677 355.908 cv
cp
f
267.507 324.464 mo
266.788 324.453 266.154 324.668 265.475 324.766 cv
262.256 324.565 258.958 325.759 256.204 327.955 cv
249.087 333.631 249.909 345.268 256.189 351.126 cv
263.482 357.925 275.41 355.216 280.057 346.697 cv
285.264 337.159 278.636 324.641 267.507 324.464 cv
cp
f
218.02 344.457 mo
211.823 336.399 199.143 337.944 194.35 346.663 cv
188.85 356.665 197.213 368.251 208.074 368.155 cv
213.113 368.11 217.928 364.431 219.202 359.569 cv
221.591 354.902 221.514 349 218.02 344.457 cv
cp
f
141.015 341.271 mo
136.076 344.298 134.502 349.326 135.186 354.088 cv
134.515 358.748 136.072 363.766 140.265 367.098 cv
149.739 374.624 163.313 366.361 163.335 354.9 cv
163.353 343.702 151.219 335.018 141.015 341.271 cv
cp
f
100.401 331.802 mo
91.1842 329.082 81.3971 336.253 81.5583 345.889 cv
81.5895 347.813 82.1803 349.689 83.1159 351.373 cv
84.65 355.028 87.4694 358.226 91.1325 360.121 cv
95.1891 362.219 99.8483 363.507 104.367 362.161 cv
109.521 360.625 112.621 356.158 113.312 351.011 cv
114.385 343.034 108.01 334.048 100.401 331.802 cv
cp
f
55.3454 291.697 mo
48.069 293.38 43.3112 300.992 44.4586 308.071 cv
42.6471 316.345 48.0875 325.142 57.4821 325.443 cv
67.069 325.751 73.5543 317.171 73.4645 308.162 cv
73.3678 298.358 65.8854 289.258 55.3454 291.697 cv
cp
f
142.545 303.478 mo
142.15 300.904 140.314 298.67 138.002 297.139 cv
137.055 295.717 135.852 294.478 134.391 293.624 cv
128.783 290.344 122.099 292.55 118.676 297.745 cv
114.655 303.849 115.855 311.993 120.59 317.166 cv
120.927 317.554 121.265 317.937 121.647 318.294 cv
121.778 318.411 121.915 318.521 122.05 318.634 cv
123.632 320.016 125.515 321.158 127.644 321.983 cv
133.26 324.161 140.492 319.589 141.774 313.961 cv
141.886 313.465 141.917 312.995 141.974 312.516 cv
142.888 309.801 143.072 306.918 142.545 303.478 cv
cp
f
197.094 299.584 mo
188.614 286.501 168.718 294.23 169.81 309.318 cv
170.278 315.743 174.707 320.49 181.297 320.804 cv
184.234 320.945 li
185.266 320.994 186.277 320.809 187.264 320.531 cv
189.216 320.295 191.153 319.801 193.017 318.656 cv
199.423 314.718 201.134 305.813 197.094 299.584 cv
cp
f
246.881 298.839 mo
245.819 295.166 242.742 291.628 238.856 290.816 cv
237.539 290.541 236.21 290.416 234.889 290.38 cv
234.129 290.315 233.364 290.337 232.595 290.439 cv
232.295 290.472 232.005 290.554 231.706 290.605 cv
231.461 290.66 231.214 290.667 230.97 290.741 cv
230.907 290.76 230.859 290.802 230.795 290.824 cv
229.24 291.196 227.721 291.751 226.325 292.744 cv
222.494 295.467 220.551 299.298 220.836 303.458 cv
220.836 303.511 220.81 303.554 220.81 303.607 cv
220.81 303.67 220.841 303.727 220.843 303.789 cv
220.894 304.307 221.009 304.832 221.131 305.359 cv
221.913 310.084 225.517 314.19 230.138 315.463 cv
232.192 316.029 234.213 315.965 236.144 315.586 cv
236.501 315.526 236.854 315.517 237.202 315.426 cv
238.5 315.062 239.711 314.486 240.84 313.775 cv
240.868 313.755 240.894 313.733 240.921 313.714 cv
245.682 310.668 248.623 304.874 246.881 298.839 cv
cp
f
312.563 283.59 mo
306.446 280.953 300.582 281.371 296.096 284.514 cv
294.831 285.282 293.655 286.259 292.61 287.492 cv
291.387 288.933 290.564 290.609 290.083 292.364 cv
290.002 292.558 289.891 292.714 289.813 292.914 cv
288.703 295.765 289.351 299.031 290.987 301.727 cv
291.761 303.227 292.853 304.584 294.268 305.679 cv
298.768 309.169 305.308 309.547 310.285 306.739 cv
315.353 303.88 317.746 299.137 318.253 293.508 cv
318.574 289.941 315.916 285.036 312.563 283.59 cv
cp
f
264.86 250.742 mo
263.59 251.053 262.462 251.514 261.399 252.045 cv
255.895 252.829 250.675 257.366 251.053 263.373 cv
251.585 271.834 257.361 279.547 266.408 279.887 cv
274.657 280.199 282.107 273.257 282.155 264.906 cv
282.204 255.857 273.922 248.521 264.86 250.742 cv
cp
f
217.77 264.416 mo
214.548 259.518 207.397 256.631 202.054 260.296 cv
197.64 263.322 194.079 267.4 193.116 272.839 cv
192.073 278.735 194.702 285.503 201.14 286.968 cv
204.753 287.791 209.099 286.823 212.044 284.345 cv
215.021 283.001 217.928 280.088 218.363 277.005 cv
218.38 276.891 218.396 276.778 218.411 276.663 cv
218.449 276.402 218.445 276.134 218.469 275.871 cv
218.684 275.392 218.968 274.944 219.106 274.435 cv
220.015 271.054 219.719 267.381 217.77 264.416 cv
cp
f
147.762 263.068 mo
146.045 263.457 144.56 264.329 143.303 265.465 cv
142.673 265.872 142.085 266.342 141.554 266.875 cv
136.985 271.443 137.368 278.515 141.554 283.119 cv
144.923 286.827 150.778 288.574 155.548 286.742 cv
160.872 284.7 163.288 281.182 163.981 275.667 cv
165.11 266.676 155.402 261.339 147.762 263.068 cv
cp
f
106.031 264.199 mo
100.697 260.754 92.8747 260.528 87.6999 264.453 cv
82.4352 268.447 80.61 273.985 83.5788 280.169 cv
85.4958 284.161 89.0963 286.451 93.1364 287.849 cv
96.7653 289.106 100.965 287.832 103.884 285.252 cv
107.356 283.951 110.166 281.172 111.31 277.171 cv
112.757 272.106 110.298 266.954 106.031 264.199 cv
cp
f
68.61 207.66 mo
66.7379 206.174 64.4313 205.266 61.8366 205.402 cv
52.8024 205.875 45.1491 213.602 47.5377 223.108 cv
47.6745 223.654 47.9118 224.14 48.11 224.652 cv
48.2428 225.077 48.4 225.488 48.5719 225.9 cv
48.5739 225.903 48.5739 225.907 48.5778 225.912 cv
49.8209 228.883 51.9909 231.465 55.0026 232.995 cv
58.3795 234.712 62.1989 234.679 65.4635 233.275 cv
65.529 233.258 65.5944 233.259 65.6598 233.241 cv
70.5368 231.879 74.0739 227.224 74.0934 222.164 cv
74.0983 220.629 74.1041 219.092 74.1081 217.557 cv
74.1208 213.938 71.9147 209.721 68.61 207.66 cv
cp
f
134.513 215.503 mo
133.231 212.779 130.048 210.713 126.928 210.07 cv
126.352 209.53 125.73 209.046 125.053 208.649 cv
119.405 205.346 112.807 207.608 109.338 212.77 cv
104.715 219.65 106.511 229.171 112.49 234.084 cv
115.833 238.382 122.588 239.454 127.22 236.743 cv
127.969 236.305 128.441 235.666 129.037 235.112 cv
130.329 234.334 131.557 233.43 132.612 232.276 cv
137.045 227.433 137.209 221.233 134.513 215.503 cv
cp
f
185.075 214.529 mo
177.61 210.165 169.012 211.508 162.693 217.188 cv
159.974 219.631 158.275 224.857 159.739 228.363 cv
161.569 232.748 163.963 236.203 168.714 237.705 cv
172.633 238.943 176.369 238.343 179.941 236.399 cv
180.309 236.198 180.618 235.928 180.953 235.687 cv
184.292 235.171 187.414 233.293 189.198 230.244 cv
192.34 224.868 190.446 217.668 185.075 214.529 cv
cp
f
229.677 213.79 mo
227.961 213.401 226.228 213.4 224.562 213.692 cv
224.16 213.733 223.769 213.65 223.367 213.725 cv
214.072 215.458 210.155 227.108 214.475 234.87 cv
219.611 244.092 232.745 243.798 238.124 235.092 cv
243.112 227.021 239.195 215.939 229.677 213.79 cv
cp
f
304.433 207.749 mo
302.275 206.155 299.703 205.29 297.061 205.146 cv
296.19 204.624 295.244 204.177 294.132 203.925 cv
288.714 202.691 280.895 205.583 280.002 211.947 cv
278.988 219.167 280.83 225.532 287.055 229.797 cv
293.019 233.884 302.219 234.063 306.949 227.934 cv
311.569 221.947 310.571 212.28 304.433 207.749 cv
cp
f
264.999 171.567 mo
264.604 171.404 264.185 171.387 263.781 171.266 cv
262.118 170.191 260.162 169.546 257.929 169.647 cv
252.151 169.904 245.888 174.722 246.443 181.133 cv
246.501 181.799 246.678 182.388 246.782 183.023 cv
246.673 184.615 246.707 186.246 246.997 187.945 cv
247.718 192.152 251.509 195.039 255.61 195.966 cv
260.117 198.372 265.234 197.101 268.957 193.951 cv
276.405 187.649 273.619 175.117 264.999 171.567 cv
cp
f
211.896 182.294 mo
211.813 176.705 208.278 173.208 203.463 171.218 cv
203.414 171.198 203.357 171.2 203.309 171.182 cv
202.359 170.564 201.355 170.055 200.288 169.811 cv
193.725 168.317 188.461 171.814 186.158 177.834 cv
182.423 187.59 191.03 196.89 200.46 197.278 cv
206.601 197.531 212.034 191.81 211.946 185.792 cv
211.929 184.626 211.913 183.46 211.896 182.294 cv
cp
f
150.18 168.191 mo
147.823 165.833 144.983 164.848 142.133 164.934 cv
139.243 164.473 136.241 164.952 133.818 166.709 cv
128.805 170.347 126.347 176.695 129.697 182.424 cv
130.58 183.931 131.942 185.201 133.513 186.193 cv
135.145 187.955 137.209 189.213 140.028 189.591 cv
144.384 190.176 149.33 188.163 151.473 184.108 cv
151.928 183.249 152.156 182.345 152.433 181.452 cv
154.48 177.211 153.411 171.422 150.18 168.191 cv
cp
f
87.6393 153.645 mo
77.8512 150.67 66.65 161.39 72.6725 170.907 cv
72.9977 174.024 74.3356 177.082 76.7106 179.43 cv
83.904 186.544 96.3776 182.097 98.9323 172.773 cv
101.22 164.415 95.7028 156.098 87.6393 153.645 cv
cp
f
88.6383 101.98 mo
86.3913 96.6666 77.445 94.504 72.9225 97.8595 cv
70.567 99.6066 68.6305 101.702 67.3327 104.142 cv
66.1081 105.969 65.3922 108.11 65.4928 110.336 cv
65.5475 111.58 65.82 112.75 66.1999 113.863 cv
67.1237 117.818 69.4752 120.966 72.9977 123.442 cv
78.0768 127.01 85.7663 124.359 88.7125 119.321 cv
90.1823 116.811 90.5006 114.185 90.0231 111.713 cv
90.7321 108.508 90.0475 105.312 88.6383 101.98 cv
cp
f
138.821 115.762 mo
137.435 110.376 133.387 107.052 128.555 106.026 cv
125.017 104.224 120.376 104.236 117.1 106.151 cv
111.298 109.545 110.398 116.2 112.98 121.866 cv
115.395 127.165 121.931 130.955 127.744 130.304 cv
135.131 129.475 140.841 123.633 138.821 115.762 cv
cp
f
190.355 122.377 mo
186.992 118.908 182.542 116.916 177.921 117.365 cv
175.784 117.424 173.6 117.896 171.527 118.87 cv
166.77 121.102 165.103 127.163 166.4 132.009 cv
166.441 132.613 166.365 133.192 166.462 133.804 cv
167.081 137.743 170.248 140.115 173.723 141.336 cv
174.061 141.585 174.323 141.874 174.68 142.118 cv
179.382 145.342 186.154 143.424 189.538 139.156 cv
189.792 138.946 190.119 138.858 190.355 138.621 cv
194.81 134.166 194.686 126.844 190.355 122.377 cv
cp
f
237.615 134.244 mo
234.513 123.762 218.968 119.776 211.759 128.444 cv
207.485 133.581 206.801 143.109 214.083 146.485 cv
214.407 146.634 214.691 146.713 215.005 146.845 cv
218.602 152.08 226.298 153.515 231.673 150.106 cv
237.14 146.638 239.442 140.416 237.615 134.244 cv
cp
f
288.781 117.123 mo
286.646 116.946 284.686 117.309 282.89 118.006 cv
281.157 117.914 279.39 118.133 277.708 118.696 cv
270.067 121.255 267.786 128.572 270.844 135.57 cv
273.66 142.015 281.658 145.378 288.333 143.765 cv
295.814 141.958 299.385 135.718 300.267 128.609 cv
301.079 122.096 294.326 117.581 288.781 117.123 cv
cp
f
259.01 76.7486 mo
257.819 76.59 256.584 76.6793 255.359 76.8292 cv
255.243 76.8312 255.136 76.7989 255.019 76.8048 cv
254.927 76.8087 254.838 76.8365 254.744 76.8419 cv
254.684 76.8531 254.627 76.857 254.564 76.8673 cv
249.43 77.2945 244.553 80.9879 243.68 86.1637 cv
242.207 90.9982 243.063 96.1329 247.285 99.317 cv
249.297 101.303 252.012 102.561 255.15 102.575 cv
256.748 102.581 258.344 102.588 259.941 102.595 cv
265.541 102.619 272.257 97.2765 271.427 91.1085 cv
270.466 83.9596 266.817 77.7975 259.01 76.7486 cv
cp
f
210.437 90.0914 mo
208.676 84.4112 204.072 81.8263 198.394 81.256 cv
196.272 81.0431 194.195 81.7252 192.39 82.9127 cv
190.216 83.2941 188.139 84.3072 186.44 86.0065 cv
182.177 90.2691 181.865 98.026 186.44 102.251 cv
193.095 108.4 204.305 109.871 209.398 100.749 cv
211.217 97.4933 211.535 93.629 210.437 90.0914 cv
cp
f
153.605 78.7135 mo
149.776 78.7135 li
143.767 78.7135 138.013 83.9967 138.29 90.2003 cv
138.568 96.4239 143.338 101.687 149.776 101.687 cv
153.605 101.687 li
159.614 101.687 165.37 96.4034 165.091 90.2003 cv
164.813 83.9762 160.044 78.7135 153.605 78.7135 cv
cp
f
119.441 73.8414 mo
117.278 70.1417 112.331 67.5914 107.872 68.1188 cv
103.85 68.2208 99.7301 70.5177 97.7838 73.8473 cv
94.3854 79.6539 96.8717 85.9039 101.905 89.5626 cv
105.582 92.2359 111.647 92.2584 115.32 89.5567 cv
120.31 85.8878 122.806 79.5948 119.441 73.8414 cv
cp
f
148.819 39.4679 mo
146.905 39.4679 li
140.896 39.4679 135.141 44.7511 135.418 50.9547 cv
135.697 57.1783 140.465 62.441 146.905 62.441 cv
148.819 62.441 li
154.828 62.441 160.584 57.1578 160.305 50.9547 cv
160.027 44.7306 155.257 39.4679 148.819 39.4679 cv
cp
f
192.85 41.3824 mo
186.627 41.6608 181.364 46.4293 181.364 52.8688 cv
181.364 53.8263 li
181.364 59.8351 186.647 65.5904 192.85 65.3126 cv
199.074 65.0343 204.338 60.2648 204.338 53.8263 cv
204.338 52.8688 li
204.338 46.86 199.053 41.1036 192.85 41.3824 cv
cp
f
227.31 42.3395 mo
212.528 42.3395 212.504 65.3126 227.31 65.3126 cv
242.092 65.3126 242.117 42.3395 227.31 42.3395 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (body.eps)
%%CreationDate: 2/19/2018 11:26 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQBdPFX?mtJbfo?MZ@IoPn#R$O3kSM^j16J+^#8^4QD/NBU#MqXW#fd;-i"`k1AM(f&e:sET1M?4`$0BPu1\PaV2KuOIQ-P
%p*5%[Zbu)N?[_hLeTZf#s734]F$nUYdLC3O\LA!"?\U9tq;Q$Oqle=qJ,dF:R<N?d,>\&XK6L1qM=]O;P37OC.E36,T3abZn`B_M
%[pQjprTsN=+-*O3]RKIiYBIt$5(0j9mF1ObPGc$rmpE_PrKl@!`RAK"/D'6<*PT'HIrTs`rT<4j\%?lDY]9Sq(]VA`Eg:`shq=U8
%q=RBpqWe(I>8a++NRNCNqnG5b\!0o75Q@Y=hgbCuLUV2n^4$"Wec5CJ:>Pq2C=chKJ,`J4ONuoAjnQB6\3&OHl046^hWd7Jm4A)+
%m4WYHir@a2mX)>=^oO3baRetr*);Q")sm?r_nUBKol'W]n&F1Zp\FC''COiPKK/=q+<UK$J\/Jo>(4a_@KujOs76%':Z($p1A[O0
%4I7eIo:;3_gM4&fAOUjsSEILE-S2uUo3IB_&5:1(DB."_VK=amo2mV\l[Sr`oD?<#CA2*(T72.eVC_?<c.fFns"@O#0ogH4b&)cl
%G<S^"SFHCt?eiElLKDgZb03>`c+6rjIJrR3$[IKXdH/>GY'r;Ar4eclLSo()]72?,r;+Bn=K5`qnmJ*grJrU]oCT6\+A>jSo"4AZ
%?iAsVJ)cW?)7$l4__B6smX1J$h/F/qnAB-eP:c)GHbeBa\bN"FFG5bA(3m9[I46H=]/S'NHiE;3SF)hoU#s+:oDI?4bd*kHrl;21
%Eq_`OG8[a2^tZ?mYO!F&s5s+2DHdNn^\t1fit$Y=n`:j"4aeq=QnoM+QSGFkm#>)EVf/4,C?N8@=Vg=1G)*iH^&LA^*TUuUnUHMm
%J"H31nS#&bLnE^`:WF'>Nh_&L\aXXQ9NHGWs7f6cCW?B6/]PuQ3h9oR1XA$nQ7lQ.cT#d5E>j;Ds#BCj`+d7:/j19Gamk1./f/n]
%\\uS40,L-t\`cICBH=C=8FNOMi_oZ$"=<(5:;_/3J"28VZDZ7!n5/m%kMW''5G-c/6SHH#iICcZLVj)T8gd9D`^A^75!+3Z1S+tu
%eN).li&!P7rl7$c$efE^3-_!.SP,M'r3)IPe*@,"n9&i!Ih(>$b"g>;S;([ps6*&k;P.2Y.gq,>E#P=q<a)Cj0?,g-J,G!*<'%hp
%AajBMs#:J6M#VTPQ!AEOFTf4Pd/jPkP[mFb6e&ZeBf^Mt2u<1C!$&W]:%,03gTp&mp4[SWJ4?;Y5[LThXrl[AnNTcI>/rGa]]d?0
%+6VP_j`7,:gIXGSH4Qio,A/5>UH8rl8OeQR2MnQ<cG#<7k?dVYPK1Mo_V"JEn8XoQ?b=o"oQ0s\K@c*_Pc\`)';So=pnaeAG/%?.
%QeUqFqogCfm/s2,gB3EJH$Q/3g\G]oD6DW.?q`JL]Y$sq%G->NGLhfI;UL<qKqF'!](4srIaii3f/2aLmAGETjWS;9ql*pOl/1m+
%Ic[Y\k?RJIbL_3H+17a;FZAUBmAGETjen;#[@d;<53q+nVg]*JX71D9+o^*de\CK)rJ>1Zdr>_]P7O#'54<PRV,Qm"?V\N"dkL#^
%[%u/7?VZeiWonWJcV*urP&]FC6f7)/2n5BtKNk8dn*\Zq7/Qje5;*S4(`7VlkYXB&4`2hDo'MKWi-Am7c?NN\NUdtL!lm"bErEBf
%<;UR2?N2R#pBcKHHe`,3Mrfb0[jTIKE-V5705KHmR&I@@4o=oRi\t.[XLF/WK'fF>m^Nd&kiJIJF-mG0**XG7JGc2R[N5gu7OX1m
%a^*=lH<,V[Y.eK8h/pHW;T)A'Gk^U'7[JKtGIcX2)c%D_3g/cgkkd349Dp=#(k_.hEDM%qrmA<"#Dl\\EiTSWaVF=c]*C?&E9DXI
%L+H&G=o#b;D`jLQ?[GQ'G<4s6e^UuI-20X_rp.*"=im&RZL+uH,+$IUEC_P$I?."RH<39fmoDonVse7!>UB%:iWp#2_/e/d-@GB4
%qcO,AVgu)6l0B1.*."fK'$Dia>;!Blf.2n^GI+Gu>OgWuZD'1\.FEKU8*#",7t561.GE[(B^Ri4N_N+@?LM^S]h9L(ISOj-?;n=]
%@g:Z:@8?=J*fr4nGIU_h8bN'P,hKu/kK.B]T7+I`a'8Gc^9&?N'&FW6qU_Y+&BV;D,(sNlXj[rC'%.N(iGo*MmQ)Du+IGf)\:*0g
%apqr(7@PFueo#'0ppVkZ7nfLbUR\*-LW*d>6Col$rA[*<H?\d(@1l';_8`MKZB60Bjk_s)J)TpPTVErHF+^qQaCn"/A(`VsYG>Ym
%3N:04]eZn!Sbd7Wgp3o,a7]CJp\1I_G$LLb:6RVV<>P879fbo<*fVG:5tOUr-6$Xo\bnN-)1bpZANc]h,up(%S8>OsW;6\RBA;m/
%U@ns$-T<=h@@&F`lcBKDjkt,FCUSq4:PdiYPEl-T@+8H)@7aU=mp3LrCC`c];qOt+[r%"EaCpn`-`&gs>#.IR20t)$\-Id8lS_)p
%G2/3r@gI>17Q_(8Hc1#7VH-#uYu,(W9=D4'2(B:<jd_&T].,I4JK<J*OWthrBt5B<\;c;2DU@<f*QPT<aIlTKn;uG0CKfaD.CF.p
%fR'1U;1X%FeAoE@SOoVL>4+IC*D@apcR>pYJL[>Er%6ok`q@rBX?@>C*1;k$X`\]p`\-!&P^'ba;u80S3HeWc?r8@I-!]3C\nP*]
%=]jmA>1bYZ)["-&_Hfl5Z9>F!MFcr%2DOHLDI`e6Q<Z4#gM7Ll_\K@Zo=)-+C_ECW)'*8&[`[pb;2:.A84Vla3hAg->k^ihY2?>=
%ATkm*T@7_]qmQ.HHXMZZlAe#_oh"nVY'W[%2N?1Z-_BWQe7lTJ-B=shY.o<%>ZjrEk+QWt[3'6][,!&Ynr0!`]174jDVNaaJiZA]
%&;luPi5Rff$OLV'@p;5D*?LM>>W/\J(J51a*%TY8$Uqo)qm36>e[X7tZu/Hh*>]\TGU(G/3eDqZds@k63$Z[HXF&bWY#c0#5)&E^
%g=D(fSR64OQ#sj1)1ZW=8-T&B7J7`Nc0p#(EX5q7IH?!"(Y&MOJlF@`e1S8OX5:-mL,RMoLh]k&grB#RkeIO6%]t^I3?,`<rLS?t
%C%'PTkikj-'q5fk%okXSc$JKIA="#@#YMP.9rOXjjEjCmS`*uZmA[6I_BDm=Q_MfEDqI<`gi;;5XN6)"<Qt:gMp$O_KEHP/=gh"&
%#Bd7N4B@G2='[\f,u6)I7X&oDF%>V)<o$khCt(@:9%&Dn)O[T*>$7lu1)jRb"2/TY\,"h-S[Xkqgmq0oU1d,mrIcXpEp@u-g!?u5
%2X=u?(fikpHg^WdmB!]:>t)(0(_W_1gGlqT.:nBP!e&-P_,Q$<9q<\)CLPo&-nMs(KO?G$0Lg/_*>)@'YDbsHr*#uPh"EYLQ?@u1
%@dp??"P)G3hoC07-7m>0l)(kiqt?!7UkM.B7a<@ZnTRD49Lpa,[bl/ea(9R6Q^Te:!*+>u5\,>V8\XMYYC#*)G,=6a5$La&#J;V&
%<rsm0Xj`NoMZGJ=#)upJiW]-)gZrXsc`&^t>8ii#kRg1s9u*;tg>HfC5PAPZ#J@k<:+JE/1OiFPd#)q?0m%\/,FaD0jilpn.gFTr
%:'^N5a+^A0g_:P>%3XUN##sAicoo,D>C<WUl6fu87?I2$HE$*dR-.XUKs#.6H@OKd(R>=\-!>qH^r28P!$tQ`715e5798*K=3TgD
%/F(G#1D1TbVA\$^gF^Zmaak29;5U47T*ed4`m^1LWeZ8WG;;as`"1*(.n1jd]I=&2E\g#uRW!*SD"5(D^m2`ZMSdI`Tuo>'EJY,^
%gD4tE;PN\CS%_4rD/)J>>D^Cc;VW]V_,VB)lO9?$&=*[@'(54-S"@5AbL27%(V.;P6CgTR,$3RSfTJi>"2!-/&ep,d>d0n[E*nQU
%:3"YN)7XUK>P*2g5G1dd)/%I'af'p2%+k?o2&GZq#aOin=Odl8CCh$qWoX;mXE$8"G$AA2gN)`@T-W.2knD<[A<Yg=\o_->&_oW$
%TM6"SNk7Tan+YWX0*NY&%($7@[e'lYK,_!GNg8JY@bR;j\Nq[iN%n6G<n`8Da'3W>'=;Itc/S+50=@aeF:,pf(BPjfN*Ydko.k@#
%pBiB"Gq(0Wr]VkI"g.tSXE'OW.W=<dgW&FpoqlWS#2Um`6RoY,bQn3$[RogK5m9D7[0\A-,#Go8fQ:BPF%c0c3/,41K@n7W"Ys?/
%EtQnpVKl/<]da6(&gN*0Zd#h`EG_EXEmh:Eg[j4G0s]s"]3\8;W@j#skIK1p<6m@4Po:-Fd`qJchlaOrd=>^!J/?U[Ck.Npao/',
%Z;d3:+WKH[>D@s9!"LDI/!X3[V^CAk>.d#Q4doDp*+\7j1=e(kV(NS1Ls<AjNkl>)eBNG\4XX7\MJ>OrTrPgpaQf"@GacA":Lt]=
%/N/$:SMeL/:qWOK\+p4`e\"d^iBmQG(:?mgT=q_pg.0DIBA[J6,fR@T*X6iaZgJ6kCi7ld'h^PcF?@#$R]=*sRJ&f=5j!:F"@&np
%C9"7RaPN5>4iK"&RZ-dYL>>__dL9(a%hmS'`iF$0ON"WtYY\R+m6)ua/?(4BE9V^MNn7FgIc5cX\.(45B&]\2&M]/P9l/)I8o1B%
%K2A))BjLT_]$7fDe(lif$G_[K*;<+3II-\1!.,BD/,0%N+*QD^he)^W:"<O:<6A1OgUl<VrICJZ<7&>(]IDZ*O6K=<9].fX;aBA5
%B,fumRI1XH[Tu/Fe?$f1gRP_+*pp[d$t\k,R'"l$21ON'2E"eZ.Nn9:SZA'R@HfmSe\13*@>.hArgcs8fJahL8rIld'8sJ99Xn.f
%2SP`-lT,Q$Vbsr-@C/2dRK[8ka+@u+)Fh-4c%[YuH=;R"fro&b)QVUH_i'anrr#I:VEsEV#1mW-^!*MuZ)*1`\7fYrhI*DtaJUSZ
%TnHW,h+N&WDkDA=Bo1Ga(1NuQ:7hWmh)"=k]3rBK_0f/W@Za^hh)G%)*@iHNQOJ6*1+la;LYEQVmS`PB8h*Es?qI(cq\gtm6sJo&
%8QA465'7]?+$/I%HEa42L7Xp$aITjW'i38on(0@q*-Ek1bXC;se0U]\VeHl9^!<=dUZ7&3BON&mKi4lTI&V%N$-mnRYR;J';S.h,
%.cG7_iLBOf+eI?P*)5bJnPtR[;Kk(hFQtTn&r!^EL^/P\MAb%l=XPJ)4(Z[Noenl2$i:q`6riV+5'LkkFH2XZI%,@1LtQn7+sWE?
%_C"EPGMOm0:%G^;4(!*46(p^jhpAA^(jC`MC@K#ZN_bCboeD-.TLC[R3aG00YNNC,4SEl(-SO=QNG^K=`jc'p_$[A]CiF*K)%s[3
%1.p=rFXm&3/5<kt!THeMRkUm/@S;]lbd?,:e<nr*Donubfj99!*TYueN$S^h$b`]5X(_d--G;+[DeRX)nD6&"BHh;\NY^#Wc-<X_
%=>)NU!R'\/G?SYrC[5r]l`A!>_QG\E%Ii2FmtN5e.IG6]@+*RR>#*p./_)hdMrM76QI1&M1:T(OgYYFK]iIRfo6kHcE4TNa\<4PG
%e9P>h\87gF:\cm-V/L**^1>\Ue7T8XSl&kj??F3a*Nj(`]"1VYSCZ/soY=d%>=FI"BT/C1_d^XA2=jX-UaPK9#J>8VS]kOoNgF?/
%(A!KY$T6/:N8UQ>DE+VeP:Cn*@Yss>%+Ca2(Veo20:Go$h0JAM](Zd&9>F;lU%7P"ffJhGm)c#bBaIW'rpI;@>4JP\aPG@Mj--l&
%dhq_o0N^dX-ej2P,mNo39L?9`LYhQBr>kW668)kZPeG'@Den%,]2QT-lP\;ZMLNSB\Tsp;$Z!.hWFOS>G7.T5d@O4=CmkUeOJ0:u
%c$5.c;i3IP*S>s`K-!`>ceaJRcWngJKa'n%+t`oma$kM`5NBS&nC*Z`D]'"M2mG*tArQE&pi:6f)YHG]kZ5Q:oj6plrDs]>ro5%W
%>LIfGX]<YgAE-T14l6jUR4/O4\/FY'q%eY.\EO0Pl).LCWh+VT^s1Zs/]aN"nLBQ)H!ZtVC0&:m<^P8[YLj('[Xg(5'B@6?Z8R*!
%WWFBUam6)EmVP5Dk1_k*d:k0DX?Bu05q8tre73`O%-Z,jNg!4t<G\A\b=K7NmZtLq%q8+il^@1#Yl_.RjKKMLg`%d?h!&M8oc&'N
%F,6Q2_ffiSA=L^h/`pS";ruH6DBnHtPaG;%Pu'l-=gMeq-OiN#oF>-\N/]ugDasc0G:sr=S)NZAO__h9@R@QK9gF'k4*GpU)qMGd
%A(/&CT$!'tcENH@"_6t'j)T/JdIqTjV3E\2Y_=]sK"1<'.S?t9lWt:t4*'S)>[Wg[PO8V*15H6MiBfpb_a%C]K$r=U[pDgA#<F;f
%0:@PLl\0TIJDb02G%*2\4W6Y^,1>0a'NLu'jWZQXdGWVn]gE77cB^3CVm>MTrhjbI,nY4\>PKH6`7DIdCC/YBIDMkKo/Qq2JSo`Z
%Y7fWVp<8uVgXIj8`Cg6&bfA#U3"q3-1i-?HI`XkEo'Ae``\X652Jgj>Vqqj.lY!_cTC+h;l\>Ll6iZ@IUY(doP%ELu2(I.Y/]G,P
%\(7T]N4T%,"(*Agp(YOa2q@),N.G+\^!i-[@7`G\'BKg%>2hp@J1gV'Kg.Q%@6'?C2/9l*rRKqM">o`ir/!m(@GmgP''L8LC,F(>
%o@u7,-[k!l_p7#=n&js^T\agoI4\g1Ldohkme\=@ql%Z!?A)0-"LYkuEECA/ET^rUG#;BQ<Z^JXj`]k;_Ye>$n*B&32=uAUFk:iN
%MWbMmBFrD66EBI&G-IIn6B#ek(X&HL@'>''^l(Jd.m^iUOYq'.9"N7VgW`"5am,"iSgN(A`<MZWBLt;X?njnN,I]*Y:>AM"Rh[;c
%8.l&'>Y`t8-7bj/:";OY7E19SM-!74Ic8^A[>eLFGgqKHORM1"m@rdIS;,g/l$D_5!O8Y'/;`LD5<DnklR1:n1/Y?QqT:Ek\7cb!
%s/]K974k&10p+>Y6KQDf:#G*WH`cfMf,X2sHnLbP!G>&*?D[O`jJmXnVfuXkojlh2/!F#18b@u%XLQ[\+S-eGIpT:jGm15\MWiH!
%/X)&1eVZ;_l!kr<O-k5;),&t)?r4gXdoG7(c\7uBj6P@pIL.JW;gaJ[19%NDKRBC-`CdZ3RMVo\I;,,--QUa[1SXTm2XJ5Uh(NK)
%$TEaQP)#>QYpV1h:X#KcK5`]f:-kR$2o9QE0+=.E[E$[`(O2e"C'O$R78Ea00C+(DQsIV24iG$#kIJro&oW:.mm>5Ld]')VpXHrK
%1>/kY1])Xlc=!=rk=/6u:Tf>(ehX.>jtg\u;Obi8O4C5:LA5Y3SX2R5Zr/(!aMAW,p87XP^0d3Sd,/$6iH54_,Go@"$2Y2/:l)f6
%k>B7]qJ%gO?)XNm`"QJ?I.qT<('s.[QPN'S/It8(\-k[gjKr*ZX_5t&8eu#u6+M"uF?/9Kdo3aA7[dVf3T?p#@I8tekub@XA21<!
%joXMU<?ftm"YHf5b-aiJe:ZUUgD86X;-_k?SR88J:Re><)sq7\>e=ljC2ODlN^gpn%.%*]GLtEholi7q\#>b6'!KOn]bS&->`KpK
%Yc9SFoS_9jjRf:KW]o<YQ\TFep8o3I=fZ4Q&P5t=//(1p8.e"\$E:F9];:n"5QiR=H(/JY-1<MmhXu<7r*S56o>)3i&@Md=2"KU/
%;nr:;hq!\:0t5[T<KkfZ]Y09m*4uR[/+tnsCR)HBI!_"P=k@QDd8<R9=]\[Kmo2P&4NHQXmf'QaX)CiE\,:Q"r=YBS;%$GUjaR$f
%oo%GZPu$-Vr9UK][m,?A6jj"$iL@T3/JgO!Kke7r^A*'R/:[9QM]_&u^O,SKa7"NVl;+UUI.?h,\$,gV^\_sDcecBboDF*oJ%PU6
%+9/8:nVc5L=m(,*LGr#$8K[MI4m27toC%2!NXd]qT"_bml)/PRs0SDZ\c-^NVq5in[LT\;r9C3W(U(UB3nEmDe)QcJT"]OIB#bEs
%LVJ-6PC2q#k,EK['CXiXj.lI`J+LSP1+hjHkH+N0i.UNna5#r=cX0t#_7$7[hYuX0Rt&G0]m0&lCQ6)XF*IX;p[@D;X+.j5qs;Yp
%5"k2Hp\O"#[t!6T?JN<lp4k[:qIc:+bdt5Gk/iZ[?bCX_h4(>"s7uJsh;QV>5Q#g$LY&_:eD<,JYBT7rj%$WM0fT'rY:oqNqSi%J
%?Imm'/RQZm4Fd(ari<g5nFlj$e;%5\DdND1Q-R_K;j7sH&$UQT<j-ePdJqtXX^8DX-i*6rdTsS5`gPMka7?!OT@3YPiE^8^cegpQ
%c$P(/4a>7RIsENfi&B!^pl:>kC&ZTQ=5V01^\[Krg\\E<?bcL[mrI'/p#i71hfIu5R:!?S_`&deHAV=<?Tp$agpB/Ul;.5f2c%2:
%0%0;l,%@-m.oP^+mO3SAKAYSD^QR>f\*o(-\3#*8jGSM6o#5PaI%L:mhcuZb9&r)30fYNq9.0ttLV"CDp(KY!_^rst[/8N8LGtj(
%PAW'9lNROg[?I0SZ*Q'+V2(W!Kjj/!!WA\dr\kqPc/FG=)G0]L!sp&4N__D=*Q@!e.+X4B"sJHkj.#LEh#GXeGAj(eq@7Oeh6J<?
%@2Sq_n_4nTErj&#oB8>diu`Ob*Q]U>56d:t0FnX0)<Lc\:VPK%I?7smO*c#X%J*__dsRPWX<+"s3![)PA+m6mA'!h\b(hMijHO/G
%ZHk./R#<[H+\T(:V_fa*.-3G1EJW%3bcK#1iY9E][SV'c5S64@cJ^%h0c]89>D4&[*$J!r&9nh7nfl,"3m&U5S`WL]0h%TdNH4f.
%R"k,dT&gNk=q5hJE?;G+Bp9Rr,ZuWNhen\C)$bZMEL&sc"Z['5m(GNWcc'.IaL@=BA4^n+&\KHG]=>0e-TMYl@0`27H"nLZ,Y-?n
%&l*=s$_/.gEh%oK*(Tfg%!t!H*a+NE,7IL27_Qd)0E,=]NXX.^_fn=*jMg#"emQPWK(!`Mq0`H9b0Qj\J!=Gm36:jn0HXgk%nVe#
%LffDL-jQUP"2;irQ34[S3*ceWClq92&H]jL$gj%%k)13,TqA)"3"][FA3gP(%4N%NiF*CkKU.X=*(WkP(53P\LiaAQ_"%eS$%7BA
%nfUnT(/*jb*!D]&J:_G0cLQIJrt>YCU`oBnYoIIK6PO<-..JjD;WCWg%iBblb9V0IKebr`7\-2J=6T6R-ktQ*Vm\Y(-iSE^O&"m`
%b1%GdZQ"S3U/9^_SV:H@U"!52lTF1/+@2ml31benAFE3U4OuV8VK3Tk-lXMV%QfBN4PqP_SR`LrnKKbHb.c+UQR<qL-bDF65ejDI
%7Fl7=oh3.6::&0@XRmnkT7mo<qpYNg1ua3uP#0P4B^..Uk@=rq10$m](U%.)$2M3^.$GLeONm^KVu>k!3h<':fhUQfn;-6Qlt:f3
%SkjCjf1!-0(C#E/+B&m#R4j?`3*ji&3,s'F/eEhnNrpR-0hju65oralPf,I9`TTQ24HUW2pHV1Q?8.OY"6]kur8\5/B70)X1(GT#
%'A;IN]:/*8F$!'+Wh;(9Qci.^HO\,^SRaN^3,p^tKB#E?R3!*Q!O34mDSXMBi)[h*4_%-+HElGL1<JK'/'+^0AFG4dlu<''?&g_6
%@;m;k!9&%*#a67%/-QeU*W\Wk`P;X)bkh]&3e5B[Ih^!Jb9Pf/bC]t]Bu36\11=!rWN]4:`K@J62m,e#qj&)GI,SSip5sbQ$\A[3
%;o]#k_./#**A//RW.F,PN$MbX$/JKIA.nKmWQ)l5TK$tUSk)Ma27T^IL;q6Q"qTMSOT6oA%$hY:FWb0RP!tm,@pg<D6!tmu#9l[Z
%=E%bTbZA#1n]YN2/G+K"(%ub3""WL+ZmX?NbUnpe)>tEVp,$G^f[JeM3inQ:`_&i;Rd@#YcsrnC?R`:Y8YaG"/dl7El3J[UKdQNA
%,rTS(Bq9p'][5%K1j'RC3=;&=jgJ;54j)8M6BMgI",.1Pbb5</F:bQAQ>!!pE>0m8\Jk[oT&M#p3%8U`+AVt`jB0nC#a&F&JbY=h
%b%s@glt%q-Kgq.a*[rd:=<(m`+=&'L,)(Z,L4LQ-6t*<t(eAlf;cQX6Q'68d9_Ln,M,[,;3^3kL,U];<"'(Lh<0E(FM,T*r<"16$
%LSBeo)$r_HEE#8(rD;#h;saiZj`!Z=36??!U+o"BEci.T^FFgsdfXfk#4dIQWW_``#Mb^S\>B%OA4NYAImb[#8UHggc%rGW*L0/\
%Tcc?aG_T%Y^4u#M)M\p...[aniOrg`%+eOqLL'qO#/EI9HM-plrO9E-8eYeOB#&#jF<A^D0MTKDILq0Jc*Hr%_M=]G#a=a2BF.2f
%b0UeK+g>+*m8S4^-tIT7&j;/ei.Q?-OKgJS+mK_`##D*(<dPCGU$QkF".cDQOBi4""Ikq&*"uK7JaDlBi`A%=M-h"3-?sm2CEb\O
%<bH6/S;Jlc<*>`-Xhs4*&\Q9MPgq4h;g,&I03,I4(gh^MO<1.N-mLQ\fT(#5/p9L)GDFp:KE1r#0lA&]N?]tbZI)lH]Qp=-L\,iW
%Zi"6eo_A3fkJnRjj.jnHr:.><>A&&dN>%m=dcrNhEYcAELg<(dQ@YRf+9Dn_`R>/cj=Wq7CDRS%UPQKP%O2r^M#:5^bXec[;<ajU
%=4B=1G*r]nJVr6Nr'i\A+OA0j3`OWt=IZ>QW1Y%&Bkl=pWar,kWB+(FYtbn+.3Lb<:fO\u1C&deB$/b.Pd/6)HBl^7\PpfI77"h2
%XN.='AYuj!6.KhN-ACbFS>Z>9Nq%[1=rlSe+Eo(8FR)JY5&r`\a8DOLr9tjm^>k1H4W`G>UVEVF:]0mXUW7RuP`DAH+`gbp^bf;o
%XW5DX6lQhh&k%T%Z3<[#6Yd8adttXVW4-;P/MJ.bNQ$a/@`M9_,]q!B1c+VZ7kpU`F-Sllj0=tsk7q&9.p#T(!EbZ($pA5`Rupct
%MfKWaJ/[q(\4edYKVP>s!B=0ZaS<t:O'-Om"ijJ'C;G%YHtUEL2NAO8.@B&R\C0c>j&FIe2>;Fl\BWLZc1O9aptXoE<KI/4po>p#
%3WV\k'.p@XDPm>J0?+!2rX2L;rL^`>.bnm<^YgLYPB&W9*"G#.-BC5h]u_)6/1RQMhIN(==CtrW;0X*>ag'lM,P`?:-u8ke_Cj?1
%`e*k1.P!1Y!-;EODFoo+kJ60l/[q-5(:bA-/9!JQg(KYi,)sM@Q#iooUc^+AR'aMOR"o.)b#aO3fH.LZ2$R)4Z-Mp7[3[X1S#][m
%^#daJ5YLucXke/-U']lGZuMVFO60Tu4?U;7O$0A\*7ElBc6E>eW'blYoXXuLok5<K3HLO>#fC`jQgs(\Qh*e7I[84iA.,utj`D+J
%!@/RZe&`714WP%95pHD,8+72=k=jVk'(c=f$,@3n-brK23Ygj@d9!1fVa?mWi*:f%"kjZM_SFF:5are(8SGF82[d:oj9oiGKfBP&
%<1$U8:5(_Dlr:Ld:qX$#TI4,Cou0\kN>3K<!7VaeXSHF'`A`,d*4f4[;1,aMph>"PH>=mV^V0,'3CMJo93'Y_kIUnFWeYFCK3=/`
%QqEY0;$'ImQT#[eD`aia(`16hbI']`X?PY*i@['Lo7P(TUrV`Ia71m>o_>BVDSTBoL\1B*F8sSN&J;UH3QbupnsQ8#jsZk!a3Pae
%1Iq8b;*K&c:Y0+8-oD^Lqrd>'a+)/IKd9kZ_ga<Y>Wq1'\2\,Ge7C;>`=7Wth=tP+<8l<u#QMH,\T9"4"U<q&obOT?4#=H0-XXK*
%\r3^!<S7/lY"@&3n8[WH]@"r=ER">9]4MY(:`DS^T"s0<-ZG"%@Z`C#$H/=]W=:_4X8.3Z[&Si`a^Hd<Qm:X#e"^-Yf];`(q`EDV
%*fd/P;aMJr"2D$q18S\3&S7(u,bd"R:l<?(+h8@dErF0.;1=E%1ghVTKJTkdOf\HaOpg5$H1:D.g)k(bbN]lenI[qFAOQKpldNlK
%Z-W;]BC?LM&3"HE&8>KgO@?rZ-L?)R,ARp$c@gK%(3ak1"VKt;/M=&S,Ij42XZ4`P%enLA=B@do6Fr,&<'WCkIFUE_!eFUdXA8;U
%L>o.(eNn>0>Dc%?-[6R:gqs"XQhEPk0Ul%YCJ#R^M&73=bbc#^W\LPeJ?TH(d9r59UJs*?<IrUlNDA%!e7EI]>iJX51A*3QpWV8h
%NDHqfeZhN@,"Au$;On1BX>m>2S]c$#R+3QkS-M'3hK9m_1"@Mu5\#db>orh,R&*<4FmY4n0"cJ"2NI>S4`5[RDB62CZZ_.%Y\s&n
%4u?/]F\%QpD'*tLmdY_/>WB:DD%:2W0)Ppi39iV-(K4j0NX#BO(qMjEm\B\mVMe$u,8Yd$iF;6I9Om6R8(4:=!li*>%cg4Eb*=dn
%4'AKlj0$^e[^K#':]ghXY$+0q4jsfd`_V4g_)+9?i#I`?T%%mhgueLnBJMNWY7>Q^RFLV@DJhG<?#_QX9MeP%E!\.r$4K8uC*4Vk
%@(!tN0)cn^+.Te.ip`#k,SG!.nb<l`Dc->MrKID=)PaK+Y"/*5(Ss]Q*rE.4WEb`Zjd\I=Fd8$1n`5VW\8b2$O78/S8rrMi8(orn
%qN)c%g)`69G9>8n,L1V-j$.aKQ7t+BC3XI-KU3PIIpBc^Sge/$h,'mE/]Rfqiqlr%5@aSE47pr!O,<7Bi6p8S*hHS&f-[lc29rs+
%qJQC-%9CoerrO[,5.?31etA0l9!L]T9/u/C8eSkoTVNlqZiqYMEibt0%Q'=iY9BYF(>T%I<WGsG&.Ek):idkuaN_mqH<dkfr9,AB
%*Ae!cm"jDOoQ]D[%mBnJpUC:1O!9>M,q?+/%&*tKa_e=sk7dX8GnAO%`(VH;+__])Ef`*[Bj^X1@(:l%+'J#/aZO#nCWebbO.;sm
%?X.._>q/q00Ck,So>ks5N'A`kXq8,4.AfVU/kNIHWA:[);H26SWgTPBRQ_bCBrXtC-oo3QQCj)65*gle6]$Sf$\-XdlGPq2j`Hr)
%4V]Z!AAY`-TXn)$=*UAZAkJK>d,Il*ej>;SUWOq=:nnnLGGOY_X!=^+X"W^Wgc55V_nG(Qa+!A@cMl,LaVU""Y8l_L+4B0oc?c,C
%5BDkn:;bRhiAO4ChD="Gb9i504<WsP6Imkq+"*[pYoh)I?nfgc8\bUBPDTO)XYu;/5qGA;,0M&V`0pPg`,&U7(A>tHS>j7Mk#+\2
%;hhT36p2+K9gq.^W)a:&/cSL.G9X4P)SB6oPgjk1CI6p5WA]KIIc6$43LP2PeM:im")ub!!OYaS*A&D:gf-,@@in%h5[nJSm8t_1
%/48tDBh?e`f1AY?8Pn.j;qJ!K^*HrHm.hJ>F',0'L*"(LEIQL_4hgNX#ER@1O<1UZ5484$j80hbj%?*86"FsVQn^)%`TTr]l&_Z9
%JDpGP\j%ogbq.]?2LK0KS^V?]CO_\Xr%#CPr/HqAC#<?`%:S/<(-Hc>=Z(nb3n\)0:=1FhTR_`8fU>^C9WM8B=BI?11;RGfdOPgW
%&;BXHO+!J9<>nq5WGn/(d=4W&o?8]o#5\'D/Fp!lUFQB9L02_O`,_T+#->,gPkOHT<jiCW^qdA+0eMl?Z4'UX^8ZIOL^VEqj+bEd
%"c:MU!OJ\)NKPs/'R>8L]W\/e6joTni"1"_//ft=HRE"NM2=a,iKG[[:6Yrbj*S=ZJFtIN^eq18fU`b7s.JH!4=$6f).cidb[rG0
%ZAHc\%fP6Z)X`c%UrS`U^,ki8Ofj^uE\9LmWT_r+qR`$aU3p$"9bE+GO5g-u(KKg$:s_R,a@mn\8spYn.AL(datgF@1N;cZQLu`\
%=:/?DWedVm-<n3_@/HsMV,I48'K&P6.oWFm<In=T>#N>;_Yb@3a)^%=XN.oNLZV-13KL^3lfbK%)&!)QDKFLMc=tnQb$;N@1)$AH
%>"kfXOZ<M[()9iCATc><ig/'10rM0f%,>`!WTB=:R@#5T?^FY37SCY;CS*`1B\*"idEQ.po%+IK?HB^'@Y$Bs0>f@NWKuVoEE^q0
%qs[?Q\HnEt7_m(NhGZhCQVIdsUFi'JNft=J>Jg1<48='bHGb7"YPd#&j(VgrgH`>ul5"-C%5q):8=/>_4LOQ%`*jT7G8i$_%:p+0
%C-sRhR^on<A?3,?'rhEnFr!cX>LjRJfdtB?dH(&Y+u(TYbP#VX7:-&>MP)!%Je<?=8Ql`Yf8phBCC6oJhF*U-*Mm"EID\D%%8&CQ
%l4N3Z+de:_qM3q3IC6HRe/^uI.2^Y0YpBu5_0rCTKpG`.OrfDEUZu<cOY)V!SN<k5A&n+jj3^jQDWm-'EG1CjlmNT1>?Us2i_a;2
%]fr7c8=rE%J6I]V*k6)RFdd^:$liAI&RGrTLo6udA/8/:/7j$kS*l3sU:La%5*0Y7HHXB=M6_\dZQ>%m&m6R/(&d74nqcR\cq6^k
%@B_d\:ntB)&\S2hOYq5Z<!d:tctrak_EjmW%8Vo!L8eiJ'/`%!9BUSb(AZfoT6pLn]>oCI$O<MKa'ri.9Y`ft'V-!T5\.fq<.$<P
%8gaDOOE>iLV$3r&aXk%k2Dlt.0bOPF.LMIe()Y]1>$\+(a7;d'.\0$s*4fS]Xo@)i"07@!;KfjUc5i=3>O'K'E2D!QQ6*9Kgld.k
%$_+BWSCf`Je[b"WF1t\I)f$X9>TL?j5`nG/:od03M[T9,IDPTgMKRd)MR7'fA*aOACg5lC#1'ag<aiX)5,&rd/^r-ar55D4r47Qu
%NMG.2TCC2K4%k^;==(9<&W1HUY,g9B\nEZ>9V&`ZgpJeXs,tBoHr7=@W(piF+WDHT.]U,61aKu'/`su\n'kos.D\K"\8nre"oE%H
%@]2eu8$YK?AY\CbU%Gor_hX</dDs#'SI5fabehc6FqQC/f5(,E\Ye*4[?V`7S6_8bOLC0YO\:be<r/]]<fVBiemNp8`ug@56)V<a
%Y2b)SU[-qE(@i%BH>H>"c?eVhi<_*KbntbC!H&o>f)XTcC/e&Vmjd:!26,;_jjmU7V']NL(R)E[0um<.O,CB8>PZUTW/7EKjK\dQ
%&fFf<T9WD[(SEonq:W"\Ip3_^4k.9VFV.eV4jZO&e"R[r$i*e\W=Sni=YSS[n5hu,i<j@oBRM"+*rr1J]@qSO;Rj.G#ejD+0Fe9j
%>K"[dd,;,8%:4boG6,N>8l5"E@DUQH_)DIJYC_@EL'!\S]8o!2Jq?5X@#oI1/55JAB5fMpK57CC[4AJbCj>@:CX0U&#Mop!>OTit
%G";#+m([jPTW^trXDkVN9s^o[Zt-E,W^lB48_*U&*Z$LqJ#qE/c"XCG(.sI'NRIqcfK(''!VimF["KJAqRWZAh,N@]LEEoVecl9J
%@7S.E5N./7=0=m7?og31[IQ[XJl)GZ-+Z`pmOOg8k!L^3iJ%SE3_mF`hC*cB*8Qrr12.U=H<n&Uh5-%5M\k+RY6$C^AoB.b8R:iI
%,4r/K]<pE3+EenFH)"X;@u=99$7,K5<@T*CK4<36kReE;=\5uSD!p,)E\=]Xn.a5@R`ZR>2D`'2]T867,t`r&:=^->4;s53%ksZ/
%d4-h_b7RtAFFDO/+,b_t^BoKbo?+sUE[J.If:eR+QXV4SBs-)'k;oS>;p'/U1eVF!*(S8CW7],6r/:`cS$QQ9-jE^.2([]@/rG6p
%f#FOBdE2_1rU,NLU%`WqGMRK#msuF^00(p/!n,bbF9$t,cLfJDH=ZjG\iVcs8jfN9"8B<2Aq"`tg91]o*EW2pX8^^HZ+>QNb=5Y-
%1^EHt@8%a4(%P!;-EjhtWs8l)*W2.c6FbkQ+4H/95sOJlRCsT10Oal79tH[%k8&hNh+5FCqot)aO6Yk;GN?7SoJ*Y1q:+fQ'#U$d
%Z##tXoj(ms;s3hYElY`$>Dm61l=<g;D^gR@*Yrn&.Y+Dgon>!<Q25-nSjaE!D"54f8#[m?2,RL$Og!c+A+:6),r[CGGUa<GkCpB1
%UE*a**ict?,99O,a\o!tocd]c>Tm,[iIH+fR!/P69_&ng.c?"9Kn'cXe05k6?ZIt/+$'a)_TRlZLiIYF(]I2EpN$4DR<sKr+uL-J
%Y(\&gob];%-XJ'QoP#J,Ulb$#<W1[Q/.KN15U,&N?.1u@We[Vn>'lT99@^7'$qm:E5RHPc<YO>hD==p-kS_M^Y0Q\l=%D(H`>sU:
%<b,FlFOaV`*!/1b8RMX)3Gm\(92qb.<#VJt4QX[$L8S!%AZG27R-/n::bFWu3G^!+f1:dUG%t:#;7%a/AIQO-K&Ti'"CAN7@pi>V
%jNSo3E5ZojO)]08Rn%qckR:;PEG:TmNeKVYE-.M,dc5>b.QXY_SC=`G3QnG@[I/!P[8bb<.uCE*fU<NflI!GP<PLLpXMp@%AMr%K
%>_P!cK,TcP$:[TGaTY+8M@RCFbAh`@TJ&1,;^ihc&pUh9Jk]9fZGS%[FZ1%mddZt8UjL]!.uURaY^LO/P+!mg^^I3$k$DA4Jp4CT
%P@`$`U,BmGnG/0hMoCfeT"nePe#^R<_IAnG@r7#^GaueqU)+!UNP40<&\XRn'*GY<.'*n3HXmX>`JK9s7d2@5C2A8$V"Wa7n/All
%rU]!]kW"6nNL=4f;7Kr>*ZPk_oM@A';)34J0Yfm9nrM>pihj!tU$MC&="0k[-'V>nMoUOjeEj##q;fL!@0pMunEQGlQJ02Nb=bL1
%piTf$HfkN>0kEBHA;a0Q=4[d/gFF^B^':JO<P>VOii3Yo:VPJ'"kYoReh<l(ZLPuS>JV*DVM"TPEX]&,:Y5N1Qc4=:[U,>r&8-?`
%K>%9"1?\&43;j5(m"I@bAMs2(R?Bj3/_h<PbG*0mPm&]:ccU&CFY)dPC/0IPH7B5l7DEIAXJK2cG#nRs=DAQb^)%Mg1rHs^V46=e
%FK4f1F.EuDG9\t8;X[3j.dC!),paT/2plcj:K)bsS**QFb6X1OIH+<TWROp]Dk--#7'M'n>k]-`Ju^IS[F&#N<D/3a<`(Bdhd-qi
%YMV%VC=Le]R*e;NL2M,`B')o3b,ZW.8aD<+2&']g]\(]2cFN,*h.SFTY)5YP*C,fgP_QJ)\h^rk>*Vu$;"pfl7:)pip(AoXGIakF
%HO&ZVDqjBoL#]@<=F6mPXi#-BFQ('u#fQ0!SUmB9A?Zg4SUqV6I+\13!Bch!9=q^F$9OTJj-qRdGMg(<bBL(:]BdYL0=4./.*(>;
%4?R``LU%TLbuY*C-)K1!*2#2uj(t3tNHsho19g;Uq+CL;q?d8X0>>*Y/XIT1,@C$(lH>O$eeBT.WI2m/?g>,16JkgP8m`43Q)2c0
%;i9!OZRX.d*+<:[(=:U"P%(.jQmi+ie`D;t`L<c:`_nOV7*/aR9;g)660H94a&=cVpGKQ=PfulmF]Ta(-"(s2nru4cK"#([n%<1%
%r^X`rZHmnIY=ef8[pJcN0n_W;K"#([n%9>Erm>YtUh$)'4#i#/V6AB4&n[L;0Z9,_itYB=2"@iXYQDTXRdc046#!%^]SEHE4m2pr
%^c0Jd13rpX#Yf\EMI7:Qqbk?[UPZ:.r>PC1fWSf"P5SSXWsLbaX_>Jaq_dbAFg9-eFfd/E>h!nsgTPPqQJ6kBq_deC\ZE,N-pu7.
%44`*u[bBJYEGi<u=VF,4LTPm;mVV(_[I723Ig^//r`\4!BV;8T>>F:O&pd`#KHu6eKI2]eHKZfPdDW==kVOY_kTIt[nFa)$R/$+$
%H#Q\1=N4tOchG-&hO'deXEHU[!%o/#LT<38M7ae9rVKmpd74(XAl5)$b^05.=0VG,l.-ZR9;Q=aTfQV?"'!?NKn!AGCPeq)^-m7<
%MfCtMEPJ2(/sW`A1G`Nd1Yl;%qEl:p\T>=XqJN3nKP)Dr""Kb6G._k]:9(U*NQdZmNLdZ5X,=G%s4`mNe<./d>sS83F(E"F0%BVk
%V%PMqkN4dDCaX*K*M9?qhN+3pifiV,7?4[*gdc'Y.ug`lXc9KCYDocGERS3P0Yn4/hji+r:?.MLf#`o2H6^V<oqP`On%>YYP5?st
%q4cs1\MBr'EV:V_Nn%:@h)2,%H'me"(8`rF=&I1=V[d-%Pk`4j9&ZAY=#M)B+4CZZ?t"tRa-t7iIJC([/8_\uoH'OHgiknTBq/uW
%csblY,NJ*ZR<G-IdQj]VjOD(Ab>OiYe7:g6DInF3.-5;1g&mp';&#HPc+Ia"XE`>Y]9dI&-8`PP`,c/XZo<,OT]6L&n^'R^B*0>=
%i1ZG)m,+Mm^C@f)O*(hMCl!\V$a)/M\U4Y;(-lRHAGm"R[?Nc-HN6-6]Ele+5\[*C%qn0Yo;7ZcYlR_m]bYCP=f*]d`OGRRm].3!
%-XUu;8j+TuLpo"?JB4rCn(P\6NM;^Nmle&6B>sUjnRkRch1W5'<7]Nd]lSG5TXPDG>!S5iDh\3VRb/)RlaXsO"5$O?K<-rRAdboY
%%9eN;MWe:cRi)a[S-PgFGLOLBhj_5D(IAesS[g["+2ch.d/`G5N%SilPW7lBf>eY\f\:"J#?G3Fhn$JPHL'D6rt,:S>@6e*\hn8G
%>\M8o8_qhTBuTU#?$DcV52CfA:FQ-AADjaQIU=#n=Q)k&Mm%%W*LSmD\!`i`(/ql^FCmANRI;[9/0WgOPr%;ZH=;[-:glsa7XL,P
%mc-;Ec-ZO6<@&%TPiHD,nhWQ,%Y4++9migpcSY0[-6An<Ip[`shqgKQIS3[]MeI*W*7eoboB:+;+O-Op'6T!GCN7?)^!KXu=!h?o
%'QaA*<@P"u#?;*H.R@5(`V+d\gP;!2Fh$95?!bD/hWN=H35#j5r'Tn"*LZXFQeS(/:p,Ti>Sm'%<B5cKJA/i-O-qqU\PA:`"MMM3
%LAUFhIfB'?Dg$mP:S7SAG1tsEcPY;I%.#bSp)*u0N.HDs^cl79T/!Rr(t`KUp+tRqR3k,H`+PP6N.HC,$qsj=q>8dI^3oPMe_B8j
%^AI"FHW.WXjN/3fs#iRcos6<D^3tA.k*9'=LEF9XqT%3k@DLX$46OLe'"_d(PC,=.@G4Fa^70g_G%5W<EC-3qN-MNjrp_Z:q4mpd
%dM$j)pfIFks-)@?VmQFlVIB5Rh*:k!@JB.&?M/ZZ'#a3L4mu^Oq<E^Hh^k5^aF:JZj@8aHP?7PJDte2,St8/nqu$,fVf2RGqj"me
%jDPR4?bb7lI/iLf6/S3IIK&s5Rr8d4TDc)ij#;I4ro3pHhqpYFqhs:fi/7ORs4)o)00a2)-[kRCfc/&Nlp)E*0LpnBU&.EG^61mP
%O?2Z2E77$8eNT;J30!`O*)bS&EP)Z6k;#\?\jK%kBa3MUj%_Mfh1/I-kN=q#6YUL`DOgA6-]7ljR9hnp7"rkIBbXI2D(7[Z6!E>A
%dJnCMSF;QmZu]0Y9Cj!D7pLp`2b;QK^$L@kjMZ-f>M2ZmF=3..V'Y![1!\3&hMD^$ohs`RG<X+3kNP`dK\m)k\=3]uGTQ<#d;4"k
%l"T*o`:fYuh'gjr%Lm\'G;F"3AC&"&[@69j&V]bIfi91W\'#))E+\99ptm\oH&`2tNH_>/Zcb<a9m3)B$c8*NH+JnTF#_:+9k-Qn
%/9mT#q(<#X6%dK<g(\.Hm*I4u#cGd3&+ZuIn(a/'6&%N3*.X@ffQD5,=e8d9)0)+(8;8?G4X'/Mk2"WMc!I7oBX8L:6-b[6%=-q?
%7>uJU#nR0d2%ufLfa8m6=.W45^72!Y>CaM.O$Uc6;FDn$c'T&$"M#CrS<;DR;_0GH2i&3bHORcEV8^XI>aaskZQ'0+48^;s^bgE)
%9kg#W\LiQQ*R&88R=)\i\e>Q;CU7=s.lDiJfck3^Q8FioVs#M?e-X7=2F2DI1%*%<h[/1_*3^O\G=Wr29VD-#S[?OEO.;=X,)J6T
%.`Tu[".!*9nrTipBY_?u/SC2%CmeRnFiYu=1M*`5,kcVRoh`/Xd/G0ID^T_YS_.`jeF(;G.WZY#+moKeQ45@X"c#i`:WO1YBUIr9
%+HkNOI$1=bBUciq`_!V/a3FOQT5c[R;=E.U%RQHB.TtBVEIXeco.#)2JnS^hF69+#_#hX#GqW7@grP`'[[t0/+T@\_-2VU]8k6A+
%%3X>#PfkZm!W]/08l5X\)3RlE8fkqZ9@5bc<o>[[m-d@@^`qc50s`1!Se,)BP\.?0LRcO-a)j7tAg3.a94^CX!P'/&#<=0<c:N4H
%"s@V-9Ve/6/<_MMF#*VYa9%DVP!_g!kVAM5q.T>%]+R\E=$#u+94cb4$fmNmLuoipOTHn$lu[4&;-J]l*]$hi-;t[a(oZX\_JRE!
%PON:&Y9['ll5$q0`t7o0V)_:GS#9CQ7uN1_XDE(t[7,=lShk`(O'_,7ZG!n)(_f^aIE#f/[Q'LB;bE:h<!N+G*"s<!IRtcV9\>#b
%\JRbgc7!SGQ7ORkT+!U6oL*s7;)dT)/FakS/iO/ZoP>*g1fM>g-m+^ITdu+*QS;o"HB^D1RDM[j9J.'"J7U&48Tq(<+i>!,]E>IE
%__B)ME1B[+@e:so"')SPP!p#;Q*G97#Z=utABEbhEO+EK/-Jmb;\i3ThMG-gZ3N?d,T(c?^imX7ifj`.%j9-M#)D=L_NPE]e=H4I
%,Ant__9_5?&5d,'k;0-(k7N,GmLb/HTZ7X",%DIPW>NW:7W:NG3b#NXmBYAi`2++O/i+WV/_[Pd,=2m_W^!g_L!$74,kjit[h-M\
%G##n8"C)hf9bUX?0Yqe+/?u3UJ.$SrHPDoV98:eZMfNBC&Rr2>"#34G8D',d"?VFj/rpN(*:',M6;/O1Qfd;K80UTlqArjO3JACH
%j?o#UQ'i;C_('`hp*6<M`LIL&#gsi)CChgn-VcS3kgb\Jk+!a&&\KsA]Zd#g3G!^Rj+SWb\aj%i:LKP2qGEQpUF!h2k(U^s,G%Ot
%+nqG%"k(p8'$RS]0i!tL8*hQGB=V00(9kTQ;^XMng#@e'Le5ZEi4XMO*lLh.@5?qVOe%>L"=?7hAq>1!<O`CNoJu\%hQ.?Q>)8(\
%Eknf8U`8_uejPs<oZhfKCD?$]1(LXclr1ku>!eB".*QDBD?HSglkJ\.G+qYq`%k_5ijn"6'Jl!^1K96fhuke:XH&D0bU\Cfkc@F$
%kUSnaed6PGXI!PeI8%4i9<@>2nNrp)4K!rEjLN8S<K%5WEu]R8oADms:^0DQ[ISRZeY.JO.QjtopuFqD<$IP82!Y@#k3/SK5RiLs
%1SmC@Pb4ftbBY(uRt\:>LmBQrh*e844P!;O@`lP,AaO&D\-a)^?_2b/FU>l_mgCS<`N(&_%jiJ_#1S!^Ae?>G>5'RK]A,c>>kSY3
%@Lfmu3.!Dm0LsY7*#*Bq:=]6i0_7=&'TGZEefK)R+93#KkY_'j)Q)k6C9QZJfn=!da@-=KOUYZ>k#-P.$'WDqj,.9C#u.J+02,Yr
%51WpRC)27U6&5k$.n_D@<7E(b0?48HN2fE9Ck\:ZZFOsYJrE=5KnU#576!p%*YFY_)m=un,iX&H;?<sj984u$^$9QF0?GfAL&-,/
%BiaJU=Vo=Tp7X%BW\`&%3r$,-EIrBT/0'rmXJ@CVQ>A/VCbN&hPRrJ;RlVcc[OL?DcAQ\>\Kd:rZR(CZXJBC/1KaK!$CDY+dM?8j
%Cak#h/`Yd6jH2=iK/P))]5E5SKW]uZ"ds*&SV$87iOe2,kZZL*Z.)TkGae5FH$1A8.*se4II-<k?-6g_jma%R@[GkI-]nU1S^<Ik
%-;Tj9=br`=Fif],c)M]iFd%_M,YoVqCr4R.5)3bg67aKNUQ`<J`%!@G%K['5\aG6`D!Sn5:7`g??)W&\;q@8^6$Q,.XIV..Nu5c.
%gR#bbp)P$<g2i8`eQrg3-Q<Z?@ub;<6l>&?1P)H$^Obg"D>!M;5Ma10If<!Q\Q*N1rF5N1?bLmZr7-#'T-"R?B?u$Sq>8c^TAnoh
%E%rbE!@",7+N`]$>RUrnJ;A=dKL1Ap!r"o(9X)7*4G%k$\ce@"1s]1J'2(q+2^OF``Wd_RJJMf?'@d+7W2C[O-f\sikf@gRiK4"L
%a>rH'Z8"bdT?0_p?Q<c"7-G6/N*-Gl<kH5,#1'ENMA7u/H-hl=F+3s7r@e3?8UFZl8sIg[CY`!g<R=-q#%,f%9=F7bE$Qu$Q5NT<
%$MMJ4PPlX;_LWh[TV.RNHUjp3b]03t3<D1T#u_F[fl<dC8Jo9'KS'I@>cK!@/!.Bi"k5^iO36%,L4S<>]i<o-Bb1@`>"!t)$7>+:
%]/EKhE%#.A1aCSri#SP$:W!1m%;)>M%4Y"^H]9"M4\mtt9NU:OAD2p$)p0j&.l,P(SWP&X0GYH+eRMD##!cSsLfdj]6MP:;Z5H]-
%-kS9#ZtX/\JJguY0?%2t57mFSA(1!jGZgV^k(Cc#d#+7s<HIh1XW_n3]aQ-OAmeguG:@!FahgJ$7[5E3P(s%7Lc\CpZQ>lc]VfF9
%b-+4L`@[bMNN'aA+t"LeTm8[&ob(R=m<uf]IPTJ/J=+!inc;*-<fRu+CkgpN*J'ZULB0HVb'$:O-IH.2emVb.!$S&;d9I!(dm9p2
%>(g-kAX`lKHt-^Y#[r9"NsS(0-p\MNJ@(smUcRbum&4"KYp_;e-P>hK(%fis[Znj^;$,ZeiMFejT1"s\coau$O^H;M7&k>bF<R4G
%8]2.E[Wtn:#7.(QcU%60/;"*_kn00c[82$['di,Mg%M/r_P+2$Mel;%CP#tFqVt?uF[k_5iQ\Z8;`Tu/:'RZ`Yqnhi_\hoO!i*"]
%W*uIRh9mj\+7L6k-BP/L?M%NcQSL\),e,+'W(<.G"5"+O+ad;@M&OtOSH^[u&sJriGCZS7F:&g`o*fZ0*Q_=481$S['6beV!H\t#
%c0m.)$:&r)F+Ml7-ZIdn`D^Z==Vl3IoMDuRjb,XcaX#M(e6%AcOW:aPZC%M-6#.0#juk[<iFZ45%l6YM?6"_h91Hbp$9=ka=I>0-
%ZUK_=Kc.t7Q<ab"M1AWB.,#55'dL!4,2tFXl"BE&GX'[3[5F1gnO;aH3<R;CWC7,'QK:niaQ*c"S3j`\\ViHM\;pi'H>ITZ"4E?f
%+gWJRTcd4,=GhFAFYOtj/5Uqe.B9$X%Dq%g-M(%T$Hs:F(G2")i>G)'K0AHjhiKGpLkB[K@?k+C%kEi$$+$@+Kbc.UZ=@=fc6RYO
%UjD9!eKL#8`$gts%'UJtUYJ.WEEREm:BYtu>1')3VGIDK'm$E9i.'H)2Q;It4[XS9V#\E<9R3]>55C[1"I*EKU(`buZb+.\.`R[V
%8@<U]=Qu?[Wk\qIEX^bh@dQ5!,ALD)FOE8`@fi:?HPXtki$kBhR5)</W'QD&3B<Jk)8N%UBR58!ZGJoo/RhoEPot%K=)`[qYS^kH
%TIBR:Cl>%5jUh]tn1jbXE\*sn^/uFak6]Im(>p:Mj+Pt*hd-=Gg!Qh,QOA4E$P.;W*aACMm-$\`,O/B?MoUIE7?#a%eV$N:k<s7h
%CWY_0BFI14L0l3dFk5`M\;2;&oipW\JQ!0$;<A5q0i=#7R*Prd#ghlDl\]3Uh\>TZ+C[0,mo0:g:DD!@6SP><EZ?u&^p^)eP,[IW
%EYYVc=C\4iStjMXJ/00!O+J;QmFRXh/OOW7ZLbJHFAtcK#5,UZQg=tqk#?4*hZYari9[<X*?7YV0AXk"fb;Gm(hN#t7th[f/^N^H
%@!cTD>[!Lgq?/VPL81^c!#:?+@sAl<6<_GK?%THld3&gl\1(t>=S5#69oAqHU!P=&Re/5R"-JiR)FCd!c4c<)1-BLK>snh.49ljf
%:f3n+;K)jZ%=i#fUcbtg$I]SX/5Ugu]E'-+[5Q*E-lSg4b;c.EaaJg[)tcRaAN7Wdc(sQl\^M7$UV[,eKS'n90&nDqL0!t-JJE`/
%9ejKQ2A1[C`$.Mm#?@ZfU!L$F]n1YLbJXW)-:KKLKnA&JWH6/CmnIQ%Z%]=`?lU$t>V?7C1)d)5-r4gn:WEMX$u-!R:UZ?2$HmWi
%pNc">J-*0P'?u)gBP:3t',-T<T[8>mb3!fbR4+-\!LLWt*ups[E3Ts'dpu;j;BoO0RWoDo:?o\02F_C)R[U/K;HWm2EX:6'U),<<
%brI`oY<n!@MGX?b@#,/FK.BoS!l>1e%BqR4(-*nfp(jM9L'o^o_#kpo((I#1eEanuAEsLA]-MLB'a2MVFd^k#;!e#Z^k;`P&-g[+
%3=_^W0GQ?uS,hEEP6RC!K@,U6`T;]W'54O?985N\*qH:8$AGU6'8)*0c363K]_ne9%Z!Jk#/UBlL3EV_#bDnC_^tc2=b5;K6&?B#
%"L9T.B5je1/IXtC6o^n4&-"C!6"pm?:c+DF<$Y]1>1Ue0Bi(6P3J8$$_CK98a"=cg_,B6N_cd5"<#N6ng=2A]+i;0M\!ND7kaS;g
%dBS\j7-k8#8*^"i,DB#_Iub"@W$2j[a\sT1=>G4P)rt5!#9?8V11=O3=4-K_r?Ns.!7)#8"Bnt8TcO:I`.V,1fqRaMGg$Hg#p'\W
%F[qr")/i+jb*!K;F=A\KUlYi3)YH_?a=afM[kE;nK4BM*^hQp])>sg0?EXB[GMsP`%TYO'5D00O7ig\f$aJf#RX-PXh+19`et.t$
%J:A:q\[DcJ&5-kXQ^/X)c*%6fJdGrqYVhQD65?J)$9&/h6$)he4^\a-M:%a7EFbNh[06Ye$s6hn7@GXum2g)[2QGfIHIbkVXUi6=
%+4/aT7[aN)SB.A!@F4b)bs^mmR^)EQYu50?Jt.*qMCA_=C`K0_i*hlWI;,_+"Ki3ha?_ri44i+(kW_C\WmQ]],TFX#PN"QSpHbT3
%KeU^u8)&0<"tFC"YS6fR</d!u,M[MNQ23U1".c)^A\*ib8:g?#->YSS+f;$$Nf;LeSsVu%@fefjOSnUaLa#kF.9qPeL]b;*piF;*
%1]2/fe7e+oNVBC!6p]n.B6XU94r@radQs,K;9+MP-d?-;h1;gD1I.JM"GI81n`Uf=Kj[I:k1%`n_C*De%59GD4j5[`:m2b/"sP._
%R7dXqnF@Q`RcQS<Yt7BICa_GB@tprZ(NtW+W/RKOPYHEGYo;iX_5n",Q$K7!%N6kaLh_]1YG9nZcHK**kRN`dK?.g8]V!E&UM8lq
%TL:If!T[.^K*r)Of*PE/3&)sf$ZCTeR!a`MM=BS#JDA5"EG:*1LD+T\qMU0,(A1+t"5JAS5Qt?TGb])CBYP`P-EFKcrPCP-kS"i&
%RE?MJ$ID119S"-^I>1HX-,ecY'fD?Z`4Jnm3-61?SB[`q(D1ojg9eA@IL6Ye@E'k9_+cR8U/*+=d"$D<GmS_p$'Tn[A71<L/!'b%
%1j%a!C(_.-rhI#WQoMSbF7I%"N"S>:&pFT:(gZ6&NGc`I_%qTU-7_Q1A>%?XF3i<H2.Ddg,86e3>0oAs5t7N+ke%R)FR0DT6c8U7
%1)LmL1)]Z,RsL%4K63mKi']^J2:N48/JrsS?oU]8D"0Pm=@u-e;1cNM0W<M.^OU!iUWn*5]([K:A`+P`6?dOIJZF<E?*Pbf6VaML
%6ANA++a+44kQHsGL7EeS%A#V#@7\6q)B]jS+SFFs?4>M`^/upD<=V8Ml2h9lKKM%e8(:Y2#`Ju]"AD(8^X.Hh:6^eX&4>Vd7BYS@
%a3,IM9XG7)0[?G>eNBp'4K@#C$t5RW=>*k"Ol98tnhF?Xn]1I1bca(1U]kI*"skR<og6tJ_??-M#YCS6@T",/PSD&%/)pg]&[R&(
%$%.AI:aXh*ZPn[qJ\/-I2>/KYV0P?9<ZoR\-XReur4q60F+r0V3Lgt>'/_UZ@c0LP<D`I_ckd+(dNFdlC51^k,(O8RKFu?,*`Utq
%!$eH$!6AVS@4[T/R2Ik]g+r_^bWRO.Nopg#mL!AL#SfK"!*9=&<p1bnQ\g`M7/'n6cJW?T7rh!W-\r2)<IfkS#)0jI!KS#kd*N>4
%0UB*J$B(D!OI+U*5i*>\LWEG-0G:L^J;9MkHNkB`apmK9Pp8CSG6ad0L?VZ,l2i\2KM9Y5K>e%RC`ug[L/%mfQT"a`SDPKI$ii?+
%:PfrUK0bD^S<+4!*!Fr/*_+56JaR$d2oAu?&0*D"M*s[U;hUc^[E34R"(R/nRH:A!66!caKMs@8&/cg,8d=C-dnpWdoE[R25f]'_
%YppUsKUFRYTMc'Y"boC[P&^OLS5VW=+Va(LMLMbe.[CTISW&jX8;"q0@&u1ld6_PO,sR$pcod;4Jf,cUBhT"m)QH7Plj6=3DW%)L
%]\nJLObhB4!9_<=KfB<^@g9pNZ?A.*2.+n'_/WVoKKO1Hq`0rrj0.hcSdI]LB*&U\9rZ]`IXT_8;Vd/(]&BYY-krIBRViGC^;e+d
%.'dBj&6M9B>_@of9rckU<0C*]5bN.VSh;VVBE3b1pJljJ!&l>Vm1D9"M]1MMAY_ptYWO%W'4HHJ8b$k%'+rY)2!?6IZpsj;_$c#m
%OlAo*<ApII-,]8Al5ODuHB$$uNpMM!-`S'o)%#)a^3A5(`sR,)0L<>bU]V189Lb"l-"("Cg#rWp;M\/B^P59%FZ5*_d!;9b&W<!^
%K)*1t(&.g&$*lok!nm]lON9<+7Leg^Zel_.JkM\6OFVdi$4qSDP`QbP!e"nkS;%Cr,QnG[B2<#%KFBV;g'qSSPXItd^hP^CE@T0C
%Y%!P'qum65#n4P%.&>0\egq(/)rdgC.Zu%YK'EQmY`K0o,*Eh05#an\TWq#Fhb#3=OsplS.D<W9&FAZGV$ebi^uI]c?6d_aJdf19
%XCW<u,\+`V)&E\^:WQ7$'G%B%Ta7_bgsjqFk.3;K&YK5<%4qk\RtuJeHE"?gmk>UT89kFXJTsgj<>j"W,07"3]Zlos+RN]!UVWJI
%U&folU-YG',hp\@n'*1Q,M45_1pJrY#NQ"I$X*bo%4-OZJtFlnUKe.#?r3ClG<YGp-T]L.$,E.C+g?Biq<mcXWq1c&_#YY9OGg-[
%,%No'8arb"[eR+Xi&BqEi"*\=G7"[I%JgZ80fM^)X9ai7KH&:<K\A0j]$)ilWRo%W*)+CRCNIqd.?S2Y.fhmUC>qc'&^[LYZmS1q
%3uTRYk6>ONQ3/B)6u^"^7Hbd2Ae5#q"%.D^OV\R\0L6p7GQ_J:f^!5U`NRPcG9J">1HnM&]n%GJ06MC\]E^k"dcOFL=#B@H5'*:<
%T]+B4f`5E?](4>jle[6N.1oG^pE!9pWiD,A<%:?IMR)NEbc#buR[;;\_S:0ae?l*@VHKQ;J0<Ff!VT[t7gN:X(E6#_-_t,nr=\FC
%rM6'7;BLLQ5+oAb1t!LF7IWj,?3VW#%rjp@#mM.bMC$)5$nA=J/bWa,BG+93os(O^&.<4Yc:^%9,ENak>]<ZD"AWM$()1kJ1W5^"
%<.1[#B88q?+[G!PUYD%7Zp;_rIGM6P<qt8qnr)n*2722W#=6u]&dF*#B@'i+[*B:o7mg1pH+fFn!T)>J"/JEpU_LJ@EdJ2K`'(&'
%+PI,IML1G9_95H+#?h<B(GkkWl9J(!BO3p_XnN6<#cc(B75cIO0+3oI-$GE?,$\`g3b4rr'VI&]4A6t)>ab/f,Z0k##DK#lpL8[g
%)-iC)A7/8JOaZHhW1g4]2<Y]pP+hSZF9G2qGmO-Bg4mXQ2`.9h%0og4!e?Tgk`(E0(8-os1V=<9"nTVVCG/ff,o9,4_(;Ps@6l,)
%-%M[&[D;sAa9I7_N)G4XcB]Ab`CSnf@i:-3NJqnogXji'2oIGr\DEF0Q4bm8(!#K6-HmK6TLZ6jJcIAn<+ZNuQHH%$IC+GQ%M5uQ
%QNn7$"Vs@9G\)Y#i,9\%?"J+s#`:+6qB1;#ea\b-$eV;obf&L>#B'ig6]8+.a9Zm=#0&$`U#f]+&k_2NY]?s[&2Fuq2BYDm9KET7
%bd\OKb!@jAm3&p/@10k<`8!INii(d"/3pD@YgOo7[>^=dI53Q?(8)aC<"C9.<X`BO_n\);-&d!q!2JsaO9k3tJQF&6gAEC5-3ic"
%PgmdY'H,daBY'U..Ei@D(5AoU.hg<JZmNAtV?2tX=Q0b4N!DeV&5f/;mo5g7$jC*n*a:<c&\1oJ`SnU)a[&^5Fr`o`,4p?>K4BJI
%01"9%9A@=Dg2:GBJ<Do9efLbDm_RO8ZnPb@a-,Re0(mGX'8EA&,5T`B8[B'a$F(mi`n/FOq2i*A_>$M!'V[k_!;,)$ib%gD8XWU7
%6'5ug8na5kRl.?3'SZ^?L%/&>;-)&\l.%;PnJ4!rLp/<d%E]595`"[N-0YE/4.sb"K'-HlSJLldjtJOD%Ce8^N]O'PV)Y)+QfND0
%?Hj<\*]/RH7OG2Y&Q4:>C]$:;:.-MY.0k$P5T2WO&/RiT3l]@]BuJ?JE.+*pi8nW_?n8]GE=tOdA1V-_%(]tO?`_O(Vs.$'/8UOf
%0/s^)/b$qMQq:dsY["ak`?rs6Mfg=g+iFla5E)LT4en8SDeU\@A2"a,"#4>KOP;U-M?mC+ROd^t)@be@7YZ8$^]5n`4DPG_:W@ni
%7$s%NJ0t,1RH!8&"]#MW!L!V8LJI,oPK%0n?pe$FB"0"AIDEdJ%C$-c+,:IO>V7Sd4(o[E.&$D9V0TrbX:d-dq26g:+^3u*O>9uk
%G9%6.6ptQPa?pA1jREQ'N1u:]\K(`M&U9re6n#nr'nj<")Pc"m,CSUY$N15:Ks<>oi?p]!4;gqg@Ae[j%R0mYZ(%FO$p4]gW8S_i
%6kbO;CSSIWl/tQ(AfqYH7sO%@_OUW5Aih9IZPg"XLfn7TmRRnQ!>:#/j!1nLP+dG]<0)^kkn`u-4lHE$%,u=hjUKYTKoi+'%P$13
%T)^-U0-ao&9R4`/k*/fA&3^QG"uOj78fJa[A.6@l;i]A<!8>b%_pfN8L)d]8J/`bHr;MXuG(Tjq'j,&Jo*AAX'MXl"';HL(0pW)#
%0WfZH1W.CMnV\DbLlO_MB-!Ws4C^K$krQ=7jE;sQ&MEFoE4Mq0PAhp-]Whr6KXg(0l_=s0$%h<h@X_If!S\F0?du&/.jN,8-V1tM
%aoID`VDjX<7CJk.9gam(mIpnOAFMY='elJp8C`PWH4Y[K.CVf7N61!6#Z>/_L/;?G<C!D?Q3EVO;l#-A;#2;\+&Et_+=_Z!3*6:F
%@4MmH"Gji!9mGqo&IJi;JJ\nDA_WKV;\0i:b:G%AIj_Wl4:<?,Mn=%.^4Bn(1#P=:>'U=uJLeu:_l4bg(nF^%XAVV3`M,.t#b5rk
%))X-6$QsH=G\PkTjjFPc8EG"T0bqqCBtQ_'0JYZs4EE$R4uJDd;FWJ0DTi(]-:GudcmQuc"g(Qd<JGKcYm<I>U9RQ,@#,0oS3']\
%N@[[O-qjf=f+s=#U!?CRcT`<6cR];so7`dp>U1Kflr7/%Gb`657QRlA#OsKT\=!>6"D[,!A-$:sQ;(>Wh,NQ#_hT:I4u-&?]akCp
%"p"!]LU)X@.lNZ%&(TQ!;_<`ZF9LKSGfD)HGp>uf-j+]j'FV^\RZA=p8"TK1K8b4M7#ln34ObM6JP6N#enZh]4<gL83\)lf[&@/d
%%57X^Yt[R8#UG+6"V$L#fj&QE&8mNP7^R-=KgV)>%@B(`ner+cJDaS$N+gW.C6Sg6r]+drc]!p`=:%)tIUHp3=JDt%&:o%V+phR9
%Tr.Pp=[IEpNHWMif(#T]W>ajMlL4n.<tL2-Sf]d%#p,%u]0_asC1uAW5l#t'99Y^3"hm_7otcfN]"?pF)QRcr#X_Y#(KS8]Z_7h*
%^W/ISTUmOU';09Y>5&r0:DY')Kfdhc+X7c.gKd&.Vk;IoOJ_d@m:KuM<LSC8_`,>YqY\l&a4K5KopaQ_@b%?jHh7*Smn9S5Qi-j^
%qtm:0n%\fjDR."R]_hLXG5q?pn`rYYVt\EP6d@_1c'6_pJ#TOpD8sBD&Z30QYV#^kB<;c-141ac@gn0NQXuEC*2,n2iF/peST&'3
%Jq.=?<mn)+-LOtijFfoWUf'7uB5g[[OJ@Z"$X0O)ehS.Yl3G2^(eTt4;:R<%X/Z$qPFdH7MKXkU(HL9k8=P=J)t+*RXdQrBVdO?K
%jFV!@s(a#*I98%t":'0gLg>hB[`WYY%7ApOFsL=&*n4P'mPgmN%TE)o3ZAidF9e^`HQJG/k",[Fp"9n>MM=7IF]hX8ffH+3c!Yjr
%/c_$Jf(k"[.Qd\iL!kJXAsb^Pfg[j*Z'>p!<J.j`Zt[Js5H1%Vr^i%RYqN3L^c=lU"iK>]i!u"\lr-qD1=Cm-2-MgbBe3"E,o9O&
%E=C_Kb__oZR<P*0*!*SnTq)e3Lhl\GO<GuQ?V^,#TnV?LekeXY'XXfW93Rd.KKp[\(ri`jAf6eiIC(\)+(/0GEt_E\hOlBL?0[M;
%OV*tSi/nnV@uU>S/`D4p9QDFmCne<T'FdC5(1Zg3'/?0_;*;pfcriknH:E,gP^WbWU4j=W$G)mONZ<>a\Rb3`<)-rrQ<`Fo$$OQe
%)(?JW5"-;]^-;/q=P^cokQOG1#lVH.+[(J?IcbH,bQ+GP/KjD35#BDp$l9h6,^&j-l[ID-(VMY#-!:>H\KJWnpAd[;MjCu;)kV8W
%\C"TqPkLqd<X50lJ259S7npqOBnu-imP)ZQ3E<@BnH1A)G=3>dU5K#+@!V<:94ZV,cYB1pH!"eiMT@V*>"2N!FED>j24&iEDB'[4
%18PUjK`"2sqR.0Q'^;m\bO%^-[n*jl%%2CCARoM;E[>NX7OStaP'uFii5fsRal425f((:dC+c9T(mV=61qR@U$BNZ9R4#,W7R%V@
%Kq4"1SE*03mDC%lA?!4$=jAT,>Qi<\@=B%s,4p14+g%p[W1O<cA$uTJcpuTa;4%<]L`#D1BpJu:n_em^>pUYLM6nA*G8nMo6o6pK
%J4@)JV"p[n"4OeM"s2uA>7N%G:PhCOe=R4179bqPC=D*0M["!q&s6?M"f%!uf/[pDUlJEoD'F0h$$-S[N<&m,kbq!+'IZ\W7`Lu%
%dqE2n4K$2?=m<"ZCM5'<dBXae<]<C#0Nr'&RQq5m$XGCIi_7Kg,P'Afn]QP1^bmVRKBcrd*7X;ti3JIKTLpe#/rm$q*U:+L)!u->
%#"M'F%%'+ebi3oq+tKMC4.=Y/r4D%W9W`22Qujp-:a:tmkchZq,7?,I1q7O'q*R$E>j+"u']*]r]9,Cr-tF.%(m3D(+<Wma,kL@:
%M^(9>4Rta6D:B#F[('qkXtgEOM3=3j+d'+hOh$C))M3R@'#MjtD+,I3L?0YC)@A%=+Z^3`ZgV\]+dO4h!p2di[THfIrY=q^biFXY
%F'T?G*iGH"0l#be!*+\perGheKSSahK^%Y4&#Yb6<5LI)_s2DffROo;Db$Ep[ZWL1X-8()`)^>RUK7@\*6qM6@fbaZR4f";f$bW(
%#9^YrC<O\CBH^[fW@?@1E6&@s4,QFf-%[7JA0POkC`Cog]^UD-cpah,8d,<X-1u4fG.B/@Lao3?`f)$%VDYthZNC5-1iA!i!JqH!
%LHuq\V*Im*H7iXdA2EI>8?;q)BNFYVl>=Ho@oBF`O<-4a?n)/ap$mc&0`c52CfE5fgEfT%lYA*V"d!A5Y!UWL5c>`p@<`WR/OQM=
%.;3a3frM2L"=Uu`[UTD3&Oc:Rf'?.6?qRh'fYhlQ\7X^`6=i'daOi`fLE]29+uONmZ$>><!)!_MB>M\ZW;FXASB]9531<]K-ok"u
%p+-_(9KN\eq%MaZjJsiggm==ZOYJTQJ@Vip$61,(%$?lR`(<es2?Do-q(;d`-K*b%BgS(4O[CZ,$ZYY#_E5?,GGtHBAK%KmnU8=`
%#<ilt,mIIBj1o1R]o]c#\GISiFXIZK<f2(51m7$BhbdlTQ!#J/9q2f6#>>=n3i(i<"fdHO1+C.t&kWhR^_5MI>d%#<2[m]dN.Nu?
%AL_-"nG)'I?)Z8*&4uq07F;R.L/L`>-$."_=L&:8OE_`bWCV4N)=M=87qat(Y,qL.h.&hR=&+g/4ts5G`J".#cXLI_NK^kq!$URI
%7!KYs"`K@lbd5@j_Q.b.#8'ZQg_i_Ze$9]0n:G_=$YhRZ&d?9--5Ul8b-q`s^]o1=@D;e`&YWM&Dl9<&WA&fYaPK]SelA4S7-(dJ
%,tku9EeF5K!%#5YW6>h>d!2L$`DZ]"%Qh"]=JJ0RN$X2qQjLY=d.sJgU9#mI$Q-9D/SP3P'%(6nI"Ko@,#e)t.^(DpGG-3&S/k,O
%(Xt)$ES/hq9e1AegQU5k<[-X]BrMOm*p`-'AJZ&TV&4_$NX#7hB,Do8i9+YrZ^"X.9Wqsp6*i'*@aY92Qc3,fcmc*"`2\?llOD3k
%E/H]0o`K[>WVfiBM#6sD-?-l=0uu%_Yrs\I1mHF(Yj!C?AGX!4XMPlG@>L$P'2EUO=CneB8HcM!SLf&Ze7t0t"jBFc`*UtUL4tYR
%C[P'1D]Ue+!R\H"Xi+,M%GT^6!0GMF3(g6I?HAc\L+K&W+Bsr_$`-l\d,N.)*?a`PC)'8fW_#_C\!.R6gd6+lR4U"``m\gZ*AIck
%qpT/G)9N6!!;=ICJ&XqN-"p]LQ&=0ZMsGoDa/j#s1!:[hk>EWb=j7[<1ZO;5Z=^_+1/a"H_APY[4L9mbOrR=OolO]JIN)ebAT6Z8
%iuN2$";<hD)D)&Q;+6XCW=lJZHXdU3MSM#mI5%<'nB`._]M2SK(_$oMd3->+P[`;09[s-,o1n6m7RWP]H"$b=bLf^$/0@NV-(A<d
%G^9[(<j2Y42E4S:SK%hUJ_qYubA"W#Si7d%$8&"le/tA5Cb4=YEQNm*"3]UK9h!R1)CDQ1)P+^inuQEC=9,DYQ,QmoZfK1C#:im^
%bf8Cr_s]i`,pj)TV"7;^-L95K$gS"2nO-_1]eA;?./BB`Uk2UE*C^E#@*htalB,KraRo0l0D1"OOW]Si;G9Q[V$k\pZj.AP5eJ->
%iO&A7js"=F(F1\c5ZD)@&u(d#id`+?Qq<5ebhfcY,PRo>6e:6j(%W88^*P#E4YKOp]gg-XlH`$pefYd9&/Ztp#q@3GD&1$+U7)co
%a_E2P>:)OD.2>p(@Fe%6/?;48,u(4i)--0fA94T"Zo&pF?:G1G<>[Pa!V]ET&ug^=JVf]$Ke87C22m[c$L\hp6DNjZD..,Z"Qnn8
%aTA$BbW(Db'g!20"]R2i#RuDdkK$s-8Mi6Q#gI'Y\iD3U2*HI\,Ka[p>49?>Q:&W'(,92C4F1%:KU.43S6*'O1=KBWY;/b'jsC+4
%@JMqM*ZCnL&4':q:BhZA&i?&FO3<VcB#XkQKBo&#,4d"bn$NF'Fb0&,W3_EuQ@AnOakSk/b`*Z+4enN]`Cpi@M9SiSP:R;*7F\>!
%Zu5).*46,L/Nh2N3%]ZuC7<;#QuJ."@kajTK!ctNR]6F@;Hm:B:jD5td4\U#e:dkU1b)rE=>&F"n2Y6#^T8,8'[t2@-XR%1;uXRi
%Iu;["L!kbc,?>.'%^f\%QY!>t)cFjnIT+NeCI8Co9MC+[.'ltlG_u7HN%%4)N`pq$a];8E0d9W*JorI9;#,QnaZqG1b]>,$K1%>H
%]g0%R:WJa-Vk9BW:7MH2@-0"_oo/8o'EU]2hK?pU'^I;OHHkg-U:?9tE6g4`P,4AEU-It[i??Pf:a_.[S,"e+<GE+be.5f1V]f7J
%/WErOQ%bqi=9Qj4M0rIt'7R5#2'@(0$bhZeQ;EHbZbRU3#V.VLC/,CZ9j8.]<oZTa4BjZl'EORX(55LBYF,M^ch<f`c=U1iYesVS
%*%aQ<]tn'cB.ML:"e7Fr1s[f%Xs[c'KKTeH:*m'`O>VBd?:i'C1_OEU$YiY2FR#6=pU,S,e)Z`<M!7n\K'CE3G8]o\h$oVja<%"m
%*=XV1=D%l+Rogf6j`iY>n1m>=bX`C691\2]"pDncOIk.dW3^.S2U![P/VM9iW7#ueJI;\\$e]Nq4/g@QB3`Qhf5i'G*W9+-8d8I/
%P$-V(GQG)b;>k9b%ZSHe].qA^B<*]IM>ma5_*-Y]JdLS*`$WKn1>0O#C3#!\F9JQ"W\VnsZK2Y*6Die;f@Qs/rK<IYRhTEO<6]H)
%&[/uG=Lc??AM:=6aJ:,'nIuj/!PjFU7B@d>8VKg:YHjJH>[M4'pgP?,bRqF\B+YCt8I=KdWcO>'_9'ZjV@intnZsb!C^fQ=-)@=<
%XDL^_;^6u0'NqRr")$k/RWM`fX!Bh"R]Me7!9_\0=[_IoeFsRek].)#D3\0Gb!Cm2`j#jF!eX?u&,M.lVYLWme[.liPsXMP=gWM7
%^re6fqjZ)&TiFr%I+ddJ1PZSM-La]R"u-.3MkN\co2sfU=YkQ,eIY9?:%G,HF+n`p_c2M-f@OtD?7h?T"&Mj\n8Oh*`(K9*mY4W3
%%14H*(4.RMNsPHp(7)=NV%0h#BB+[_'A^IFZ/gX+G&/!fmU+lk4Q*M<>4=MY[r=TiJ3k,O!\i(6-2S>DT0Z$?kboA1Xa"]*N^gb,
%J-DC(Bb$@E]:#MPZs;ArE2*3SVHJ[SM*1k`_EA3<P:*X=2!gT;GmS#?PGRK(UsDUm4>g6E]T[0KRHUcc'1')YcgSDLPKF/312"N.
%31cmW9n-l0P_j?hh@^0ud.9`a2Y^Q+nXDh&EDPu0+5!bfL3I-!D5V:^C`E?kokdt8"93*J9jiS<<ea6`X8(-<4bIho*ha]4lY8Jp
%bf&bQBVgVdMVqM?WkR$f$4estg:k-sAjos5e.V+Z-,NK4m[t/^<,?&@,EBsMHG3I'C<fu"3;B5JC?2E7'^o<u"l,suaCUn:"R?<k
%*74=r(=32.-CN)PWq[:OMit0?3(tl7>,A/WIPUl5Y:7aBAH5_2;EU5u`jMO#]rifc$AnrVA2+QE.#pnoI.a&\';'?F%^[W3%b[A-
%d&MaD"#)Ou]WWZBMuenX.'5%"&6#VUNo3(V0mtKj]`'&C9a=]kHtYCULK3k`KcS373uh=[68Z1*iLW*%>Eo]%K<`SX(iCg#+tO^o
%O98JR>o!pj_\4W.]&BT=!WV8eD"nF61sNFC30^OZp8r!fQ\;2t(.H,LUlDT+XCaGr$DsOL8qtA!^0qbo_d!8(X^F,*8!KlVe-ecg
%j&"`qkhT_o/0,k0=u]lI'`=t533b)Jrfp[GN1!+"]9N_9D!g:aV8<PAYs<3+'TSWZo/*pCiQOib<b9,]?f^<PTl@plYn5$_:q5Pd
%EM,9nTl?5IA5Htl'TRcCoTh-<Kqj)!l`"!WE%k/o:bTtE_cdKq3h52kDn!W)=HRR8ToVm\0+j4X+bUib$K4;TGa3(q&5HRnCsYV!
%E*+25b\cIXkHT\3Qg3K[`>lap3;B#n(LE#PUVnESj'!BAo>:XsMpgONUBr@N<Z)mb[S"B&Xtht/D$?U)[5'^K%Hhe6)B:'-*8YG8
%/.KmK_neWE97q:K*!=P\C%/:%0+G)/hF`)AXTYNsDl)YV?RWs"YJ)nSJhC1)[%>8MEg(:X_->*W3k.((X0IloB4$IdWTCs!TF4fq
%Z91+8q::j8+.S#t&@YL%K<p^WhWqDI%o+Yo89:mDcD"JEX*j[7_=]C&-%CmH_'pd/oX5M@B2L8$@bk=@E2o%Qo;t8;hm(3!;_&Ch
%`L&r;Mu)A5(X1=Z<ZdicU%geP.hI^VIJ(p\5WF9q/RDcKK<p-P=3?0eh/(;=?Bb["Zs0<Gl1p"dk=8SEmd#K]OA(Z';BMFVS-'=.
%Wt,]\&*\(:+5ASJc@o:@*%e7/<pPCEgi"VYhTCI<=Ks\a/Ir=OV<-JKjhV8b+NpjP#:BYq.0!0dS=!S3C$Mf_3(*fTeCEjBN\=uF
%8$r-N!:a/HCfqi"i^T9Ol@V0!Jd6%"otf%M\abUSi/[9kMS@UGLZ=3$,g6&Bn.QBdZhiT2+Z\"Neb\2B)EUWnqV[sAF*";Q_*(FA
%:93sD/0`$!UKKCK*.=`m4?2EW^nSl-o&(ou&6QNib(H$;M68tN[Wo9]&$F01hb/CeesY%nf=MZCmd#Mkn7^jJqV^`QX;\T4C=hsV
%bt)]CMT]iTa&RD(:,0[]/ItU3TOT;';BD?N4%[kYo&)-(V'mi)m^4I=CZWB`YqkKV=WSQeRKDGK*ZS:PHD%?%36oWnU$/45\7[R&
%p8pG:OBn/hW9(iu7og"PpZ95rF\BR@;BD>.^ed-P<,^QjJKq5li34bhr71Z%BVB`Rl[pDjE&@KdeH]^j\Qk"XZ9C7+%^Y<>U-:OG
%51WK7qV^(j;l^Gc/mZs3Vieu$?`O^_JlDLme5@BYjl_A-r3lI[=91!]=R(MpG&a&$W]iE"1.kWSeH^;GZTss`I;fn/.Fm#HqVVo3
%b_3.l_6Kep<ERfW8$fqXe-^m#7%fWB+<7,5=@ljB*.i&nR'IG4f=IH#Xp)[.)C$`o/o%b.j]]n[?kOHG&?]k#&FNZ^@rSIMi@K\I
%Vpl',6VK#(0+*B->c6/([K>D=0:MIe$A:J@Vdm9E('r66VeIXlSqj&=/ujQADF]YO'aFt[RU`A*_&8bu6F_H[m1e).CR)`"f.%;3
%(d-)I=1bXD:')AE/IRRt>YM:9"cjGZ]r25YJQTd</1&,h)?'U%]j5\!a-A7QmKiar]JsB_KLt?NArWBUb4_BQBj5"kcEZBK%0Zld
%&ro5-#6Z>gIf7O!p<Kb>mKQOM89Hjji>IL+XKJSIb1sNlf<PjV'nR_(V/nn@jAT/ug[N!1OXX]%9^ohXou,Zf4E-T,PE;d&J[5GE
%nEQori"183:^mr**=Te\V0Lp[#i3r<&%n!nc?D6efGPr0BP?>2@2)meKEI::Yt-)XG\i64L'GBR[stc*-d24%lScPoM2"\$p'1Ii
%LbAP'UEkb=0ZVbaY)/aXnI!,b&sl+]DYY`qedTqFcOb]e#5p.BJKS![&C_70J,WBTnV>42..EG0fGa":'gDR)-u`/E8X%^>$65?:
%):9-*S</SHHl<b[/2sZV.24bRh*rN+;Ot+OU`k:nG#S9H!stL^+(<Z",]JDpPQG$N^tEhi=fF5H!iJU1b6S4\JMqUDJ\]Bu$<5.P
%"V-*i*=1FYL7oIr38TuBQOO:lYc0#dD,B/<;8g@b:uH0T5uaLCJ^Xb1![1;eE-ChPX)!1,+RoMGZ6=e*_ZqRl%1/OZ-Ca0`i'`/B
%Li`_#V]j;?La`lp;)R$!e:>?&@\d%>5i<%VB/X[&J\Xil:"ZcV"A\/`)@82BE#-c-^^UO=<W`f@L'%oF8+uu/EPP/Mc/t.C"&??a
%C>XaJ:=MZ)[*3L)R>WJPBPC.l*2$ummPs-dY^1_X""kpq)+GTb8?.ql7iZKk/i"8#1E:?tPt-DbJ29_K5jM>gE43eXZ:/cKWFZ5(
%=`M5c)@HN,$jRakLV2^X#2Bik((ne/$oih^X:jePi-\O[fiAr/fFGj-RH&hhj?t2fj+(@`J($Ao38fl0lZ*13D@&s0L#%XWN7,Rd
%(i]C.+a>\n!Tu6F@G5,)C"TWpYJG`n,-BQ.'QB"0C0MS`3:Sr\W&6pCB3c-Q=;hN+Mk%<B)@AGM7bre2"l+91V1o&sG<i,r7ffO>
%mhP>36igqe%R\'i!fe-CfLA@3\)b]S)^+',VW8s:!us+18?8a%i0Z![<mMr)fn_S_0LC<Modq?a)[*YcaG2U-!2l']\3YXD6<^;l
%!DWr)e`RM%oTbqE2DL$+Q7-9cjq-IXFhAoI'*FcrAb8;uJ.q[?77U8bE#]">!-J]hd76*U+Q0m:/C/AKE*?#InK?R/h61,s\qpG_
%Qql3QbV6hhrTM`^,R-6`5=5*e$uda)/\7E\J9+Rbd5MbY(:+<GmM#h0;U]oC")]'n9#grK?sB1b&I0:bbqU^Y3"u8OJ8.(%L^FF!
%q$[NKDp;g8#6MreA96(I_!1e#/V=Tb/6GmW%1!q4A&#qj#95NR"BPFK%QO,+]6YD+\E'tjfY@NC=O=Pr%_./r7hfp6%EM;i;8BHf
%fhp*n^f`A2dc),O3/^2[0L5_PA;oRX%0`7*F@du;7hfp<;?[W.Tn"q#-1'Sh'Q=7e$Ki]ngG_^[?&&Gn3f.k8)%8Ll:r*MU*,tV$
%1>(0>^nk8!G1RE7g_PSRBLq&4qBHPY6NW%>+h3Ie,]I@LLr.W&^_'3Q^;#C*%Z-kTc&f^aAmJM+!llOM5(8@lc6sccK,YF_.h-4D
%2'd-)PkN**#op!Dpt6Pu3'K&OFup<r1G/f_R3@,kM$S?$6NY;P,.1cJ!b\'-95/OI929>!,7liWQQ/OT3YJsPLER-d6NUm`*s9q#
%$J_p1[8hP8,aP1O[EP;ZC&<YC7jr?"XLM%N'K?K5a@87D!g`nRpAFKG@-&IFp'_:u[<5V>[T[Ma1rRk9^n"Jee2\4&kJD"XPAir/
%m4B\+$J\bn"OEdW0kl>?d%J0_F-i']"r'%kD;"boKEC?'nV%,RS0+AP_$gYj.D-f5q4pB/UX35rble@nW1rt;c6jV>S3:-)aBfY;
%cD]CU1FR3cJ?f'a6%Pfl=NE*5'KH!2jR,qpE-.c[P_!:pZb;;k<=K?VDik1oI0p1=f;1(NYe[NjV7D#/"ce9hT;H%JMZg;XL'>kp
%MI_SJNo7Yr2^fG$VG`P:7kAUNOnoXs*(B(e7-IJ*OJnp4K`];=&.Xa*"jY8<_=L\UE*Pb3@>4oFWqJhor.Y@"LZUDpJKpR+gL19h
%N^8N`dt#5r]TkIg,(ThD=2)KZ$ChqMKP+spi!]U0m[amlNWgtBU':cr^Tq:&>Iq=9q-7N6i8SY.@Di4[Ne^&/%1=-gFqi6,^j/s;
%^)^q2,A'Go=@31GJGjmP1iR&^E#:JiE"3u08&GGdo)8"bHi.D:E0a2GpRL2n>LqW82b!8PAO=M6Vg..HLH[XAZL':GaO$.miP8T!
%.*RSV#L9&a!ccHR^p0;K/#OU536OUF2T.:1!5`8aO;T*!:SU4nF..UtgA4l5nEl?epdmVf4E,Hl+fIWG"/dRScb&4gA*FZS[,Z]N
%^kTOZ1H]X#2dOUe#L5.V>MpD@\8?pIF$+Dt&P_J.i7LL-h01htCjQ6*cf)\09.@,aE8Ztbpj!&Kc:>+HTYZ3>)73X1*4Xo\!$6+a
%#>PdA?1o9KS8%nag^",pf=\8k0S]ac+&@FCL'GrU!/ju!)E=GlKa-`L%3/h$G]Yc]psfF0f$M2aM5?UUSt^d'>V(`2'b-\<4i]U<
%.2k2&c4Wp^Tn-F2gCp#NdD58nJeU:6"%V:P"Ek>*)E8uFopC;],7b;IXH!IEN'm.L/8uB$R'H_rNb$.kieR_t\lAA81aMQVRF((]
%i.qO`+%@5h#`LD]$oh^HJV\nV'QC!(,[rh@34o0J)_o,5jnb?3J.Kend1O/+'+ruJL&c,Ef9"dD!"Oj5'1Do1A.L%eoFq<G@!8VE
%C&m1rEmX55#6<(TU2IpL7ctO-TEbG@U^=,R)>Z:^CLZ6PqD\9G$!#]p^O^S5Gh+nK2sdBbRgJ_2@RRJ<:=&gA'l=HY%A2I8Yi"NO
%B'G>MI\Y&C9l;c6n*C4:\:]6?W^9&Z)aV4f-6u:frJ!]_arBP',tQ\56,0[NfcT':^Yrl:'?G+MI__hN,C[+FaU\**?9AU[abKO!
%[kV]LIH07[Vp`ApMis*EY]&$P%:oY,Ru!AM(m2Q&ekF;0Ui-J%"<)B>oM%&5725!U!lTUMdPiF.7-7%t"$mZW&a10/T=;]BcM(]m
%?IrW"dBf?k(fA"Eh^muo;ikpfbb9t,hoJciihHO%K6Z"b%%lL*%r+1JHuB)F@/Dj,Drd4SO#(lrY[RZHVLs5*o.p$eYe?`Q'$KL9
%d,%<`')fO1HV<.[aLtMcDhpE0%da]3dJ#]/2f%L,YVX2jL6tP`%djeJi3_<I6>>X"@[GLOg`()C-FsfD)[[>Rk7$#_,P/jU<a]iX
%0@948E4lLQeX-Aa1Hk-5onXIh?p#TsgO[$MpSVVp,C;6AO33rPm*3%ic>H&DAs=BsWH2Tg,V':jX?3dJj5[q_RR;G^r8Jh[Zo8K+
%l>-5.g)DCsS`i)@2_IMOCe+2r?m'"S'\OF7C>06c%1/4F*S['Db<T$m.CM11a=%1)f\WhbR&TQ,hQT84;P.HGdmtt1O4`:pbo9%P
%417'ndWmXdp6H8sM^,Yhj7dG1*S[(9L.N!.-W)?/On$UE\i6abW.=.X\i3>>+%L9gNl&:gJpYrL@jf,%g`(f`l!J5ahQ.=\ac568
%Q8T+S^h2N]6oo91O20Qae]3hji8/PX:iS2ppU9(t%jSTn"@rEHm4F[C%;9[G,U$IGTtOT*,5;<Km>Yo`\c8PJhFs`Lq7e)"@rb^4
%gQB2FTsF5NN7ctqK@B7*f\Z6h"[Q[Vm>\q;JD%3@/`S.+K_C.m`2N2Gg7(B9WcWsgL4F-n*SR!>%hgm`]ig]>e#":8_nKb(c4&Bq
%<^/l.("jPr"elD`A8b,h/K6U0^"MPo,H)c4Zgs&eh[J3XcD*Xc2e[+hR#IVZBQ&I^d*DJ"g)FH?@J=H^hAXn&,IBB3T<oMKd,&Sq
%6"I&aHS\8BW8J$MNAkAFIh(k*83_16*SMH25X/q:ljYCpL)R9T0/La!U.%e2YRtqaDa^/7&8Ar:%*q"HKGf?S)5Ut;IKT:u7#o(f
%m#@+?O<)Sr]c#F3pHSiSL*T*`FC9#6jrB"r;daP;Tic5'A8fR;KJF`ue'X50g79F7'7V>!)2dd?<,Vh3AV]tk8ra).1Mh!lNDW$l
%Z+[+F@K4QV]r;XdeY1XP</*$Y&_e6;"sIX+hCLW592!1r`nonKd)!Cu/T.]J!;C)):L]=km`k]f&(SM0+V>"+)7VUaXR/HWo#lU3
%b(f;smG6Y9i:tEbE);,6UG0UZAmJlA0s90cCssUg6c8UEpo[KkFi=!>_F$PHf\U^XZQ5aQiKagfeI:.N"r@k=)RQuLW*LC:^$-OR
%P28m+]kL-D]"UIWZ_j@kWt!g1H__a4;L_-;E4J`Fbm[_aJEfEH,i\cW"];gaY<^!&5J8tn&O?[f:08`3/5&JQo#Yk>cs4c#%$WSb
%;Npf^?m^3nE@6HKm1!A]M\)XoHSCCT0J=$Z'$,YUkk7PQ,4"ZZbihKd&@3DaJ;<K/p8DIi2@Ud_//n57ndIfn;QFdBpUX1LTJ8un
%gk56QdYCE&&UP,ULYde"W[rhOLfFGnTIb\rU_^<ccJ%`?Kn4KWTPK'q/DA+]_Bcbs,LVTpl7GII:p`21Y>>gg+tK%!O=1JLc=:um
%Qo@'AT1?C)!4r;F"\_2#B^5tGnK=!Y,U%TTc5XWB#J4$:m_slJ$>#j@Pu_^Pl5Z&*NXbA(oH7HgHsV3(!aI"$L!l<A,_h=P#p5CD
%"+Y#)Yt'da.GUTDJFD6H1,4EmooKG\!fDm@!&^Kubd5D5fQS?f(Em_h#G?"dH6SWK9+sM2?mU7/W)A8R<(N2<LoT\/imA7@r"L4Q
%p&HC]=[S@oiW)P`DR>0f()2Lt+?&Fl#7ZQ+7ha[!I<b8rM2EWEKk85RePIMjL1eT5G%s[l`3Z@9-T,*0b+cC1.-(@.P!!-S_57PG
%b^#WNLcArWYS)_$PmFp$Bse!T0J`)/(:WjXTfiVd\O,[c1^i6Zcm3KA0*Lc_OFR>5%M)/:2Uqdd)s'_a,t1k)HU]"JLJ_Frl1<q?
%!46_))Fg/:d3qfSXro=Lr!`GN+P[J-at\K>>dp9>LiDnEk/)bqmd:8rM-#gObs<T>SfjFt&e6`q%@%]pX.qRm@_r0oQ;%OE_#&k:
%./Y+q$p>Wm;07e8$c!IlYjnY_+s.UF@m4sGPq=IXnuU/Ial491E5W=?4%HKF[gHHWoGJ>+4ek8\AQLWA8KpBa'cd=)bQ'!n1W1'C
%%`csEP/VVV9-ZZO[QO4C3k@:IW$n;@Hc6>SJW`=QMO6Sf-VZCp-jnfm,_"Z/8H>=BVbY^5"Bn'%Xs],QJJQlY2oXS1$":/^?NJ`P
%ScV2'-m^!@a$;0\FJX)P?^t$]6=QYh%t]6/!.DqV&D[>>;g<6cJG#g0&BsnUkn,_s:]rX\7`Gk9Q,eq+Fnc-gj*8g`r^Qm[mRYOc
%,l@oJ7t^sQ(3/TsbTqC&'F4mjInH)*@$#_L`mU.:V'3qc70nX$.lfF?&HX!r.Y@LJf4l$K#!bDk!T=\U!Cc^DY`+YViaK`^*EiV%
%5$pugbXP2`EMg%f*NRkjep?B0EJI%oeW\%t%2-AKA9tSVTF+@bTR7EQmB$8NO[Mu8NoNS3&_e7eHf@e^g^[+Km72*.!Eq5/0FL4O
%XH4'MM<`ath=-AsV*,`nH^</S-0d`M>DfXo%E]VQgGHN'Lq8tp&'0faW&C4^28A4o;FV(83ru>Q?5n'%TV1&1.YS+s<fH^>o4Uo/
%7dG)N$%kW:5i"2Q??$E)L.Lac"+G8_>H;##LokrFkX\I+TI*utn;*b-1u23K'\D/q$]ErU@IKA0$^(dLaOs!r![PLIN_REO$VR`l
%Gn&@SH<]kIG(!hZ1A$P")#He,;B8W6q8,SG9NicF2[,JtHLMedDo;*Ud@SWn%Yq\Ek7Hd`./u=R))2h*:I4PD"R9U32)ura7!B;2
%6MTgKaMYK,or[o[OR+)a.8ggMR;i8=-kl%]ZN]&A$iVl6qU]RM+ZiW;*B7"9)Y=G-J<pj?*.XFu!Lq#S+d:SA08Pg3;'%b0R2gad
%;=;8RJk$st%T6**NFpRap4ZrX!$[3Q\1e%7'#rI1$AE<WVkjJhi'P.!rkL(Nr"PV171ZAk\j9#)>*renOa31g%6331Sjn6S=BT/>
%"I<#*RJ/t<6@B`i)9905>SED=qFAr#"A+3sM"_m*"-_l6+q5ga2To;L>@[r+!nYb6,X"a3o7lK!GSkWB#pPpJij/t&P.I5(6RUmE
%RB&Zd8d",)r+&jVfug5XKKC)W]0[hLRT(D=bI7XQ1\&ennGW4/:!:>j5\UpMjXc*lgrCgA#L.6<gaGqE_UL?M_ISNm+`*IsffW,e
%XKRP\<8[a63M?s8HH)\Y"Fp]J5[?ZL]@<k(0Z><VKd*;$L-$&lL<@e?FVS2=#[jCL\9h-?d>&nnGlh4mQLT2fh,*t'4fR5T"Nq&5
%Z9pu;-'=FlWNGPR9%)67)C2nKB6;jD^2@gfA#KDE]=-[N#$-;-3rn.Vedemhr10)s0bB<V%tFaXS_URaHGeMQk#"eSp*6TW#/5JN
%.S!$'6PAH&8Z7N&*1hgi_ElTB#p#rX4t(7o>:JN+;;t!\A1T$G(jO,_F;GL0>6fj"P!uE0!_F"I@AOkfj8dP<Sg5`oNR&8s*9,=Q
%EdXO&%\@`_+ijh-ei\=@@Orr/O#$,CEE43r#"FdCfYDpo)8hZq5.p4,'@r!uMj9gjlaDa`,1n,E6jY/81(f'6'HsUj;Go'>VX39<
%,[D5g9pV'S$QjC#UO]<a>$+IPW5d+LSkS0r$4naFZo`f_Jo5D)eO!'c0lVBgZkY%!BF7"`;2Ki-6^d_$>N>YN;u44af2&p2c[f<k
%bU7b*."Zo_D?`@"N:S:qP8;JGp55B<BYbXPR&2M6r`t_0U=-#/ZXZ75HqnE)Qm`?6E$&KP@/<Rj$@:4l.d5,gr!&c,*9hG1=EOcs
%joK^$YV+S5n[uE>(5ZpR;/AbAOs+C+'.<m:p-t%nOcC;S(<TtdNP2..-=3HO\l!uanKt=@`dW)1D!];P8>&Ncg?n8H,).b)*/`oY
%8*TGs1!>.cGpX4:,=.mCU;%\qA;rPjm-;OpU9Q3ND1Xn?nSQ*^7Boo,lbmWUV7-*@2WlD*iF<Jn@IGMK5hciE7#Y%fSBmQ1%d"f?
%,]XP^0J`nqdu[W<<^Sb%2q;?@Qi\dlTI^:iG66D_:lpF\P4g1]hgOqqK:&\gYR_/#LpVAN.obhkq3.Vs*Hm#&i-@R@M$T##:Y8eU
%*%$3+lH!O&K%LG6/@+N_SnQU698A]>;j.dJYTJ[^$UZud#[t<D=!(+aaV,LB0dE\j]:9t:#i;HLTj*(+JJCX9#N<]3!+K&5#Qc/g
%.0M;;N#?Y#9]3H2SLWBY+L-Hm-697-(",'aLiWbaeUkY[?:[EgfFDSH$g`=21c9V0NFoq5M\M6n.ubJp\h<eP$*"js5cRAZ/^oO&
%?UgaU$M<&Hba0Em?O_MhP=[CamnU+#dGBaI?d2=OXO[ONW5.\@bWU%K%$JDshg+Z.oL>oDBqPo9K$67WK/b`1emVOo^.)`;<XY#K
%K:H!U<JEZRE":lpY(cEJq*AuP,(a;NCs=eH#hhL!O\B0`6k"JKCFH+bK4I&'cWOQcU=-)aM&J`afZD/A'72%t<eDItHt5%g72kjL
%KW_sk+0tQq0Fj[t.EPuQZjdXYm6q*""n@'J(tjOp4iSab2r*MPmN]J7AQRi7BmBt>p(!M7[U`E:IV#9a@T"'UFat'Sco4BNn;%Ij
%orW%<1+7;^#EV:hWA5TMF4S;qb:O-+a3PK-3nH)JmQh>J'ET1He7]C(7!p+#[^K<0FbeQB$Sbe=Z.D*d!D:F8&(l?`cM/hTjCEtR
%4g%TJjuLu9DW2G*q-?\)Fadou]:RO[8nuVB8=3)VKocH#BnSaQl#4V*4N)RX?RAouMULTZdjL7h)s<PKE?jaCKT^q^M1(A[&Qseo
%$=IPiL,BZJBq*Y^6F8.%NHA[*oBSe`q&tn@f^[>$JEYMMTYA9^,EZ$:#YB4XSWbHCNfMnpGTi>*JW?XaT:mm8LqqMW:5Qk:Tk\Y(
%1Po.j-5]K$*/-(%7%RO+lP\93(bL8bU[a>$9L^CMOtuNgQ),N,G)38'0u>SPC_mHseosNQ.0IPNo__^*S[r)H@l#Q)SQft-LgjjT
%/NE6*;n`i(F]:ZdAUk(.&X,SNM?-&^r^@H6A;jWj,/otiHIJn=``p8g6,SRB'2]+1P\nKsHo^P8_V"G@g&PM,!GtP#b4(<]cMEc5
%GDR0)0%RKeG%.8I:So//\I<@'mJhim\e1&D<kID@8G'9_FZaT38O@sG;QF_k`$]?HK#"6O3^JDnbp341A583B?'7m.7$B1G'1QeX
%C0/;E!0uJ7Pd\+HWiFF+"*]>b^CbHf>&9!1<n.u%GX^m_g.s;](ibS09>l2=7LPqAMaZ!$l!S'8"._EgNS+tCaZq![J2.=B/0YsV
%Ej@%>MX1T;,ZO;N@?S;>_ZFKXLLmgn(Ch`a=Ckp0daGs7Ho4N`90eRB[HZ^IZ)'L0?R4oF(Aqa,9*?)-@.k9@[3;V5<jptbXZen0
%9@4&82:(<E[/UH;"@`B5Dd#^c$=+t-+cE38KSVsa.3.P?,h,H4gY#JkE)nkkKL1T^ApuZE;M^o1mO:e`&1Bo"+>390&-K<^=@,!\
%>[kek.M5m$'$$N#:.iT0)&H+Ta[3M3S^`2o_auO27mmEG0GYgI(>T$oJfg/$aeF#)d,&m3$*)m8P;j)mPU>UVE2L]cO$G`G1e!?W
%9)p<MOFK$rNh/lo9Ul<4%AqO*rfmD)O&22VL$a`^/eEBS$L8=_f$pW,XlO^<N&Op._]TQrCoQALb68KhlJo+.4p#d_$kep[_FbSH
%UWFW!_V20/iM]=bKl_r9[jXs=8BsZK0X;`2(4.7U"CdG*]G"`U!cdd=I548*Je5F=jRI1Fi][Z'CO]^,:bi2bZnWS`(6T"#W+Zh/
%5*ZlbDW_>L)3O^sW="ejX:X;:_f@B+`u'Zh?DuK^:&kT?)Q;r*:-:N;S>8_;l3Y5O^bC6NJjsueQGHPm2)5.u1Ii)0VDI)'[N&[]
%bjU[R[m\K1'r`V;NX+>UrqOSp:@Nl]Q_(jgJ_/0'-A`8?"3G:d"BU4?:F*0dEZW5ml?5`NgJeGH-A!XKA@>:T09Or'5[EUYGLA<"
%>W&Ym]ESK,UVockk/L2F'(X]F)3c8ifj80(U`Y%`%i*,6,)'N0E<GB(^+kQ[!?;)Q!Koh_r^PC0*S<_6HEhEl#MWIT+_Eo4qBbE1
%Lr=*Z/8Yk>pPDG6K6WLudb*#h9Y)LfQH],u9JN:*4>A]5-+=L)7O=aCPVA0r'Vug@Idl,XI;rdMPsd.HZo+W3$e#J'HfG_l$UXTO
%Kp+%8!R=jcdL2-\0FP!l*b4h;e!u(I/q^ee\N<HO'S51r"X]MYFP2MqltoT`*>`Cuds.?(9@_IG-X#Lu"!D>h_`V^,PVa^"Rr_E7
%4kjDq@FkT;!2iii%HTq-)0u&_NP#K4dThQpZpAX],jjWV?E9OEdXXjMN:*PGntm8OeZA4jI3B&25b7:IJUnO^7HhA:&Hn"ZW-+1F
%6XD[dmp`-H0Wg"Z)bC`fHrj?S#+uAi.J'IAoE(2'6PO:%nUh"^<QD2:iJ:cI^5&Ls2,;C=eB2e37FN1D!ZQJ_Cc4+K!lg+1-\`6)
%)D3[GNlfH!&EEO^*Y:f_$Xga^LQ>".KOqo7Q6,qA4_q2Tb6B;cO^*&q-Z&us(;3M^<6)l[k!DX+YKN)QVJqp_6PIMeF%_.OTbul)
%UrGgI'-n1h+Y3-9eM7D=?4VsMY6#f+!J$i6NF_6=ZO9]:JZTD_l@JW+?@'oE!C8V(81\\6?6Lcoo)d&7mZ>rYdX3MeBOIADF;]!U
%(g=.re@o;nA=eL."QDQ\QEeJ5Ne3^o#h2X0VQ@T_N>ad^"3!j]S:GU@E8e'\'%%ppW"7j-N2Z%CYie#;JHu-RKHh`Si<H8.%K\BG
%UrI>3fL<53M3ut<S7[qc`Q+hbK&DW!8>934B.`I;;uf=TfiAmH,dL#HB9q]uC:.p`eH=Xh%YUo4&qFRV%R]`<Qb6OQIu1Ek.Gl7j
%6#I0*<!CMj95oDKOu-`?at?F&1L!.jWAN=n,oOq\2?]^]F;+J%Kd3jFk97Qq0Fst\2ah>A@)%jeUo!M_!fh_>mL(<[:#H)S/Oj_p
%d9V>BM8A0"A0\?&GTjf=o.j?L=KRd_LaTF:!%BVoITm,*&dX>Ng?u"N&.,%D:V$VGNe+:%e?BXV-S'[',Wt;9Rd3>1*jc8nhU/k9
%ZsLrf:Hr-Rkb@'Y&Dmlq/b'DaUgnkI1M"Z49bs?Y<C-`jLcs0B#U"u)b,tkK-t-S;>nVQW'2]h^7='ssm9+0t@6d8s%"7";?O['.
%g(EEQY*J2Q;#/4T[-`EJLCbf4e1u2uVG2'oi1qVM4$YVIOR:Rk,dXBRT__5TbYhW/$o"R"KHuS"`^"N+8-tCj8kT'H+MAtjHaXu'
%$?D.!_;e#25%:?knbc7&`/n.o+sD8X,eD5CjV-_!O:=O45:`r(:j36QO_6C"2CX.5@X72,Ar-Nu+^@OY-C/tNFXf-]_l.aHFH,=W
%=ahe;n'#:/AP,E!D=FiQDs8I2>fNP2Q!b.:%P]js.S.(F,Kn4I:$.UUVMZ)i3S$4O(`<J[1V"c?^oSHNFi2XUTu5ci*28?91/E.E
%4@444eDfOBgG9fiJ/AEMJPW,%`u1agKat:3'e2o+Fn;i/1R;$gZ6:(=_(fO9GoRHOSriuW]bEJQouWWd7-PIr<!Aq#!Gd>a$q[(W
%)B134&<`3\2*O%_.\]h,V(C>p(>6f^Ld,jlEjlm>2-1,d\@OfO:0pPb@Ud^7%Rsn//D;'1i(++'8_k-jB#:Zh!Rmo8M'N/7XP/2C
%qRd'Q&6+d$aEffga@9cZet=5OomM0I_cdG$9p!_1W0"h=K%gJHpf;S@ZCjA-KU=c06`c`X*tAq#U3HkJWtIiX;JJHgc.cV9EC7$j
%+he9##15DG[%N.r6=7/DSQ$:.,oDUS30R/^]CGEfXeC'"Jr1feJ5D9U6#+kh"?$:I%J'n.=#%!OQPF=.8<tKh&sAUF/)+/NnuKPV
%_p(XfQq26JBI;l?&bH9/8_/2]p.7ND[mrH,@loOC>)@:R+I%lO=SN&5"%8+nM^8TWcj@Bb/@'je8GOZ4"df9=+!pJjK*0.lQd6>(
%[+C3=Kn6rDa9$i@''(AX/6GRQhi:kTOsrj'Mj^4<<9Gs\*?ZJ--L<!=#)SQ_@dh`QaDG,`)JO;gQt!O&3(u0cQkcbj$CnB;8?B]Q
%kV,<'NO/nKR$P&XnPm'G8]+0=$KSY"<j;8Cg;q5%+eT_F(pOmqSn56@6lO+"Od&ankdC+$C')Z5&jT4??U-m2^18OC7"A/2Q.5[r
%BAnW#5:YeY%Z4k5MuSVnO(7e(5lYn52`lse[-pF<-7&ja*0',5I#c)Uh.1UMn?0hqe!1*(*[F+Kf:&Mc?3_4!e<hj;pdH<Fda1V7
%ccqQeIDM#;N:$g+-93d`Z`k'L\(QuXK;S_&Fd^Q(jk&:.W$CK7Vu>7,(c#($81t"K<H(WhacC0aRR^Dg>bF_Zk%r[S1@N:I!#tun
%<>aqp76(s!-HcnhFqTam>e(c\@qB?7%cZd*b2DZLIeZM5YiniCY"t,&a(,fl)ef2AJliNGJPDiZMW2-7V_bAmJL/8:?M'-o`-DZ-
%4qb7ZInmEk/i(98MrYL<%:KmH*M,:l-0"LUjqU:l,#CS,_/n*/=lA\7[3.@Hg"KkXaNorjN20iNjbe/=$`jT3\,5\jY+uaH5?rH"
%MSNbc?:N&#R'$YUpLl`'on9E@KR9up#W@BuF=%:c6Lr:j_Q:9H15c&S^*B,/=r.>f_X@rDl4AQQDmpo7G+_>o&SE'f]s?uR,B5Aa
%>*g/6#P5p>PDX!E,*G9Y(HQI"6tjFld`!kp_C\:!E[+qXD:A8^`+_\NZ9YdA`@[?XBC@M4B=.huPZl!D13N_L5VW=F!)sYmH5adK
%@Y.D<$"6jD,,HO*/^j"<,DnK-</M9XI"@A)/4p[AAZ#2F+iKE='Wj]L!eT,q&32OuRj)j0d7IA:84JJT99LR2OQI?>Z3LR#-"AbW
%m%nf`-:E=j][A!W4N)[PQ7B'39)1!$NlL34?sr>]EU9PH"'(Sg1'"$a*;bgkYbI8O+rhf_5;`'I$=DKGX4>cd-P3.$aCS4ZF0Z:>
%=9G'n"M$.&Pd'$'9R^_Z`B_)hBU$$J(:fbS@PP;3jlnlXjd51_.m[Q>"lLJfYV@U4@j9-2QHFQ[,^,b,LkTpPO\QjtE\mg]X@4:P
%He[bsI)l4Oq]oRBYXW_'==KIZTW)eqW!&RnbH57^1;BkF\O&V:,3&S+np(tL,*SkKg`6tJftH`3RoNf`5"nf'MM?-4*dpe>1e]<#
%ZFLTG=j_lD/H@F*FTf@>ku\9qX0!D9MX^SkVb;7hG-Xu?,UHY^8DKTS<!j$9JF673LP7;?IbkAN#'o9lp*83.,!e98+pd620:E"F
%2ip3e(o[Tb1OJ(<!6FB.(<J#RJQ&^/Ur=#3\X[WBN.<$ie@FZQ+<n8&6dI))D#?e"M!uF<o?//C,)K%SfJQ_5r^,NJTONeo[Bge/
%&aa-:C*?\npjSVB(4_d(2KmfJKqG)+<r`5;LBECMQ,"%@FJK&SFMu.NnQQ9paj:4pV.8g9NJa_e&o-E]^k&?t:?W'RBbbh-)<E-b
%MaS;(N,U#^N!^,*jP_"VlN7@CFE@hH8O=;Pi9'VK5gL`_0)Aa"6.?@,#rNF.S<,i</r612BB9jt8eFb7qRM2Cnj(D;Isu&4a<cBL
%'N>hm=:5NZT!_qRjW`Vdb(:b^A.23\dR'+CR1D`SgW4Z,Zn[MK.ssY(+4(-6i>'LWi)#PKYTmjp-fBlDZBkTZc9m6BX'_u=r>&[1
%/FDT?)$kbFq&o.)CE\*7*$n<?D2?H3-j8a;"S@5.^_YZID)6Uo=H28W8d6[j6"$edif\1;1%UZuY[EKj:E'gm:U15%o9PCU^g[uK
%"B]t`L-YuJ[o"^>d*jEWY)oHP>B#<"B*]/TS00Ps@FQ,p:rDNb&e$n3J//YV-b0#3p]6Y`(Wd42T8j*4(1$Y?d'83cAqAW7jm*Xm
%/tuapM.0C;S"eEq2CM@.<7F'28m1*"#[kI0!&AXE,lh>X-QNiEbr>`.Qe+US&Z#,R8jg+MTYQMG6B)Qc]Elb27c8Se+5uGth.e/k
%;ugcZO_LO6:%aPB!8]45%YF[:C877qCaN6f>e\-Ej.VUrr,gF$V:i+-85'TE7G5Ai3[$0kb2W17#[=$PM3=QJDQ?Ks9^EBKKg57!
%,fIL4D\j#kQj#t7T+7\ZKJ"Z`Itn1U!8**P_DkV,N",-)@cf"FMcU.p0Mse@cPoW)*YdF<A47b*YuE5.gIhV[V=g>Y"Kg2m%9!09
%0p<Wb:Rtm^Z<@WZ/7U:8TH.4$,PF(^]<Dgf5/OGXYhiK)-KC.jE)+>0`3Z\a"gEM!f#Sb`,%lCQBY+E9,cM$Djh+!l/4LD=Fju7K
%YWO1tfG/N9P&&"!?uH)l)(htBS4=De0.A*\!Tl0:eB5</_q=1(-"[SL6=:[[fqqjYNabuV%&"MIi8C\(7uM/9W.Z3\I\OGM$CKLS
%G-g*P#ek#C\5.rd`Us%`Lc.f90I8DWRpeiR1T1?I+@*!]djilK6r\"oW^p2)[tIm.gOG(r1F(eL-4V[scrYs?UkF8L<fT:<*_JX+
%(4g+<K-h9d*TU(>XE,BbG]gsmj=o!K6%CRkKfJ=B1BtBo*Ak`gB1$n&5VQY<#g]Zma-;[o'NJrib(aA`7g$,L;hERQjA&t,*bS"`
%\DdZSX+BmJJO>)TXDhZPU?(=diQu'XC(ZogZ/CD!DGGQk7Ri5K)Nr`2&SKO8/E"6]bYRZM_\6,n6231-n%N\_=JgY"AoORX6m-d`
%YXnm^[uBB^Gr1l%bWoSWF_)+*M"Z7Sng+\2!V1PU::1=&J#_/J!#;A7@bZHe)46J9g([(!2".sjJ9Hlb(%j"Pc]3"mY_%"VMXKk_
%IeYodTZ0*AKo@9;I4G"1YM8m!3[plD;;=F'(XYOhN&Z5=0W5X9%a%$0DZ_YI_FUhhco>3:-!3#GKkZ7&\Xh"I7<Cr)7bX?d2^(r7
%Y`D_!DcfnD;35%$%^AE2+q6P+.'c]<W<D[Q:*&ZeoJ.qBEkI:V3lAntWJS+RAjRK<Gd@Yn7%o*@2G4%<aRdh+Bi<D2i^"\%=Wo:S
%K3O,DM-%ir..Fle9)-qDY69ErQ2u4ZZEg/51rUf/\Fs`)'sXD`$[cD\H3hoT;PW^B_.9Q2d4e2YnOt,;1,suh%4er74ZKg1T[f\\
%L5$!S6QDt(j"oRO4+r</<cL',&e%nd`JE^Z$#N>4=caNNh28$u6kuR\E@90FZ8"A\k*6u==+hEeRkL5`d9I8/P/&GR\Si`+KH_q1
%<!h)9!%NhI6@'H?"l7p[7FHg(9m-[#2F]nP\k(7*/h8jfXn&FP@(CD/&EGTNXX%DL%V\$,+V.bD8&S)qJ.5?o/_"Tg[>9\ZC_k#Y
%d*Ec#Zm<$Np[-=ib*VGt4HYuXd)jFD$&iqEc3`u;V[nYk48_q[_T3(h-jFB8@0YAhaN$j#B*U9UM3%@$86Oc8N6mFnjb(XTlnIAB
%#:Xp9XY$u*^l4uG!uDXs'$/aH>>c2<G-6Q+*fn7Li@nf%Y@2_BS0p<OABnUX^`$^JT,#^3;%T[6^oAql,<-,k?Y1;&@r/QObBIo_
%U;h(%G*LI<*[Q9P#q"Xtq@?^(`g:3$?d`[6QDFg.7Z%$WiA]uenNrB]@D25DY\$C^TAUD^bShkC*^2H!<YQ?A%&r#3*0[%Hktj6]
%`2R8!+/N!hl%B2U=Ou4;F@S0t_k4fhN!Ma(lPuH<;\?/R`Q?>o8rkS)^3u4U*?N"X8=M/^#)9f56"7iq&;0[MI[XFLJ/=G9JK**-
%61YO'?8?&3iV-S9Ma0EeTrh;EZXt"JUj.Wl@\A(bf,`U0RB);54A(4n/WqZeh#eeT+H`,\UfFGk;lm#FjnR'38I;;W&l83<aO8!:
%O8O>XQt9Nc#cp%p'oJn:bY8A[g2:bkALe.i*U?_$]g/9Kfi0Mn.RhaD6h<N*3S&h];PKZp.a5`2K$qS(f2hSh%&!f`5dX'c584fn
%T19f6R/Tgsp*DL+ec1/#-T`k)[Wq'5OY1lZ[Rn6[aL0==O[2_X#Gr30Ipdo&,m!gb(>a9;MP3A2@lA;N3ruZ/#(iZ*[[*,%gk*rT
%_H].LW,i_Ee-gF_0poWj>W/;\&2^q-:nt$aGU!2lPDXH@OIhr)T"[O4V=7&51$Ztb_p@ooh>ka9/2=*Z'EAXc?4ce3oR.=WOYF=B
%bR"2H_EJjeZA6er0>(8]d4V[5.>'P]U+7p?pf,0OZ;f&i&,C7MNNk@'8/__pP^>\cb2f9hcMEc5Iu-,jb+0ddF-IN6::j#,>@0!!
%\WD>*!:hKA(hmurS=UrO*qj5EZrpP889gj6)+PHB3cUAmbUO<t%*a\!big?m;:s$I,EIQdl-+*sj-g!;H&aKID1`F2aroi^U6@l>
%(kN=M,dB>%n]7d>6X`NfB+`*@Faa[Ib"W4!-IE=A8XW]W%'1?pen;'67Yb_^<](U@(l!^7bB+dC\,^i*AHX5L!*"CSDQlDt_oS'4
%lk75gR$U.@8p@\n9JDu;U?>C*$`UUk)q09$PabJR##L:%7!QXYJKYbBeeu<2oL)7hMZ0g^i#tl6--OMbfs-uBR9L4.pp-Gt!u<=p
%%5MVVOtn(e"ERO-+.WPb-89UD]-3Tf6bNi6"1:-E6L=Hn;^b8W(336ghLMn"VMEh09)ZRa8ognT)Cq>![(:f#C95pN'9ie0ZQe_E
%q%i1/CVMY<DaDg4V47C3==gtG&36G%&rMQOBk)5tOJ5k5b[h8eH9?;;&$g>lCnV[=.ZmIs>2HV](m9G!%>&#7M.;h]*lM"[8q(Wp
%0-tYIMaGl^+FgdLZSKZHIZ&Y4VE@[\!XU*[,Rl#u2AB"ATdAkE3Cj0)7bSeL7%@"O>n<+u'/iN,,7JG[aMB.gkml7FaO%0/"trJi
%>c_BXAH^ALD4+8,:C0ssfUn`<R%F+kac_2DaX85fS\-Kdk=kgkAR%^#7<!#S'8rt*T/cbIjCeBaY_(8sD?QK!W@O8<G`Au5:VV[/
%!^3_$V+[2;rK7YIC:U/FadSHOid(D0,^s=O-$)kuh(qqE+9<#l3)"[Q8UCNI,h3+s*6[[oPS#@H:^hkfl;g=2^&Z5MDTrh3j=FUu
%1r/EhE[tX]PKI#@1pG039@+tP6(,Y&LI&7?4A2coAgJ^Ygc:3TL\=jVIF'JFp]ML1?IHFU(;<HfI+s`AIu9:TWe13Y83GQ@g3[WG
%oYXJhTf2%YAoNh86e*RdCTj4]j.X=eXh]r3PdqGDKbZWMa\;.V0NT?CmB.Qu+cD$+#$NA<rSj`2;R)sIc*$,2p9`D>fo%s]O9hkA
%g4hOd:jRiZH]_q1,ig_B0[_2\7$T<4%QlMnf]8GjFcrLDho5?W68HkP,76=VlDjn;7'^NqDKLPkQA+tb,PKk2r"NGr6qiVnTFb6a
%"/mkUd.`HeNNic-ZPCLfa)/6?U_];Ir@BeI:(2=bDmPW6*#=)o#?Cl9JbTR^)[]ZP+K0O.]I(_1W^!>@+f(A)?q_7uf[+^LOp4%)
%TaG;#%"@D6Q<"hIdnWpo'L7hM#bT+qIL=2%O;'EMML,WB9C'H..Jrka`M;Td?=Y7N,1]u>];q02`;;De8l*G^(uP/qaM^_&BDD=6
%-"`$O&0tcEDaaiZpr.'8i!@8[BX%KFZr>#o_9G;[99ZLN2G-tgDJ'QVAjO!AR#n,O9m@s$82Itr5*Y45>#CEr+BTP]pQ-o0X]0l8
%Jr,pY.WuXWrKusUhAWt)#a$(J8"0ZS<+>smlS&rS-_NO73R%/!Kb,&a!'N4k5sb0!X3.(p;=h`#.q(Cf_Y=>`Y)[2a=DNT;_1aD^
%BuKii*'rr1AZAC<^Lkuu0\;G/'(0=B7l,1lTb[L%<Xsm9=q=DAQ5+10)egF''[a.*5mgsQ!`)9C?o`Fu1qI?#WJ(N!SeT#^'kYIJ
%R@"`S<XN`3qXd/cEEYM>V1tO%&afj%kdoDD[4R&kRN0nM<2$"M@%_.TAIsZ14njJm*9HcJRuYE=EAmT_jg`dN).@Z(5o#3Ver'sc
%$ct,&;CFlPaC7=QR8P_kY-.2.j(/GTKV=MO3P9i))^TV.(^>rJ3oQE;n`B@#5GFX0FTYhS-,MF$`'<;k0scR7M%4`j4s\/+U@ogV
%(5u?e))Y#E[YchCmA.T1.HPja-d<W?5<"`_qMM*O7^ETO1W1`0&&q6]1l4=$3(mGaW8Yu2[#?hb-EEgqSeD!m$/jkZI?1c$YeJe2
%g&4hbE>_?jP/RkV$m[q=fG^h3nnUOF]+cTr*Un8dS0fmWG1b"no51V"H<h'N>f#o$TaXM).P]A]&I_T=.;5aVXLX/jo7NE\6>Y8,
%nr:eMb&0pcD,At%)_E7\)6ChA#i\/$1%2NSh[I5IX.n]V!0)eR^!LOg/YG"n1c)?F4AB50Lia^C8[U'U=dC*@qGN8[O?5?l&+l53
%OMlc@g/t8q:a2*c-ru!?-DuHZ_McbYF?Ib)Pam=W97l3Mg8ljgN)"[s//#Ji"R&9&/[nF+T[9MJ9n8"b\s3=('-$#7M,=Y;+o;cF
%;S&u][]"b9H.kV8f^FI2]aB*Fd/(^Xo!H@T0:dnK%.6.\n^t/3Kmf#8GU+ggZ<)GBYJWF0bU0r`MdUi=L9CohY$l$4gGfbf1os2.
%4,LZpRYl,D,'8u2;'C1i@-8rSM#K4\RjpBB#r@X%CRr&QXm(^__4]:Ee:7U_brq%HG!R3bKIM17J0L(I.BT$_.=N"a!EKfZObG2G
%R@SHqWSOEm3T:C)ariZDoprMn;5(6>=-I-(5o.:!Ur"VhV@51=6&EFDFGA4HVX($oKn)Vge"S"%_r>ZM8./u-@]N_u&H&g<YuaCF
%3%>*=J7g5Sb?(cZ!gd]Ab$[7R"C`fLC@6@$&E8mG\erP6IG`%$PTZMWbi^ZD8=L'5""=NUMX1MB5Wc:s,*"iTq$+dLJ4)YHaN\G,
%I5ae651)%UQX3h@#S!)Ql%6hcX=WX":'f'8&TLbW5#*'S(Gouc8H?P[:d*5>cphLJEH2]$SB?m5S$HSKZmhL`SYTFiTI'q<']hB]
%7&+0hkVNlf26DR_\41#9@>5\NN.A$$/A9.4pBc3mhAr"fhm"0[[_!_P5Q\ns+A&D+MeF7V%%c#?/Dhts#lIHuM5V_1=Qh="79`[1
%*?b(_^CC5[=D^P78YEc$^@@O6Z,-dMF(YZuPiWYD?"9?Q$8b!W@`GB7a6+S1gO^+>"m&ik9R(2GM<noo34^\:joam>#9\*gM41N5
%)D#ST6;rEj"tMG$mV^YYM)D*7nbG_d/?qEnORV$;fY!chQ2pK_GH>90ZH\dlH*e!A8-#V.IKZ,e'kV8N7Lg.jK]IQEJFOb(lcF;I
%G1LPF!*;^Zi*\n96c'@.:K4Fl-tJ]XbnKbJ=%"TD\t+LBVk*%W&823Dek'@[41R\BZ[ahu`rYX5kcr!6p!QN.Uae?a,BO.09.FL6
%U-Kk8/h_OYW2!D[lZl%Z^2V.hDTsEZLq'#`ZhCuTWf.muj@0`Q#eu7)-jaCO\)SroDR.TE#aZEUL*@uiP1odm]#7-k_+Xs\8d!(9
%1W*c""&jhQ+lZF$C3QCW7,93nG7%b@FJZFiCN1aBILTOqC%1gm5Q%U3f\X9c_Bji=$:7B<9AL3h!KB,@"U2E/g(IIE#$)A1?Eq+!
%eqAorbJr3d1_['^N@?`\80K5294hNJ@"9++k2[qI!a:P^-\,$KbcTn>n4^t.X?uZj,crLf7D[G[4D<ed#8KmB*+>1%ecMa$"9fMr
%7J`^G?gg3jrt=(*XceaMOU9\V$X<E'rX?ZC+oY+f*;jQqQo`1jOW%OVBpfRDRiWa]`"=t;rBo_k$a^Q"Y_d%%"@HnA?`$7F'Q?og
%V'Rr@f4fd:E]A^B,Xp0&BJ1*C"GU_m(qD%F;@r,u!ouI%'&2r=;B3h!F:=>VAZUOu<uUih?HipoOq+;o3gJ/XF<?c_ggf4qNEo]k
%),Ae0;@#ZOBtP_A<eC%i[RMi<in6C4,]&*@]b<.G$+rWdj3/>-SRsdd>Sr!#'Jh#Z>$?6o6&I$0nMWtu&19S\Nh&1_n8>LZRhFAd
%Pb>DahP^E2+jUrD6SkcaUF,T"(niOs$n]m\N""WVAPg5N*6nG]UaLbX6+`4TBYr;NiZm%fG%d+Nc95e(6tX/<^(-U0@aWW5'U1SQ
%pM&U;`4?D8>K0.0`m<_mIOVVkZ!*'Ybt.dC17Tu>:H]guWA+FGcJW1#%RcR60g/@0R']4VkeDYWjDu2cp?7Q[3Y%abjCO4NhNlXX
%g4&_KSN/+_!,7\p;fe`#8VXY.Y[[],JuWIR01ZLa1")iH[qVS\a@_/r0J/TKf#f?l8^r#=JemC'*3FV4KTu4_V5+_j"bA`c2.h2L
%kTL#'eK-htF[f.=.CK?D%bY23)>>h^S"1nJ#b2in5t<_!\SW=Wb9Ro=AhpY_NbU9eEIsp`Qi'Nkd"%*ikd87K]E0NDrDB%?#dq#4
%rsA%Ge&Ge*bX<7"/YY]h$-C9hOYtioP_^JQ/Z>>]iZ#>>cB/_%LCh?SIV8*O1]h]FW6!O"Kd'OO&9B%/>nc`7i5s?gXG4b0AN*1^
%i<YK1(u@6iFL_+VZ3!5+,57+nD_OV,jU\(_[a>jg,I.PEC?QqG`P--I:Ns5f2F%Q9o,pV>mW*nm5U*eY8HYD\!2c@L6?'<Q"&tI&
%%8N]Mi@!0l7]L'&8]?[G)AXL((pmK_)'7o-RPaR:Y`:6+D:;6N-Wr4I":q5FlqLk]Ppe4Os&c3-Z3&'Wa=\JYM@"qX[b@_SG1%KV
%:d>p\,C'ecK[B828m0fIAEk(o4fhgDcbShT,]UfX(FAnZ?@nCM.oIp64uD?%2*PQ(Mc#\VN)/E+9[$^t0gS'j)Z?L2beg&2^_:S4
%%S@Yj)f\L";'8XDV8C->W%ZgqV_38`bofHKN7@Sm5J)V@P/b@Vd&QZ8U+JSd*=OZ&o.Xj?.Q`XsLMhh"JOW&ff'5Z`N'.CYBfU$D
%6%Va[e8_c!0jF]q`9Nsd>ak_OOKr;Q\QBidO@Wg#T[c9CfEjip`2q.Tpef6P8$+m!b>Q_?.%9*#+SGdO`.aT5.!jr\JdI]5fk(Cc
%8h3ooHn>+:PH.r')l+HR3ce]=0ku7m$q0+</Tr`THK6&RT\2oEF^UQ)&IEGNkb#kdl(a#MKcGc)jG[td;8\GJ!ea[ofBh+&`7.>1
%EF@O8)I[*naX3LS&O-g?m!>QV_uX,/r2tahQ%N1-M!`Oq-YOs&j>%l/>0/N-f:l5c$63W=D$>Is72$+%1>-$gqOCr@MnN@6T8Ojh
%EG"uZ67QdsWD3MH+G4'Y/BR>$EQFG0]EF^b;P+Ms<FLE8YtUslTEQ0e@mIpmc#.'GE>g?YGQa_m++ZLCVce%27.jkp:GP&tYU%j\
%#[p?iCXO=+,XNQ0"1)o?PY<g;bg7:n2%X;t@DJ!<)?Cd-c5fTIXF6;:V\t-Y/@9JMfYdP9S2Oe$6U_'B+OA_T`!r,R0.!tl&Bi3l
%,HI:$M#J#;>/+7Uck)ogA_Hto^l'?T:eDDEMKPYpk<qScA=8"3[B.sA`hUnmk\/AJW+fom+7_'_8sQ6B9.8j^$#RS<,Q*kC_L$3*
%VRa'+3/%+\)$%jC>[=L0:a5SnXcUBIq\Jb-ma$MkJpe%NaE@XS"qk.!bBrBEOf->gnhnN3(lQqd9O&.A:I,[^16tAX83i@Uf.0H]
%chn-@Y6X2uO;)[]^O]HAFp*u)rgU8[dr[CgP429`?;_lNE>akZBTi.rBg:R+6tNN$2(=0/j_B_ghbZlu(,E7+BpLUe8kNe39qLMM
%CD#2-K]7*S0R8%Oh<@DOd4fPQUIT]rH'od(7gPJ:!-5lrH&M'IIToLGYcje:S.*f4_U@/BB0h+GiZ`@>9JP\goh:"ec3VA:nKD6u
%D;R]QM9W88Ig]_>>,bKlMVsqfr9:;R0g]U`$OCo-?!m"6'Yq"p[X]);MIB6PGh*9X+uIcOAcH%M[":.*SWk\Q:W<buc/2fS.Hb>A
%:Fe&OTTb5I+;iZ#Z$uI^I:'MKiHP0\:f'dsSfZIALBJdna,D:)a`Ji^(1')@pS&Zgnq`n$dKW,]nf+H],O9!gb1>)LngmCHaDs6$
%a$\)kZ""_;*\(p!b9K.kN)Z]3.jI+s:>KC=8:"?n@cB>fnIhV5DNl><JV'ptNTZ,<ib$DZljP1YB4Jq;,:/r7i51[[U*$B(nEZ>&
%OXV$:UZlALR.0sQ1a5%':YN]S>R7-oa\F_R_8FWr'0p:$OJYGurL=%Pp2h?F&j.".@;mFr*l#c]1<V*O*h4koC6h>?=8`t*ETR[S
%8_].a!?PZuiM&1.4*lS\rgqNp5qULEC$^&#'tJ$(^I)'aRFA%gGL?m@47sWI\A>2rR-tl6#^1jrNWCqIHt#R+BH]&^)t+f@'>k%?
%?(FP6><;5DKjDoqq2G'n+qI)Ec,P*C@1HM1rka"pd6AVfYebZf]R^$*g,it<&mimdmu!>"PtlX,SFeU\c9(ZFOF1`aGZV,8#Z%OT
%G=6(qGGBP0n<2-O2lF9?97[l!c?9F/."dYaOkl.%9Q*$[MQr'K*`h=4"-"Ma^n'a#gR<5:1T%bbNJ'hY2PN9K42^lYkft@]M9pSo
%]!KIc]/!g+Wt)[LFj-6@E5R@[LrOPWc[g+fc?)"-9UY<:m./5>a-S#HG@Rk`[Ra!aSEeB$j:bK(j+ZPX_!5`@GGA\<FsgaN^^Jm;
%mtK>qc?<iO'27;0b'"#h:_5Rs3t"^0].h[h5p@$T1V12E>Y(i-Vn98<\^,_WmLE^"(i"/:(8(mrV315lP3\^hF&Te7Mte[JpRUa_
%-qipgk^7S>:I7(gSF-l;:OuJ_NU@91;*p;rq!K\Y[)g-DjgtW=P`YDah&Q[sJBE%j+0lT-c?9GC-3C)g\iU:=.-<a,FEa$&^@\Om
%m`q!&!(#=.GA#m_TE'(/GA##.C#_a.B,^tDVn7SW.0&,EG)%tlilF'e4/.%`ST)_pB?<7A(":h'M!d_F]>f$7*YE@.bh;EGAjn"\
%-bH]q)(+ODdbQ).8pL4Nh&S3,j?k?O*?jWe9I&@6U#XL<4/]]s,b>7RFJHISSlg>_KC7$j^=:o"m`p,q@d.uYO9>k#9^1sb8YAZq
%l0ap[G%$$j%c'Q;PVe8[e7[TcB=fB&,'gh5Cj/:C+Ou.Nh%<kRacaYe-PC&NkjCj_J@a1bNV@10GOj,1b(Y/jMJHnmNUC[(5pNk&
%O\Q$lj,A(7?m`PgK?r6=36)kIB=kKDG*'d:g$\?@10=+,m1+J:E6X[8%fJ'/+0KF(Nqc^1Kk>.FW'lruG%8,d(5F0")V^fm(b15"
%gDs[qlqlKYFpBQfQ8^b23rtNb2VIL(-7S;,g><&>2i1?h[QDZmSX;>!m]?.$bA23DOP%AX,Meo%.h(h$.GZ#k\:ie5dG5DQN8Rhp
%\iW/4#gRXh]+YK'Cijm]:M4cn!.kcr_FA_SZo6$^27bm5>!_JFdG7)C$e%S?]7\rbQ->cd%]:*\k;qFi-&-(S7_1ZSB[Bj>kjC">
%*=?CH,WM;>Cs8?qh*ENU<fQR.f.e#iq!N)r&Y3sfGDC67J3k44SIM_j?'Xm(#3DkS'+7qU18Qu$h=4.DdAufn=TVbG]>8[rohY"b
%c?G&=>*f&En'7YNT1ijVmg`rjB2rL&]<a3-^&E-7]0e=uqiU7U3!'^fR?HCB,A0GFj19jf:p`'0cu+,j*get:S^:I"Om!8`+BIY2
%4En$o;Ka!9G?f&MN@]9-#_F'WmS[j`F]4/ZPg#htV)-o#kEY+(NSk;d,!2H1r,tW!YV3Z:gK=Wm"[jSJoQCePi4d[p6"7qphWX@.
%Bq&j,D[3PF:Y"[r/5ca?^+T&$&."^"N8>$dKK7E!D?me+`1W+FN])kPj,E>J^fs3`=!tJ8/bRuAmC(gFq][7L\Ub7)%SaGn[iMPZ
%;A+."4.)GQW]WnZQFP8^iin34-^'+Db)*pqO`sQLa_pSs5oh#/LZXV*;93Mq<7N:raMT/Ts!^7a_W2:Cq!fZ=`qeSkoM?LjUd1*I
%66ifWEV:q^M99Yta@W+31c0YXjN)M1)7(>lRjPdkNesZI7q+PHqEft]M="\h%Qpg2YoW\^KX.QhgVJ&mScq\a@QT0+'?!:am3#4.
%Ot!T**L'[21Y]/Pg5`gh[]sMlH0t+D,dHXYG-"W$WF=Bfo!3)USMAm(YqF!L1><+%ZZ>%3Q6oj\VP@ee&'>dC45>YZ/FQ9f6m]:J
%9^h'P?9?=U'U,,G(d^lbKb#tG4'Y=g]^sjnJIk09`bT3YGMppSY8o1,!:9^A6Y)$@ir'(bSRo&m)JSSP=hquAZuuH"XWPDud+[/R
%jkje>/.iZg0[e\.BXES97V`5`@iq8m%[&kN2q$DG,/=OA>!&)e"=36=G*$BiNRHN`iZAV@hXeO<nmH.<G*Z8flS`GD@)$EE7;;-3
%YsMiq[!'Bj`ODGfg0$,@jT[c'.3\@^FE:JE`(HECn#U]^Q"\,$XELfufO-P6[BkOe*qDj;B7W?V(&O44\<$j<muF6TegU>tB=3@[
%i,BU8SL#n)FrRN+HmfkX)QOm\*o][I<]`s5>.[(8LQP2#9-^hXoNJ,nVPJAH$fc1N[3PMcQ<blGUVs*D0p:8D:*e[emGRN@q6-"9
%0e2*Ufc[\T/M*UT7V[]gCl%0-;c5\MHMG.hBa8@VEMTtJN^R+sUR`\2X,S'WG*WEb.?'4/G^ipk*Z=?!:a7N3;arj+WL4^#*@2st
%DiAk($mBOCg;0jC:2.igB<o$i+S*jCd10W_TKB!@obur\P]dga`2kkc;;,/"-rM$6mGNH!4g/q\nJ\&ec8k8Cl4[B-1G`NcL0)AT
%ca_/kc#>I24#dIC3R]DDD"(>HfdZ;>+ZbhCTX9>u;brkhW?!m>!6X2he.,r]88PYVcj.ZC(HbiJTLslAF%0pMZ)3kQed`=$5&[fO
%"D)2^A]AM@[jJh6j0ce?fEFM&[A/'_[/>K)Y\Z+,PX]rcE%_:Uc"QJu!CL7gO4)`Z71tE[dG!:+EnXGq4%P-;L6:%^6AHeb*=iB%
%-"j#s=R(RB:f9Blla)t'7V[]GNV,T.e;fYI;N3S443L7Qj>KQrJ?j+8L"Jr`0YbK33$Yi;\^BIq<]g4YMX;=_*MRd(&>$5^iN8CE
%:20*G@N`Ls7VjG?!\S@%gY&<?R%;li-jFYH3jB^lNF8KQ'AL>U8Q:J)fFIF8+Xh-EG3#,89\t`\NkH8\#&D/#GXUB:H%Xb0JNttu
%2.AZ<;+0fHA'5g`8qUVCC^5U9&LagpgEE(SZD^N7a522!NmEOKd)f)H]+`pB*0h`5]Ge&GA+Qd6]LH?l7%Y<gDS1.+3[\9'-ak7\
%6jCusN7\VLM-)]K4%hOjXm\ZS(nk\bNZ62c1k\6c,I<qP0&3@eg!15#&!kt/fhR-,7''=!4&S%7?-eo*#_bq6n]#CcYTVskNS0?]
%j&p.b4$!S_N/m7kNS+dSU>p?-4)(0spi";kkL^i,#uG4q!^!%cCsHieS-5lUULJg_lM.rMfo@/HoXH\h4&UI%+cjijCj,!QR5*Hi
%I4TW,7qOh,#Y".('I7Xn7*)8bA%!T`&b,rBZQ4&"8D`'fm>,9u\">G1ObSElU5dle]fK\6DqoM\O!HQ:;f4\j]+&YR[_lPjI)[&3
%*P"c:I2]Ma8?s>:mJ'VB9W@CbjWhR98o7'41?%Sg;VOKB8:d\_G,RS@VU*7ua!Mu"h58D>p_okW)mc)3Mj.X\[_juTF)tePPd;b.
%4Z6b25*XYJY8tdKAQ-ftmF[Cfo;D-4&T4)spdT'iVC?tK)7(>\>_t2hR-b_AmZc57lOtdOU.<(:7o-H'i:01`-$<Dk2H&:d"3U<T
%V7%V>%?%e9[2hgG=B7S[[NfNWA!%PN+bJ"F1KMWbKH=pu)ru/B6",gK-asbhXZW;dgPcNq(D6Jb4`ghtU),kc[j0H>8)<CrA5][t
%Q/3!sdH>+6[S94(+r7XFFurS=dIqMFFsJ7URd?!iNiX!o:oEr/,i0uP'uhY3O6i#I]cDOc60!,>f7rUp><qH?[R^2Q-hWVMgXR,9
%A,Z-DrmQAia/bR'HO:r"?iBZolLR'2gH)8\:K7>[r1!ODPJ?qS2h-7n^U$E/nr*PDk<E6Wem!RnS)<s)@t;>ok?hQnp%mc1s#_D#
%HiE<ZPCNJ]lcZ@*QVZlShHYI,me6Q1#?@\kk&g3`ZYqKL?f%<rUq;iJs6%r"pm:crm>l22q3Q6H^A>b/Rr;*;ZBK2c^%D3NbBJ:"
%`QL?G\N5-jQdg5p7DIU+@*EQX+2ko0N8\.@)hKq?#4_*V`Ac]2/f70ln;tE+Nsittj.Usb+"gmVI_/u1HJQ:>F8be35!QZ-G5^jo
%AUVg9f6?V:aiIdcGQ$.D`U2C`j-s?Q]4F>i1nAmgmcNhZQfhF_kP*;_r9E-Qkr7MCJ?H&i\@oC8]5)giL@^__rSuo.I*'F#?+i03
%;a$rR#PRiTg[dYcSH#4*os68J3#gK<CN*C5pCH]Sr9_,>--&<`E*pM&pQ+G$h<VhHh4B)1BE:j]?Dq].H?&hr(Va<KT)[h7V(m8a
%pJ:fq^<FRHrL`6Kc2#WKmIe_U%l7P'YGLs3ot-^"o0;-&^A7K^Ck6GMfD'!emF@nGJr?\A[b,sIDX[Jaq=X&4f5E<[QYi(MoG08a
%mXKfFIs1hVjO9lDjhg<*XfgIEb5KgCZFY(;a-D!oF'@tKbJ.@j]Nq)=UN#?2`$&2hmLXcV"]iY.bH8M6lHB-*9sFJ7^M7-Dg%kC*
%QX>,eqXXK<8!0<giZ<_J(ESi;\*TS(\lZB)RloK,4%=]i:.g7l*l0kI^r1VIqsq)bmk;&fA:]q#]mO2IqYKd=>pn1KoE=l%"oS2g
%h:oCTVcV44*o18ZbmTilb9aahjW9]GOteLJ@peZoOBo:X%UOKf^O#SHr:W:ciJ@7)h`/'>gu[*<3*"h*T=qj!^%p^'hHXEY?S2(-
%gHXA\4g]Tac`aP/hOZoEI,e#r2807E*cKrl]K/2;s5ND;E_/N?Ieg^tFU;CTAYs+lQe+1rn\_h[44H%gkf77EPj;A@rj.?1?1>=I
%GO:`(5bT9g2Q\$r0afi'IkR1Hs5'Lq*#FUo^nVQ=m';\WgnEW'NUci;`RX@6AW`57ID"2,64^dHWh,:"k]q8!J]3NAi/a*-L27oo
%'0,>3F)4%d_m18;V?%HW"lK+Z*s3<"Y\3R`P5Xq,*k01Aj8$=!JiL(kKYnkK?/KBT#.qW)SDIN+If'!>G"G$rW(t@QQ7RO$8Up5B
%j5n8IkGK,?``q$3nMm)tLI?G1ZJYBO62ttSo?B:-ngLW2jW!T,IZKQd(2K2]LTBukIXQY?m,n6D^DDQL&&6%1rq>PcBTK:4B@1Z.
%]u%gmI2fr(^('s]6*'M"l-#!/94ju*\?A^-o&B4^8M9H;rQN;[C:7LY8(3m2jEj#)Ph<%eH[YMJg[!&KD\ej>#O$oDC@'m/fOI`a
%O/]6t8RouE]RCaMi=XSW0']c(o^0=7mr^biqZHRJm;mn%E>@i7cZ&(eA*r\K[dO+uk4"LVpOBlpdQ\Kn]qE=?kOeHilj#S;KBL;V
%$N@a^9CVl6e#TP@b:h-ocd.pQP1r4Sf2DL`Jr'<Aa1)#2I?!]u3jIr6[']L8^HEBo_@0VDfabbVk3E2ol=`r>-%e4De)mup[r3lp
%cd#mi?et_CoZ^5S3Td.9mptaFG4ruR^Dm3_`9_1S*qUX=FRAeu[,,[dP4U0X]<<$he;d&>I:/_qIHn?*kdgW7qj,rElaK=?im>12
%P0W0a`;<Zp:ERoc?SIiX^$?2G[k1^\YAULM0.GK2Ac)=ijt8/r)NOumd?6JZ>dpo1>[C[+T.[(WY5[S:?`o`[d7u=Mf:Wmq[G1!n
%7aL`Ka08s2]j-.+,ZjAK(oN]bSGp$+-riFfT&)"tjDs@rL3.Qd[30=,$6$Btn#?5PNbNh0^4pcO:2b9kaBlTn\@qZddCB%Lq\mud
%_e2$;p@,h;&GM6(If6tbq.a=ar2Yb!b@QsCQ[AEW:9Q9V0A8J%qcIe+#_:U"PdM.c+<7bpa&Io$A2)%:^,Y+EPXV5'co8sJM/mEt
%.$'`PnE_lpU+Ck24M"^\-"#k<Nh3WoA]K!tCJfP[nL\\hNhdHP;&DWX1u%!@U7=BD>*L=c3L8.V;:_Jo?U69dU.'=jg?hbfU7=BD
%>*L=c3>NWZm'S7"^;ZdaouC6oEqYl8;3hXQ=EaXubgIJ@:!KDNq#IP%cYn*ai-C51][e`UI,G^Zo-$<_>O:qj*ZKReB>fK!C(Co2
%6^s#\&Yg**BCC@^*sEL.YDW!]-o7o1H\c!$X'T!a"fks6p"HFtN^BrJnYSoZF7!t8CZkJkX&`H4g94_]XiB(i1=fL.[VE3W[8rc/
%KYH/-If%KhAAJuXgm%/&,llP6o^H^^f57m&$J'($DPPmRM<6'9W(*";s*[a1ioJgA=^tGlI"(Uho?5H5:Oi<-"*Xk8AO%cTd"4j#
%\9`H"lJh)HY0'lne=6'YgWpYO;bX@MfCsb_GV3pl!7Bp-i>`T(Md>n)<\TaQ$tTT0H%3I!4a+j8,GEn_^V7GRA,H`\Pl7Po'Dnab
%-T9P*RZmUJT@Q6YIt(Z%ioK.l\EqNDGmNEQTp\B2Mpq,2E-1hQT=]nmr+Lu_QOW-0=N8*'pZRb$>SaKG6e>o\:)t@(PP+V72qMuK
%+9&`nGNl*!WR(:;#bJNQ*MjNR&.SO)XqI2fa1t,j1HQD3@EBklDNB-T6.#;:]CKF;0ndFc_d2/72?pe6Lr[cZmC0:FDjREZUH0D;
%VM(#kP[*Rk*7Yr&Oh_bT`?BMcM22CcgS62%>!)]6r9s1;Im5V4hjXR.<40@#IubcQq^D8&f)4u`m*R]jq[nRjk'u"\n)!ZNZlY>1
%G378-QK4M+4j]#,J]E8kSF;p<?$!^jr>\%n?X@(=E;p0R]_LXDgNp]"1I+nlpc+a-fULj5FROU^&1`-Oo`:-=ji+9%n(sX#^V6`A
%p!j]*Yk<pf=Uba<q7E+te[f&_dH6c;\F)HNP?-;W,<D&)O6EimLoh8p2+"aT,Aj98>pElqK^8dhLBX"?)CE'[UbJ3]@@r!iF+/T2
%BseT"5HP1\`AcD@IXc?cH%,YTc2#OYYA[1>m`]IMn[!Y6=CjcXoCTdN?GF+cMbA&uZ.bK?>(p\,E6^-&Ik?VO9s3;nR-(^_HF,>u
%)Y[F)nsMHU02tF`kH\IST"d9MX/Gj>+92#2g('%8&)0>%RjGXR+1/M*5^6l;-i5temrDn[7Ds*R+!#IuW9o5Np3n!M;I'AXCZ&b5
%]W?[Nq2j1Cb8PV.""tbjfL;/r!\YIG@Jj[G]H"3^\cuI^&9um#1423,4pM`dqEgaNUQ-H[3hV<7\[2V1TKfk[g4KYjHn9tjggCdg
%!!3WNCgtL'<j7F5W/4cq-MDe`HkcF8"0WP(r:BILiqDumM`Yu^lf!*($LQ1N`taHq0Fl,<M<TO$a5m['i6T@IHGW0n2Qd<ZNsgO'
%!T/#g?WtjDp9dTon=O'9na5SalQ9/jRU6FndGsN7?\#8dG3'g)8T==hljJUn?S5_9j[K&M>"ckSQfaftiEqAS4UteF?,(^YpA>]<
%iTC("6Buq7Hi@q'j0-i8paKSEEB42Wp159q=n_-S4^nrh0u1joZ15<t%qCIhYt*ilHF$ujhjuJOk3<a(p,?,`eaCh`[:.09q;L>p
%U5D[YDN/-GY]]WKiYZBh@iUV,F7aI2nd+4l9?+3U0b2d`4gmMg`\H%(`h@gK23+r]0odZBEI59q[d)eG(or.p@$8f!E9YPpkTFb<
%cYcN3s*B*uU_[0`GOL(YmJ#-%s2FBEmFbcROI="Cli(mD\Z"h=G4iQRB:^^UkP=uHmJ3AlcMu5&o;f2D:<plPq\n5BJcP;f+<iJT
%^q+jdqJUNNID9Ik9eS]k0=2oc+"u!f''8]Lk5+b6':tQXCF"rRB?32@5gaV!^#X^XhVT_^Yb\m,X;*;N,7NmXJgE"RnQ)`ebsSI=
%-1*A\o+9QINtqHca1IhEhd+feF.>P47u)Q!aK.St8A[k"4kXJHp0g[%CS:>!L%:$!r+]1r?es7^I8&VJ-'^KG?LhYK<QWjU_&Rd;
%f:jq((4:8JmcY;k\+c;%CF&n'LD5S(O#Ic6V>,junI$hGISMGCTD%O7b8lm%[qt6/hV<R'bNd?#>]4MrM7@kQLZ1CshV=fQOk#qJ
%4Pnjs=`nQ[g]H8eeX\c)GAb6P>2?a>SQjp\eX]q#\Hf`fs6KOXjYo,r9=FE-qf5L!A+8X?U[mQ5I?R%mk8&K0eXq1NrnM!.?s$f)
%YCI&YpN760clWQ'gsP.SXSA/5Y/Cq39'gP:O%4JD(k@SD"J[WN;^]6#s7,dDl.L9QSquV,c0<p#m>q:P./Nc5p;b?&;/3d^?gDSQ
%IItqRUP7_gQ>Q7A/A.b57?9(4\TDCG`aeWH\8r_!Fmt]iYKn;WDEDaM]H=jneCB#IeCdXSV`pt"B(H9)>&oN]W4k5Q?"E0CY!1c@
%.G<kTlRT9F0CeEfJ$H3)/Z:(EqsNUsl.Pm\O#Fb#F^T^M0G`-I*mM7&S='#4".`Q/@.0ZcpVlHBMfKg9b'e]jZiH6Or3H=R_Jo81
%g3jEe#O<EbGs7Pio[sCDRhs7'RD8Wd01$uS64K9V[-!Ys:c5]/5Q9unp!rj^b@(2p#Aj1BQ[ODGZi-)9NUO-Aj/Zm<d&,WOR#!sB
%f_*'0e^Z'/$DV:BM*C]mI%gDpW/[NA(W(YE?i5JI3?PM$q=)/EYn9GFGHcG1_=ubki'c%TJW'60]U"LbaWC7qO'?/:)"+CuR#N7/
%ZmY_+?.[<?@.uU7e!l9MDdT+i+tu!V'CrCCmOf#H+9)(\H#``Wl,B35RItM]@"idfLZ=OPXG>hEN+"jh%pf8Yr42Sf:O##AO8j#Y
%`X)--2L)/icc=Fea7DGXl<>7iMKiA?gaaSrE?PrXAq8Q]EGgfAFRWd]^?tM?3HALOHXcVs]Dg;+pO>F,EQP\*(EUI(48>T:okD+q
%!a(>T34/ZiJ,T(('hq3cfj.qAr8i>Kl`epXj"gBN/&]KKmtf`]*]eV+N$f"Weq44LGk)\J1-T$/BeRC"gFq%e]?f;_`#o_SY.!a!
%L>&EX4%GAX5q2nfqSu)n3.;QuOsB`[#JYoX&pEoB[&9fDC-af;Z0e9\2lIhI3J=g6cWB9gJ%E/CA,PB6^9B\%&3@NgrVH*_IkH^F
%cE?$UfB,_RporR<[E5&t?(Lrm.+QDfHt#k%ATg2Zm*E__bj;@RNbObAgM:d7>o_c.r8Zr3lKtVu9F;$7jr[mmj'cQR_-<H@mK#>*
%^k[k`^R"L1qUkI`=Ru0@bKJGRq5N\&/[>45-'fY;%3A&lo\2V.V_qi[n`j[56_Z+uo[R<PY<K.6+[jQgPs7A1k2L.P2kU$1YA`-C
%pm5@cq"j=BbPEjaP@+?/o&BStmD"-[:B'b)Dp6<fJ,&(`n(Rf0PJ?&uXnq4Q5N9HWn+rs^?"H6j=EF&"PQ1CW1FFjAYQ+Fm:O_m\
%%E:VT-M`klPBiV1[jS@.GNNV`0i$e0kekk#([(:p,X9M,K6um&jVdO6jhV@$PB$S4HJ@A*^MSIU0'"$FM,0&UG'7lIG5J_CE;g=\
%q=qheD5TbUSqlL$r8u\aQpCK)ZZ!+3rp@J'nBG=3HujB*ntOi]-a'&*:WuaIXE![H4S>th_4flRBeUkBqDI?+cg&RDmV+)co=pp)
%s3N^G-K>R#^f(-[Zhc+Wi=2AAj6-@_pr)k%ljBBGA$chtYbnpPJsT#b0+gQ.6bsk!H6`>2\K%>,q<.#?X(,aIs6?GVVq+V^Qp]K.
%XV:,.$8Z+_nE2Rc?(U(Tlg$W+mcp!QGFd$gS_O2Q`!o)&?X/rGem0Z?fdi$Panq+-SW%C*/CZcZ$(q%"bukC;=i/EU0m4b]A)lXT
%K8DD;jstV#?'[2TD/73uYl],CPF9^;?,P'F0Y81&II"<TiPq4i>OOZ1FZQbo=a5D9m(D7sr?)(4a`%/Op<>g/Ie&tMno+PWo$@?D
%>=P1VR49i%J:1Tp*pPn*Gaa"ch6JYS_Qo6nZLsoO,Jsm'Nkdi<0%lZ>%t:A^]"Hn#/g8M7a`V#Q.QKGJ\$)hhdq?+,eR@t=MsEkh
%54L_a\[,$H>HE]2?mk.69muu(ba>LG*TbT*l/2Wp8A2,[U5e$=43kkE.5,MH2lQ)'I)cFSRr;+sRdm*algMtMA-gB-Tu_)[^P-F@
%?!8q9J$2JaR__><4fLBA09`FHoVDt>9*a0MO+Ehd@shR%(,&P*'C*Z1fN@%H3$#nE>eqB3Wkdo:r+B:Fp^XRSl'%40U:,OFDsL<p
%0k2ZQWWcj[QY0qqrOL5i5<#I>F/#`,*m.D;<4.\JFtN]#R(g-[Agd6EVV$<_LQfK#Je_46+7XZk/r/Y5M[X`JjUCBM^Le@8c9bf0
%:j[=b-WaqH[R/8ESjRop?[qZpA!>GOQb(IeL[m8j9>ua1'K9$D$I@E-cXH>7Mg`@M0!>'/\PSTim7'I0f*Aq!DL$5mH#'\,8pKWV
%61/.7GYA"!Z2FYoolo$roj*O>8RY74%aU@h9[t7FfeJCtmoeFd_FO'8k3Bs80Vtpi>@6$$YO6`/qbl$7W6<5%S%JO$\sK#@>Ru*4
%^f''d$k\uS=">So/?@OWT4$Zq:uBENh7p)'/_3;(rjM5m<u7p=m[s:0B8`CO9&0RedlZ(8?B<A,lMg0PeLS2$qd$u8b,G7JKD+@7
%cL8BGQR?^d4ahC#ns]!cmr0.\kHF;93o#Hi]B^Tmg+Y4*Z"#oA]&;\X*R$<"aLaR%<0sJ'>SqU1LWi1L3JVlkQj?-Oedi@E9='PM
%V5k=:+f6k,YNjWI6m7l&CV((WcPA""3k9grFpLlr)tpN!l=_BLio#RfP#2aT=9h0dYPLB&\Q2GZfX>&@W`AB+[IkkUqt)m%FhB/@
%#ht,ZcaM$PG'9g-gV@Z]*?SZj=#2jQm5e>;>o+p>EqV2#T_S]>=T(-$[1e%Og%&.J\S=ZCdlAt%)N%O?'PDXgPR><9ho)NfX2,L[
%p4)(#T.PG*WIIudqC$M[WDgKQT%pY.l4q4M-]9Cp[Q7f"\7Y)rd9t$>Ikd9kL"sp;=jQi`MkA'<pUNq'(Y.TWg[Fst*j_[ADh'o]
%%$gP+Z8!a"GcAtd3iV;<BthI^a]Ke\3rcRi`F6f0JSu`)GffoU^&NPKC%"dQqUE.Mlb>T^k&9&g6^gClSiutgg"F!hJ%r]<.r`([
%^"3D_JBur[pn4pu_eZ&Q2-AcYW^`u./'d^3`jE3:h6g4;:##C7L.>^qCak?a1L$%<*]`SH?2(m.?MEYO^AXY_+aq/ZrC+GjAX$ok
%j3AY(M(e+j'/T/Adr^0hrpLlul$]`&)Nd2YrNkhU9,\T9o8A*h?[dHQoBQ8?<oR]jfBLi/bAH;!-f+*L=%JF%GQ+Aoc:fkbT:aus
%T&3ep21L(!nPUU=^\u<7Q;>9\?Z3)cDZA,$O7gWZ,S^0K9jH_ns82WVV=YYaY@g'@^::fe%-[Q\rd8eWo)Irm'Xo1Wp[`;UhVR,Y
%b>'+gq/s`.V1ok373;L"md8!H)K]5:Nbd!]%6FKWJr]KU2M7$8=3r\Z&Tl5e'm,CY"<HlWGC6?^A,4)rN`h!aFS>/3roNkZ*Q.c+
%Nj/g0b9Z<HnE93F3o9C3#s-c]FEATRk\,HXd*^__FHj#N7aTO&5g[n@+R!KoV,9b[910e!Mr9lfk[,01oPYXieC^BD]75[),L1Li
%3S(=E/*=A6WR$koPnD'tf8/GlN]?/A&]_1H*7p#,LQ+96MejFuEhlARK'm?U]3t79`]0?FFqR*BRP/MI,3RQ>?]W-ro',fjfrT0O
%>P3r0CT:;hE"eUAGfPha\_V:r&-[6Kb.I1J:VuBC=gbcp_"4`:*IK:AlfoO#]@'^@Xui^[4L?C&S?$FL,299#aXGX"%9#(l0dU?@
%E6,uoEQ:4WN-G+1;ij)jK=UtK9QcpMnmYV$CN)%5V`0.J9B?2"133:mSRkIPe*8)_W1b@CTgUmSM]$oS6\=P8<$"uM6^sRV\*Dk"
%frf1L,!Sf<kZ!jVS9fh^Z(#bRUY+f\[M/0B"!'\+Sm5YCeP0Im)Y>_a1R@[U>gI]GY*^eRou<A:Z#XB4lIW8f=d;ukR\Rb,k^:!.
%[:SrkAW!cNEcflhYK!YkNEiR!<]s!!+WQ)3R^J,.B:[+2/@ddIWFYhKFUpGH#2f&YC7ehN`TafdFu\0cf=noDY-->M28UYaDQn*F
%kM?e5Y?"k-YU@/&V<!P(Z>EgG;!"pP1kK'.:NUee>YPJG;Joq8ATrU3i6L!=_:J3eVTF9n'RCZDY.!`U])'R5PHZ[+0rS>!OZ%j@
%o?2DKmZ^MN%u@\kmVT5(eu9-+[9&l4WR9ha/ViaC.#iN"4O.pW=l&jQ;7V6X%9Q.\73R=i*7U:^c?AT?X7g"c\DB4^$.pC*7t">a
%bF?l=,H7UsM!tJk>,\2G0ARNm78[B6T2t\d^AQn8HtAEFf6uag9q=/dgltmr`R]k1a\Z;Mp5l786A7^[!:RgIm>%h,#F3?bDU<"8
%<o"L[mcrfCpJ\;F;]4!IXf?MJ8S)dD't]<IJF=n$MM<fJ'*HQJCpc;,VcRKbFVcB_IQDB5`@.a41RaL!Ll#GL<Heme.,c.*leWUD
%8o\A!nr#sWlDWcR<8H*SB.,s#QEtaJb%i\:H,4A?EXR,&hA/00B;`UC9ibC.FV]_/]ca6P`3(kuSF#$G?ZI5]@\VW4CNe]=S"7&P
%?]u.=Eaha<XN?<+;fX)M8kq4,A!WWUG9eP>e\Z;O-c-nG$1i/"'7#)LM>/li'6j@t1H@2V8kppdmZ-AH*P[m#7*A<Wi?RG2bg4L-
%\3"^EECXmjYZ?4f\Ht&S,WASdjsJ;BbY=n!-+G2NcRaVhZNP/>:>dL_-ZJOr:,&.cfnhE):-AHbcPAa3q$G&l,X2mlr58i^:S]$,
%M1'3O2*^W0o+UCVfPY`sb#OgmDe*:9V8mjrrJpG(&$],)7-rMWH&ti<cK&G<!lBnNBf0*]G+3Ll=qO?jc25!Efd`-0;`dt!JKl]b
%#*9#lRrbnb#M:t1*^A0;D[!6-0!(\#a5G>!BBk413)\p+KQ;tm_a:KWVEFNR-kc#)Cja#L7($Fgc*Ba7I!l1I<5O1><NA+aO#hk/
%D'[63S4L*Z(6T;dEfT5u2MC['S&hXqX7:K=TcE*Ma9P,j%fVGjHd5cbI5lnti4Zk]O<_qF`e*/aZj$hceO^$qHNCMNgf)s6[6ZtA
%S1>sjj'F>-SPf5u!Tg?$lG"R(ps$Bl`#qa7dNdFA&&(+XY23\SR?0o&QehJjJia3LOu@&Vrl:QqZ%j?o7QaciJ=1t%-3^IAdJWpR
%[#N/UoTN6A2C78?-.(^+>)KJSMlq>$0sh\+FoV>'U%QrZEpXOk2-AJ]*T+*d`&`a<Q][iqhI?Hj1X6V_a0kSbo>0MP(VKLVcgJQO
%IQtH@O*B8(F05>u)?S&T0b9KH2pZn/`OmY'LJe\o0=L?$d<3CQ/R*8V<[(]]2t&uT)A0F8o7a1UV#<(>&!H06V<d2g,T;)O?&X%Z
%>;/<f7S,&_Y'raOLFBlnd+-H+FIh4Kp!MX;fa;#f3]W2"4uAg8:O-`f:3KnjfAYk@>h%LcSQqGj%8ETE3hOJfj;9h/o2hF&laa!?
%LoPp)4f='@M=PE9ZSq+00a9=2>oMO2581@N-1l,D]2#Mm&45+Ip?b%R;!3H\-Ce)7iFBT?86mshY*eeP]kltk$1;ZoMCJ;%>=X?;
%b_nRNhj[J$)ElZ!b-*t#o(a_:fKW8#`MMAs'pf[`<72cnQ+SW@P'/-NdN&XZZn%i5G9p5:!tm)$rXN6/E>'g1RSX=&&h;iV9W4cC
%$'hkJTebtlf;:VB.XjIQZ8LMhgmM"'lYc$k>7$R:7ma%P36W!bgZu#uiB7L4F@SYDm7O>Dbc%=!1+Hj*7V0WO*9V#lUZ1"afXgHN
%7O?lQ;;%@8fpnro*Q>JbK;V](*UOn"1d#RJ82HrO<73Uu126Jr[0tHBMGEt0UZ0_iN/ClQO\sM>e3'L(c'$m#PoU0ra]FPPh6F<@
%_p(-=-<0EcTK<f:'#<8gp..7X.df[e;i7G0r#L2!Rq[j;8Z)ucf!qbf6ddE_V,J`91(Sm"Zc,^O152?+Z74b-GC#X$7m<d9aJYi"
%L7Is`'RrWV7rJ-eBs1%^(#"XkKQcCYcu.PPg.ceP;bG629RAqNY'`j1k#6T0LXr0Do-r7^m$u.XfBptj??Z!IPb-P6PDmZ21)p$P
%)3s(I0c9doN1'R7qeYeDV;l(0W!p_7;9=#m<:[2N9%oP-8U"]E>!-kl;9:mT.c*rW.[,mRfMa82&,Qhc's2nQVc4qr[#n8>SP]\T
%&h7Ts4sb^BHqO+$fmrp^oRq^$Atr&j.7H$3hX:6>jAV4Yq34"=;]bqbB+#f]knMn$.GMOg%nih5VrIk6Me5H&&h%5rD4W%/bZFs1
%:S=M1jO="];rq<p'Osp.LmY^>:77<WqQ-Y'h"i)`*$=8-gpX_.?-nD>D-uJl(NR7/>joGbZhN>f"0]=\6T72;&b)qP`\G)@MF[Ji
%.`_GA-3)%bbQ`u2;iHu'R?G[7eMb!cMKdkEg&(6IH]%960Kq`9H^rem'\ejHq2;d'-d-TJjEot:qag@)fQtL%(<bP,kYXNn`-@od
%j;X0:24J@mns9\Mf"G/rRAr+0^YL&g,JUq+]jC$:fD=pC^3b(ooNL/N3:"1X`9S0.H:>JQ&[,9SlP8sdk=$U+Y.f6O]O'p9It@Ia
%`PpY28t<glaJl=74_+s4#bmh:,uj?1(IcAq[XsA/qV7`5U6DIeeFs/>RLPEQ?22'$dL<um4(9LY"iQCi$r<o=Uf"+bILd/oI?d67
%>]-Uk<!*LCWE&@5G6VGBNn/'j;3GRhngDm)hI2N%3u=Ume<c"&dl3Mp>=7jAO]SI*.?I8N>Rq$5hlR9YpM.Rd<i:o_<0@<KktP!m
%]Ci\5:u>"9*&bk.@T-SbmjQ0?@YS&h*\Qd=2ODX/?)O<S[J%DBnV-93-^aAgME!P#Su)??it<+'&-iruR\PsUl$`M$!hXZj_4J#&
%,t/6;5<E"^I^T<uQ0Dp3Yb$e@M&SCQ%ro%kL9(WskbLN5i8%5L4$0RfXFJY2Hk_pAIWG#iVPGOq6i/q.%L@1#B586oUE2(">J;u@
%Z^qCA-6BDu.VDgADU1G`,2b^1I_tAUPGNdE>?bkk\e#\p@0BaPjT/e$DNjUnW)^6Gb)UDeKP/Pg23QB00*Yl^o]"BngJ3IOGF6Il
%(S9E**8/mgSB^20$kTn=np3YegF6'HL,P9Q!]l5Y:<"48g$ToY],S(hN>*bd$`1,VUGcLRDGo#f[[_Re!JaNSi7&9)q_"X+!DHkE
%ijot*dMh"l>Os[U5-)oe1?1GTH1)$c!LD,]SP5TTAtnfC46Q3\0DF<dePgb.%niPFn/m):;)-@&)iLBu.;upY[q\I?U#Q^-;Tgah
%dSr2sd><7@Ib`J>S7`q$ld9U!lcBMFF%tL]2bZ((NhnTJ:/@K&PIVe`AV2("3k/1H_lfR==3VT#-%h?XRi;G?"iilA8L_S<WkYri
%>l[EZ0.eVqn,8iks*eDj"M<J81Klh('@mNPq^IDSc"ZgYX,!35?<:7m%54r2##W%`UJTF3LILK)IC^s@*k,Q%I,7i6BW<\7d1iA)
%j/Lo=fL=@;m5@g/#f7eR#F]i`L61"hebjs8(=(=<D0b@Md\n8C(cF4VlD?nLcX;+8CQu_VGG,sBUYO!)SN[NiHIjG0h7E*$1IR_K
%1Zqc;#@FcFFq[80[N7@BlFZ`1lGcq4biNZDLhRnqjS:<TerDUDZ%VbrY1D*Z2DB;k-\,?*Y"!N4Igdg..P%IE_f;TY)F8(B47+'9
%^nlbi(0&j%:g\Y2.LWS.*EV>RO]^^:c1!Dm_Y)Zjf<F,4ctB+tW*7]3GBR"f'@>uQ]0ioK_Is'<R%&&("JHK?H_"VY,iULqb.$O/
%7;mqfBY;j?b50VZ>)nD>2Q9/YZZ"Z`abRF2WW<d]UgCINUY((&Rgo]kH$;#jIM9jEM!G>5BlYp^a.d5)H+`ND3.6R=I.G/7D>V+,
%BAfjcc(obhpVg`Kmqc?)jTW4kcM@Z3c#PSf*mOEL0[*4KHFB<r`SEgiBVkIjb!"qkM^@#WSl'05<_o'K4Bamjod)=7`Z.LV]Wt8V
%n=@3qJ)rH[&c;@GkT`i7Y1`n-/D;tPUXc\tVPj!6+"3D9bP[21/NA)oicYs<AcCE=Rir<KZ/`pJ:+Wn;RQXq9S'n8uN+PkaAl$OT
%0?&Vn9uD0'mL;La5/(I"\9G$VWGm19m$Q($53gGGjKGYQl14Je_rt[SF5c'o&*/r=D>2`,FFWh2Igj9u^L/_D,:ai1!3Jq1n\E&"
%#<l$9e"+G[bn/^eau%im4)5(E[k\sumD.&aL+=j2T6L<Y!uik@+DA:^*r?=2_l]1+CZW?83NuNom'C`jn-TC+C<rKGh0Je?'Y^1R
%%UaiDKqI7$3&%_VJM_(OHLO:o/UXMJ%B.D>EuUP(gVl"D>@fN>3`8U)%:Y9uD]P]llmUO5n+Tu58qTOhfLh@92/6oT8bdKa%;'D:
%F^Y5Bmenu\QRR,a*5TMNe#]P2hE*r+E+a$kq2gg\'2Aoa$CG3rZnLJ99M_jY[*#hihrhu$2t2a7V?Ca1Ym27RqVqGFk3Uj12eDAN
%3JR%Og7.Y3_b3(Wjg;C'm7g`1;`6SuZ,N'\hNTn7ZppG6#h']#3mJ#[g7*+n]d`]+jd?#f!Lc63!6-GX;G,$iV5OC&[HLQqP?*#@
%JDRRU$n0SShWgG"Pfdr5TOKS;*iec<WiaBU/AeE#[CjjIKs.M"#tn__Wpt]`CPPf%>f((iZ-o\(?"b9H=%>jC"YC[ibk4RSX0moZ
%#'O[QL1kKs?:c:\plJjiU,HK+$&N2TqBM6=8NBm9Ss2>OCS]$VJuUi>WS!g&qpF,G*5[N_mQL9gFptNK;+fAp6]IuS$C1$qS'6QW
%0]iQYA-CZaNf33Yc%ALD(>ef=P5A_4E<#+/`+-j;2bg84(KkRAlXpJ40,(aTQ?j/1%TZesWjUjkXkCtE\$d(<bZ(OKIh)E7_sCiO
%,Lca//S%#s-,YX"'htNZ`*!JA8tE47,ACr-+RYTG".E?a`%X)_*EY^.:N*tgc8TWR@>[JkA[?><MWnCcKIp,2Y7ItY%J,LYMM\=]
%9:$^`83t/2r%.,%&1(W*-*>O-i<I;8+m0t*a#cK'frW?)!/Nl)M*au'hSN<!+moW#S:t";>n%!L`O71RSW?X%B<A>d'ZLQY(Cu,b
%8>0d(g:a`tP=]Zie2GB<WLkq'1h(l?1`H/'HUY?(*[LHU;GH>iE"#A-N,;3V?OQf4YasiIn"_3De]"AUWs7IJ[K5838l]WV]XCfI
%LI(*K>coRCKr.n6jO9#!4E/"/="l4'q-17c#S!5bqH>VTN0UiMfLSs%L#E,CV=OLNTj')Yr;YGsch:n0Ug`nChWs`^!20BZTSYff
%6@l4k+t,r:80ef6[6M==rDZek,_V7sLL#6KX_fX(*@k36@ZnE1QF?]op;nNUfU-B1J^M(a9Juu/\RD(*r?J>%**$Ba'p/a@d*CtC
%c?o)gVp[RC6+_#!.'2BVIEbf1?Yhb$KpG;"/4k2<:h&,]s03jTa`8p<N!I>:CVtjk[Wp5OCFe.3"-@MFKu]6rb8*iEF0cOgOf$Wi
%^%n$nB:='=R@`g.5[1([XE1!6o,ERsVj*V;"i8D;dXZ[;e(bDH[ZT/$_EgSB0%#Sr#ZG84!+k]i!"r(JN&5ol]"qCG@QJ-e-*58H
%UBcKjo#ro(QbeY<d$4&.Zr+gp=e*)[d0IsEJ7=YpRQ/DTOuT-S9cSnY6D^GJr%N]D?g-F"C`=fWN/CGfVBba8=LAfX[ZPS;UQ(sO
%?>1.4ELfg!R)-^N'L5718BHmS!ki#G!Sd.+%B_&f8Z48\0iId3%Wd@I3CZW]bF+'YFe`nP=c.,-%a^&jC`DIO"pJGi.!u<<Z:(p-
%)_',P138D=AoAL+PK8,-&@N^?P^"ir-6]7FPi\hiPs8UC*&$=7H8$,^%,F*M@2gYc),HWE-7OJ*.0jihI>-o*J1skJ/jGg,BH&BS
%&X`!-88T:p$]UD23f3sulfAWR$7gf@VRV9\@kTb0lZ$*Zi4L8RKtFg:_[r[QO=3#@6Vk"'k@DdOOG/cRV?lA([Sf.'*mL57<rj"K
%!:-Icg/MKm#L$j&q:3)f\qH>8Dd1[qDP>:J34Hd"Nd"V7(sOH!Zu*Cq8g2528TUttj]Esr3n)s3Dd+Z<#"lPprf/#!hR']PM46]d
%cMmd,a,C2EEI[KPf_tgJP/m;i*oAVrI)"b4rK9\/q^%<lQTVuho([[Uj81-`J&;'CpIcRb07!JfHc]dc#'eb;[_2JP/SQ,0nAD0-
%>L>WcHe\?AFUcWOb*\a2Q4:s+oa\FBIpJk.]aojB+.3*YTMP9q*%3pdqN6V[mA9!Ta*5@(J*nq6pRW2C7ilpo?LYl22k[\JHj'2P
%o=[6bqr*9Raeqe!htP"t^1P,=a+&#fs5"aq^V2_bPC.C0a*WtFZ4Ap1F1`mroFKRoYC!*UB(kIbh&LA4pF]hJ+Ib1Unc`Ziq?L0!
%WQQ*"F4T^d?g`-Xk4fJ`jdY:A3s.>b?MLi_:qppi]_]J,GYe=\h&Pn*5Q01la*[AQT5K[5o1u"GNgKbZ]AqSW/<Jt(JNTF^m2V5`
%Q/!&8)JA-&^=mB!X1e)JPNl\M^3@Ts3BQ8\)*?m's+8%7mu7:=hAQ>\Y;U'[Bfd$Q:cp-)\H`7V"o"6CcN`TjAFH3LQikBW.[GUc
%MAJlI5P5;^l]?PupUt&eX+*2.a54_)D?oAVqefGXDDmb:;f&iE?)(-'6\;)D)uF9]\*G'ta)M&<_2H_.IK,qW4diA^iR<kCl4SSd
%@N%GL4U$&9Re(P"GUo*M0&)5'-J;UK4[[T7^:a2ZQ2F[4DKJA6rc\`\q_0F4,#@YW?N6^DhusoLWSCMC-gg7.;W#B?m8*D9mEpA]
%gH"`Vok5YrKtFhSP8i[i#k&Xt+jYo?g@t9$,R)qqH0RCk`q%R`rq8=!H;qNlVU("o>+a3SVGC]o1DJa)-G<nGrg!P2f8md\_gUqL
%qkr+$mmYQofrNt"(-M!/\76W>1V$E'%CO3BiU=hYSm1:?d;g/[gB"3t7Fu1i%=Ph^GHK2Q'Y9u_8kou$H`oYWQ&B2q'UjbP9B==j
%$dS@cY28\%LqJ@ectg<n#+U&d<5'Mq[aLDnE8Liin+>Pi(/Q\,#I[JGlR0"sr@;k*&*U%WAQe"QE_Iplp&^Q^`H`dfDQ2QYI8CcN
%IP@hrT)YuOSGkjmB[%BOhd?1=Jo*2\&$'-KcZ[qF#36_1?n"'SnRrE"<X<9m]:Wqa_t:GXQK)lX[=nSQLKST2r+LR@r5TiqT5Fmp
%U+"`B352RAM$6OcbF3;RiMu#];4.$,\UV<^,P\XjZ#j"C.br#7a7/?Fd;<cgL/2eb_7MWI4UR,IDYe35*aZ2I@sbf=q9FL.E1pQ2
%^ME>AH!>jImI%KE.BY:EHe'2&/5K\TiekeK4*^0Nm*kI'p>)mV.;lHi7Y<]2LAJ&%DDI2q6aBKW9uDDH]4tPiXJOm^Y*S*P(t3Sl
%V[(.EiP*9X\?C%)a6lZA^5g/PjED$/bL:.dm3ld/gt09h29g\VE:)JO\OU(&2^Qe[]q40U\Mlb.p)LdLIm4trBDC-9_isNnb5$Y8
%q*!Ls[5Z&@dmDT(R929&M]m.J<molF(lA,(>b*$V1Y_XZ`pBQ!GAn'nhhsO.!:EDAmheWC2cL9RQ!*Lu>j>\0pg3Cg5%,WNq>6^S
%[iX1;2o"gtqd/Rf?L%Psl4<f">3c.%#OhO2]^L4:f_7ORhtQ&Whh1[<[G(Y/&)R%qs*t%i4Ps)L?@UQic7kf4J["-^3_&[PM'^u,
%^t=@i%8Nj"4RMVW8ULi`pZ)'[E<S!rOu;$L-VgRiRT>@bCFgB1\H:JXOi>1llYh>6R>P*PdI:`mi8"(GJ9D?&EVR]!Vp2($2hrl6
%=k])u'j2oL5?EcB2T<d9Bu7c`>B-&/::s.W\eno,&?NYFR(')`,0=TYD(9uW?s0p6Xa/hO?G0q?qb&43Fr5jTrlMU3&fX&c1M,$\
%Ki8SMSZ(anj-U4_U9c[TBF.>pf;7CUUcM;DiS@X'>TD\OfNbq?Y):T6QD'5%*9#>j5hdZhl^&JZa(lO^;F"J<;`Plgc55I.1V@Xd
%ff*rNkSAVL<hZ""m.\Z;fPp]YL=$VgM<XJsM:mUm+-ZuUc@$Yc@cCC4_d^jP-%hgn-ao-TZZ!.S2_i[+YM'];7kY[=pB2AnH5jc4
%]F'D>rFd/PO#>8e3=[K58R.D`ej@h*/m%Fq\:J@9;qqL'o97/ScS7jNpZqmX7cqQrN36+@hRit.d/u1ep1LWC&eU@9!1uNmRhJ==
%i.X`j$]lAD#:!!ciDk85"_O))QVEU5QXdb\DYisJ8U,@M]uBd\06L4K0\,f`*&eo+?T?Q*/'`N]aj$bdquuaB3*jR8R-\*?rXBJ.
%a5a<>W4#Tdr@8)`UPmN#4--u5('C7g2:0<)Dh`Hk$FL7>-Z1j7!24aehHf>,#EFWY4GY>Qjo0daOdRa'crS*iL-"atjtK;rkC^E_
%&7>]a8Z]X0]$:N]XIuWR*H-b8'L-POA2YF2UZ/b6;QF9@#&Y9d!],t)EU[\pN[q]LVLA6ojMJs6d'*pK*T<9SQG=Ill#Q$qQS*9i
%*;?g'5i85?3*q\X)"r%F[Q9$0QX;e.6a5+'#3s:7Cke^G0_3g9IAAn"#i[U<h"dd+qT(poD[JH]1`$Y1'\S^0CY2^;=c<UXmubW[
%l'9E[jeD5*,0t:,U&W=1C=2cjdJ%D'pM/+UV:?c<f"k10iPW-.`'.9TZM1'k1KKF@%p"Ua^ZJq&nW/!]gKCr[T^MHg;!Uo'QM\";
%s$P+Q97Loc8GQYu8=slSPcj]X0/"+2c%'.a(M\DA[7L-%=,WHZC@f8%93S`#h%Q67k>j@e5,5+$Y"L-0kp/2P)6.s_Mgi=roU#HO
%eKWh_Pt_']/c&CHMqF!=UAotpIBOFb?X>=)O!OR'Md6&,WXu%qQ1m@LE>,Uh>%A^LE5An`,T[Bb2.K@!I/c?f7@*4DAHl<V..Y2`
%Oh8+*K'-:l1$iF8P`fVIbha.7$k1KVmon,/f$a.oj%Di3qrGI:Eda=Q<jAU0T32u.(JSeFSWtC2W+$FTD"9N=nCWCdqkZ$Zc`cI)
%!r^uP"39cBHV_>"`r`UERc,g<BX01pqmaM)Z,\!QFMInJqmrW9q+98f`1i?2$&tn<C'4))WoLAji7-Ca31VA%j\!o\._u!;21*,;
%Gl(BfrsNY\oC/2%[n]^ZEH:P:]Y2`!WZRIsr)$lC=8?C[Qf7tOjn'?m(-2Bg]9N<5*5?ifaIhL:iD[:79E;-^NcsEnKI=fY9LC8H
%0A\7b>L@%&KmYhJK(j5XWJRsN.UEP5[EZ-36PdCdUUV1jAr&g>Z7/h[5SpK4n>sU(BO2h8;U+_:*&qQ+/O^E]IO<`LOD+P,'?[(k
%o;M2TGfCeUXAdsb4Zg<H^0n,aaHeHAq7>\CpMNV8n-$t_&+gCW"/eL#[XYLERWs%q13IrV;crol8UmY6$)$>QVrN6pFP-#@TsIip
%^aW4LrT0r,*=q?mPQ,g[RD@^DapT?\VgjD![=4qn8.R)C<oBq3.lZe3^r`f]+%AHk0u/:`PWPEo..T[)>noe$JGSqh)AnFnJTHc*
%f&)etI1L2iCB,="X5Ye6#6qgMW0-P5a.HB\odA;@]:X?fUXj`:&/T!]eG>="(EiX.;'K>[=J5,=(]'KukF+bPrg81Js6=_#.fA>o
%>l"gif;Whe-gt7MkgZ(js8J9HcXr5899;E4It&.?^P?YWrYm9%iqV,#IIu"'edm-+?[D>R[:)&N.9Bm@ZkA>*23%gjO27ARmBN5a
%[J=n".Cu)_EIPXX!L6$[1Tb]0(Z7_A35QE".'khD>&fLlcEENdO4mTP=8cHBdN3m;*]./1rNn[,J(3X_L-"/RHpX%XGcHP4"fWIW
%MjN1k>h1nqTlAi-Dg2J9"P-65EJK!DW9MULYW*]t?TCQfQ4+&L+.q/cIF+ZFr7)GR"RJIY.?*6^/hkXt]`H*ciXkm$B'Wdk$R>d^
%0t]C9*/3q!:<r1P*&'s`:VZ/f#dS<7,b^UWn;Q\=4D^4Lo)D0?U/rFrhKP-b&*gj^k_.RWc!qcU"8n0"NWu'FYP]oC3ld^t?_Gn/
%q8fS=o#3CP_2TK)6+:eZ$a]\S;#r!I9loHPldSETYnFe)#gjA>aA/kXas)(;cN4go!T;D1B4-0.fN<KU,/T%d+[80WTC'eiI\"?Z
%^[X^BQn%#1T4p;VGG*&RA7mN5Y#>]\/YomocG8Ja'l=KDgf?T[r;;rg@@B9C+-sPM=A>JP+qhWIC[r"IL=ngc3[pALbIj";i;F\b
%5Kr.F*T-8]?(<gBg4--.4D?WAol0uedaiaK\_lXFa@kn2j7RoRB<+I.$a)[`:BJf'o5:J^N<h"s>eK^K!s6i%Y)6X(lo.Do*tX!A
%;t+:o5l&$]Jq37ei]m%Q%EsFG^/b'^<'0MIdB*A(CB'LI(/!."RD4q,\/<b;5M(60[2N[=CtN=0+5=bg7?Ou3a/R;(EC/U!LDg!I
%IO\#&HEc^ojhJtV`]%E*jbt?Qllc%p_\`09kPqG@KE"IL)h0bss22#>?V"q1PP]R;3l/Z%+/t)78WQHL>j;!TG)Lk-I)g^`;Y^@%
%r126S+3NXAfb,fb=^l4hM)\h9S#EsjLttF+n@QX9%k?Q<*$XlU?Y3FV`ho&rkSVBEGact<.#=@OiOQ9tl\^/m-N4Nj.u]q/m9UYd
%]7JJdV#9se>2Mp*^OKenpJ95+OsX$uQ8.'s6o5c_pi-NEa:5!aUj6JY\*V<HhA,uNE<"5*\iEp2cr>_EcKI<d@QA(@5*FooUfqlm
%`W?X6fO)Kus4;=r9NS@b*:.kZp4m[mheN'Ns8$q3_T9%VSU^UQc5="d_ILM?R7%WYqL9-9I&CG'5RT!o?_)$58)ct&^/NO22!Ip?
%+7M.LmS)nsj#VK#J(Kq2IkZ1I22uODO\H;a&^_PMQjrdg`spRLW"/D#-;t>$L-mBl0kEXEmEZ-qreh'0nDKa)rirJ,10k[s+Y9%,
%Htc*k;g*E<bTO9\FG%NPBMne"d%W>H`1oP:<DoC[O_1p+PNeAh5_l*!MDYV\gA_FBR&-2tA^2-`Ep!^*JJf_mDAL(#BgI1J626c5
%L\T6VqYpgj$p9,ppE^`DC#_Pbm=CrE55enE7$mF@(<At$nRnTV:NDs)K30u#M@?&G7S/m3hu_7TDQ49UGn*4?Q0e,Z,Y6I8;Z-/_
%@Kc;+eLZ1N.k(6Q0Dm]?!!rLXZ,2!D'E2&0.)$O!rfQ"_hdPKFYj`.\j[j+_i!fsMmI$Y-#)"1jpZ9t?CBf!2^3WEL_fYh#3Qq,6
%N`4;"A)A9i**TLHo://Er&EGF\PjT2l[0nSPoglhps+4)p)ub)\GcrBkPsM=J"9VQ@4HZTC6.]ScTcNSStDp%>K5u='pB4NA[g1b
%DE;`CY;olZ9K(#'Lg*Q.fJ[,M:7T`kohGb\L_LSk_K=7De5pa9=KhIhP.GI%(3a^4*W1D"Y"nf:Y@Y2QBrVkNKC`mDMS&2r;]_,8
%:3jg?-,pb]RA:bHBKYC;b0>6N>^!-gGT<9Y#AuM-_&Tou_^(]piNXqk7<E,sg]ATcLo/;TT$s](Dfn^]eA1L<C'E$iRdQnI;CoOH
%8MM(N6'2S)NM9sXViS<4j)lnpYo+(%A.8W-]4&>SG'=>_AD'kKLQ7+#d?XnCC!R`_q,4J7fMlLZrWWD3]4FRJ#3gh0R^rt21ME^6
%PDJ^MYqq("pnPOO6)N>I:#["$p^:q2SjBBFWDeak)@CEtDp7;:>fZBS,JoJ8asun3h3a5__Z?[EFNY[I?AtcN(0!^\/^YC>blkra
%&Q99*S]2A^SkA3F?&G,KTkj@@'V2SA.1g,135kQ.a[?HJONQ=DNpjWM6ii]q2R6;0`)6)[Z8U\B<K_5[>bakM=1lk-Ml@`uB6]Ic
%(K]OAO[tUj',@)bJ5S;C-leAD9q>quFjaKKk)'c"n<*ra>B-9;>Z(TJ]Go[e2&-3((YW`RkVT(<F"(PVI#5[=9qnln'm)K5L6kJF
%13]oIK5MgN$e0`UHn@sH6JW@iK.2[Hr[[7l7H3BiD3?pnjd[o+;Di*YZKu;KKL(aa>("3^oSatJLfl^ZRt5&;#KKYqA_h<*Rq7\/
%C34c^%h3G>'oH'?>hCJhhN5`[(rrL%Y)o'+As2fP$H$X<**3hmZo:+]W+S(4j=hS&FO:U[hpD.i&=lRT8ua4Z#1U.X!"GtAYK/hY
%im?9u*eTb9R\sbYNmp-%:c9#^RKeGP81ie/;f(9U$<<m5KN+%0TJjVB+>*oZ'lG:&GZ-S^bq_kE!"fnZhRM_5:s>#`L9\]a6E(+i
%i;d03C6h>d#h>nL+!b"N=pqORAYr6jg"K6bZuRG;Yk>B)\ItfLrg'Wp>W$&hnX0ItM9'-f%fRk30VU:hg?oa%h=BbF5WY[@I:0iu
%iAg.S:;Jh_Y3N[PjPt?(N+/R2ng[P\ORTt-]X:5:%C9P(\1YefX*srL@lI@2N$>mr;%[Gs'n`YL6ulJBcrPnG2pB-7pqa@V(9t5<
%_VmeNAa6)024uEn8-]X%A1%pV+sY5jT'I1e**oubLfRGT2%jB9UJj%0<2g?>)\&-*J-&&fas:FAa3<3`5kUO*cj=CJOO0l&@=q,U
%Dbm-TNL=NP,Wp<VRO4aiRSZgOiC[@^CZ:.AZC1-s.cXV2iW(^3>tX?RZ:l1bdJltI=&Zc]65'?Tcl'rfX(t^<f=:+PnG4P2OKu"G
%9QKrr^k9Wa&5IcHlupP\Kj?%+AL_T89]6r:F@0!+#87r*4<0`I9Z4E"QYK`@@=!=@Men_M>H4"5pc3Lld`F+n\[E3tlFLDKQiJ_)
%i%oY9G0%;V!I.i`+IGHBDP3if6@m`mH'%(Q`,p1L8R<rPL^K/P(WDgDZ:4Id`Cp4:'8F`W8"6eR5*]Rf=LNoYi[S.h9K6'E;qn#n
%efr4W?OLg+guI&5>(cG`p,/$efBRob5EGod'gb@W;1I0PbY#T]:FAL8eCF[K_fDq`s0TVAik2643geh>r`uc;2i4K]4I/HF6o<]k
%:NhW[$Mb\HW!0mpB;a(R5M2D;M2+kZDL"o55-.0#cW"S4<1tLW`M8oI.=-O8/E/nKog6!gUMeFaNJmZAl&^L78d[;8c3L@)VX*lj
%*nU#hdB#X^JBkR]d:APO&G,4\@`V9l-%M'W6R4o6e=?PdL)'`_RW5_939`3%TdkEjchS]7UWcH>4h0_eG2!A'0T&ifY:EtQ:<46e
%LOVjoX1Bd%'aC+bg_8iJk;Ng\3c/a[As!f.O,&(P+MJ'?f#q2CRJL=#BlF_T[bl$=!8\VbMGo69Oa[B1M)XNn9]5h]F,QiVKgpIt
%J)0n<UmntFFI%UY@gZSeM-K\0VE[&[>,!\S=^,kj.(hTDU(KtS`d!Rg5%#$j4o>9:$-C8Nd#c]Ff;1<kBl`^Ycc,'NA<2l$D24Uk
%(QEYZDL<u@rF7%U9+l30\08^63:?(/Xk=^N.ZWUMgg\oZ<:RIG(e\j9$B>c;BZsO+qGcP>>Ya79I-eq:87N2"2!nn!S/fh8h,73c
%O2en5f8T).1QTNQo_plrs'`\:\L?=dn%;rJs-O$Lp&Eu'jl*HD9;#+";"(<arYX1(pp+2+dta^?W*Q6lb**EPol+p+*tY)DrfrhC
%m$$mTOK"#sTi/QdXL9>AmW9,[Qnp%>mVKWFmIeKPo!h@pjk0W_9:ddq8q?6&_K!=ks5<'.+T1\GV[!B7jmdTJY.u=L]CFGQ-ftAA
%1Oi:USoW@^]2K["HW/Ppfg"MhZ$Z"IGe#bZqRJ^.,s8f6]k)[G@hqcQ`ZIYl'Z@[bp2,6Z]B%]G&umGK?4Eb`Ig&c$dUIWP9K;hL
%]"H#6rYC^bom7bih)E_V^\V-;I;+jfd6EgDr\u+_q2"eaXkS*Fk*I@R/(FO$'E?+<_T'o/<sr.(n%n'Ecg#$tmW\[8lL-B;d>_!@
%fA=l/Jti'%VuA()"pX^D)pePM.$#:]r!iGu+/$_GGa7h!%..V/dc1O</h[]bI8'F>&cHXB[WQt2#G4B[Cg*sP\174D\_0FO())YK
%&lTpKQTqD'Y@!aSYCDamW=0kQrW5Idd]UuShTr)H9)^E>k?M'YiOgZ=0fU*hF.Wlq&DMYJMXN(oD>X`=R)T&8=KSK@qqp;KYlK.F
%[hqWE4tbI&j8'DnA,YB&KPD]Jng0n!PigNbNp=%GU`2:sO8>E(fWaEnPhMJcJ<Q<##AQ#eUXnIOY<EAb%dS@3h\4kh\pM#8h[1@R
%8$0RPGr2Z7gV;.5-Vlt8mZ;fr:+##;AGfRV=`^2XGW3E)\_!@9S+XR2IkVbmOu),)0eUu3o'"WOA+i_'jdI4;g0I_USY6$DFj$>a
%/XhEr6u%?tI(J*Hcl]kf8F6X[PB#KJUl@O7l`0ijJe][Ea-D+!=:7CGrF%r$2#01oYa1_eIU#t]%%Wd`drp56BZ4Pr:Ij=`Y5D_E
%.34?N`kuh81an!D<.BU&g9n`;`KKsY$oq_eF5XIXYJ0^]Fdg4^6hO61ka@I/>q7TW%tMJdmI$cKp@-lCICFbjbMtXj<i8pF[,%D'
%,V?p+l[_t4hr?u)efL/.m7r"E)f]+Q<LpDK4ImqqIP-\=^?K\S9m>mqg,Z`'QY#&*4?o2/"7M;reN:C6I\kg[Y7DtNO`,E7\nIIY
%PtgH9e,"#?W7*IdHl;"%7ZmTBf[VMOVUB#>^=X:r45H2SlcN-<,UnAa46kF0EJ,$>3;NrkU!rG["(OUkN2"Np[+lV0"!Gj">F`S<
%G\V5::@L-KT:^3d2IS4HfRQ$Xocjo%AZUg_c<bc)eI2=j\V!Lq6j71lG,Osr0';S7I:^+,QS>ecY%KHE/7a]QgU]OBbp+2pZ/]B@
%-=u8^5b\0u^%9YL?kc?G++@DVcctBe;BrCR,PT$AO2b/dZj65NA#K<E:dRlih,1)A7qTD6L86V856JfR!!<n$He!=hg/OVo/U@;e
%lb``U7QCC3,&;pFi\hn+?"V_2Uk\P_Ahk@;/=8\7Fa%Fn+lhD(D)?p?]`O-O-+(sHG*\P\PlMYS?2O,3\Q9GfF0;A#[0fH%BV&t$
%??pH=I=94gghH<!46+l*db>9OAhVPF:)RT"N*qNa+&hs2(X4@cD$n85e[hBb1t9cT2o_c*EU"o<HAXoNOZk<tE`J.d[4Ar)bCkFi
%O2"s]_VO(tB$tR9RUnW.BHHULGU8,;E&V;*P)E$16]p?Pc(+!1lu&lfFZ3c4J*C%oQ1h^l7e-(kM8NNRnq1QK2-rRid;Ll$4?0X[
%Oq5`[bJVrZ]CPNOiV8n7N9\3KA=Pd#S6`*$.cHp_riQr/GDqkGI=6u?:MSn,c:?15NOcaoCj2ZAm=0;36dH>I].BO#qe3LIH35&%
%)ioJWDIWo_+/9RQGbmP#'`S83)=:b*5HjhHYSQ[<S+3-61koRL/q[2SptI187b'f&qWh3DCs?BKhGUa?RR^p?1i@M"?DI.$LEgaX
%lLEGqekkR$)tZ;+TZeog&b5hT->W9O]@i\EKP+&V5=EE[C!"2!(agtd?D5XuhXu/>+4$ZDii;.)jrE2]i>_FO(9[@X:je5,gM!_m
%i[?otp(t)9#Bsh)j"A8GX&$4_I3p!\F10Vj<G2Nk\Sg1=7e`<[C@oO9>%]O*oK?gN1Tp]Pli"H<6iV\[aC]b2NnMma[*`:+.DmOm
%iA'0:j,0PV*[?cbWs*-Z$>!t"gX&'g5q/t@73PTnj/-OY+*Hnm@aEW>:o`=T76/=jZWX/#cUZPMeSi8&SasRs<9G'fVjW&V]m>mF
%#Q07_7[(u.49s!'EQ:O(a`;eh=$!Ur.+e($G]OfFe37em:d`guGZo5JN<QKMQ$(f$[=6V\0Yd$u6%.t_G<0m;XZZUGa*i!:ECUh"
%rkLSH!gR*pfcf9spd%-c+J+-.a'$Q4:@bqp-lM:t'o$)Y;P/I.Jc>Prjf!W&2L&`\b4IJ#jtf"9Tm[d,DOQWg82kG,T)EZ05+Uu-
%.Z,e2m`jd>:OCX[YI=B:O78CoIP-6X='//dAM)b=pGrL#o\iZ'ZPsh6L*OG;Ro?KFlh*E)HB38"AOl']Gocu>3U'O./)s]MZgdq^
%!U,pP@WV/LDSp\nnWWH^WXY"[bo."TkRVElcUq16T9U8Dk@&>Fnb3@`TG0r4<'bZ8h8Zb&EihO,J'qdr`XoRp'A/[`Z!dk96k+9"
%X4ZoIW(?02=[egdU<6UBKc;uE7HALsnc[Vn76Bm^XsTCKKOWW,R.sL;FGUI_M'SUM0kL_iG3ON)b9q]P\!K;$F^d+7<k?5=0&S16
%YN?4;krJ!s:Qo=14o.pocIRI\SY-EDO6<Pp/8)F>:;>"iEsODiE)c;T$dnR(NaCHBLaRMPF*P\dX\Zuo!O$^+IXX9?=8!dUp2\&P
%<q28Po5\00&Sq)ZgV)4a#[Fh'YVCNpK-sO!$GkkLC0(5Ff)T\,&,;@@:0MrnM)ZpXS6/89>CDsbM[<f-VEYo=*qZB.!,[9#rf_Q[
%L>gIFH&HrK>o^SN?EGXLS=jpdh6sST.VADK9g&k$XO/%+9A7\5nm-A/C25+m^0WltQVV)TjD_T_g1^23#Pm:]GU:fka%)'S@P>bg
%)p+#om3?I\UN!tgPT3Gu7R!^iR7ji_Kd:AsIE=D!Ur?m(0ts+3>T8WbUI/T5\k+4U_4b0"@%;-&SJ@<W>.p;;Df&R^nb>`J?!i<>
%%<Q8oo1L%BmHut2nrVF?@r&&]^G&:I(WWZA2@E7M=`*[YrR+ibBABg&l(Bf<[7.uJ(melZpSh%;IeduehJsPGaj&H86ZQZNmmaX!
%99XaJ\(6(I#[dDjVis]\nSi'843>e@7O-_-B3N<Wm)-p9EjdG6hNF?i.p'A,)"]6JfR3&'VrbDSIVh<:NgVPYWF@F.j+Fiof-\k(
%ob*9cF&i/iS7u\5M9XP5\f=EdY<>C>R?`\XVES/=^,u\/'%Lam'gK+$\ON:3]9];dZ8$/K5&[eM%r1@Sd`tI$(qlQ;$H;*cS3S?f
%3,#;<%80qi,ZDDA8iO>(PZTlUpKMLP=<BEMe?HM;7pe2cVo`]I?uu^B1KNe\Pq(<Bg6qUh&6V3N$HL`_l&Kc;j`@p\/1!+LS"Zn<
%R\f&p-JA>Z(>:Z%rQ"-aAaOA&WIu=kh<j&39PKuuL6*s1m#%A,&67KLf*I9@#/.)Q,l&U*P[,q\0'@l7gECaXn:sMKKo/,S;Is9D
%UG($^r207rH'LJPjYL\_BAT(tU[/'f?VAf6mG+.nh.^b`L9@sC'=F1e8"uk:@VG3UXkVYsWUt`tKEl],Ed6mi9@YnOl+qK8M9qfq
%O*3@'b?h3J;YDE*D6+hnjiZ\M`AFW#S6;a_f,(EM9_pU#.(8#rD\!d]kU*FfPb'j$DcuHcpEW6^e(Ss0,bKLqHHNU%fQs:>?#&LX
%NE$j8\G^4\kI&%YTild/*i;[>X,$LeUishaA)j#9!4'Cb&3l*@>aF:BPdZu_:*rTnKiI;E4F'0%.HGe/@2%[I(pob^JcqWTn2O;5
%[^O[bSi:l!;Z8kZ&g(pRDs"CA,HGV-FPhD7VO&C8?K0\Wi9[f!)GLK53#aNN%LThIVZW@^AhuJ=4QjVA_g"f-/DVe<`Q(\:&jJk<
%jP6cu_om['VT$hfF4!<:n+&!M_+gPd9ef^:7SSJVFdHNWTh)'6b)M?Jp#8)FgaZCSF?&+B>l#@GfZhCd.b6/V=KhD8%!7[_*S$mW
%CppH^\o@7%CV3Wr;f;?LBRoU5'M7!.No%+gpbX'Qm3M7*rDnbmmloe--[0;ZYA,;SbN_Qc`D/$WpVc1,b;JQB]Daop9tuX&h/oQ=
%fh[l:f8J"q@FT"!OB_#m/,A:oEL/_)ZrWjR_fD27$SA&5,MC)Z*eX"V>?iK:0!G"cN=J)k5*XQEZFP+;qYiKZd99VNMl#^[?Z%lH
%?FoHi0:g`BBfFWr?oMtSrdhGEILQhAq9<2*lr!GbkGr/I>/7Rk<4=DY-FrWsgQcQ"VLCsg%ZcSr%'X&c=293D-MBq=d,3B8SsCap
%]2\=r+<u?C;U<J0]hBE'4C<\(-nM:XgW<Bo3%8S0Y>c?])F1mU@<H(JPKYPUlSk:p-^gQGhIqZ*b2Yo_>n/LLOL6n8DPiN6:YX=6
%Y.Q(2.iUS@=u`kK^p`&;d#D7o_"]dHH8.cEkpn8"PV`5[Mc[B7a<3%Y>>&hQnqJ4/Sh!UGK,bZ[Ur)ma$f*cE9Ok&3[isT;G3Eih
%kmW'rWKEht31NncP;D/3N<HhdRIWAuY`.&EUCtEVe=,,$[5!XeHdL6TdT<?[U>:f-SLPqi!)7"E`?pkJ!HLU%RY`g*#t71[e'7"h
%q2bdXe=&\\ha*2M9%_th8r,.0ELI0,b)_Z:R[<o:>'%:3SM>r]m+H3):)6$,qW'KTHhDmM]Rbgq,PLno2m@8;R?u)M1\!mu+@Eoa
%f+su28W\po/U,cJpgb.HVaT+PiKca_e4^0#)u_a=r56W9?$"SglBM^gdYA7uP0?GMD3oOI4<c"-6Y$hT&5O<(_HE.QYdFJ=qr?n3
%cSU;t66rsTF4r0^8<\+*oZ*>]PJrY1TfQnPkKK/8-hN7Z!%1+Na$7%^T5ZYf\if?@P:Q;=_uU=dCHnn"&$0EMOFKI*fuOD"j(R"_
%C8UA!`"p1]ahB+*65Rm?qsc,'X1l;"F5,jI1%b##a5N'1(PuHq\:`1t5N8B1At-'H%eg9*pETF8dIY=e;CHh$'"0Qtan]fInF/$s
%SPo<`SiZ=O:Qi];@0N4V:9lDI]89F!Z#M=;Si1*)q>U#ilO/h:#ZNG^\a!@44jDQBQm]8*e!4OR^7*et>qU/j%ORL")r[@DRjXfk
%cKeUur/(NZe]IP)ghhDi^pOBs@f>tpoD943$lpbcjn7@m'"iT8EZk\Q%gF[oLg4b?csbE@:6#S1^'OQ)eW!t\:40Q!k]!g!.bpoe
%K/@k`/um^(roX=nMRVu/C[XH6Qt@kq6_ol/9AZeJc^#Wlj=6qU0P7!#)laJDDmR?+G5oN0]9pLO"-Fs%OQu3NQ^pGlF`MI-C_(!t
%H.3kV7kk6=kr*%PNZ@D_403]tYlSt,L'R1&>!L-s^+Rr%cH\=&rDA8ECZF6e6H-7)$16C&DW-3bAogBhS)%&KPDhj$k*oU=h`4Ps
%(I:]IZ_c25i9OD?,WVOQ^4nDFqqq[;q!#n4JVQ3Y30%/brH]035ioAH3J+PfEPl;_<S7_j5<(bYD:H-;#t]9tMkjK:^R;]p409@q
%a+r2A51c9sGUc?efAuk;[^^d!)V)\jqWp$Ff&NWS/;?3r=\>5*(G@Kg[sto6;$EEcbEDBVWLQS76+jNc3iNXf]!fS!WqS`iCZrds
%b^=FjCgC]n7oqe%6UKKu4C\AYOW%84hp_AB+MF,m->?%X],1^"FLZZk=c(%`o0Z)rMmlVI>0F#oLC4?6q:3QT#--tr!hcr)&'WRL
%55u<'[W&BaEjP>h94"/XQT&*q@N2DBog8$5dFI\`*IG'X_/T'ME8#ZQ$0J[A;+HdtXaNp&'p`#MP=R^'cQlY9o9AjcfJ=-S@u(ot
%ND+]KAs@b#h471D\[Td^P@)B8GhP:gJhaaR=9YVbYX:i;A2B#R5sB=13_g^Pa>H`9Xi'1&[aqk;C_dF45WHM'AM\ZVDOb27i-(V<
%%!]5JC.mH_5;1UlWqK3>e"-9E%#l$LjGQ8^][,UGo-*l#\9%tnD[)DDl,U#<_HIHDJIZ:M97RFd+)Oh1='<:Tq`PnHhffdo$PQi[
%U'"t3*=[mTHd7NfRqf*tHT\8iJ]Ep=h:%2@W_r"EV1l$-:k_stpCB[lC+-X'F0V7kn$_]5qW2i^FgcVM9V%NE(jPC"m62BO=1L6]
%3\]@)Coq@Emg?,ZJXfXNd++W)=i30kbDX@;;eYtRgAmJ746GO+p)k=]PKW!$!HKi^9<Z,Kej?+9=DZ7G<<KRR50?;q=i5%DOC!R;
%oOIH4EBJEU/c_</5rL@Vc]Opo;EX+=D'^UthsG<=2B7oRH/56^7Ur4,EcqT"hHDD$^"HV\2*##(4UU!j*r:*To1E;k)TUCHa]+Bj
%rA!k8H+/dnAtki#lefjX-?V=KeFO3_h=9b;Q@!V9br]5=NPMtB[CCRi_le2>a-k,A.0^B"+2d"W\C>H[5j@@!a))Mb8TDQ8'jcM\
%lR+LP&-kKaA8Edr[^V[l'Qhqm(5.&D"ga3JF$J,[=O_o:[?FR.HbVe'Obbp:HRJdW^cH53bGg\bggMt#*dHL]0t,>GEYu,0W1fD(
%j.UXdD-5-M\_Ht*Gm^D!bAa9\^;/c'Wo#j?7AT`^`poeelb,B-(tR!HLK1dlQo^-uXOgFSPVT=]ngC'8NO'38Bs'>3GkXQ#9^8=>
%cQo"CH]),!I`biD:!G;R>(&tKQM/Mtc0X(=*72m&L#g6R]pU\^_^A&fcKGIA^/^mDnBu%:X)mD%T>-Z9h9JkV\o$g%TtP``:#%_X
%;F,*\7[W1""!2_j:0ohN'2RZClsQ!9T@[PoNT6@,O67"&8o,[.bD;u67rI3^']Q"%?k7Z2=QuorlAs7L]'Ge$,C:f%m,$c9P[1?N
%F.8<2V$l5&S%!M6A6XQ01hR2(c<bG2JP+!l:jUh.pi*)&Cnih?GYi-s4efGNH?e:Pap/H@_pIF'gZT1.1\fN&45,YOim;g3e(@N'
%0s]gYoGA!1hf@=!^Nf_*Q5';*Q/18&We92;0qPqX?J^^4Fqa]@IdIIEd!O7Xf@g#_,6edEW#HsBb=(W13+D0j`"b7)].^,s3NYV)
%^@RfKg`D-]6>:d:n>Wka6)6>@]4K_5=tZYl%aRs_a>:E$;DcnD]Mb24U_`NT?EU=&T^,]B1':l6.AM-P#<LY1VY[8]pk*GaqhO<(
%D1oa)P+!=[;&*n_BfYr7OnE_/TZot.i8j:%0o0nMQ]dT(r#)`iZ]qNI%/"FWDt%?T?L+A]a#H$FhBY1ir+N\^dB/&U!tU"!$pCCJ
%7WOV8%C%%uE+QmgSY57-hhX-JLX'/<\Vd/qLm7=L#1$4f^5(0"VS&(m8=M,9s'@P(p^a?!\W1GD+^FAr;Wn"q34jA)<jNgFf82;"
%T=pq9Q?1R[p&L4ME1"t>kBkZ!aP5QsJ\pY>UV"/IdJXGo?)/?E_%Go">au([h99jq&m)X-a\!7dp_]K%DYj_#nSf)OcGsR?%Ga"W
%?R7Wmq2!WgT5Le+YlLLL^L`FHeh\22kk=5kEYTn#:7Tj8pagH<&^9ck41)7AHsO?`ri*6L5[grnd^X2W;WdC\N!nmTI/"h-R?9/6
%UI9N?\I5`-O*J:nId</D8K)oQ>5,)C8]n+CRN;i&lM("R]E_2>?V3.%p#38%m]U6S4Z/`eB&XfSEkKLp&Y/B#5+cWmZPP!cg?3:r
%-o*,C@$GU54EREMPHoIu.]t(K2U0dDY8cKK>]m@APVQb="`tL4'U+)rlIFA;CTYT/0-2`?@jeULC#.;T0EbTNDP!hgfu(_P"_ZY:
%\f1EZq=8PYR<Z4AO46.I9$5jl'pS^b/"#;8+EcPgYC%h1I%;6GXr"C!#:a\B-p<ro?0t>dVmf.[C!so+>qqSsau4CNYdl[&DmSi?
%eJs66X)IgYHrVksUT5@lAZI2PdmbPD3*hP^-&mU0D+9&<4CjC[XhT^qqI&hJk%7"?C:.ej6Rf41VE6NC[!R4Jh#lAidr,/G(HHrG
%9_-L?P8<TE=J=Y%elsY=6jt`b-+ZR/;l$Z>])q8)KN#QVF6)OF?^$OCQ`QoohhJ>j9CQ^=-\0+(,uASo'DGSEBih:^Ki)m<B>#X!
%$8D;DPqUC=R!uaNRl-9s.;ABui(9^W^="O$V<hrD]t1atF-o^jC\uc@EZ8XY;X=*L+(=%RODt/=i+&UaWKY4_>^(&A+=7f[R*HJ_
%<n-RNjfA@gL:HQ[Q_f)TlF1hqf<#G-4gCIoje(5Fak_kO2MM)-LQ1IAj$Z+5AJ%(R'T'2VhYpZB!qtk8p)3W,8,3nXlG_L_m)Ek=
%[4=,s@=e.4=u01$N`Oif@<lJn,3U^K?^n@96`62L>e`j02I<ku&+,jJLY\JT./X;heGZ<TodnQaemd>2:?H<6%?Qg\qbTJ(Qo:'b
%VmgGi%gm\%FQVeC2TD\AY#<F,Y+#!*I>cCh?B$_rFu&11U@\g^d]-:<k@Z\njl_u<<,X./RXYf3-n#f(fn3["EX-8:rq)T15M8,2
%)qPl@Qq]^sHq.R(Tf3H,9G"!!(P*Xq]m5(8&UO6#XsMnMMWTqn(._eS%:lFpb#PqFTW*k2_4l(7]3DY2<u=NHf_."s++HtL>1G?f
%o)ER=])hm-n$7&Ub*R9!L@=Um?96]j*sOig<.4Sd`N3@7324l<reXuSJg^)8j&<[E*c%A@4)O/Fi9WVO\AJn_39p87e^gt^X_7OG
%o_>82mg`.>gcYOFkMJKDJ:7<J#>KFH"lL_+*q5(9g2m"7gC9F&mHtRXeG;MbdrMe/s2iAW]<$Ef`L"cF]uO(6NT.V-oF?*eQ82o&
%G%s#2Ukiq/kFV8miDL'1*%2?`JT7_3&;Q)DU\Yf^4UV,8WqQRio$>C?j^%qD&YXM/k9=[Fas6i3h:l]%1D14'N2U1[46#p\%KG.S
%"9uXQJUT7KkJX3*n4&oBCh()tlNKCuYSMbLSHaBoV80U%%9;_F2P!`!#<HF&moR/1V*#Rpj7B<s7[%Qp#JAs;dMYok1#B8#%koto
%;>2$tJD-d6V"]bmbJc]-;d90mjm''5pggG?9p@b2aAooofrkAG"cDoP:>0bJDqeioU\8%3"l3%=Sq"?)SmQ1;(j/TSHnYV]0Hn`C
%J!i;)mO>#Y$Ec?@pM/gKr%i8`BLD[$NUhW9F4'!I^jS<RQE'S,SpPY3_*8t!b(CH5q>@'RI!*uY=&`P,3p]qjj$NRnqJc<1PPI7$
%iuZT-D"h[ORd'7Er9Kl0cIYC5,Yt&l2O<6S,-Q1d$<cn%:HD[k?N]l-)f=d5_ZqFcidEGccgf4KeiUdjIK3Ll!r]o3/k:1HGMqrm
%"gdYUo@Noo4_LB"gmu2m$JJal+c"A%Z&e<qQo=&-p#!q<?Vi>I]Z4l<Fb%eFqGcS2[6?_iCY'/ZC]8YXa\hsHA`\im;K*Ts()ouo
%C9BM6%j<1;9C<OE+4Q[)3Rp6;5Z*t%%eDZ!(HX+-l_W1.>NqF-SZfPI6<HjOgY0ALmD+K#9U*2V?7>Y_F+WComt%">mWNSJ6.5IR
%j)a:TY9:WYJNR&(Fes]A?%hqMf=9(jfI9Dl+Y>E!L@>[pp.<OO\5`"a>kLT<P0\'=:Ns\,']D9lmO.bCIDL0Q^*%9a+qW&GI]j*m
%oX#rqJ/6:H/!=lRc5B,.Fn^RDC&?f\c=q^ZW&lBc<!^FUkL84l]Q<Nb[CHOhK#(i4@\"R9T7T#VgM1p1AC!m/b=faTFKog".]A3a
%?uU?:"dcX1oAmn_Ebr/T8,'cd-T@5iIX/CVq!GQJK#,NL2Af\)=U55L#7HosedK$Phq\5t2aJ`M4PQ4]_r;6BQ;Y^iZND;8cJ[$#
%\XQ@FGPR&\>?F-d?9Z"ji5<\EIEaoVpCHb/K"e*^1U2R>:O(jHD05rq<p=DB4AuLS+hW>bDl1b-QNhhpCuNtY-6?7JWAXIVMPV*6
%GF)Ws<VWqEN7E!;p8G?Y?YQHb2LZ\d_2"CO^ZI?Fi>[6Z^ot#uoCcB*5Et,fV5KSZAOp2(Cb-DBe%9LKI&?G<oc(MSK3#-QOr!VX
%fh!Zr(3Wa/oQoj\<I,T9j`BZd"n3O]aAj!7mdS<;;YG((4qcEPT9uQ)$:Igd?q\W0X%,d*nSU^?^6Hrnqe^V_3(u)Ncu--em,h?j
%"_6fi<d-W?dfc]2rt1reKGP(`_U[7B%eT\13!AT$((f*F-N[b"J02R+<t6;Qrn=dg05Mbf:7gC1rH!1u"u/jKXLMc?pW%9!2goao
%SiX(B/>mRT+cSr*N]5i:UY5%dXk[ssH?D/pc^rUh)n!*7gJ'csi@)1g'BD)gfn4n1o'9M[gM]jXS,*!r`X]%ok\tGbRQE"?\EmTk
%F+sNH;\ph3hgSdZ4ZEj>\&Uj'@&\@S@41kd\:N&khJ^Fh(M;`G)u2<B&[*97U70KCP:rfQF-P<!m@E;fdb5shGS=fl4^XrJR!!RB
%\a#f#kA<^`GP%_h04e`YTV*j+*C/M9I]>@6[\E#Vdb%:9_\aFUXGA]Vls@r6O,gZH#qIG#)_pr&_,*O["[hV+DK);XpC[mHY;BYD
%@3uiH3>gdI(BhPuWt,TSaRSq-E-9'%-"c>iKd&j0_[lMoPRmL_kr3c#lU6r38CPML@`[WHjl"#H_aZ>eQ9>^1.a^k-aT*brhE'%]
%$<B'\h-bK*Eu0erMZ)Ju@3QbOSh6ajCR:*K_:X2(,oEi(,/NqaHRgLe:X=X`aJ]?od!.:D:+fXF?f!mNZF/%hd#alS5r3e^#-GPH
%(YlM+4pD\N.Zu6j[<uNg\$llCJif<'c![h)7t^&ceSHp\(O?GNQA:C7r97E@\@4<)&+6%u6G^Rl,S_kpQ_&fL44-UgFIDM$cRPo;
%Ydf1Y"YZ\;Mr<^XAKc<S?crUkT=/_#13e:s@0@[u3qpJRP.h^5>b2aa[HkY<YYj.-"C(iq3;C'9m01*@2fHP38UNJl<kWeeNn9N/
%L#@E*Z4IqMNu"&1U#guIlhY'6Rb<f=@\]d_"mMtU=A\+S/p+Fm^MFl@R)^`9Ku?ILIURT"]Xa+DhRkFN>3EkYr8XKZYlCrb=X`(o
%SLg;\NjON3c<5)E@XM<^\<3GXqc%3:iMdZA>,ZP:lUG>j=_M/-"5V>^@:=+imUJ39Pm\@2-k7%\bM#]A'PUXO6Eq`h$d%[n):Fl%
%BZTP+8"n2j6mIpYJ%6#"Nt4uPHUTA*.U9Z)Khh*_Zr$!u.i,]&792_cemKY#4tR:4ok(HJH;P/l0d5%.ca6$6j]$;@iFJjk\?_E7
%/k-q,>DlD=n7>H-??@!cqkppBmDD5/0p@l((AH<XD"/p"V(\FDNOBV+iZ#LfpZn0DMrfrFh.#F.YdO9&4IRf2`k1c;?t+^jrh\`B
%j2+]9Z?!]*+.%=ICn-A8D&t?K0;YL7EG;n)elk*qgkmWtNHfL.Amp)#o[nG;>H5BDg!\'moBF\r;=,t@CLq@.jgB9?*+/+DQ8N.q
%Z+P'+h^p51WA&G#]ZVo<Q]J:VHcr8I[B8QFZe`cE=__`qc+8A5grj$CQRB&Ze]RIH.^ftjY@"JHQOiVO`*))K-%4Ft<q]=H[?]5<
%m@BNCG'L7^3,'D81tYNEV-DT%=rG(%nM!LYAU>pEN]4'*0XKD$GjE<gLNE:0Fnc5aA@U,>/r/oabLLS!?r.,QdLlqKdt\<nQ#s\X
%=jKK3,=\B2*SG]X`?W!5fhpfer`Y4b+(VMuci)d1UqL'NDBa!>;dWhQ^-u,`bBKX[p5j],h:^7`=814`qWcaS^V"mAY<T0j3p$7h
%fCm,<lF?k9(QChO%oL=45=H64$^GE!=_^?cf<Ut2e^=%D>$`$t7:2)!G]^T;DEp-riMTLu:!)iGYAM;UGAF`d^:e\f*JN'^*_t7n
%lEcp`lW.>q@LKltCFlp$*K:pUYuE8sr,rf:lnnRD9Dr1V4l9Te`EqTfXk9Fp/&e:J];%>iY&r[Fec<==+'s]*ig5AD`H_4J@P?Ru
%k]PGm%b/brf_Kf(h5l>&oupt8EW'EXXKLGe*'CA+46l-MViMQA*):?Cl:'o:g<n)hl!SlWOtN6W/#dQdl;A-RQC%<_\/Rf$O!Eu]
%<\`$cpWM!II*jke\KY\_Ec:F=;H\<]V\E]X-)teUEuj?ro6@$8YJtdO>.nStDhZPq)T`bA.aoTfC.<]e:f!)CJbib+-InGLe'o/9
%:*f$m>9@LPg=E.+X<$(a(UWMY`N`IY=WD-#F`F3I?WY:ZF_*,f]:$m+I^+>7dAsOLUqa%6)JjOR]u*P>H&q(9lU=i800ZX5-er-K
%f$1M*HET'@MUZUgUp9fAG\p]'/$DEZfO$L*2)I3]-WfHmhVQ%1bbR,fFus\[[L\QT<p1g.=A&P]e4MB$%]m!ACX[U407r8SRqitD
%m@1GANVl*SeCW"6`_F-(fP$V[nCUTInZ^J<BUR\(,+DjU,tcjG6DAXGY`]iiV5m<>*7?d0R@!X0Breh[=Z5^nRr=;@kH3C^9kJ0f
%[2.FV0"7ib:R?up>D!#`h-Si!*,]\+.hCCTLTC=,:U`j8!o&A$@!O+8bIm7Z*tKH::'QF$ST902]/(FkXlT?#mWpX"W%5u!GU]#]
%F^GBQi8_^j8hJr.;n:UV1Nh6\C8>0:b,t<Yk3G[o3h(6?LBD7XISB3bdXtsC="Z<!j&It#;@;0Hicoj4BiK7/Z]!G!>1PYn*b>jW
%iplBQ<@a=T4<G;Zlc\&M>hWGBj=]kQWEaeXH]qgIH5YfXlRaW:>^sH.=&-c1h;Cb5CKHRbO1Y:OA*dh%@B"R[q\G/"pE]&YZ^3fq
%^@#:9EnbrseP:18X`V(dT8H$Cp+Pj6RJdq;GBa[e.)uSIohb:R=DBu=ZnC\!LZ+H/dG`[Dj5hG;AJQ]?p:(YlLGsph-O!:^(5aWA
%eO&Tmmc>i@#;;.HgZcpZl(Y:"]qc=Xj/C@A*N*$-meBBb*?TJan$=D3UO;&Hq^<m@G70VBPIK?5b,Nf=LJISfmO+o.j2^[mn=_Qs
%1\:R!ZP+k%"PoS*U+C=+?9a_#GLRGhr6ej-3U\"r*#.#jb88.Rp%(fGnK]k<"W-U%-*stb=ZY@ET9Pf)7ce*eH5X:bh]6T>g_Q)d
%(W0/1ohp:pOtVl"gIITijkS$Z,[J>%1fpYgj5T@T>["WU2R[\YD"$?EqBQtS>W6#NW]/>g7H5`lE)F/k\5UW+@(G+'h.ROHDG+aa
%rS)3B;Rho0UXctD[J>&KH`V&@8%,G6qoht8pAVc]fR=)i`,Qgk+`Y.lH+5ga(*<=KNq''5=m5B$Gh[IZ)ljcNnV`=\dsbCWSuUDE
%k]9/HT0-b4o'>o-h7-WpgooM"GES:ojkJj1Yrp](4f]jR:JWL-[EI%AE4'^m235eEcqUo-P4,FL_u4V8XYjI#B2rYJlX&F:lIpfb
%f2&kne+HH_ESaOdhPuR!X6W@;[?4FXWhSo?:Q!=kc.>fWfM^%AM:Up;pTi=p*=giXI3d3(]@aW/pPoXFR(ffRlMaHH52(E&2#"Ic
%XlW=FoeN!l?:QZ$Eb@1PAp/&=EkT)(h;.KG2iHM[UQRk*Xb<gA?>`3Gmo@u9Xo=b$+86<>e>n&!ZFr7pUm'0`[.s8UkXU71d*8'U
%]WJqSm?\WD5rDsj-K>W'_l$LEG8+1p=T4TCGEK"?q:B]TO<Vr/Q^s:a1!<Q)g,\HYEnf'AhS_IMccQ^>j4;8)MUf$,Wn*4L.JKjE
%rp[;PT%@Co=T69`4-VnI@eo3`dA/R9%m'C5e/_):)2mC^eQ0=548#Q;&jFKrfB3"lGtXG=5^rQr*0>SEIiDDg?ZT7iI!o'dBVG"G
%^VWr2+@cKe*p"5H5dMNM]%G=52?LP`'9qWYQ(FZDKlc]C%eL("(Jj"^lX,,;f*"=.i)@FK+cH*]9gccFJMfeql/?GMZ7O\)(Y]B;
%?(=Kd71ZflMQAW56G;Hm7"5(bIQN'U0*(kq+A79\^tjVWW;Qi`T#8c0eVlit8g%`e/1t.i*p=6hMX-]NLbVhdS%t0edGm8Ob7J0p
%)E0JiTWBSW>gk5;?j_f2QDOeb=BU77huhjkh9_iD"5KoF'kaDC"&(X]e><6p[MZBR=raChZ9d"U992`GU^F?-BNPspOt;U1FN%&g
%-HAhmMX%'N">X*6JDXpt3g/O'W\>j#S+t>h%S15P#q#qZb(*5-CGV?=DX"gFL9Hgl!c2V;&g/#&5Sl+Q2$'T6Hl.GlCe(=qb7)b5
%2!i;:7MU;_>1OP79em9")RRCi3jNMYoBO[1peNRde)]$o.kVbL_'Y(M*>saS'hs85^^GZE).BP"03:O((:5<#J-$]OJdi+7#'9kC
%,CuMs\7>T[!";\781)3t\,t^oR',?amFjf6+<uIq@R2QFa"<Q;!k\Pdko=:RL5%CtWl.Jh:rrih!WJ#sV@3MO"(IWD_.7(a>G._u
%P`UHV\cL<=iCif_ajObW44;pDE52`uMN!7?r%J]a_NYdiEXBt/A;cmV?mq0T!Ut'`<"1=Yi`nA%0UO`%,rMaf0EqW)a\^uc.8reI
%\D,G*)M9N]r.00I"*L#lC^]<TTd!/XXp,;dliGsBC),C:`94_2!>CffG[V'=mfp#u+J;s2L6u%RCr*tM7oc+1118\mB[A"IJhHZ:
%i@'grRLI`6V$KHjJ&t%L'EfW"/PXiA"+Vb%Q]U,@l4"LOOJ+HU+q2Gr1_!kSLm*]a1f7KpT7@-IaoH&SAj?L<`81M0.PeR]_14(7
%"X$nO:]u%VVJh%LOOsYr=9c%1!h>t4fDu1m&*#C3JPW%NkO2C\FP]:-V_RH;&8fS$A^Z4tic07_1h9LA)SO?)b#(;#Y#q,Do;C<A
%3s2*PNu<H_5a9Bu)1ZiLY5ttpn94jU_eK;V$+!IMBHRh_WQ5?tIM<=t_?srm%<2t9E9*Zm&1]*3-I)Wo4:[n!VkokD6TKqi<+&bD
%MMc-O\Vd(!d8BEW8TYW-%XJdVeH/bQ.`3VCER,mMXhrVV#4escW"PJN@m\WIo*%"&>ch3Q(93'_8uf!d/USQ[k%Lf)$ah9/,T*,5
%`)ePK-bqRUJ79YF#QmLI)5uOg?k&CQ<^Bo?*>&Q,5t=o^ecl;?.P#KHaFc16R"],Pa9Jq#F,cn4J1[WBfT8r7YW=1'VWg&]#!sT7
%-m;to/7#3$cj2t*:]rA&Zoa@A0i2[_L,FmH!mqEEL'h$?(`=88+6\%pbb,@Zd]g<C<mj;RK^)Rs0^)b/p/Y%G.&t*X"#-ho4'=Ju
%[gZaKJ;ah-k?T$?(-n$Kj&e'T%O@.j!*.I@B;,lL(R8)D9bh=M=\KbC&l]*];D]&62@ooEpo1P'kgsY1JFURlTam8Dj8fESJN-0.
%67pDlTGNcGC'+tb,cqKp$]IhO1XUchU'fi1j=i:V"tFs(lGl/B8C_]$BUXKR<M=*18VIa\1EA;*0nG4<,c3sJUR'oQ>:?[W']b5;
%]$AE-Wf.'L!A9MV(GN'SFp"fO8kou39;m^JCk*ij/X-rGs+hR-8RQLF6`eR`ia=PS"t2;C5r'hq=p%L!LAZ]NFgN(N8UrYu984>k
%Mb+i[6<ktl"\P4%.S0`!JS'aH#.=Uf?k&<3No`rL&S>oaL5e1VdQfEOc(S@S)di_&jY1Vl&<ej=D+N)8\o&C[DhdBogB?2.'I#QS
%aD!n8!"??Q@C!jCAUuCJ%bgES:m87%O@>Ed?5,@pjY4\*NPe"3@?Vh;$BgJEY/\;.TeZkSX#N$J@lR,#rQkj;&H$48]eRp+0LKoW
%e1_%?R"97+P>/E$-HMLq"Mqq3_Y/K`<Q!r8n5D/5"p6EbcHrOhJKI0.?r:<$8N)A.J]0K7#%.tkRE]Ta)JIIu$>>X&,8L/J[*/e3
%%EA2[1ldM;L>4AX9qDs7Op5Y.*>&]@")U^?Mu[<ok9((eK.m\@Z7K`89nABQ)./d9NnU$8"A0Og4=M8S&r`/E8'TTrJ/:SnH!?r5
%9ePEJ0J^5,QA"%d$WP2,?@W'id>d+b$/IDu/.4ifVM?C_!Ik==:^c>*aFlncdX_O2P;"iO")c?hbUgcMi4I()-u'k7;e:U!5\6>b
%VCSZF*AfI$;1'ol'H"[G0LO@n9Hegu+g-nC1I=*B)7KUP3b`^?P^m29Df5YR1pE"qhhMJm@":U$nDp,R(f`0n>H0)DR\!n4BcKU&
%%)Q!&A\rEH#5QjdW%+'K1&)K6:3*.\*@2#OJc[\T0qI*3*DN"I649HU8H_=L$#g<1&I(p>!u>N31-c"QTXOr^,oT#\=Fa("$ur5O
%JJ&2ATWkSTDA4qQkcsD`9*rThc8#`77[Jt!BEQ(C6;dCJ,^VM:JM+81mXet_(,)S\hPTS24=/L`!!_jGd>u=Pm*Wl8.&&ss"uC1Z
%GE.6.WJfK98W(sW?lTf4+[@iOW>q,!9"mGV?I5Fd1!.f"-eBE(-UnRK"oX%H!Jm6lB`dHQ+q%cqKkXKr[6G=Q@sB;81@GL#/M)b[
%$Bkl^*\dTG,gM=L/l'H/!]$cd#`:,\"9\g>:#O)\F6Te:\:f]Yk7-3(Lsn>)JB\.\.L'gbQUh,g)CIcsqHOXH0IH^3d+6:")Y^-Q
%1-g9jRq53FA"4G@a,3:4[`2`0+$k#<"XHp=#Y(CP#>1*jnWj.e%t^h`&W(2JM$+@u6:E10*&+ZF7-WX1,0[hB!]iaW8@N>qoRT/i
%9O7.WL-E2!C5+#*OB45/ci@[PX+WTn^)8-45Y<dTVs$=+OTcJMXM>]X6VeL`+F>5paT(1hRM<%/5=m7:e2\@j:jtBB^pRcOfOplU
%+]KBD4<k5dkm&Bo]kA6j$@=72'OrQ(Et%uVG.+n=K;&d\45:KGR*=`gU\@F8R@t/1M.Rood/&=,-;TY`Bom66ZirZ38IdADM$fY3
%Ve8r,,ICHA<.J]Hq5Bfsi0.(B#S&DcIXo7R-/n9E2M\^pY/&=o*^HGH<HV%nVA%/rbGkh71;WAA?%[LF37pP\$SWEg:8/8Df>o=L
%BK'nei,;`UaRH>5l^C5QbX>5m(LDncVT)$A.Zq1MDSJXT#;8IHUF*VbU6!I5.N]su=-cC'0_1HFcP([bl309`R#!GpQHd?U;)ObT
%VI0Gi*F))BZWlYLJ-)I("NDc"IgWA^(1@]W4HL@RLl+MfRM<VN'b.dsbn@ra'TGcL&m@V*/.;e8$HQfN-:krkW5]ZM8e=1sap&:?
%,5hL=)`MR]*!X"APc?E[%-\mhj+/0O<M$5m!J]_gh%&sdbW]t\NJ:ZQ;'ZmZUFfWs77'9r%&#5f<T%!a"V$W.!7[kuVFE2*KYo[o
%J)Q4g(qE%@$-7n!aLWduUVk40&p2/NhCog9o%tmkAJ\B(gG9%BV6PVpQ\9Wa8b\(S#YMNVps7CaY^iAnU\k?f&SM/:Bn28_$p/2[
%FDf/2No\SZ!'h@B!fcD(nK8V)$"C22(`@K0N9!T./-4@J[KSLBY1R<BUIe9V'JPPc>OeChb7p4=Jr8PL!eU*q"AgJd!J+W&D4lcL
%^iMIh1.<A#"1J\j$4>)s\pUC50-+m:`UV:hB0+7TMO7ZRLRsYG!!]Dhf2P*B:Z?2G9o8_FkkGiG3<S']7t<e1-H$BG+]p\I,%,!i
%eVYe!CM9)qTX5>"4"q>!!!Gq_E!1gHa6Lb$(8ZpSUeN0b*2[eD673-bneITCOpbsC<RQ@8Qs#-*RO@hBKptt74GTmI^/U51Z%1C2
%2@W:7;-F0o%Q+(tNTc`[S!E3:MB!8%!jRe.)"+@kg4I2IG]"V5'%!E4#71H5NTZ;J"]]XOjY][#n1;'NN+5]P%`,#OMQF.]:u7Rs
%U?;V\MGjK[1;RHBmOg9=Sml:5d8,dSK!ne@71Ib[kRh3_$p>7r/P)gc\NBsD9O/<'CQi"7`%I7P..kFe/%UIo1-ZmrW[*rs5paAe
%`N6D!IZn?:MSU9e_75+%^)`@Ke#&@JYUp/T!jKfq`C/8dSK&>=L=uo3;3K)C%g44WOKfY@-m5k5kG,C+V'd[2X,r6.':*oa5uK*q
%Xe?CQM<'8'9)s9J0QiS3/[>R_<2KqlJX'.ChB[F1W(%=&lG*t1C^ZRZ7!:mS7+,;;IW.>'3P-bu,YlBFLV^9;nDO,@R$W[r(I/FM
%q,DI.0u,N:7n+X<W(Y?m+q0GlNgBO]$n]Hh\71"t%n'Nm"Z59aHtl9O\5L?EP%@KqM,?4pIMqa/kc+(hP4F2[W]ZQ:D[E1PC(Wq4
%cshk9RR]ifKJ+F?HUgr+9_f]+<7=C\;4WhA7[U?A#mVeC"_)\Y(uuH?/8p]@Nrr:6i+hJ`!ltL=@u1I$m$`Pai+qo?JN%]9)E\0M
%fms]&VhfG&>D@]hLqlEA'T=U4$h$X*QjJ[+<(&\aoXI_/bEtL;.0Wc_)Djn?kf8f4#EKV+71'P;,eb)s0[p=-![iM!;GcBR1MDA?
%<AaG"7g=3n3\Lg]WlAHc1IZFdk@$:r]pU$)#7N=20$"R/*jR*Rq,(R/d)T9(V9gJ.L)S?L2I,1W'M6NebasP1&k4tj(gERA!bF]6
%.;/r?#m\j.WX,kAK/!A.Kn+"@<so[oi+8UcK4uAA,t?o]Wq1U"BN!&(;;VSt%7kD,@>]r4Jba]c&OCLmnO)=kaC2ol2OQ)7M<_lT
%-><Z-j"!d4oVU$9+_Z(R1I$[<,F9+@SlA<OKTs7k-3n<K.Khi:o?P1U;94TX_=,>#5K5+!'.u<q/XSJs(C1!qZps/37ZTUN[4"[G
%q.c+HmP_jWjk-,6dKY[J<<mEWZ!3Sk5ed=]2c4WoW!5_Qb+YH'$:db/m!r41<&#[%b_JS4KdC5*6,AP8_),k!$5c3JK05+W4A`+m
%dUb0@QLH>S\NtfZQai!RiYhm^C5bIf&]boY0P-J*`h?U9'Vg.M^De$]/)9Nu<*BDnOD_8'@]IVW(M7fLr)!Q!PQlf7)J(o@-E.&W
%Libf^/Y7>[No4Ui*lt+AJPV#t&5:+iK#(lQ,WpGX6R[X('@8+,FNX/FW00gT1T@s$MQ*+WHh`sE2eA+'QRSO60G#:rgKgB$6"X5>
%mMO<f+\'7<@0>2<Rs9cFo:505,uHA"@;=WZ.lJ#MZJ["X!s$6;?+0o`"B-Ka_7J\AeR]\sRl3r?Cm\d8=&=n@>RH!8-j:Bh-!2XP
%R3\'-k$g$t"`Y]9q2mj^$N`lZP<nAg)*B^KTtY)g,2cI*!l-hC22-Z#P/Re2LCU1pMV8[p9'Ht4@CYs(73fFfI5@!I11_qmVOV?G
%d0`A&fK1Q%9,$._J9@'W0nC'l(Y*Y3,q$AoieoK^o74@-_Xn:sdk,:,6BJ1TJUE&Q&$o<"WGskI8HS#C]1K.fH3/UW<;-SCgJR!'
%\D_t:BOKU_$$]]H_.@%]*IT&8H2regaH%YZ?R>c6_W'6'&-`J.$sWjs_uco3.2#U+L5r5IM_mM/8e!']F9RE^AGKmtKZ5h@i+!%E
%1K:OnJ^L=C8EGFE,s)@Z)FgJ+c_Te<pPil]d<,.P-:\,S#ZJi#+O)cK0*4LkbEUd*"Em4LJI>VjE+H"SR3Dn=eX90E'%O38$Q-dg
%"c#[&2h7m),-3=120HWF_^nLrL&Z8/h?-NXBMugN0TZN'6,^rn7m'U?#>>V,@MY:Z:ls``@ZX4pq`>Z3_N1Y)E+oG%MM`/Fmg?9E
%d?9@r(,1a<j^,h1paQrq2P3,0F,RR?Ddu`Eg*<=K';J)'Qg15tY"`FED%j'[BW0#Y7Ou73:KZi1$Qc!uU5ORg3Tgs.BJR,r$'C,q
%.aufR/l5p_RC`a3Pm;Ca\2UG$Gm1t0Jr2,1J&hqkj[t,=*le]PjKFTk5HuU/,Z3a7FA?W21a$m5-oOmN55#F+m%Qu6EKagmV_RU[
%).\qNmu)o!&,2GJ?0j`$^fbY=B8Tg'JZt?XM<i"A%RUec/+3U.o;mjjb`PT;[35j\/sF1CTncoQ;hVBT$l&s=Jk8:50Z!b2@c9j&
%+-9nH)Vmj2`!dY]*5i<g3)pAm(MO]Xc;]^p\FROZ?;b8]CaNj/;ttK6r*gU'A6@hQ$g3B7,[!#G(FU`cMu-C_?)26fSjgWs8JKL&
%i.L`d3Cq'ea]6-q"j0O^=Q(33^jVGh8t=A!VG-5*$jA@mK"^CA\f_7D4R'qN[1F2F%(SYYZ6drU(/OpEW^u5;GQ_P7.0GG`k'ihR
%@l/J:e0<cNe[rgg#)9:3.Qc:9cr"UfiL(UP17QdW:-/GPVDK2$V)^5lWsZb#Oc%(*X+AB7MZ,;Nbp\dYdq0$&V[K"2P:&q8UCWDi
%APDQM"W^=6FV_sUHQQq5Q*0Yu;<FfbZuJG%+Keqi1iWVALDch%h;m=9'Wr9e2@AjRjJa9D1gKW[)O0<GdENmJ5b5+J*D*cU90j[M
%8am164q0*0DYpg[\e.%p`A"e:?30j!['P[<>a:e)74-f@%VD(qZBpCn9UsPf,K=EjBPqfiJ8[:(To_R#0r9bIV:743R(8DLZ5N#4
%8:VTs"e1gKGQL6lla;]7W?L^/s'%RO<m.eM$MP5)5MT"c(1a`-O/@XX#RT4hd%2Ls:^T[gA<r,QhEAS-f08B;\P3/-Jf/49f4."a
%)"Z6=Xp))&'Q@^D/?7W\,h1)JUp6`KEh,;_f9_]RDqB6mD!:.qj4.'X3)ekk\Am8nPO7Q5-h*;!Nh)6-S<iG(?Xe1SdO*"L;jXQ(
%6G6!U/:I#)_em-%Fi!Tqr"L*.o&GZ^QTf3.&<9JVSh_BdA(>@Qi*lCCa*b!@Gi![("CT1PSngL@iR_mNl"&P6H<G'r6[;<N$"^a(
%%fMVOOJ5NPY)UUEgSk]X8kDfC*D/mB^sP"NLo[la1p/Grg,sqFE]?OaD8L'kY-"M4H^r\8^Yd/p?VphAEn&OFMXjN,,$^qaNnLj)
%![`(b.t+D;iQ$*c]:oqho1rpBOnC]olc%1e2$"$TE1gP!TlF:/p9ag0[E46SCP:lZhOY5fdj%ru]6=3NJ=KTqTC;HqkFT%&3YeQ7
%^:li+["Pe3!'fUi2H9mS^3>UGl/t$=U^<WBGeK@8rd6Ac4uXci.>_toT@Q,eTT\CZk\`37JA&E*)U0nsj61"M3Jrj'n6YOT@]Q:)
%*bTl6q#1/k0dT.IV0Y=4<@2jT-aRYt.TPkC7+1hGa)k5#c6kgUnoF^MleLZM\am;-bkU5*8d)".l%3AAKYG^>$#aQK\$3V3%R2l'
%Q7nji0s_ocQ&R?Ddj\Y-rY3LVB3Bq6:''rc?71N7*G4'e<_aANa4p3j[b0is`hYitN4?A^TBh-Q*bSf5\g/)#,tb&nbU`$mUV+i[
%e!@^#+/s*DaN*8[k,:ecR,$U!<&VG&k>T*"rI.U9atHNF<Ct@-IFSA>lBlG;FBOqPP.TVfIIset2$>KfhYgCb75C!d1Oa<5qmNN;
%Fi"3^_<#Z@=+p0][LH??Y[8i]o(IJ+Z.XV(EC>i7dnaNg/FD\d+'ec)&hb&V>5>b,6ricr0q!Vk,(X74N=hqQCi,?\O2I%G"L"AD
%daM!'UQ5:pb1E\dqi[u\Pj@lCP_V<)U6(rBm^Lk-.NR-,jh:Ean72'<?+q2LrMQ:1<e3k-:AK5/o,[MS8VPIUNT],0CcP,FP!V.j
%YAARDLqYqjS&^j*,$4:+e*B(BE0p#gq:4$aLe*n&Y]uqq!Bq+C!)I[*D<i;]j\'\jr&FW,]^a2fnGJl,M,R%mrA`j'`T+D6+)HY.
%NcD8%*EC,FeW:QXc*ha+R&d:A2;au95;nkqPtE.eIOPqZn)K?K>l<BC<nGSY<>n@nh\Y]]O39@?B%m;8BhAn]iQm9$gO3;.^Ak0K
%!/-t>q0M^\T2t#PLHV@^P$P=gb:E&Wac,W@k[OS(r_f[XLYk!;P*O#k)LMJuS)M_T;ncT:]J%e=.Ej7Z2$N^ME\c-t5I]=SPTl[+
%G3(%*LE@K0,q,8R?-b_=h?N0.EQZn6T)bYp>6$+RN,+3s5:4dGL]a[iRp=k0=re?'9P?pfQ)].a:$,6Mc9^Q,$[JCBCc9pFot/s@
%3f!ng0Ci1UgD'dDn=)D'>O]rN6+(J+eOcR=)C(=FEC^jt?;XbjO@<pBUQl^c-/qhQqQHPF;HSX9Q<5T(UGMPCArOXO-U$0_&357D
%WoM6u-G\0)+e#iN<S4HoZYdn=#k#lGONhHp+r>,9"("M=[&3"D#$g8Y*4>uVFUlbU5og!_8FWLVhD?!8/<ea-'4"tSKInu.TrR4l
%a2rr+&nYk-K"G\']u]sUA!<S\kjXW(V80bK-EFD2fMPVjD?oI%-d%'5e^QMUfdaL43Ijig'uNQF=1@Lp]!YdHfue+c8e(R0-Fp.6
%)Pu.N<"8?U9t<K;W^sZ:s0Rqq)(JX^R;GTd3i#"G&Ys,cV+$?KKWTob<4024UBCN#&P&N?"[W5o%W\kS8=aqR7bTEL^Usc#F5:_q
%lu$!qW2gCCIs1ku)@RSkItGgEed0*?f^QMYX;a^D!mG9EM%C%VY],3SXqf`U1i!*5$OB(]@5<k!IRbS][$d?m3a=53@OdC)@KZ.d
%nkIXL_?m]RMMika_I`$7>Ep-o<?*-Y5YbZE+YHo%"?A!j(H(jJBWcB<^?"S2N]&>^#Qg<"h5ErRH0llhJBBB(%kg[od+i9L(GBiM
%qHfB::Uu0J0JA;EVr#%q9S41"JDOTkG]Hi7c(XKqEF'kgGSAS[]Su9`%0keX7Z)6P.[2:)<KU<@<%.i,]<Fj8m87NcT4TED&8Gt!
%<7cQdZGKi__k$[pc*lDgNCkSI@Omc8R*c!%.uD`oi"T7T<0`=aD6>!r%:G#kXN2:/S!M"REY,+lU^n9eR8cV0"Pdk+#-=,DXE<2Z
%<u7s-cpS8N>[Le#)UQI#YukFuhDWR,[6Wn[ihLE9ABJ(*IY/Tq<;)u`Wqaim"'raJPKJb3eeu/jHEoh*&-6\4R[8=@RKK"GQOOR\
%<^%hlK_FrL.t$U9)4=7a>rS5BL#m@[*`UeE7[?O.k7jP*(6oG&"q?j%Wo:3/3PJ'3^j7+(6BeOsnY!Bt6XWBBQ%?G_&>17sg)3F#
%Ljaqn[0FcWjpF1b$&lp)^fO=-il(9V16kt.9oYZH2Z;Y-]TaG:mZRkl?"J`S)X\THV03E>A]%CChLqOF'NFKo!!3YfN.WEsNIh8)
%E^7]C]Q<"F%@At`*+`t"]-,"uR!^\Xo3f"KQL#pAh<\dF=K5OmYVegD\SPK>"19"`*RJ7:LPmffetImM/9ep!kY;X!P0)HTRVRcp
%^UMX-gS-a3qq_uZdb7klQ'o>"h%)267B2cFNF)P2R1FRc"hCfC2pb3ZD)ufAd4ZH9X?!<r;C>uqhJuJ+3HqX!$Rg8ND?n?BSa+Z.
%?^ca7g<?3DYLqr_(MCN3CSqnfCQE3T!3T_Xi5u<:bc&et-:SL+MHENcEM_I%rH`%?.61Z!XPh1(;Td";lO[2CR7A!^1'Y+3k;\[H
%T!#I4aK*,9gE$EWk(ripCZ<D8=0LcDM\W^RSrh3?f'7l40)0c0qignh=;D6'e'Mne%K[`&U[5A-T#!NO:3"Cl)7Z3k@FY;C^(Wq`
%prSCdPKP[1D4\g^6QC7)AlTNQZANYaa(S8%O";-/3>E"=623*%cm-8h0H7kiiE':=hM;5/L5fD*JHK,WbhnlJoZG:CV?RJESP#!P
%-hRb1Vj4F!CmsMc/95ial#]?,g?6Y1iHdI:iI.Jce3q.Y(jql0MGrP=lJlhp[!1$)\d5oEM2,e-9&^UJ5U@O0)AHrlr3NY<X<@<l
%@7IM!Uo0*Y[UI9-AYe`lee3B/XD9o.L=^mIjFM.Jq1aqshNjE52Pp0U982b/0uYm^W$ucP-pDr4n/3uA:)HO^WAXUd\8+%6p5reT
%(-%(\NJf4#X;K*2.giC8@TBE>EA;C*kZIlC](U[?].>>pmcCXS)noX>EeOR^JA3H]$h@t3-k-k$Fko_KQs?mfO#2t9]lj1I.[K86
%BYUG0;%M$l!)gQ[)ih_?kB4#t916I>Yj]d'Qg1BaFhn^-#>^j&QjK+W]P\g)e@;#60oQ_7*73BK*562k+q0ag^:iTE!Ck'24mqsN
%GT=Nq#S5#AWSFu8AdYr].'3)`U*Z)!%1\q<>?/]_Xd,B\1]iYC4lifo"dIquC<He:l]^N]6+Ff`f6jQ(QELr3Y\aH<Y'jZ'$UqeU
%17Cs'\]n%$BUAg3T0TJ9TW@!V,6n4#8F/.K?S7C.OG+8LaHD@D1duuMCr(.-5Jd^fRcbIYT6-(<\A2ckO/a\]IMA>7o`)+5^\Q^Y
%2o#<NdK!34*=D=,"_=8_!$"K,=&HIWON_l35gt%>LW*s-#XZ&<g@OEXOp4aq>4#0>.>N$2-q*H8&WXk(!c`-h=rHWI)[ced&7nRe
%5(d@-5SMGU;`93m!!Gb.7r^_%8K1t;J0/N=nL=bt:8#DJY,#(C7DD$CFi$kcG-dWf)H(4'#bqhkWK,WM9JL9\FHqF(N.tIsjI.>,
%UOe/uFVsb%V^2M6P)N8AVRV,*Ke.fl6lo^eaTePb-f36n;(fkrKE>NGqBMe=2jfNMNPhsUZ;?7<<sC2H16$W+_)k]s=S7j<"]9Bi
%TN#lQ0:`c:#sZZ-&!V+[5kVMAJ6WZ<AW6em;3iPN9(X]CX_MoJ-GHFY]1B::Mc[Se%bT58\#Ff(U`uX&[<Y(r93qY<GYg_aV.\mp
%6<*&9GAGOk_icFJQmLo-`(sPea?'Q5&]9X\[hTJ3S'a?dB0jA;Pt28o7J.,]>`!$t+KpD]&o3q:Dub1dq]l$B"pR)4,t&MkB.ZSY
%rjlq%j:nH,>_`sB(VQ+X=OK=i+8IG/J2L>TJPcq(.X$?!pC=D8S9n)MCE1F:er)k0@Og\C9F@p&<P))bP>/"!l#GuT"/A>S6?+J1
%%*Dm5<Kb;VT,Uq.CZ>_%]Ps#L8lEg)gdK1lZnQ+/@,%O^6ZbPd(NO@Q`MQZ$Tiop-0^<*_DMS)b'I\F/lq._Dn;KmJrK=hemFbJD
%M\T'/%%n%jW@KB,o-RXQ42NlWo.NV6B,7Es\.Ea1X\%>0/W)NE4ph>VG+,/mP?1]&C&pP#5#W.n2NZq&?E+8*Q/XldrmcP1b[QGK
%]trhOA10_6dO;&>KM'NHDc7X/E27'in8`'QhKAF#kUjbWYjiZsm+Ra1&q"iA:/`=pRW'c<\i+%J1W+GU6''&?7&aghdXjk\+I#7o
%J9@mZ.g+%rK"9+XdLo+f6(V\p)?Joa5Rko_L=V9K6M=unW"6P8Q6-ZaYOh,Ah*pU)VAG-2E'5q$G:>ZXb>Q,CKpYC^e7Ch@d[3!L
%`K^+FUmOb=jEbYfI>(17q$Gehc@jmU.&lMAW>*q)>?1Qo2':p3R:ANWk&OnRgU(c#5OC/NNsf2r/5Qr]S(2Km:qJZr8X:0UYFXr]
%<H9;Q;>+Ni(>sLr.r%g88:VZ0Yc;g8C9\J9`aR@4^`7S_jZ)!`">Fo6JL6&Q>>I_E.Buk/5'm&(/AM)"[t]?oe\Eu_.M-t6o1Ett
%<HHD8^t+2RPX>,9%^_A_#jplPYJh5KMa\O]0r5]igWK]9N20r%N#1.ckeJIQ,^)mbX!@Hb:*H\]V='-uZ63aB5c3(^_'8)D3d=V8
%b3B;tI3ETT/7)1AM?iFKn1'nbQ'Fa!?s&8]m+?FN@^K@[-u?#\H6DqgTpACV4[1>hekT07+Ka@VRn]B=WA(W`CEmXaS0g_Tkj.)*
%b[,n"&J3$pr&@%e>;eZg<3ITYZk%ad89",@dS$m3RhBV`:C2DdGu*/KbVF#=j1rlMc;=\dS[kD55g#>fdF`I6=$u-!UT/,n*8K>%
%eJ=s&P5X9od`gZJrcC\8a?0qW;DUD[(#UL$)mL:F+l7`<nVTJtA0RNd2-X:XCu+r2E\^+#G6/D-UD(E0$J"q5E9KgK@*ZmfX7ttZ
%^FI/1pT_"h$mu-8m[@)YS&t?olfV+`Cn"?Qdi_%6LT>*@]<[F+SjprbNin,B.2+2pl^PM%W?>:8UmIiXKX3_,Vs\4H,E\9$S17jm
%j`*6Iok#Gb/Bfh9$i]t/Q"$r=82*9%ah^'(m0_[8D:]>ZPtRcc#>JaRW-`<M-4@J.Mb(^QD2Dq'6$,/V-A&&0#U14NXU)1!*CC\d
%-c>YbIqZ6NQB1X4U/f9g:k#uL2'h-KJ98KjKD0P4UMDGWpc;"X;Ysr_;R#?CPEk94+UqE!fhFQP)FaPciem8.C[``Dn87KV#^XL=
%28Xt3Yu`]D4";6[%k)Frp(;?Y2^:h;b!O5LR+D`MQ+T`Aift;$'98h0_-Xu7.>*XV7gTQi5oH2iOT'lFO10_AXOLmPLaFS8XsEY+
%aS?=!aL(tO:2;A1-e#5J[1\=B3sAh[iYFuD$5L\C>u541VA<uGD_KTt0]gFC:M=9l_^L%Nnn/Oo("FNhDr*Dufe?1CV=OUXHf2KW
%P#3aY16XTtN#LR(8eh/P6-'kV+Y)JN9MPR$CH5Oqg7??\HF=AAEc'q"V*0SU8kmj3Z`HI;hP4qRnAqg8>e&?@7Gl@u<a42`&V+]2
%*m$78GYQkqjGL\=OQm]iR];j2/C`%84p,a]bF(`,(toT@$GInP=Z#h?Ceb_c?AH/4U)78[Yr_CuE4b`X7]9mUZph)`W!eLCW`6-m
%UP-GJk86J,WH\jrfp!]rd:t_g:=A7sc(,_WNb"k4)F]4:E?(/$)U7HYk"p'CDR31kV5Hlq.Ij!$So\,p8kOQN*"VT7aKi.TTNAU&
%j9t7I153qnQ0I]qlEij9kV[Y]g=Zj,Q*.XahR6NLQ@.D41_Z^g7_sS*^piMN0]D@j$Ug3i*rKgfD32+lI3GSKBOl0B$]X%JF@[pE
%Dd[9KYgQ/8'HSaqqreT*^J$/TGe_YGMo]S2337KjQ_mHt1gr;RC*Btnk.#HV46X!%Y#G6km4Mh2oN+0NN6`Yg)i$!j_;=L:@YV_.
%OXut!o%1p2?I$XjTVSqoT,]r.MA-2)P]S%,+n6=kM@g.\)-cLjLC6.a'X_P_A'5&@3-q@bWE7e7]PhdPP@XgBT5$<5'2k_Lefl!K
%8I!OkCM/3s[3<^eO-3]p7eDaa7-XF)F'`XY[GpgEMR@Ne7fg]nG@_g[8te0\/qqdo@'%!R,_aX`.tEL5)NgW_GK!M[;+>D>8O(U]
%%*\t%=f$Z$nm>`!]2ZucJqDOS#RO<0V?qVUQr2hK7qeRF*$s%d:#qX50C#t-c*!Q3e)6*6bEfKJF(l&Rj`MpQ/;5LKi]FMJ*HJ%P
%o%#SGZC)4EZm,IK;srqTE_EMhY.i(?e553gW9#p/_2W)FVh>amXaTj*pXGJT*Df/#+r#KQmU"eR):pB_eY6>!8?m1BUEe+/MI#;c
%(\$cG@eQPr=JPM)JNG$:>!I6_?lDRH05Am'><t;HDcKOUXVIf[,[d)k1pKDE9g]!D>0e*90BM5Ug,Yq)2-uU>oAi=I\AEm^SK51B
%0b+$i^Z]]gUrjOL)lXs@>.Ul.i.lq>95*bX<Dpe>P)U=!l_[9_)2B"'J(Z11>M7/fkCFPH^B`Q?L[Pe3=kXNj%C07jL([-3bd1K&
%n-A6)SqoV--\YAWT]'[VA:HNOGBCjYOcC)B%-N]d8sr0X8kC@>M78!p+Y>ZJ/QJ8.<b7b?\/`>H+k'g;$NL>cK"h*0ZJ5m@(kgok
%%(`dUC(XgC=A`0b&6oD6IXe/a:th8/>E5D`(#bUU'8[lSRL_n8+u^VPXqh`!%T<^^6KuW=$^R8?98Wf3)6EQ6!cWm>$>&rVAiUM$
%Qq%YaD44c?FGAaNJ6e]2lpGkoN>^s(U=RWfd^k?9NP8=5Q46aBJb?67H@$84c7I?efWS\BJ<R3BN!3?khr]41!btOZem'7>h_-jq
%O\8BqXltAlDRV0t19O0D23m<_<'fL:kcth`fNOhA&gnU1V<7:LADEF7niW4M<X==+2NTGE26D6uW)3*\AHGUSdE*+.?d&DIpFjq4
%_cdXcY)mGFh(X[s$hYLkmZ30o."EnnXl/LN7u62dXl</X1sP$/qQ4(O=TK+B[:1fURrVi^fO;BMP$$2E:jKdb\e`fjkoP:E/S=Oq
%HaXor2AbjGJlUoS,[iS-AjC_Nh!n"6`p7GS4j#USaY;UEoK;ok9Slq"noZ^u')^TCD`-6]F(:QR<Y<TAD:dN#D<e,fh3UTeH:]Yt
%U<TQW''f%notB@6Y4Z[Z<9H#SLNTI+lO<\aA8eLT1?.M$p5_ZGm+F]mPl6,fC]qmlSf<&J6i$'#ptc!oB,hBOa2;.Nn9.R<9+:I?
%]Y4K[.(4i9XWl%"fN'bZSP^ZQJeWK36F5EG]!&6F`bT@GHj1]_B$1B9FG8%:(Y`uZ9.-)o/%3FfhGug4HT<k49:1ps6CPJs<ZTFY
%#O3tC6S'/`5[i`H7oU^?X#RRfZZrj"#&\:`Y:F)iq>l/Zm8ZMIdK<Mcm#<Lg,%J3mCGO.J[XrDp1a:/W#F7n$I@Y=p8mh_H7cZ$$
%nWX5bpH0Muc<Gbi,-4RdJr]7?#eTA8:q:KTO+PZ%$QH`sfu=@)@mt<OGkr"jn4T&*rU/f[p21ID=iFNqg&ojTc"g.2J/^F+*-s"7
%l3BPA`_ceQ/Ms8.V6[XckTLlEe4:C8.pVMnp?0\(V7VA@(Bt"%4'kee,G>Nponj;a]6#&aD8\nJJkjuI(_SioDYu%uSB56tf@W!)
%l".dqa%-qZdMdGnf?PA4R2p_ofZ_352FJ2_HTsB4a@7Ur1<imcnftFL4<FF2dZhA!Lj9pDq$U/>*S3UO(MHM=(6P,Kd^[#_dT4JV
%Xs%!U+Y>K7-Pb?DgUK]M(L6?Do,ata$II]R?*U-.0k"fDYG`FbJ7m4uJbUa^@kDYnPL3MLBpmNjY:o8l1XQG+6m9;\(LF#&b=3N\
%Tt4DQ'!c36LqQd(\7+V=p:o^PP`tX5C>d^.aB+5YZG9G@7(P&TPW$naPlM5I02:8j5peE62/T"AN%lSu%cqi&7]8X>4i4QOhf3`0
%BL^KDDIBfJ$RWIce-i=m@];?WBWLF/M$jn8R=iBGSJBNW>1NhQq$B^/`67=hE1,**Q?anRZH]d'pYDdV!<p9ib'k=ZKgB_09F_)-
%.&a*0P9VGR9In?FABkr<8F6gA.NB0,r>\pKME]>LfSpX4oFqdK:LT;40nZ?=Rlu+?<3rkp(bj8:Za@b72"W4UZpmA_o_MPu!O*9=
%QYWkc'54Z)<XmaM3^J[S,(/#L'&(.';eEN,LaNu%=:*\mHg"1e/a2II,j?O46d^R2-mYE=G%MqZ*2BTsX+!*7%6%<e9`[+2:$3QI
%a:7(p0CL'lO^/gFON,UEGRf>9%L4d<r/Jc@3Dl+(^Md?=D"6mr4T]TN(iaXA=E3BL$Ht(<YQ;n.BmP'l-Wn\m=_R?f(%Qa/6rSa"
%To%N^2*1uup,<m*D^3l_OD*'$.cgqGWRDE['f"rFaErpq125"%rCAbFpZ^)Z(/$Y]l!Wi"K/ZG'$!q3MoZ\74K^KgYH/p1k+tuTt
%=56+rZlj\\"es-M4R0m!-V%K0%W$Z95hR*\J4LQ_;r+#/_"o1>GEWh0_+Ko2+5E^^*-=?l:g+-3U=)R1>p!br7.jkmqp1&mX0<:]
%Wq\pBn>)=ULQ=4P68j`AlBSi_iUMO()nZj;ni1k#EOe!bT9Mngc9?*Ki;t-+,R(_M#e!(Sc=it"EuRV$N514K1sdc+G-]Vo$B=Np
%Q1N9K8#TBV[EaJ.)g+RM)]`9_cUrC]>5Nd[gDJsjGVsh9Ad%&,[TSg#rD64-bN=HQk\_,Q:f.>X8'4PISQ8SL"sGY-NLnS@Iagb3
%jtS%3M>+kKZA<o>S(6b&eM)_Q;tp(<10=4:P.>]7ZE?3*e$cA][nX<<:AJ*B'a2bQ<EkMPT!S+</(q`<co'h.]1D#G?m2;U1`]]d
%K?4gcos,"V'CH@6A!37[O"B39[lV@CKRh>n@jGq$_FPc.el+UWfhRTpcB]H7fo!P]!ReVh;&:c1#,5MkXshU/Jg[TgIi.IpD&dSW
%dk^uH)01`1JEXHf$\i,+3?idc;_muOV?ZF?1gNU,N<mc"oOQ9U>Ih_!8.0GX;J=2q:3Ds)?O,S.=1>k>q!<RF*Ck/=aqY[=+SmCK
%Z5"FBlpiJ$5^JMQB]aSP0j`Zr3+4;`R8H0*b6iZokSpDh;aF4d`*0]E_:['ZOA&.KQmB"a\*9fT"+6_?Ef3JJT$gTu!h;d?eU')/
%#9sFP81G[%D]aDo]@npkSO:+@&pSH)?XUG`@qgRa6hcDBl9t67El_@;J0HMUO&)j']lSo((j3/SO(Lf\<Z-7qqHZ%FD'1t^T2Ktm
%FB1eh-b%`KB*TWYWo^JM^ALX6Yep(Z>J!kgQKTnn576nJTF0BC6MeD%2dRGr>/+m'[!WuN;E2gj1L-o5Al>rpLf3UU'i;;iY\e]7
%k`=4:XD<7-%@<k-YLm=cl,F+00S^q5TW?Q3Se\9V'sEIoW3V'd[^?=L:A_k_]AWrBeA]jTGngR%:]g_Z5t6u%PU(b#[r"V7Mq\,t
%Kg?),9=7mS,R()E%_0MnR=]+2Cmgr#"dQp"iHM3"Xr99+'I1t1LP5X"J<4_0m/iM!J9n,[2pU3]1a2LXK"L?M@&MJN9RXF'(j`A3
%AllKlb%?Babb,8/Fuj\KA<IFV"H9PQm7r4G,Nh_/C:'a5$L7q#S$D(MmOLn$gWTn>q;"G#6*]e]#]t>WlCrr8F?m0R6\%_#N0(jf
%n#6I>QBF,6Z1CP=B^E(s_0%)g[mn_fFEQ6OMd/dGS=TI@gfJR_9fAI-*23oqpPr$&PO4ZBka'[oa&c;j\f>ih@7^;GZ=g8S%Qaq`
%Z]u*XQmjAk0`.-hS$k\/DknoK34fY`f04NFB7R$$CU3bXH^HHpXcB3@&:5\1OA"_iaO]/\:*a>@8gMk(T0o"Mcc/?p\S-Gt4VJH"
%JF:@k[CR1/>!='?mHiu9W]gdiQHZqpb_\!19"M<E`LYQ?W5c(f(U6[n@WHfY`.l7'aCo5.()28;[S!TKMSnZunbiSf7fHFQ[0?st
%Y8Z5!39[XSQuL&BVhtZs=`49_J.a&4!OYoTYh]D_%GJ3^Q:ANHng/?H`CRJR:ii;h6**[+,88>b*GW)?c]e=#iE+f5UXPL6*t8M^
%]f*@HIJr/<-jYAi>9LVC'RH'In]N\kd2@T?=ac07BRpe]=5=fl^uZ>=6g!GfJoj#/r\1nGgI>3eTb#hnej<S;oYjMA[L&!RKbR-s
%*eaTUSbu#*@B7Z+.E)VQTJ$9O4>"$$'Bc.0Y]c!rALOU=9:07cZZR[r6X"kh:o=XL/HV!bWf.-9&M[kE_jp:0g-L,0>Oj`fdt(5_
%/;q7h--g0H2lf.hZC,?VT1?tiFqW;e1-'\NXKi$T%Y+MtN[H$JiN/_)[[#&7&daDW3JXCV2JVObkU4Xo/Ui&B'=Qf1H9NCZ:,P>`
%2oWP^8VSGRZ8d0m*=]'()_3C559P3.dd4RP`VpHW8h.Ub0%a[,_U8-h[Q[=;O:-pfJ(P,1_9M!GJNk9qW5_/u=`8DSEk7bG]Qr\D
%hDo^N!DR3(1nn*o9/cnMUc]cqapR04Y;aMrW>8;4hbm"gkQ]XTL]4>M8][%'HYm3GaD:@&p>[GVi>"C(/TY=^_G8>oDs0#1dB"O^
%emqlPf=ZM#'4WP.!=/TB.9[,]+tcJ-!p(pNC(YVJH=oiH,b'o=pM]\kJn*Z^jcE#[6T&9RlcTYk>Hi$H>=Vs=d6!%"qfJA?I.4'U
%<%"?'[@2P;8pHL3PE^X+?,Z?;OV]PT*7=>5bI"aDRXElXCat6>$_?SWc[EP>JM5C(YkClNMM)d9YYjbC>!mkAJGL)tjdu;Ae:CE/
%%B_,BKTJ_=&%=j'Z\ICQZ]:i](1TkH4c)bAZN:u='0ChMrdKZU$3<]+C`sSqAu;7R8f$riAiK/t4'kp4Jj`NV_K,4Lc$jHO]r$2q
%&eW]e&,7VhfblgK::F<AFKtdF8;^(J\G'&HN50ieb&qoG-DT'7(YYf[,+#9;61]5h/@mL`"?LMfif)9_JfWPCa-CZ9S]agSc!#J[
%kbB9ZcAe$k6fXt"dr#"U`%ps7PHu)ZTDYdS/_ZN$bD,;>7dik]f51bI&bmn.H0&^BY[XG-]$lWA<!YW@%X7\1+*jaqs3.0DRG8b*
%^!hP'lgT<fl]QVOQF%(3'j3Cm#LS,@,LBdr^4X#ue.]ZeRQUO/2GHVkcP/;E5VKH'pi\S7g!YiQ,V55E9<"OK&NC4"N&ftqn1>7@
%]tV$=$Ds()pEeBi?+8T-]_p/'>44^q)+;Te+!IR5J#\4<:!KSo"mgc7Ha=_Z$h73VVdii'Q[X3?Y&^ErP[6Ur7l;gnaqQYhCV6P.
%kTLK%#eqRQr[Ej[eT<XQ"*Wl?kKZGPAn9S)rN9@17rE<m>^QQ+*2c/S&N(W*P3d/)?(k>s_27us7lFF7)D?T'`!Gj,p4Sue_jbMo
%@[6ZY3ZP1NB$"L,>/<Gjj7/5a++h8$=:Id$qM$9TF-&K^oN!@7#;Abk4Bfg^f,kF)qie'*jB;e",=Rn:04Z")U>j_ob"sY\r6^<\
%/u]J#mYj;mofM\88\rVQM0^o7p/H7C]QC.Uo]N(LgRu1)%JLU'E;R'Pe5eGAdsFLXaGH\72U5J62'X2o4k5C6!9'!6#,R+7'?`;M
%WtaWcRVh(uMs3.c[Z6m#KfIT)*0;u.<orl[=<$%P+WPY*CV`E#d.#"Y^`No0qa2rBQamJWn*RbbXhrRg2!<EsC#B>7HH0"WQNm9s
%Qq\5F:#l.O]gnYi3Us_4TTir"lG["53Ul'SENd6#maKOh-X-BQ2DG[e*ShW;NX-q)oIp,eTA5PG^3H,IrR8j5%IJE583!:.cV7-d
%iLsH)\d@r-e+9Hd^B8/B#!S:NT-JV8!69(=0O!QZ1,LFcW@\MSW2pBO>^&#CeVt0k>i#<U3=s+p7`n9J:)WGo2h/PuTZe+Y#+bI^
%%A(GsiSI+nNiPtX7#@Q]LHK0[b_RT%MNJm]g>T$kgKh:V&4Ccsb2AP%"=Y>5N_T*RF-R"^<fNN.:D,5h*l=(JlIK.YFtQM@bW'jW
%JZ5[q[k/)m4W\t"dqHABNL_"dqjndDR-H;G6HC:AVj=1hf6A!o!Mf.bU^,kio]GAbMJ]%b0(iiW3Z?AghHF)Q/dK.%LRXC&qlWPm
%J0mO!F5>k.2VJMc_taS38`6r.bE/.I(o^W'2VC-ITlEu,fZ$bjS&$,OGr^>/.5L7,-80+4/P'mflE,>b5=P)6*)\3rQ`JD6@X47,
%ir$W#]Arnl:ZFKSG@Sd"?P@^`!Jh^(5p??O.%F-;(0;`58<YX]5g(>W?2'+YBlCm22C^Z^AM]0/R9HeeW`%'Q5HM0$I\_YZPHqrm
%[c=ri1ttlEX_/p'=c[fjOSsFC_F.FD]9dAV]CaYEHI%?S#FV>2"a"kFmU!VfS,-_R&[u&POL6=?@A0AtG^kD9.Aur]7D:Ia8u6c_
%eg;.(o$Zt<*c;KU^)9B4,pI[9OUj6U>%LhSV8nH,]BjHO5WGX(Us``5.[D*qkG+^edt&PXe)1?'[DX]RD56Pm+5<^f2gW\47bNCE
%L!OC.8->6A$b<sY*&5fLmqt]7lc77?X^C`UcM2Y*f=,j:EaknD0cF(1O7t#204NoCrB'5$MS]b+?UB_PRs[h5+&RX@nHF%f`:.<o
%B"fVa)>$m#"rX+o<kI,5.3!;:=#()04@kj_U$qJUK#YgR(Np-3$KWE@,"?/93cQ0tei:Z%9eO-58bSY?N?S?Ql>u`O:Da5Ii^+[+
%9jh'KNH@P7p-*eBpQ22+pX+STkN!d8d5q#X$aYU6rDhU93>+%UXU45MP-MRP(eCZ9Q5c`rQl\7+[@sGu1.Zd8j'DWG!6mZ4rRa<I
%^Xlup1%HcG,0eRSBPa[cPUi.k6VHm=^V2-b%oW0#[quV>MA)NNnXQe$l3p>TM=%8.ZkIH%s72!o?)O"?.O73]MeQ@dp$:7rom8pB
%;Kp@M4])*]%kI-B6:"n5G)[pm_>*nnA4uN3XjEg=Y.h6#3iWt2>hqkH95:'eCiO=cdO/hck`9)=&Y\g9Z%uY\VQr;b?Jj1:OK3q#
%ku2-<>6S3"1Wgu`N3-ojV"7heLVJ=>iMRI=i8^_-K!KtmSauI=^99bKqosTeMnaZ:kC7gXmiVT+gMah'X2"!#o(tZMl]4:/n)n&m
%s8Fd$pCBLenaf!EqU<4Za6-gErT90UrUf!>hgYFNT76V-:OiBAT@\S+rUJLc^]!tp?U)=(p2@_DO"<?U52a'AIfK.lqs??B#:U6_:B~>
%AI9_PrivateDataEnd
