%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: head.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/20/2018
%%BoundingBox: 0 0 417 450
%%HiResBoundingBox: 0 0 416.4798 449.5755
%%CropBox: 0 0 416.4798 449.5755
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 120 128 8%%BeginData: 22705 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD3AFFA87D7D5252275227512752527D7DFD67FFA85252272726FD
%0927262727527DA8FD61FF7D5227272751274B2751274B2751274B2751FD
%0527527DFD5CFFA87D272726FD1827A8FD59FFA852272727522751275227
%512752275127522751275227512752275127272752A8FD56FF52FD21277D
%FD54FF4B27274B2751274B2751274B27512727274B272727512727275127
%4B2751274B275227277DFD51FFA8FD0F2751275127522751FD10277DFD4F
%FFA82727275227512752275127512752517C527C527D527C527D52525152
%272727522751275227512727A8FD4DFFA8FD0D2752527C527D527C527C52
%52527C527C5252FD0B2752A8FD44FFA8A8FD067D27272751274B27512727
%2752527C7CA7A8FFA8A87D837D7D587C527C527C527D52522751274B2751
%274B267DFD3FFFA87D5252FD0427F8272627F8FD0A2752527D7D83A8FFA8
%CFA8A87D7D7D837D7D527D5252527C5251FD0927FD3CFFA87D5151272727
%5127512752275127522751275227512751517C7DA8A8FFA8FFAEFFA8FF83
%837DA87DA87DA87DA7527C527C525227512752275127277DFD39FFA85227
%26FD1627FD047DFD04A8CFA8CFA8837C837D837D7D7D837D7D527C527C52
%51FD06272652FD37FFA85227272751274B2751274B2751274B2751274B27
%51274B274B7C837DA87DA87DA87DAEA8FFCFCF527D7DA87DA87DA87DA87D
%7D527C527C5251274B2751272727FD36FF522726FD1827FFA8A8A8CFA8A8
%7D7D7DA8A8A85852527C527D7D837D7D7D837D7D517C5258FD08277DFD33
%FFA827272752275127522751275227512752274B2751274B2752272727A8
%CFFFA8FFAEFFA8A87DA87DA87D7C527D527D7DA87DA87DA87DA87D7D527C
%525227512752275127A8FD32FF7D26FD10275127512751FD05277DA8CFA8
%CFA8CFA8A87D837D7D7D835252527C7D7D7D837D7D7D837D837C7C527C51
%FD07277DFD30FFA85227272751274B2751274B27272751527D7DA8A8CFA8
%CFA8CFA8A87DCFCFFFA8FFA8FFA8A87DA87DA87DA87DA87D7D7DA87DA87D
%A87DA87DA87DA87C7C527C2751274B275127A8FD2FFFA851F8FD0B27517D
%A8CFA8FFA8CFA8CFA8CFA8FFA8CFA8CFA8CFA8CFA8A8FD057D837D7D7D84
%7D7D7D837D7D7D837D7D7D837D7D525852FD07277DFD2EFFA85227522751
%275227512751275283FFCFFFA8FFAEFFA8FFAEFFA8FFAEFFA8FFA8A8A8FF
%A8A87DA87DA87DA87D837DA87DA87DA87DA87DA87DA87DA87DA87DA87C7C
%275227512752277DFD2DFFA852FD0B27A7A8FFA8CFA8CFA8CFA8CFA8CFA8
%CFA8CFA8CFA8A87D7D7DA87D7D7DA87D837D7C272727527D837D837D7D7D
%837D7D7D83FD047D52FD072752A8FD0552A8A8FD05FFA8FFA8FD1DFF5227
%52274B2751274B272752AECFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAE
%A87DA87D837DA87DA87D7D7C522751272727527DA87DA87DA87DA87DA87D
%A87DA87D7D27272751274B2752FD072751275251522751275252A8FD1AFF
%7D20FD092752FFA8AEA8CFA8AEA8CFA8AEA8CFA8AEA8CFA8CFA8A87D7D7D
%837D7D7D837D7C5151FD062726FD047D837D837DA87D7D7D837D7D5251FD
%1927A1FD18FFA8275127522751275227277CFFCFFFA8FFAEFFA8FFA8A87D
%A8A8CFA8FFAEFFAEAE7D7D7DA87DA87DA87D7C5252275127522751275127
%A87DA87DA87D7D527D7DA87DA87D7D512727522751275227512752275127
%522751275227512752272727A8FD17FFFD0A2752FFA8CFA8CFA8CFA8CFA8
%A8FD057DCFA8FFA8A8587D5252527D7D837D7C5251FD0A2752A87D7DFD05
%27527DA87D7D5252FD1B27A8FD15FF7D272751274B2751272752FFAECFA8
%FFA8FFA8FFA8FFA8A87DA87DA883A883A7527C527C527C527C7C7D525227
%4B2751274B2751274B27527D7DFD052751275258A87D7D52522727275127
%4B2751274B2751274B2751274B2751274B2751272751FD14FFA8FD0A27AE
%A8CFA8AEA8CFA8CFA8CFA8CFFD067D5252517C51512727275252585252FD
%0D2751FD0B27A8A8835252FD1A277DFD13FF7D275127522751275127A8CF
%FFAEFFA8FFAEFFA8A8AEFFA8A87DA87DA87D7C527D525127522727277C58
%7C275227512752275127522751275227512752275127522751272751CFCF
%FF7D7C274B275127522752275227512752275127522751275227512752FD
%13FFFD0827267DAECFA8CFA8CFA8FFA883FD057D83FD047D52585252FD07
%277CFD1C2752FFA8FF7D7D51FD04275252525152FD0E27F87DFD11FF7D27
%2751274B27512752A8FFA8FFA8FFA8FFA8A87D7D527C7DA87DA87DA87C7C
%527C2751274B275127272752274B2751274B2727274B2751274B2751274B
%2751274B2751274B27277DFFAEFFA8A87C52527C527C527C527C52522752
%527C2751274B2751272727FD10FFA852FD08277DFFA8CFA8AEA8CFA8CF7D
%837C5251FD047D837D7D517C52FD272783A8525227525152527C527C5252
%527C527C527C5252FD08277DFD0FFFA8275127522751272752FFA8FFAEFF
%A8FFCFAE83A87D7D527C7DA87DA87DA87D7C525227522751275227512752
%27512752272752A852272752275127522751275227512752275127522752
%FD05275127527DA8527C527C527C527D527C5252275127522751277DFD0F
%FF52FD0827A8AECFA8CFA8CFA8AE7D7D7DA87D5251FD047D837D7D527C51
%FD10277DA27DFD092751FD14277DA8587C527C5252527C527C524BFD0727
%FD0EFFA8272751274B2751277CAEFFA8FFA8FFAECF7DA87DA87DA87C7D7D
%A87DA87DA87C7C5252274B2751274B2751274B2751274B277DA8A8A27D27
%2727512727277DA252FD052751274B2751274B2751274B275127517DA87D
%A87D7D527C527C527C2751274B275127277DFD0DFF7D26FD07277DCFA8CF
%A8AEA8CFA8A77D837D7D7D837D7D7D837D7D5252527CFD10277DA8A1A8A2
%7DFD0427517DA2A87D774B52FD112752A7A8FD047D5252527C5252FD0727
%52FD0DFF522727522751272752FFA8FFAEFFA8FFAEFFA8A87DA87DA87DA8
%7DA87DA87D7C527C5252275127522751275227512752272777CBA2A8A2A8
%A8A87DA2A2A8A2A8A2FD04A87D2752275127522751275227512752275127
%7DAEA87DA87DA8527C527C525227512752274B27FD0CFFA8FD0827A7AECF
%A8CFA8CFA8CFA8CF7D837D7D7D837D7D7D837D7C527C5252FD0E2752A8A1
%A8A2A87DA8A2A8A2A8A2A87DA8A2A8A2CBA85226FD0F2726A7A87D7D837D
%7D527C527C51FD07277DFD0BFF7D2751274B27512752A8FFA8FFA8FFAEFF
%A8FFAEA87DA87DA87DA87DA87DA8527C527C27272751274B275127512727
%275152A8A2A8A2A8A2A8A2A8A8CAFD05A8CBA8CBA8FFA8762751274B2752
%27272751274B2751272727AEA8837DA87D83527C527C2751274B2751277D
%FD0BFF52FD072758FFA8CFA8AEA8CFA8CFA8CF7D7D7D837D7D7D837D7D7D
%7C52525251FD062726527D7D527D7DA87DA8A1A87DA87DA8A1FD07A8A2FD
%04A8CBA87726272727F8277D5226FD0827FD047D837D7D517C5251FD0727
%FD0AFFA85127522751275227A8AEFFAEFFA8FFA8A8A8FF83847DA87DA87D
%A87DA87DA8527C527C2751275227512752A2A8A8CBA8A8A2A8A2A8A2A8A2
%A8A2A8A8CBA8CBA8CBA8CBA8CBA8FFA8FFA8A85252277DA8FFA852275127
%5227512751277D7DA87DA87D7D527C5252275127522727A8FD09FFA7FD06
%272652A8CFA8CFA8CFA8A87D7D7DA87D7D7D837D7D7D83FD047D527C51FD
%072752A8A2A87DA8A2A87DA8A2A87DA8A8A87DFD04A8CAA8A8A8CAA8CAA8
%CBA8CAA8FFA8A8A8FFA8CB7DFD0A277D7D837D7D527C5252FD0627267DFD
%09FF5227274B275127277DFFA8FFA8FFAEA87DA87DA8CFA87DA87DA87DA8
%7DA87DA87D7C52522751274B2751277DA2A8A2A8A2A8A2A8A2A8A2A8A8CB
%A8A8A8CBA8CBA8CBA8CBA8CBA8CBA8FFA8CBA8FFA8CBA8FFA8FF5227274B
%2751274B27517DA87DA87D7D527C52522751274B272752FD08FFA8FD0827
%A8A8CFA8AEA8A8FD057DA87D837D7D7D837D7D7D837D7D527C51FD07277D
%A87DA8A1A87DA8A1A87DA8A8A8A2A8A1A8A2A8A8A8A2A8A2A8A2FD04A8CB
%A8A8A8CBA8A8A8CBA8A8FD082726527D7D7D837C52527CFD0827A8FD07FF
%A8275227512752277DCFFFAEFFA8FFA8CFA8A87DA87DA87D7D527D7DA87D
%A87DA87D7C525227522751275227A2A2A8A2A8A2A8A2A8A2A8A8CBA2A8A2
%A8A8CBA8CBA8CBA8A8A2CBA8CBA8FFA8FFA8FFA8CBA8FFA8FFCBA8275127
%522751275227837DA87DA87D7C527C27522751275227A8FD07FF52FD0727
%7DFFA8CFA8CFA8CFA8CFFD057D7C5252527C527D7D837D7D527C51FD0627
%517DA87DA8A2A87DA8A2A8A8CAA8A87DA8A2A8A8CAFD04A8A1A8A8CAA8A8
%A8CBA8A8A8CAA8A8A8CBA8CBA876FD082752837D837D7D527C52FD072752
%FD07FF52274B2751272727FFAEFFA8FFA8FFA8FFA8A87DA87D7D527DA7CF
%7D7C52837DA87D7C5252274B2751272727A8A2A8A2A8A2A8A2A8A8CBA8CB
%A2A8A2CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CAA8FFA8CBA8FFA8FF
%A85227512751274B27527D847DA87D7C527C51272751274B2752FD06FFA8
%26FD07277DFFA8AEA8CFA8AEA8A87D7D7D8352527DFFA8CF5252FD047D52
%7CFD0727527DA8A1A87DA8A1A87DA8A8A87DA8A8A8A2A8A8A8A2A8A8A8A2
%A8A8A8A2A8A8A8A2FD04A8CAA8A8A8CBA8CB7D4BFD0727FD047D83FD0452
%FD0727FD06FF7D27275127522751277CCFFFA8FFAEFFA8FFA8A8A8CF837D
%52A7CFFFAE7D527D7DA87C7C52522751275227274BA8A2A8A2A8A2A8A2CA
%A8CBA8A8A8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CB
%A8FFA8FFA8FF7D272752275127277CA87DA87D7D527D5251275227512751
%A8FD05FFA8FD0927CFA8CFA8CFA8CFA8A8A8CFA8CF7D5252A8A8A7527CFD
%047D527CFD072752A1A8A2A87DA8A2A8A2CBA8A8A8CAA8A8A8CAA8A8A8CA
%A8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CBA8A8A8CBA8CAA8A8FD072752A8A8
%7DA87C525252FD0627F87DFD06FF522751274B27512752A8FFA8FFA8FFAE
%A8A7FFA8FFA8A87C7C527C527C58A87D83527C52522751274B272752A8A2
%A8A2A8A2A8A2CAA8CBA8A8A8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8
%CBA8CBA8CBA8CBA8FFA8FFA8CBA852274B2751272727A8AEA87D7D527C52
%52274B2751272752FD06FFFD08277DFFA8CFA8AEA8CF7DA8A8CFA8A87D83
%7C7C527C587D7D837D58527CFD06272652A2A8A2A87DA2A2A8A8A8A2A87D
%A8A2A8A8A8A2A8A8A8A2A8A8A8A2A8A8A8A2A8A8A8A2A8A8CBA8A8A2CBA8
%CBA8CB76FD072752FF7D7D7D7C5252FD072752FD05FF7D27275227512751
%52FFA8FFAEFFA8FFA8A8A8FFAEFF83A87DA87DA87DA87DA87D7D527D5252
%27522751275152A8A87D2727277DA8FFA8CAA2A8A2CBA8CBA8CBA8CBA8CB
%A8CBA8CBA8CBA8CBA8CBA8CBCACB7D52272727A8CBCBA8A8275127522751
%2752CFAE7DA87D7D525227512752272727FD05FF52FD0627267DAECFA8CF
%A8CFA8A8A7CFA8FFA87D7D837D7D7D837D7D7DA87D52527CFD06272676A8
%77F804F8F8F8277DCAA8A8A1A8A8CAA8A8A8CAA8A87DA8A2A8A8CAA8A8A8
%CAA8CBA8A227F8F827F8F8F8A8A8CBA852FD0727AEA87D7D7D527CFD0827
%A8FFFFFFA82751274B27512752A8FFA8FFA8FFAEFF7DCFAEFFA8A87DA87D
%7D7C837DA87DA87D7D527C5252274B2751272752A82727F827F827F82727
%7DA8FFA8CBA8CBA8CBA8CBA2A8A2A8A8CBA8CBA8CBA8FFA252F827F827F8
%27F8F852FFA8FF5227274B2751272783FF7DA8527C52522751274B275127
%FD04FF52FD072752FFA8CFA8AEA8CFA8A8A8CFA8A87D837D7D5152587D7D
%837D7D52585252FD0727527D27F804F827F804F8F8F82752A8A8CBFD04A8
%A2A87DA27DA8A8A8A2CAA8A85227F804F827F804F827F852A8CBA87DF8FD
%06277DA8837C52527C51FD07277DFFFFFF5227522751275227A8AEFFAEFF
%A8FFCFA8A8FFAEFF7DA87DA87C7C527D7DA87DA87D7D527C525227512752
%272752A8F827F827F827F827F827F82727527DCBCBCBA8CBA8A8A2CBA8CB
%A8FFA87D2727F827F827F827F827F8F852FFA8FF7D4B2751275227277DFF
%7D7D527D5252275227512752277DFFFFA8FD06272652A8CFA8CFA8CFA8CF
%7DA8A8FFA87D7D837D7C527C7C7D52837D7D527C5258FD072752A252F827
%F827F827F827F827F827F8F82752A2CBA8CAA8A8A8CAA8CB7D27F8F8F827
%F827F827F827F805F8A1A8CBCB7D26FD06277D83847C52527C51FD072752
%FFFF7627274B275127277DFFA8FFA8FFA8FFA8A8A8FFA8A87DA87DA8527C
%527C527C7CA87D7C527C52522751274B272752CA7D27F827F827F827F827
%F827F827F827F827A8CBA8CBA8CBA8CBA827F827F827F827F827F827F8F8
%F87DCBFFA8A127272751274B27277DA87DA87C7C5252274B2751272727A8
%FFFF5226FD0627A8A8CFA8AEA8CFA8A87DCFA8A87D83FD047D5252527C52
%7D7D7D5252527CFD0627267DA2A87D52F8F8F827F804F827F804F827F804
%F852A8A8A2FD04A87DF804F827F804F827F804F8044BA8A8CBA876F8FD08
%277D7D7D7C7D5252FD0827A8FFFF275227512752277DCFFFAEFFA8FFAEFF
%7DA8CFFF83A87DA87DA87D7C527C527C7DA87D7C527D5252275227512727
%76CAA2A8A8A22727F827F827F827F827F827F82727CBA8CBA8CBA8FF7727
%F827F827F827F827F8527DFFA8FFCBA8275227512752275127527D7D527C
%527C525227512752272752FFFF7DFD07277DFFA8CFA8CFA8FFA87D7DA87D
%7D7D837DA87D847D7D52FD057D5258527CFD0627267DA2A87DA8A2A87752
%F8F8F827F827F827F827F852A8A8A8CAA8A8A87DF804F827F827F8F8277D
%A8FFA8A8A8FF52FD0A277D5252527C5252FD0727A8FFFF7D274B27512727
%27CFAEFFA8FFA8FFA8A87D847DA87D837DA883A87DA87DA87DA87DA8587C
%527C5252274B2751272752CAA2A8A2A8A2A8A2A85227F827F827F827F8F8
%52FFA8CBA8CBA8CBA852F827F827F82752CBCBFFA8FFA8CBA852274B2751
%274B274B277D7D7C527C527C27272751274B2752FFFFFF52FD062752A8CF
%A8AEA8CFA8A8FD057DA8A7A8FD057D837D7D7D837D7D527C5252FD07277D
%A2A8A1A87DA8A1A8A2CBA27D2727FD04F827FD05A8A2A8A8CA7D52F804F8
%76A2CBA8CBA8A8A8CBA8A8FD09277D7D7D517C527C51FD072752FFFFFF52
%2751275227277CFFAEFFA8FFAEFFA8A87DA87DA8AEFFAEFF7DA87DA87DA8
%7DA87DA87D7D527C525227512752272777CBA2A8A2A8A2A8A2A8A8CBA8FF
%A27D52527DCBA8CBA8CBA8CBA8CBA8FFA8A87DCBCBFFA8FFA8CBA8FFA8FF
%A25227512752274B27A783A8587C527C525227512752275127A8FFFFFFFD
%07277DA8CFA8CFA8CFA8A87D837D7DA8FFA8CFA8A87D7D7D837D7D7D837D
%7D527C5252FD07277DA2A8A2A87DA8A2A8A2CAA8A8A8CBA8A8A8FFA8A8A8
%CAA8A8A8CAA8A8A8CBA8CAA8CBA8CAA8CBA8A8A8CBA8A8FD0727517D837D
%7C527C5252FD07274BA8FFFFFF272751274B2751A7FFA8FFA8FFA8FFA87D
%7DA87DCFA8FFA8FFA77D7DA87DA87DA87DA87D7C527C52512751274B2751
%7DA8A2A8A2A8A2A8A2A8A8CBA8CBA8A8A2A8A8CBA8CBA8CBA8CBA8CBA8CB
%A8CBA8CBA8FFA8CBA8CBA8CBA8FFA8522751274B275127A8A8A8527C527D
%52272751274B272752FD04FFFD0727A8A8AEA8CFA8AEA8AEA8A87D7DA8CF
%A8CFA87D51FD047D83FD047DFD0452FD0727A2A2A87DA8A1A87DA8A2A8A2
%A8A8A8A2A8A2A8A2A8A8A8A2A8A8A8A2A8A8A8A2FD04A8CBA8A8A2FD04A8
%CBFD082783FF837CFD0452FD062720A8FD04FF51275227512752A8FFA8FF
%AEFFA8FFAEFFAEAE7DA8A8FFAEA8587C7C7D7DA87DA87DA87C7C527D5251
%275227512752A2A8A2A8A2A8A2A8A2A8A8CBA8A8A8CBA8CBA8CBA8CBA8CB
%A8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8FFCB7D27522751275227A8
%CFFF527C527D2751275227512752FD05FFFD0727A8A8CFA8CFA8CFA8CFA8
%CFA8A87D7D7DA87D7D527C52527DA87D7D7D7C52585252FD0727A8A2A87D
%A8A2A87DA8A2A8A2A8A1A8A8CBA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CAA8
%A8A8CBA8A8A8CAA8CAA8FF76FD07277DFFA87C527C51FD072752FD05FF52
%274B275127277DFFA8FFA8FFA8FFA8FFA8FF83A87D837DA87D7D527C7CA8
%7DA87D7D527C527C2751274B27512752A2CAA8A8A2A8A2A8A2A8A8A8A1A8
%A8CBA8A8A8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8FFA8CBA8CBA8CB
%A8A227272751274B277DFFCF527C52522751274B275127A8FD05FF51FD05
%27267DA8CFA8AEA8CFA8AEA8CFA8A87D837D7D7D83FD077D837D52527C52
%FD08275252A2A2A87DA8A1A87DA8A8A87DA8A2A27DA8A2A8A2A8A8A8A2A8
%A8A8A2A8A8A8A2FD04A8CAA8A8A8CBA8CB7DFD072752FFA87C527CFD0827
%A8FD05FF7D27512752272727FFCFFFA8FFAEFFA8FFAEFFA8A87DA87DA87D
%A8A8FFA8A87DA87D7D527D527C2752275127522751272727A2A2A8A2A8A2
%A8A2CBA8CBA8A8A2A8A2A8A8CBA8CBA8CBA8CBA8CBA8CBA8CBA8FFA8FFA8
%CBA8FFA8FFA8CB274B27522751277CA8A8527C525127522751272752FD06
%FF7DFD072752CFCFFFA8CFA8AEA8FFA8CF83FD047D83A8CFA8CF7D7D7DA8
%5852527C51FD0B274BA8A1A8A2A87DA8A2A8A8A8A1A87DA8A2A8A8CAA8A8
%A8CAA8A8A8CAA8A8A8CBA8A8A8CAA8A8A8CBA8CBA852FD07277D7D7C5252
%FD0627207DFD07FF2751274B2751272751837D7C2752277DA8FFAEFF7DA8
%7D837DFFAEFFA8A87DA87D7D527C5252274B2751274B2751274B27277DA8
%A2A8A2A8A2A8A8CBA8A8A2A8A2A8A8CBA8CBA8CBA8CBA8CAA8CBA8CBA8CB
%A8CBA8CBA8CBA8FFA8FF5227274B275127517DA87D7C2751274B27512727
%A8FD07FF5220FD072720FD052726277DFFA8A8FD047DA7FFA8A8FD047D52
%7C5252FD0C272652A2A87DA8A1A2A1A8A8A8A2A87DA8A2A8A8A8A2FD04A8
%CAA8A8A8CBA8A8A2FD04A8CBA8A8A8CBA852FD0727837D7D52FD0827FD08
%FF7D2727512752275127522751275227512752A8FFAEAE7DA87DA8A8A87D
%A87DA87C7C527C525227512752275127522751275227A2A2A8A2A8A2A8A8
%CBA8CBA8CAA8CBA8CBA8CBA8CBA8FFA8FFA8CBA8FFA8CBA8CBA8FFA8FFA8
%FFCBA8275227512752277DA8A85852275227512752277DFD09FFFD102726
%7DAECFA8CFA8A8FD057D837D7C527C5252FD0E2752A87DA8A2A8A1CAA8A8
%A8CAA8A8A8CAA8A8A2FD04A8CBA8A8A8CAA8A8A8CAA8A8A8CBA8CAA8FF7D
%FD07277DFF7C7C51FD07277DFD0AFF2727274B2751274B2751274B275127
%2727AECFFFA8FFCFA87DA87DA87DA8527C527C52522751274B2751274B27
%51274B2752A2A8A2A8A2A8A8CBA8CBA8CBA8CBA2A8A2A8A2CBA8CBA8FFA8
%CBA8CBA8CBA8CBA8CBA8FFA8CBA87D274B2751272727A8AE7D5252274B27
%51272727FD0BFFA8FD10277CFFA8AEA8CFA8A77D83FD047D5252527C52FD
%0E277DA2A87DA8A1A87DA8A8A8A2A8A8A87DA87DA8A2A8A8A8A2A8A8A8A2
%FD04A8CBA8A8A8CBA8CB52FD0727A8CF5252FD072752FD0DFF7D52272727
%512752275127522751277CCFFFA8FFAEFFA8A87DA87DA87D7D527C527C52
%525152527D525127522751272776A8A2A8A2A8A2A8A2A8A8CBA8CBA2A8A2
%A8A8CBA8CBA8CBA8CBA8CBA8CBA8FFA8FFA8FFA8FFA85227512752272752
%FFA87D52522751275227277DFD0EFFA87D5251FD0B27A8A8CFA8CFA8AE7D
%837D7D7D837DA8837D5258527C527C527CFD072752A2A87DA8A2A87DA8A2
%A8A8CAA8A8A2FD04A8CAA8A8A8CAA8A8A8CBA8CAA8CBA8CAA8CBA8A8FD07
%277CAEA85252FD0827A8FD10FFA8A852522751274B275127277CFFA8FFA8
%FFAEA87DA87D837DCFCFFF837D527C527C527C5252274B2751272727A8A2
%A8A2A8A2A8A2A8A8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8FFA8CBA8
%FFA8CBA8FF7D272751274B27277DFF7C7C27272751274B27522752FD14FF
%7DF8FD062751A8CFA8AEA8CF83FD057DA7FFA8A87D7D5252527C525851FD
%072776A8A1A87DA8A1A87DA8A8A8A2A8A8A8A2A8A8A8A2A8A8A8A2FD04A8
%CBA8A8A8CBA8CB7D52FD0727A87D5251FD0A27A8FD14FF52275127522751
%277DFFFFA8FFAEFFA8CF83847DA8A8A87DA87DA87D837D7D527C27512752
%2751277DA8A8A2A8A2A8A2A8A8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CBA8CB
%A8FFA8FFA8FFCBA852522751275227512752A87D52582751275227512752
%2751A8FD14FFA8FD0827A8CFCFA8CFA8CFA8FFA77D7D7D7C7D7DA87D837D
%84FD0452FD07275252A2A2A8A2A87DA8A2A8A8CAA8A8A8CAA8A8A8CAA8A8
%A8CBA8CAA8CBA8CAA8A8FD0A27527D527CFD0B27FD16FF7C27274B275127
%2727A7AEFFCFFFCFFFA8FFA87D527C527D7D7D7C837D7D527C514B274B27
%51FD0527A2A2A8A2A8A2A8A2A8A8CBA8CBA8A8A8CAA8CBA8CBA8FFA8CBA8
%FFCBA82727274B2751274B2751277C527C52522751274B2751274B2752A8
%FD15FFA8FD08272652527D7DA8A8FFA8FF7D52527C525251527C837C7C52
%52FD0B27A27DA8A1A87DA8A2A8A2A8A8A87DA8A2A8A2FD04A8CBFD04A8FD
%0B2751FD0452FD0B27A8FD16FF5227512752275127522727274B27527DFF
%CFFF7C7C527C527D527D7DA8587C52522751275227512752272777CBA2A8
%A2A8A2A8A8CBA8CBA2A8A2A8A8CBA8FFA8FFA8FFA8FF5227275227512752
%2751274B52A8527D5251275227512752275127277DFD16FF7DFD0F2751CF
%CFA8527C5258527C7D837D7D5258FD0B2752A2A8A2A87DA8A2A8A8CAA8A8
%7DA8A2A8A8CBA8CAA8CBA8FF7DFD0C277D7D7C527CFD0A27207DFD17FF27
%51274B2751274B2751274B2751272752FFCFA7527C527C58A87DA87D7D52
%522751274B2751274B275127A8A2A8A2A8A2A8A8CBA8CBA8CBA2A8A8FFA8
%FFA8CBA8FFA8522751274B2751FD05277D7DA87C7C527C27272751274B27
%51272752FD17FF7CF8FD0F2752FFA87D58FD047D837D7D527C51FD0B277D
%A87DA8A1A87DFD05A8A2A8A2A8A2A8A2CBA8A8A87726FD0727527D7DA7FD
%047DFD0452FD0A27A8FD16FFA85127512752275127522751275227512752
%A8FF7DA87DA87DA87DA87DA7527C51512727275227512752277DA8A8A2A8
%A2A8A8CBA8CBA8A8A27D5151275252A8CBA8275127522751272752FFCFFF
%7DA87DA8527C527D527C527D27512752275127A8FD17FF7DFD0F27267DCF
%A87D837D7D7D83FD047D527C5152FD082752A87DA8A2A87DA8A2A87DA87D
%5226FD06277D52FD0827AEA8CFFD057D7C5258527C527C5252FD06277DFD
%18FF7D52FD072751274B2751272727FFA8837DA87DA87DA87DA87D7C527C
%527C27272751274B2776A8A8A2A8A2A8A2A8A2A87D52274B2751274B2751
%27272751274B275127A7CFFFA8837DA87D7D527C527C527C527C514B274B
%2751277DFD19FFA8A87DA87D7DFD0A277DFF7D7D7DA8A8A87D837D7D527C
%52525251FD0727A8A1A87DA8A1A87DA8A25226FD0F272052A8CFA8A77D7D
%7D837D52527C5252527C5252FD062751FD20FF2751275127522751277DFF
%A87DA8AEFFAEA87DA87D7D527C527D514B275227512752A2A8A2A8A2A8A2
%A8A87D275227512752275127522751275227512752A8FFA8A87DA87DA87D
%A8527C527C527D527C5252275127522752FD20FFA8FD082752FFA87D7DA8
%A8CF7D7D7D83587C52585252FD0727A2A2A8A1A8A2A8A2A2FD122752FFA8
%A87D837D7D7D837D7D527C5258527C5252FD0727FD21FF522751274B2751
%2752A8FF7D837DA8A8AE83A87D7D527C527C5151274B275127277DCBA2A8
%A2A8A8A85227274B2751274B2751274B2751274B272727CFA8A87DA87DA8
%7DA87DA87D7C527C527C527D52272751274B2752FD21FF7DFD0827A8A8A8
%7D7D83CFA8CF7D837C52527C5252FD0727525252275252A877FD1127F87D
%AEA87D837D7D7D837D7D7D837D7C527CFD0452FD0727FD22FF2751275127
%522751A7FFAEA87DFFAEFFAEA87D7D527D527C5252275127522751FD0527
%2D4B5227522751275227515852275127522727277DCFA87DA87DA87DA87D
%A87DA87DA8587C527C527D275127522751277DFD22FF5226FD062783A8CF
%A8A8A7FFA8CF7D847D52527C5252FD162752FFA7522727202727A7A8A87D
%7D7D837D7D7D837D7D7D847D7C527C527C51FD07277DFD22FF7D27275127
%4B27277DFFA8FFAEA8A8FFA7837D83527C527C52522751274B2751274B27
%51274B2751274B2751272751FFAEFFAEA87D7D7DCFAEA87DA87DA87DA87D
%A87DA87DA87D83527C527C52522751274B275127A8FD22FFA826FD0527F8
%7DAEAEA8CFA8CFA8A87D7D7D7C5252527CFD1527A8A8CFA8AEA8AEA8A87D
%83FD047D7C7D7CFD047D837D7D7D7C52525258FD06272652FD23FFA85127
%522751272758FFA8FFAEFFAEFF7DA87DA87D7C527D585227522751275227
%5127522751275227512752277DCFFFAEA87DA87D837DA87DA87D7D527C52
%7C527D7DA87DA87DA8527C527D52272752275127277DFD24FFFD0627267C
%AECFA8FFAEA7527C7D837D845252527C51FD122752A8A87DA87D7D7D837D
%7D7DA87D7C527C5258527C5252527D7D837D7C527C5251FD0727A8FD24FF
%52274B2751272752CFCFA87D7D5152527C7D837DA87C7C527C2727275127
%4B2751272727512727274B27527DA87D837DA87DA87DA87DA87D7C527C52
%7D527C527C527C527C7C7D527C52522751274B27512752FD25FF4BFD0727
%52522727F8272727517C527D7D83FD047DFD07277D7D52FD0527527DA8FD
%057D837D7D7D847D52525227512752527C527C52525258FD0452FD08277D
%FD25FF7D2751275227512752274B275227512752527C52837DA87DA77D7D
%2751275252A87DA87DA87D7D527D7C7D7DA87DA87DA87DA87DA87D7C5252
%272727512752527D527C527D527C527D512727522751272752FD26FF52FD
%1027FD04527D527C527C7D7D527D7D837D847D837D7D527C527C527C7DA8
%7D837D837D7D527C5252FD0827517C5258527C527C51FD072726A8FD26FF
%7D2651274B2751274B2751274B27512727277D527C51525152527C7DA87D
%A87DA8FD047D525251522752527D7CFD047DA87D7C527C27272751274B27
%512727517D527C527C52522751274B2751277CFD27FF7DFD11275152FD05
%2751517CFD047D5258527C51FD06275252525152527C7D7D5252FD0C2751
%7CFD0452FD0827A8FD27FFA8275227512752275127522751275227512752
%2751275227512752527D7D7D527C527C51272752275127522752527D527C
%527D7C7D5151275127522751275227512752527D527C2751275227512727
%7DFD28FFA8FD1A277C527C527C5252FD0B2751527C5258527C52FD0F2752
%7CFD0927FD2AFF27272751274B275227272751274B2751274B2751274B27
%512751527C527C525227272751274B2751274B27512752527D527C525227
%4B275127272752274B2751274B275251272751274B275127A8FD2AFFA826
%FD052726277D7D26FD0E2752527C5252FD0F2751517C5251FD07275226FD
%0F272652FD2CFFA8272727512752A8FFCF52275127522751275227512752
%2727517D5252275227512752275127522751275227512752515227522751
%2752277CFF522751275227512752275127522751274BA8FD2DFFA8272727
%52A8FFFFFF52FD0E27515252FD0A2726FD1127A8FFA851FD0E2752FD30FF
%A8A8FD05FFA82751274B275127272751274B275127522751274B2751274B
%2727277D2727274B2751274B2751274B2751272776FFFFFFA82727512751
%274B2751274B275127FD39FF52F8FD1827A8FFA8FD0F27FD05FF7DFD0B27
%F87DFD3AFF7D272727517CA82752275127522751275227512752272752FD
%05FF52272752275127522751272727FD07FFA8522752275127522727277D
%FD3CFFA87D7DA8FFA8FD0F277DFD07FF522726FD0827A8FD09FF7D26FD06
%27A8FD43FF52272751274B2751274B275227277DFD09FFA852FD0727A8FD
%0BFFA852FD0427FD45FF7D26FD0927F852A8FD0CFFA85252527C7DFD0FFF
%7D5252A8FD45FFA82727522751275227512752FD6DFFFD08272652FD6EFF
%A8272727512727277DFD70FFA8527D272727A8FD3BFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-20T10:09:07+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-20T10:09:07+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-20T10:09:07+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>240</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADwAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FUPqOpafptnJe6hcxWlpEKyTzOERR7sxAxV415v/5yc0WzZ7fyxZNqUoqBeXHKGAHs&#xA;VT+8cfPjkbV5Nrv52/mVrDNz1iSyhatIbEC3Cg9g6fvPvc4LSw691PUr5uV7dzXTdeU0jSGu/dif&#xA;HFUN03GBU30zzh5r0tg2naxe2tP2Yp5FU713UNxP0jCrPvLv/OR/n7TGVNS9DWbcUBE6CKWg/lki&#xA;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&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:2e7dbb42-6ef9-4d4c-97ec-c6da85515211</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2e7dbb42-6ef9-4d4c-97ec-c6da85515211</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7e5b259d-5354-d140-8e2e-829e70baba2d</stRef:instanceID>
            <stRef:documentID>xmp.did:7e5b259d-5354-d140-8e2e-829e70baba2d</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:78ead596-65d4-664f-9311-ff5d6a6a9ec8</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:46:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:170ebbf7-4b79-5343-9e6b-0d3f9d7a2ef3</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:56:13+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d7886bab-91ac-7048-a0fb-9440b5348aa7</stEvt:instanceID>
                  <stEvt:when>2018-02-19T10:52:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d3f5251a-8625-ce47-a7c7-361c56ddbc1d</stEvt:instanceID>
                  <stEvt:when>2018-02-19T15:12:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28647573-841f-f547-9955-9c40713b8bea</stEvt:instanceID>
                  <stEvt:when>2018-02-19T16:25:55+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7e5b259d-5354-d140-8e2e-829e70baba2d</stEvt:instanceID>
                  <stEvt:when>2018-02-19T17:27:27+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2e7dbb42-6ef9-4d4c-97ec-c6da85515211</stEvt:instanceID>
                  <stEvt:when>2018-02-20T10:09:07+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>416.479741</stDim:w>
            <stDim:h>449.575433</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -449.575 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 449.575 li
416.48 449.575 li
416.48 0 li
cp
clp
341.264 175.432 mo
337.662 159.979 319.366 148.99 308.425 139.496 cv
293.789 126.794 287.274 123.927 270.097 118.469 cv
268.648 115.732 267.057 113.03 264.495 110.968 cv
255.606 103.812 233.186 101.736 222.27 102.305 cv
219.43 102.452 216.768 102.874 214.261 103.524 cv
211.435 102.963 208.359 103.507 205.553 105.565 cv
195.017 113.283 188.607 120.981 183.915 131.116 cv
180.249 130.627 176.533 131.709 174.329 135.262 cv
164.764 150.681 161.752 168.272 160.418 186.224 cv
158.616 199.178 157.906 211.752 158.155 224.42 cv
155.681 226.531 154.274 229.684 155.208 233.707 cv
156.406 238.871 157.856 243.377 159.654 247.487 cv
159.749 248.311 159.775 249.105 159.877 249.933 cv
160.404 254.158 163.068 257.084 166.386 258.631 cv
168.76 261.495 171.553 264.15 174.905 266.67 cv
178.265 277.421 182.177 287.907 187.063 298.436 cv
188.722 302.972 190.495 307.496 192.531 312.031 cv
193.935 315.153 196.147 317.2 198.686 318.249 cv
200.522 333.897 203.025 349.26 212 362.488 cv
216.628 369.31 225.596 367.933 230.24 362.449 cv
239.773 365.687 247.169 366.467 255.938 357.262 cv
257.283 355.848 256.996 352.494 258.27 351.331 cv
261.604 348.286 265.989 349.297 269.762 347.771 cv
273.728 346.167 284.857 336.734 286.756 337.572 cv
295.421 341.398 302.817 334.313 302.885 325.866 cv
308.62 328.743 li
316.155 329.922 322.482 323.618 321.895 316.179 cv
321.277 308.373 331.039 302.638 333.013 295.109 cv
335.079 287.231 333.881 277.057 333.117 268.077 cv
337.291 254.922 339.419 242.008 339.107 231.109 cv
338.623 214.208 344.944 191.219 341.264 175.432 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.858824 .792157 .847059 rgb
f
343.186 220.86 mo
343.45 242.191 342.345 263.626 342.726 284.994 cv
335.757 294.63 331.87 310.272 329.154 321.058 cv
326.366 319.791 323.367 318.866 319.983 318.672 cv
315.586 318.42 310.339 319.283 307.689 323.374 cv
303.489 329.859 300.853 336.464 299.372 342.971 cv
295.66 341.52 291.745 342.159 288.496 344.148 cv
283.016 336.854 271.506 336.798 266.318 346.23 cv
264.578 349.399 263.14 352.7 261.849 356.049 cv
257.073 355.557 252.207 357.601 249.711 362.725 cv
245.734 358.589 239.223 358.184 234.176 360.769 cv
227.369 356.173 215.823 357.832 213.642 366.512 cv
211.917 357.447 209.774 349.134 209.578 348.221 cv
209.406 347.73 209.125 347.395 208.931 346.938 cv
207.326 338.505 204.528 330.47 200.42 324.133 cv
197.151 319.091 190.39 318.01 185.094 319.735 cv
182.107 320.705 179.709 322.227 177.666 324.058 cv
174.982 314.647 171.361 305.783 167.172 296.851 cv
164.332 288.163 160.914 280.099 156.734 273.506 cv
158.02 270.024 157.703 265.973 154.621 262.098 cv
152.003 258.533 149.133 255.184 146.142 251.938 cv
151.594 229.705 152.878 208.991 149.557 185.15 cv
149.375 183.837 148.914 182.648 148.36 181.518 cv
148.519 177.95 148.553 174.356 148.467 170.744 cv
148.938 169.803 149.353 168.789 149.671 167.658 cv
152.804 156.535 154.876 146.262 155.698 135.726 cv
159.815 124.456 166.388 114.3 176.305 109.073 cv
189.67 116.547 202.005 109.191 209.111 95.2649 cv
210.906 95.7381 212.728 96.0935 214.595 96.2542 cv
223.591 101.975 234.587 104.314 244.41 101.642 cv
253.164 107.962 264.59 109.655 272.712 104.023 cv
273.328 106.402 273.935 108.793 274.54 110.918 cv
277.877 122.659 291.359 120.614 297.063 112.679 cv
297.931 113.514 298.89 114.299 300.041 114.952 cv
303.165 116.72 306.037 118.565 308.803 120.446 cv
316.485 129.744 328.509 141.398 339.105 153.367 cv
344.471 163.345 347.765 174.255 350.161 187.817 cv
346.975 198.59 343.005 206.422 343.186 220.86 cv
cp
396.02 154.239 mo
395.804 153.007 395.574 151.823 395.311 150.801 cv
394.333 146.999 391.994 144.792 389.185 143.636 cv
389.226 136.398 388.996 130.626 384.7 123.537 cv
382.718 120.268 380.486 117.069 378.191 114.014 cv
377.409 112.972 375.832 111.498 374.242 109.95 cv
372.723 105.057 370.145 102.179 367.021 97.51 cv
361.964 89.9471 349.969 91.5545 345.207 98.0686 cv
336.325 94.1888 325.097 92.4436 307.513 90.1077 cv
304.187 89.6658 301.395 90.2933 299.132 91.5555 cv
297.633 70.0901 292.583 48.3875 273.071 35.9861 cv
271.108 34.7381 268.893 33.7444 266.678 32.7586 cv
258.987 25.1101 249.463 19.3357 237.323 16.5516 cv
191.862 6.12723 178.162 36.5818 149.551 61.2483 cv
131.143 60.8948 112.346 58.6409 94.3296 69.055 cv
83.8505 75.1121 75.0044 83.4095 69.2236 93.4822 cv
68.6684 93.8352 68.146 94.2532 67.6045 94.6365 cv
63.4565 94.8289 59.5117 97.0896 57.457 102.283 cv
56.8974 103.692 56.2324 105.017 55.6611 106.415 cv
45.5669 119.604 38.853 137.282 34.6372 150.344 cv
32.5703 156.74 34.6845 162.078 38.4614 165.27 cv
38.1211 168.325 37.9663 171.389 37.914 174.455 cv
32.7104 186.951 28.205 201.807 27.2094 216.068 cv
20.3432 226.101 17.6616 237.86 19.4067 248.077 cv
19.1049 248.778 18.8715 249.492 18.5498 250.189 cv
14.8344 259.657 21.7583 269.132 31.8784 268.551 cv
32.4404 268.519 32.8652 268.489 33.3886 268.456 cv
38.9218 271.457 46.1118 272.824 54.9121 272.032 cv
58.9165 279.878 64.3022 286.674 72.0869 291.383 cv
74.1504 294.113 76.6079 296.103 79.3686 297.467 cv
79.9878 298.392 80.854 299.259 81.8588 300.084 cv
84.4687 315.463 96.9658 331.267 109.949 335.596 cv
110.124 335.655 110.299 335.652 110.477 335.706 cv
113.407 358.6 123.342 391.126 148.065 389.645 cv
148.353 392.145 148.743 394.722 149.421 397.496 cv
152.481 410.002 159.468 417.195 172.722 415.973 cv
176.918 415.587 180.519 414.473 183.707 412.881 cv
183.613 413.798 183.42 414.748 183.395 415.641 cv
183.248 420.868 185.037 427.9 190.947 429.685 cv
212.815 436.291 226.872 418.749 233.871 399.026 cv
235.048 399.1 236.149 399.241 237.457 399.205 cv
237.991 399.19 238.489 398.983 239.009 398.878 cv
240.227 400.318 241.434 401.766 242.942 402.993 cv
246.379 405.789 251.823 406.925 255.954 404.981 cv
256.368 404.785 256.689 404.531 257.085 404.324 cv
258.402 405.25 259.921 405.934 261.56 406.458 cv
261.69 406.776 261.766 407.104 261.9 407.421 cv
263.004 410 264.683 411.801 266.659 413.117 cv
266.685 413.26 266.697 413.391 266.721 413.534 cv
268.461 423.024 279.073 428.947 287.494 422.663 cv
294.737 417.259 301.819 407.421 306.652 396.298 cv
308.128 396.03 309.599 395.646 311.043 395.104 cv
313.708 397.755 316.942 400.099 320.717 402.117 cv
322.053 404.83 323.489 407.275 325.05 409.194 cv
329.056 414.119 334.496 415.234 340.378 413.594 cv
361.78 407.629 375.334 381.594 379.255 354.751 cv
388.356 334.148 392.257 309.746 380.844 292.375 cv
379.32 278.981 380.068 265.919 381.902 252.96 cv
386.104 251.743 389.761 248.61 390.961 243.178 cv
396.343 218.852 398.228 195.462 397.202 171.259 cv
397.284 165.375 396.909 159.926 396.226 155.502 cv
396.186 155.066 396.19 154.645 396.147 154.208 cv
396.02 154.239 li
cp
.65098 .67451 .65098 rgb
f
209.578 348.221 mo
209.588 348.253 209.609 348.272 209.619 348.305 cv
209.56 348.112 209.549 348.091 209.578 348.221 cv
cp
f
225.089 247.859 mo
212.344 249.226 214.448 269.037 227.215 267.667 cv
239.961 266.299 237.855 246.489 225.089 247.859 cv
cp
.776471 .701961 .764706 rgb
f
215.015 244.168 mo
214.852 243.945 214.689 243.723 214.526 243.502 cv
212.467 240.699 207.987 241.18 206.568 244.356 cv
206.456 244.607 206.344 244.858 206.231 245.111 cv
204.65 248.652 207.584 252.705 211.445 252.291 cv
215.306 251.877 217.313 247.292 215.015 244.168 cv
cp
f
214.565 239.501 mo
212.613 239.711 212.935 242.745 214.89 242.535 cv
216.842 242.325 216.52 239.291 214.565 239.501 cv
cp
f
221.846 229.594 mo
216.448 230.173 217.339 238.561 222.746 237.981 cv
228.143 237.402 227.252 229.013 221.846 229.594 cv
cp
f
210.589 178.382 mo
203.01 179.195 204.261 190.974 211.853 190.159 cv
219.431 189.346 218.18 177.567 210.589 178.382 cv
cp
f
216.265 163.052 mo
212.436 162.588 211.502 167.149 211.534 170.125 cv
211.559 172.445 215.398 172.545 215.624 170.239 cv
215.843 168.004 217.616 166.471 217.385 164.236 cv
217.328 163.669 216.846 163.121 216.265 163.052 cv
cp
f
220.051 153.071 mo
212.587 153.872 213.819 165.472 221.296 164.67 cv
228.759 163.869 227.525 152.269 220.051 153.071 cv
cp
f
229.129 141.637 mo
227.822 140.985 226.596 140.071 224.942 140.724 cv
220.532 142.468 221.7 149.205 222.912 152.486 cv
224.353 156.381 230.54 153.959 228.924 150.112 cv
227.919 147.723 228.214 147.04 228.804 144.768 cv
229.286 142.915 228.178 139.992 231.33 143.901 cv
231.551 144.176 231.935 143.876 231.764 143.581 cv
231.078 142.398 230.291 142.217 229.129 141.637 cv
cp
f
242.397 151.976 mo
240.674 152.161 240.957 154.839 242.685 154.653 cv
244.406 154.469 244.122 151.791 242.397 151.976 cv
cp
f
258.794 155.999 mo
258.526 154.885 257.894 154.005 256.701 153.787 cv
254.379 153.366 252.707 154.769 251.786 156.784 cv
249.012 162.861 260.193 164.148 259.143 157.953 cv
259.034 157.299 258.948 156.646 258.794 155.999 cv
cp
f
268.734 134.258 mo
262.763 134.899 263.749 144.179 269.729 143.537 cv
275.7 142.897 274.715 133.616 268.734 134.258 cv
cp
f
277.678 145.833 mo
273.774 146.252 274.417 152.32 278.329 151.901 cv
282.232 151.482 281.589 145.413 277.678 145.833 cv
cp
f
248.625 186.115 mo
239.783 187.064 241.243 200.806 250.101 199.856 cv
258.941 198.907 257.481 185.164 248.625 186.115 cv
cp
f
248.857 272.54 mo
245.77 272.232 243.052 272.953 240.036 273.585 cv
233.055 275.047 233.933 285.94 241.243 284.828 cv
244.177 284.381 247.288 284.231 249.97 282.912 cv
254.366 280.754 254.61 273.113 248.857 272.54 cv
cp
f
256.138 291.97 mo
254.76 292.117 254.986 294.26 256.367 294.112 cv
257.745 293.963 257.517 291.822 256.138 291.97 cv
cp
f
255.449 303.495 mo
247.411 304.359 248.739 316.852 256.79 315.988 cv
264.828 315.124 263.5 302.632 255.449 303.495 cv
cp
f
276.926 124.426 mo
274.707 120.043 270.627 116.304 265.487 116.097 cv
263.117 116.002 260.937 116.799 258.939 118 cv
257.819 113.153 252.778 109.819 247.224 111.627 cv
241.135 113.608 236.144 110.127 230.342 110.537 cv
226.785 110.788 222.729 109.857 224.353 112.636 cv
222.614 109.662 218.863 108.805 215.737 108.851 cv
213.813 108.88 212.09 109.188 210.473 109.638 cv
209.359 108.672 208.026 107.993 206.431 107.947 cv
183.999 107.283 165.149 120.295 161.692 143.152 cv
161.38 145.22 161.808 147.048 162.614 148.622 cv
160.387 157.41 158.505 166.205 157.258 175.319 cv
156.884 178.068 157.733 180.422 159.194 182.265 cv
158.448 190.639 157.956 199.021 158.018 207.522 cv
158.031 209.413 158.685 210.932 159.7 212.1 cv
159.551 221.521 159.484 230.886 158.464 240.375 cv
157.746 241.407 157.216 242.605 156.885 243.933 cv
156.785 243.916 156.686 243.9 156.586 243.884 cv
156.341 248.553 156.156 253.224 156.031 257.897 cv
155.951 260.368 156.701 262.765 157.969 264.81 cv
158.793 270.91 161.679 276.352 168.66 278.503 cv
173.868 280.111 175.979 278.519 180.864 277.009 cv
182.103 278.621 183.547 280.002 185.23 281.034 cv
185.107 282.8 184.973 284.567 184.712 286.392 cv
183.907 290.924 185.853 294.265 188.807 296.212 cv
190.163 301.574 192.566 306.316 198.099 308.196 cv
199.086 308.533 200.085 308.723 201.072 308.791 cv
201.01 309.112 200.986 309.409 200.919 309.735 cv
200.523 311.722 200.975 313.44 201.762 314.957 cv
200.531 316.982 200.043 319.425 201.081 321.839 cv
202.148 324.324 203.122 326.893 204.122 329.452 cv
204.074 329.683 203.987 329.909 203.946 330.14 cv
199.578 354.824 232.634 365.853 250.272 353.629 cv
255.82 349.783 256.224 343.037 253.479 338.002 cv
254.803 337.721 255.836 337.144 256.639 336.357 cv
257.207 336.418 257.712 336.586 258.352 336.518 cv
263.042 336.015 265.06 332.284 264.908 328.624 cv
271.481 326.26 269.814 315.071 261.917 315.918 cv
258.493 316.285 256.747 318.658 256.355 321.289 cv
253.954 321.659 252.265 322.864 251.261 324.497 cv
246.985 324.97 245.169 328.438 245.401 331.779 cv
245.342 331.767 245.293 331.73 245.233 331.718 cv
244.896 331.5 244.485 331.214 243.956 330.796 cv
242.12 329.353 239.918 328.355 237.64 327.841 cv
237.527 326.964 237.411 326.089 237.316 325.204 cv
236.323 315.866 236.579 306.862 228.74 300.452 cv
226.926 298.967 224.651 298.691 222.54 299.212 cv
222.261 298.632 221.948 298.078 221.62 297.534 cv
221.786 293.842 221.689 290.078 221.106 285.959 cv
219.984 278.014 211.966 275.573 206.332 278.493 cv
206.623 271.512 206.174 264.632 204.722 257.429 cv
204.093 254.3 202.093 251.892 199.579 250.328 cv
200.77 236.163 197.635 219.284 196.428 205.731 cv
195.841 199.137 196.324 194.333 192.178 191.111 cv
194.619 184.423 196.718 177.753 198.41 170.727 cv
200.751 166.484 202.623 162.325 204.283 157.683 cv
211.312 149.842 219.526 143.63 228.365 137.95 cv
230.272 136.725 230.832 134.806 230.556 132.956 cv
231.208 133.112 231.893 133.205 232.528 133.394 cv
239.512 135.48 246.246 135.764 251.409 132.649 cv
254.124 133.984 257.476 134.065 260.349 132.955 cv
261.297 132.59 262.191 132.044 263.071 131.535 cv
263.261 131.413 263.458 131.3 263.65 131.182 cv
265.035 132.224 266.955 133.471 267.315 133.603 cv
272.59 135.534 279.99 130.479 276.926 124.426 cv
cp
f
331.628 233.845 mo
331.361 231.831 331.092 229.817 330.823 227.803 cv
330.839 227.655 330.812 227.503 330.82 227.354 cv
338.058 218.682 343.056 209.455 342.858 197.506 cv
342.803 194.132 339.941 190.033 336.72 188.752 cv
337.201 186.977 337.606 185.113 337.853 182.766 cv
338.446 177.105 335.856 172.087 330.742 169.544 cv
340.493 174.393 336.084 154.022 331.624 149.452 cv
329.59 147.367 327.423 146.084 325.203 145.334 cv
323.808 141.779 320.357 139.341 316.497 138.431 cv
314.788 136.519 312.507 135.15 309.79 134.751 cv
302.177 133.632 295.771 127.206 287.703 127.921 cv
285.709 128.098 283.284 129.741 281.156 130.587 cv
280.94 129.493 280.63 128.25 280.206 126.837 cv
278.293 120.471 269.412 121.38 266.811 126.529 cv
260.982 138.067 261.104 152.798 275.207 158.031 cv
280.922 160.153 286.13 158.75 290.257 154.424 cv
288.763 155.991 293.697 156.985 298.895 157.585 cv
299.522 158.546 300.268 159.384 301.106 160.095 cv
300.928 160.104 300.77 160.181 300.595 160.199 cv
300.387 160.014 300.231 159.811 299.978 159.635 cv
298.477 158.587 296.777 160.053 296.874 161.376 cv
296.311 161.672 295.736 161.903 295.2 162.318 cv
292.236 164.612 295.491 168.847 298.61 166.94 cv
299.15 166.61 299.629 166.498 300.115 166.419 cv
300.856 167.331 301.887 168.004 303.104 167.797 cv
304.524 167.555 305.71 167.112 306.961 166.573 cv
307.843 167.505 308.84 168.296 309.997 168.823 cv
309.389 169.279 308.797 169.894 308.244 170.903 cv
306.486 174.101 310.24 178.926 310.024 182.083 cv
309.861 184.466 312.893 185.898 313.094 187.684 cv
313.131 188.007 313.173 188.221 313.212 188.485 cv
312.899 189.09 312.552 189.829 312.125 190.886 cv
309.967 196.228 311.915 203.487 317.753 205.686 cv
318.123 205.826 318.478 205.932 318.847 206.067 cv
316.862 211.074 313.785 215.384 309.804 219.118 cv
308.933 217.083 307.025 215.545 304.166 215.851 cv
299.402 216.363 298.267 221.29 300.014 224.531 cv
298.403 223.224 296.306 222.415 293.629 222.702 cv
281.918 223.959 283.851 242.163 295.582 240.904 cv
303.594 240.044 305.092 231.349 301.565 226.284 cv
302.561 227.022 303.804 227.493 305.397 227.323 cv
305.92 227.266 306.303 227.052 306.741 226.896 cv
306.893 229.586 307.955 232.279 309.734 234.283 cv
309.967 238.908 310.953 242.768 313.262 245.884 cv
309.288 252.218 304.421 260.657 303.794 264.192 cv
302.808 269.749 305.821 272.777 306.628 277.702 cv
306.032 278.048 305.469 278.428 304.937 278.874 cv
301.82 277.331 297.859 277.186 295.247 279.612 cv
293.461 281.267 291.888 282.885 290.401 284.516 cv
287.889 284.531 285.3 286.059 284.664 289.014 cv
283.711 293.435 li
281.819 296.477 280.075 299.692 278.463 303.458 cv
278.038 304.453 277.89 305.487 277.867 306.519 cv
277.511 307.001 277.152 307.483 276.796 307.963 cv
273.933 310.241 270.95 312.374 267.74 314.23 cv
263.395 317.159 263.025 321.824 264.799 325.616 cv
264.697 329.133 266.403 332.592 270.527 334.52 cv
282.605 340.17 302.382 327.878 304.396 315.071 cv
306.379 312.702 308.103 310.227 309.494 307.665 cv
313.713 307.628 317.598 305.085 319.058 300.105 cv
321.724 299.17 324.022 297.339 324.927 294.659 cv
330.342 278.625 325.517 265.191 335.4 249.595 cv
338.48 244.733 338.584 235.989 331.628 233.845 cv
cp
.886275 .831373 .878431 rgb
f
302.15 170.591 mo
299.577 171.09 296.549 170.862 296.673 174.342 cv
296.717 175.61 298.036 177.131 299.364 177.186 cv
300.7 177.243 301.524 177.27 302.839 177.015 cv
306.892 176.229 306.237 169.797 302.15 170.591 cv
cp
f
297.478 244.612 mo
295.486 241.165 290.686 244.44 291.716 247.803 cv
292.092 248.836 292.216 249.897 292.086 250.988 cv
292.03 251.71 292.124 252.337 292.321 252.877 cv
291.611 252.46 290.789 252.179 289.746 252.291 cv
284.118 252.896 285.048 261.641 290.685 261.035 cv
294.144 260.664 295.107 257.22 294.037 254.759 cv
296.515 256.106 300.395 254.885 299.837 251.201 cv
299.465 248.752 298.713 246.753 297.478 244.612 cv
cp
f
280.67 257.427 mo
272.171 258.339 273.576 271.545 282.087 270.632 cv
290.582 269.72 289.18 256.513 280.67 257.427 cv
cp
f
265.458 265.197 mo
257.42 266.059 258.748 278.552 266.798 277.688 cv
274.836 276.825 273.509 264.332 265.458 265.197 cv
cp
f
230.353 202.093 mo
216.219 197.726 202.825 191.775 190.109 184.211 cv
184.035 180.597 175.479 184.864 172.818 190.787 cv
169.641 197.853 173.302 204.455 179.392 208.078 cv
192.108 215.641 205.502 221.592 219.637 225.961 cv
226.38 228.044 233.787 226.378 236.928 219.386 cv
239.546 213.557 237.139 204.191 230.353 202.093 cv
cp
.0901961 .101961 .0901961 rgb
f
319.125 187.735 mo
314.489 181.459 307.031 181.53 300.83 184.978 cv
290.868 190.522 280.904 196.065 270.939 201.608 cv
264.765 205.043 264.372 214.739 268.184 219.902 cv
272.818 226.177 280.278 226.107 286.477 222.658 cv
296.441 217.114 306.405 211.57 316.368 206.028 cv
322.541 202.593 322.937 192.897 319.125 187.735 cv
cp
f
347.445 328.405 mo
347.449 328.363 347.44 328.324 347.445 328.283 cv
347.406 328.664 347.415 328.616 347.445 328.405 cv
cp
.478431 .486275 .407843 rgb
f
395.734 197.335 mo
396.087 194.314 394.652 191.451 392.398 189.778 cv
393.871 184.176 394.534 178.509 392.591 172.81 cv
392.358 172.128 391.953 171.452 391.46 170.809 cv
391.778 160.612 389.785 149.116 382.116 142.923 cv
381.202 142.184 380.125 141.735 379.007 141.499 cv
379.072 140.352 379.111 139.189 379.15 138.03 cv
382.372 134.832 381.658 130.35 378.916 127.3 cv
378.775 125.901 378.586 124.56 378.328 123.321 cv
377.668 120.157 373.447 113.202 373.468 110.872 cv
373.495 108.124 371.468 105.557 368.926 104.152 cv
367.178 100.235 362.799 97.469 358.501 98.0506 cv
356.344 98.3445 354.186 98.636 352.031 98.9285 cv
351.77 98.9641 351.585 99.0799 351.338 99.1316 cv
349.742 97.1858 347.573 95.8128 345.178 95.7078 cv
343.909 95.6531 342.65 95.6809 341.389 95.6575 cv
340.381 94.1101 339.234 92.554 337.394 91.2229 cv
334.829 89.367 331.697 88.4593 328.516 88.8006 cv
328.317 88.8221 327.219 89.1917 325.996 89.6521 cv
325.844 89.6062 li
323.041 88.7356 319.896 89.1277 317.291 90.4012 cv
315.038 89.449 312.489 89.3118 310.103 90.3772 cv
309.988 90.428 309.897 90.5188 309.785 90.574 cv
309.162 90.0955 308.53 89.6756 308.13 89.4505 cv
306.772 88.6917 305.366 88.4515 303.944 88.407 cv
303.73 88.0144 303.542 87.6228 303.264 87.2273 cv
302.136 85.6189 300.046 85.0423 298.145 85.3767 cv
297.957 81.0545 297.963 76.7947 298.583 72.2874 cv
299.109 68.4466 295.636 65.0994 292.164 64.8587 cv
292.118 64.7181 292.051 64.5843 292.006 64.4432 cv
293.226 57.906 290.721 51.9222 286.229 46.5535 cv
284.978 45.0569 283.392 43.2913 281.624 41.5828 cv
279.804 38.2557 278.605 35.5374 275.078 33.2264 cv
273.381 32.1145 271.3 31.5061 269.203 30.9339 cv
266.375 29.0433 263.321 27.4475 260.166 26.0149 cv
260.125 25.9475 260.066 25.9031 260.027 25.8343 cv
258.468 23.0628 255.38 22.4104 252.573 23.0672 cv
251.089 22.5852 249.622 22.0525 248.115 21.6614 cv
245.929 21.095 244.061 22.0618 242.844 23.6233 cv
237.563 22.4602 230.273 21.3465 230.271 21.3465 cv
230.175 21.344 230.081 21.3445 229.986 21.3416 cv
227.394 20.6795 224.687 20.284 221.986 20.1741 cv
212.198 18.4466 202.138 19.8533 194.988 27.5945 cv
186.539 32.1341 178.561 38.0276 171.53 43.699 cv
167.286 47.1219 171.98 53.4275 176.54 50.4871 cv
186.082 44.3318 199.34 36.3279 211.697 33.9749 cv
217.136 34.2884 222.575 34.0862 228.033 35.0291 cv
233.25 35.9309 236.89 37.8035 241.913 39.4236 cv
245.511 40.5843 248.65 40.7156 251.658 39.9236 cv
252.964 41.0047 254.426 41.8216 255.938 42.6136 cv
258.423 45.1287 260.827 47.7249 263.086 50.3982 cv
263.661 51.0779 264.208 51.7952 264.769 52.4954 cv
267.12 58.9143 271.941 64.6995 276.201 69.6678 cv
277.091 70.7054 278.216 71.4832 279.428 72.052 cv
280.803 75.5437 282.04 78.9759 282.943 82.0369 cv
283.043 82.3694 283.247 82.5711 283.383 82.8592 cv
282.989 83.4939 282.682 84.1756 282.614 84.9593 cv
282.319 88.3435 282.312 91.6629 282.794 95.0257 cv
283.587 100.557 289.368 102.003 293.202 100.146 cv
295.354 102.718 299.382 103.7 302.366 101.759 cv
303.346 103.546 304.854 105.074 306.774 105.667 cv
306.908 105.709 307.01 105.677 307.142 105.71 cv
308.129 111.111 314.207 112.752 318.718 110.669 cv
319.023 110.845 319.324 111.108 319.62 111.24 cv
321.591 112.117 323.326 112.254 324.978 112.018 cv
325.869 113.525 327.062 114.917 328.998 116.149 cv
332.279 118.241 335.72 118.552 339.162 118.039 cv
341.486 119.357 344.155 119.941 346.873 120.292 cv
349.097 121.744 352.12 124.563 353.062 125.335 cv
355.668 127.469 356.25 130.814 358.894 132.967 cv
360.155 133.994 361.467 134.607 362.787 135.041 cv
363.028 136.269 363.577 137.334 364.365 138.232 cv
365.316 143.595 366.317 148.295 366.319 148.277 cv
365.978 151.51 367.938 154.749 371.338 155.258 cv
371.618 155.301 374.496 174.924 374.597 174.389 cv
373.809 178.627 377.058 183.466 381.462 183.938 cv
379.075 187.894 376.691 191.85 374.306 195.806 cv
372.936 200.162 375.26 205.254 379.26 206.536 cv
379.063 207.985 378.826 209.418 378.557 210.831 cv
373.149 208.362 365.483 210.636 364.17 217.888 cv
361.392 233.223 361.193 245.772 363.355 261.417 cv
363.461 262.171 363.763 262.742 363.981 263.392 cv
361.086 272.441 357.228 280.852 352.739 289.27 cv
349.094 293.254 347.232 298.4 346.518 304.622 cv
346.165 307.71 347.497 310.175 349.482 311.768 cv
348.024 314.769 348.613 318.527 350.337 321.251 cv
348.797 318.815 347.617 327.239 347.445 328.405 cv
347.058 332.254 347.529 335.985 348.319 339.748 cv
349.174 343.831 352.404 348.026 356.48 349.444 cv
355.599 352.863 354.883 356.374 354.471 360.104 cv
354.253 362.085 354.767 363.663 355.578 364.974 cv
354.735 367.818 353.828 370.63 353.062 373.521 cv
352.052 373.81 351.11 374.363 350.222 375.156 cv
349.807 373.533 348.337 371.948 344.899 370.891 cv
340.361 369.493 338.259 368.866 335.657 369.045 cv
330.605 364.909 323.089 363.508 316.349 364.629 cv
311.324 365.465 309.453 368.041 305.049 370.542 cv
301.926 373.521 298.896 376.599 295.965 379.773 cv
289.193 382.866 286.411 387.635 287.618 394.081 cv
287.202 394.39 286.926 394.623 286.564 394.901 cv
286.212 394.844 285.908 394.776 285.45 394.744 cv
283.631 394.616 277.82 389.989 275.289 389.157 cv
271.507 387.912 266.439 387.85 261.284 388.063 cv
258.758 383.503 254.19 379.876 249.199 379.658 cv
242.364 379.357 237.731 383.242 234.757 388.522 cv
222.868 388.944 214.975 391.699 206.739 398.963 cv
204.521 392.773 201.244 386.658 197.393 384.172 cv
191.595 380.43 185.038 382.155 179.56 385.757 cv
179.147 385.715 178.746 385.637 178.326 385.651 cv
179.694 383.16 172.358 377.117 171.421 376.504 cv
169.745 375.408 168.223 374.769 166.603 374.441 cv
160.233 366.446 146.608 363.371 137.722 367.138 cv
132.839 369.207 127.929 372.616 128.081 378.464 cv
128.192 382.693 130.85 386.219 135.219 386.743 cv
138.303 387.113 140.455 385.943 141.792 384.201 cv
146.415 382.661 153.459 380.847 153.872 383.542 cv
154.451 387.324 157.792 390.669 161.596 390.881 cv
162.468 396.642 166.191 402.003 171.061 404.178 cv
174.026 408.849 180.375 411.117 184.958 407.437 cv
185.771 412.506 187.714 416.976 192.665 419.897 cv
194.133 426.31 202.554 430.503 207.964 423.832 cv
237.675 387.189 240.396 419.711 265.333 415.463 cv
265.912 415.364 270.336 414.224 273.651 412.787 cv
276.876 412.689 278.866 412.941 280.925 412.884 cv
280.987 413.116 281.003 413.333 281.077 413.571 cv
282.497 418.087 287.883 418.541 291.329 416.513 cv
295.32 414.161 296.068 409.257 296.188 404.926 cv
305.949 396.269 321.456 381.867 322.077 383.895 cv
322.652 385.763 324.051 387.361 325.805 388.497 cv
325.337 390.605 325.774 392.923 327.599 395.104 cv
331.945 400.291 336.786 404.809 342.48 408.48 cv
345.282 410.284 349.453 410.74 352.381 409.012 cv
352.416 409.029 352.451 409.053 352.489 409.07 cv
355.159 410.189 358.493 410.05 360.824 408.175 cv
366.525 403.588 368.782 394.781 365.237 388.398 cv
367.091 387.256 368.525 385.412 368.862 382.616 cv
368.866 382.595 368.873 382.575 368.875 382.555 cv
376.087 370.864 381.583 358.672 385.617 344.645 cv
386.127 342.875 385.872 341.448 385.252 340.278 cv
385.866 339.662 386.387 338.92 386.771 338.019 cv
390.094 330.224 385.768 324.147 379.242 321.033 cv
379.179 320.785 379.119 320.536 379.058 320.288 cv
378.286 317.158 374.45 314.654 371.467 314.169 cv
370.851 314.07 370.235 314.136 369.62 314.158 cv
372.524 308.828 374.522 303.306 376.037 296.919 cv
376.661 294.289 374.947 291.83 372.64 290.795 cv
373.85 285.457 375.53 280.245 377.643 275.179 cv
382.086 267.066 386.517 258.943 390.779 250.707 cv
393.451 245.543 388.941 240.611 384.167 240.035 cv
384.876 239.124 385.47 238.138 385.758 237.023 cv
389.386 222.973 394.053 211.763 395.734 197.335 cv
cp
f
214.238 74.9934 mo
212.578 75.1717 211.635 76.2112 211.27 77.4422 cv
208.185 76.6565 206.253 76.9109 202.947 78.4314 cv
200.681 79.4749 198.657 79.1072 196.368 80.0242 cv
194.41 80.8089 192.772 82.5262 191.245 83.9217 cv
187.758 87.1033 184.915 90.5579 182.64 94.324 cv
180.345 91.4866 176.832 90.0999 173.332 88.993 cv
169.113 87.6585 164.709 85.6311 160.433 87.7625 cv
159.619 88.1687 158.128 90.0076 157.133 91.1233 cv
156.721 90.1805 154.41 88.8284 153.708 88.7137 cv
143.577 87.054 138.534 102.05 138.765 109.767 cv
138.836 112.187 139.783 114.154 140.157 116.471 cv
140.533 118.78 140.493 119.374 139.999 121.055 cv
134.82 122.14 132.595 127.513 131.009 132.2 cv
129.235 137.448 129.364 142.151 132.772 146.685 cv
132.855 146.793 132.963 146.85 133.053 146.947 cv
132.364 158.419 131.325 169.915 130.076 181.248 cv
127.838 193.128 126.709 205.433 124.263 216.877 cv
123.742 219.307 124.592 221.114 125.979 222.353 cv
125.662 227.179 125.477 232.006 125.335 236.884 cv
123.395 242.234 121.713 247.149 122.415 253.356 cv
120.503 259.822 118.549 266.281 116.823 272.849 cv
114.608 281.281 122.97 286.694 130.186 285.798 cv
137.007 293.429 145.894 298.303 153.897 294.655 cv
154.633 295.023 155.409 295.321 156.254 295.416 cv
149.496 294.655 170.058 334.982 169.853 336.993 cv
169.563 339.83 170.261 343.233 172.337 345.425 cv
169.686 350.895 170.593 356.646 172.633 362.692 cv
174.917 369.462 179.529 375.289 186.764 376.78 cv
189.368 377.316 192.131 376.469 194.378 374.874 cv
194.593 375.129 194.795 375.433 195.015 375.677 cv
201.281 382.64 213.616 377.057 209.962 367.397 cv
205.552 355.737 199.538 342.609 190.075 333.977 cv
189.895 328.933 188.788 324.774 186.063 319.569 cv
182.459 312.686 175.018 308.102 173.026 299.689 cv
170.921 290.798 171.065 282.398 163.583 279.509 cv
163.523 279.386 163.465 279.262 163.405 279.14 cv
161.432 275.072 155.509 272.055 151.507 275.726 cv
147.877 273.693 144.247 271.658 140.618 269.624 cv
142.939 255.537 143.129 241.007 143.703 226.801 cv
143.942 225.596 144.163 224.429 144.402 223.211 cv
146.655 211.754 144.363 200.558 146.309 189.103 cv
146.642 187.142 146.115 185.651 145.253 184.467 cv
145.601 182.82 144.748 181.757 143.558 181.231 cv
143.779 177.849 143.753 174.489 143.588 171.146 cv
143.771 165.156 143.946 159.168 144.147 153.171 cv
144.181 152.156 143.914 151.299 143.535 150.52 cv
146.965 149.298 148.693 145.544 149.712 141.941 cv
151.226 136.597 153.162 131.109 154.111 125.639 cv
154.452 123.68 153.703 121.766 152.414 120.333 cv
153.258 117.688 153.159 109.901 154.037 105.834 cv
156.052 106.53 158.192 106.796 160.599 106.303 cv
162.459 105.921 164.585 105.11 166.128 103.952 cv
166.215 103.886 166.381 103.748 166.565 103.591 cv
173.032 107.135 174.148 116.166 183.866 113.631 cv
186.449 112.957 187.621 110.196 187.547 107.685 cv
191.108 101.218 195.688 95.9939 201.348 91.0203 cv
202.65 89.8728 203.323 88.5374 204.45 87.3352 cv
205.728 85.97 206.137 85.9168 207.7 85.0335 cv
209.592 83.9646 210.818 82.762 212.108 81.2542 cv
212.776 81.9812 213.739 82.448 215.023 82.3099 cv
219.731 81.8045 218.954 74.4871 214.238 74.9934 cv
cp
f
221.202 80.073 mo
219.823 80.221 220.051 82.3626 221.432 82.2146 cv
222.81 82.0667 222.582 79.9251 221.202 80.073 cv
cp
f
116.552 160.728 mo
115.564 159.821 114.256 159.373 112.893 159.145 cv
111.922 157.866 110.739 156.723 109.038 155.958 cv
104.661 153.992 99.0068 155.256 96.0288 159.076 cv
88.8208 168.323 95.5454 182.239 107.265 182.531 cv
118.824 182.819 125.154 168.639 116.552 160.728 cv
cp
f
117.869 115.374 mo
116.563 112.541 117.921 109.308 116.39 106.306 cv
115.576 104.709 113.989 103.403 112.065 103.692 cv
111.989 103.701 111.914 103.718 111.838 103.729 cv
111.335 103.533 110.775 103.426 110.117 103.497 cv
106.486 103.887 106.145 108.295 108.33 110.074 cv
108.286 110.806 108.207 111.558 108.018 112.533 cv
107.591 114.724 107.462 117.027 108.483 119.078 cv
111.336 124.807 120.621 121.335 117.869 115.374 cv
cp
f
103.522 240.64 mo
102.107 241.207 96.059 241.845 96.3833 238.137 cv
96.7915 233.443 90.0922 232.272 89.1201 236.948 cv
88.0664 242.008 90.7392 247.164 95.6196 248.996 cv
97.9961 249.888 100.612 249.805 102.813 248.533 cv
105.261 247.117 105.757 245.323 106.075 242.698 cv
106.244 241.296 104.902 240.088 103.522 240.64 cv
cp
f
116.689 204.047 mo
114.783 201.459 111.396 201.213 108.923 203.099 cv
108.84 203.165 108.677 203.292 108.528 203.409 cv
108.192 203.528 107.908 203.641 107.965 203.629 cv
107.894 203.643 107.654 203.578 107.578 203.616 cv
105.661 201.681 106.415 198.517 106.785 195.981 cv
107.522 190.923 99.7949 188.195 97.9209 193.317 cv
95.6704 199.468 93.7773 207.337 98.4057 212.921 cv
102.579 217.954 111.841 218.411 115.873 213.053 cv
117.778 210.52 118.726 206.818 116.689 204.047 cv
cp
f
145.16 303.034 mo
143.869 302.479 141.952 302.752 141.109 304.005 cv
141.056 304.086 140.867 304.413 140.698 304.728 cv
140.185 304.839 139.692 304.922 139.118 305.095 cv
138.692 305.221 138.265 305.342 137.838 305.463 cv
136.766 305.093 135.885 305.192 134.821 304.666 cv
133.602 304.066 132.547 303.116 131.499 302.267 cv
126.046 297.841 119.945 304.818 123.144 310.273 cv
127.123 317.059 133.992 323.2 142.385 319.991 cv
146.065 318.583 149.775 314.599 149.324 310.403 cv
149.018 307.548 147.947 304.231 145.16 303.034 cv
cp
f
232.657 53.0237 mo
231.578 52.0975 230.075 52.3396 229.063 53.1966 cv
228.9 53.1258 228.701 53.1067 228.553 53.0081 cv
227.908 52.574 227.278 51.1717 226.909 50.4451 cv
225.052 46.7791 223.979 43.2937 220.654 40.6101 cv
216.465 37.2293 211.002 42.6717 213.969 47.0154 cv
215.918 49.8645 215.059 54.2288 216.284 57.4602 cv
217.666 61.1043 220.988 64.3279 224.956 64.9739 cv
231.032 65.9612 238.224 57.8001 232.657 53.0237 cv
cp
f
87.894 171.006 mo
86.9487 170.028 85.6025 169.416 83.8369 169.606 cv
83.3608 169.657 83.0097 169.853 82.6113 169.995 cv
80.5879 170.344 78.6743 171.472 77.479 173.841 cv
71.8896 184.919 68.8344 198.325 65.5102 210.276 cv
64.0859 215.397 72.3969 217.767 74.3745 212.941 cv
76.708 207.249 79.1416 201.596 81.8305 196.062 cv
84.5337 190.5 88.1723 185.405 90.7109 179.782 cv
92.4731 175.879 90.6889 172.659 87.894 171.006 cv
cp
.890196 .913725 .843137 rgb
f
89.0151 146.095 mo
84.9965 146.527 85.6591 152.774 89.6855 152.342 cv
93.7046 151.91 93.0415 145.663 89.0151 146.095 cv
cp
f
202.487 43.4344 mo
199.968 41.2151 196.848 42.8142 194.53 44.6756 cv
192.866 46.0115 194.317 49.1097 196.428 48.1009 cv
198.494 47.1145 200.513 47.5647 202.425 46.2752 cv
203.423 45.6023 203.316 44.1648 202.487 43.4344 cv
cp
f
211.93 35.5501 mo
199.186 36.9178 201.289 56.7283 214.056 55.3582 cv
226.802 53.9905 224.697 34.18 211.93 35.5501 cv
cp
f
106.126 162.009 mo
97.7446 162.908 99.1279 175.937 107.524 175.036 cv
115.908 174.137 114.523 161.108 106.126 162.009 cv
cp
f
96.3623 241.463 mo
95.8715 241.516 95.9536 242.278 96.4443 242.225 cv
96.935 242.173 96.853 241.41 96.3623 241.463 cv
cp
f
97.6606 253.562 mo
88.2456 254.573 89.7993 269.207 99.2314 268.196 cv
108.646 267.185 107.093 252.55 97.6606 253.562 cv
cp
f
79.0078 223.283 mo
66.4921 224.627 68.559 244.08 81.0957 242.735 cv
93.6113 241.391 91.5439 221.938 79.0078 223.283 cv
cp
f
89.6562 214.86 mo
87.4741 215.095 87.8344 218.486 90.0205 218.251 cv
92.2026 218.017 91.8422 214.626 89.6562 214.86 cv
cp
f
125.109 285.064 mo
117.874 285.84 119.07 297.083 126.316 296.306 cv
133.551 295.53 132.355 284.285 125.109 285.064 cv
cp
f
152.308 335.343 mo
147.548 331.114 140.966 339.273 146.111 343.03 cv
148.404 344.701 152.426 346.385 154.677 343.594 cv
156.928 340.8 154.438 337.238 152.308 335.343 cv
cp
f
193.502 52.9349 mo
193.254 52.8714 192.986 52.8982 192.737 52.8499 cv
193.17 52.5975 193.114 51.8597 192.508 51.9246 cv
191.95 51.9847 192.029 52.5818 192.404 52.8123 cv
187.26 51.9295 181.541 53.6658 176.343 53.7425 cv
176.292 53.7425 176.249 53.764 176.196 53.7654 cv
175.19 48.7356 168.228 46.0091 163.352 48.8357 cv
158.588 51.596 154.462 54.6731 150.598 58.052 cv
150.132 58.1648 149.665 58.2039 149.206 58.4187 cv
147.8 59.1892 146.349 59.8421 144.863 60.4065 cv
142.125 60.4344 139.386 60.7395 136.653 61.2361 cv
135.135 59.4266 133.047 58.0657 130.288 57.698 cv
113.269 55.4329 97.5937 66.0901 84.3208 80.6673 cv
75.9751 86.8406 69.4721 98.9539 64.6972 106.219 cv
52.2856 125.105 43.3852 146.228 34.4541 166.9 cv
33.1255 169.973 34.4526 172.95 36.6655 174.768 cv
26.3471 198.394 22.1826 234.816 18.3403 246.602 cv
16.8818 249.97 18.2729 252.734 20.5581 254.264 cv
20.4199 254.833 20.2426 255.392 20.1123 255.962 cv
19.6513 257.943 20.9047 259.6 22.56 260.339 cv
22.5429 260.915 22.4921 261.496 22.5546 262.06 cv
23.1831 267.723 28.2519 271.255 33.6367 270.657 cv
37.6538 274.274 43.3823 275.476 48.6635 273.843 cv
50.9672 276.385 54.0195 278.11 57.9848 278.651 cv
63.0385 286.986 68.5537 295.012 74.7275 302.569 cv
77.7085 309.447 83.061 315.13 91.2182 319.235 cv
96.8193 322.053 103.553 318.838 106.167 313.551 cv
101.365 323.271 112.933 330.617 117.215 339.685 cv
121.468 348.688 123.51 357.374 124.727 367.378 cv
125.369 372.66 131.025 375.716 135.678 374.829 cv
140.973 381.016 151.146 376.853 152.051 369.356 cv
152.736 369.624 153.504 369.773 154.407 369.676 cv
159.592 369.119 159.839 362.596 156.392 360.418 cv
165.924 359.29 164.325 344.423 154.696 345.456 cv
146.457 346.341 146.475 357.333 152.655 359.899 cv
151.436 360.197 150.467 360.783 149.878 361.643 cv
147.118 356.995 146.213 356.226 141.57 352.208 cv
140.456 351.245 139.116 350.711 137.724 350.494 cv
132.99 332.912 127.98 312.582 115 301.351 cv
110.108 297.116 104.725 294.78 99.6875 294.8 cv
98.9775 287.466 96.7055 281.593 92.875 274.704 cv
90.2846 270.051 85.1494 269.242 80.6494 270.764 cv
75.9619 264.438 71.4624 257.954 67.1821 251.223 cv
67.2231 251.062 67.2138 250.972 67.2597 250.803 cv
69.8076 241.466 61.4677 235.715 53.5131 236.127 cv
53.7539 232.588 54.0429 229.061 54.0747 225.519 cv
63.3789 204.78 69.9487 182.867 78.0683 161.638 cv
80.394 155.608 71.581 151.562 68.8667 157.507 cv
68.5849 158.124 68.2778 158.73 67.9921 159.347 cv
67.5918 158.521 67.1093 157.779 66.56 157.108 cv
66.7978 156.712 67.0356 156.301 67.2749 155.918 cv
71.1298 149.738 74.7544 143.408 78.164 136.97 cv
78.4331 139.3 79.8042 141.508 82.1806 142.576 cv
87.4795 144.959 91.9287 140.55 92.0068 135.443 cv
92.0507 132.559 91.4516 129.674 90.4853 126.962 cv
89.4497 124.055 85.3095 124.11 83.9736 126.697 cv
87.1552 122.055 90.4736 117.513 93.8613 113.026 cv
94.4653 113.429 95.1894 113.694 96.1167 113.594 cv
99.4516 113.236 99.9345 109.398 98.2041 107.498 cv
101.103 103.826 103.995 100.149 107.061 96.6082 cv
107.539 99.8313 109.982 102.75 114.159 102.302 cv
121.768 101.485 121.522 90.9798 115.42 89.1707 cv
118.942 87.4095 122.439 85.5852 125.85 83.5472 cv
126.487 85.4397 128.867 86.8904 130.967 86.241 cv
132.02 85.9158 133.002 85.6092 133.977 85.3006 cv
136.119 92.7205 145.798 96.9676 152.995 89.4617 cv
158.868 83.3372 164.103 76.4075 169.408 69.7058 cv
172.616 73.8367 179.081 75.4226 183.384 71.8235 cv
188.176 67.8157 194.992 62.6653 195.725 56.0262 cv
195.896 54.4832 194.977 53.3099 193.502 52.9349 cv
cp
f
356.772 265.965 mo
356.761 265.517 356.075 265.429 355.917 265.829 cv
353.169 272.728 347.063 276.909 345.185 284.161 cv
342.917 292.921 340.37 299.826 335.214 307.435 cv
335.13 307.56 335.115 307.686 335.052 307.811 cv
333.473 307.226 331.543 307.458 329.935 309.032 cv
321.658 317.13 318.307 324.923 313.099 334.612 cv
307.293 345.413 303.589 348.271 293.637 346.779 cv
286.417 345.696 276.611 348.305 270.405 353.671 cv
263.197 356.167 256.44 361.84 251.231 366.495 cv
245.923 371.24 251.636 378.812 257.735 375.304 cv
260.951 373.454 264.566 371.26 267.956 368.714 cv
270.82 369.174 li
273.204 369.556 274.779 367.708 274.964 365.76 cv
280.06 365.02 284.929 364.036 289.54 362.626 cv
293.252 362.994 297.47 362.784 300.631 360.804 cv
303.562 358.968 306.452 356.128 308.557 353.243 cv
314.197 348.896 319.308 342.956 324.188 337.869 cv
330.703 331.079 334.728 322.681 337.674 313.778 cv
337.875 313.169 337.96 312.588 337.965 312.038 cv
338.565 311.939 339.165 311.66 339.687 311.04 cv
345.358 304.278 350.753 296.799 355.474 289.347 cv
360.188 281.907 356.974 274.17 356.772 265.965 cv
cp
f
357.585 232.757 mo
356.506 231.589 354.71 231.303 353.605 232.673 cv
349.329 237.98 350.449 244.77 350.613 251.133 cv
350.796 258.258 362.003 257.107 361.677 249.946 cv
361.404 243.967 361.92 237.461 357.585 232.757 cv
cp
f
366.734 182.085 mo
364.685 176.549 360.871 172.495 357.33 167.82 cv
353.282 162.474 350.494 156.733 347.187 151.202 cv
347.199 151.099 347.258 151.002 347.256 150.9 cv
347.227 146.146 345.278 141.578 342.49 137.366 cv
340.124 132.882 337.129 128.844 333.556 125.374 cv
333.433 124.523 332.943 123.727 331.818 123.248 cv
331.432 123.084 331.055 122.914 330.672 122.748 cv
327.733 120.345 324.459 118.328 320.915 116.695 cv
319.226 115.483 317.635 114.134 315.874 113.037 cv
313.832 111.764 311.756 110.408 309.573 109.377 cv
308.499 108.87 303.876 107.946 301.799 106.93 cv
301.21 105.426 299.367 104.335 297.624 104.908 cv
297.389 104.984 297.157 105.06 296.922 105.137 cv
296.897 105.146 296.88 105.166 296.855 105.176 cv
296.181 104.569 295.504 103.956 294.816 103.242 cv
290.127 98.3719 286.951 95.7078 279.904 95.9002 cv
277.628 95.9632 274.942 97.8807 274.192 100.045 cv
273.953 100.737 273.713 101.428 273.473 102.12 cv
272.063 106.19 274.721 110.59 279.327 110.182 cv
284.732 109.706 286.46 113.493 290.949 115.962 cv
295.89 118.679 301.884 119.654 307.22 121.303 cv
308.082 121.569 308.888 121.879 309.726 122.165 cv
312.32 123.897 314.877 125.685 317.304 127.708 cv
326.079 135.017 332.617 146.366 342.21 152.468 cv
345.54 162.561 350.27 172.135 351.561 182.918 cv
352.085 187.289 352.324 191.756 352.459 196.244 cv
352.088 196.587 351.749 196.998 351.489 197.545 cv
349.26 202.248 349.706 208.481 349.306 213.603 cv
349.128 215.86 350.515 217.333 352.169 217.893 cv
352.097 219.413 352.04 220.949 351.957 222.451 cv
351.783 225.544 355.996 226.304 356.74 223.234 cv
360.352 208.324 372.779 198.426 366.734 182.085 cv
cp
f
375.86 321.783 mo
377.612 329.192 379.036 336.628 378.168 344.35 cv
375.821 365.287 360.026 385.447 349.435 403.895 cv
338.809 393.7 327.224 375.51 312.534 377.394 cv
297.242 379.355 291.919 407.281 280.308 408.534 cv
269.934 409.656 261.298 387.448 247.988 387.492 cv
234.86 387.535 216.88 404.807 203.545 417.05 cv
202.16 411.158 200.857 405.248 199.696 399.295 cv
197.925 390.215 190.578 386.27 181.89 388.522 cv
177.286 389.715 173.022 391.419 168.974 393.931 cv
167.206 388.772 165.756 383.4 163.011 378.968 cv
160.618 375.103 155.403 373.332 151.091 373.733 cv
144.92 374.305 138.687 377.033 132.858 380.534 cv
131.186 358.526 129.87 329.987 117.169 316.456 cv
102.259 300.572 89.0166 316.029 77.4404 294.741 cv
70.3125 281.631 71.5576 264.507 53.6787 260.039 cv
50.7304 259.303 37.7851 262.824 36.2978 262.209 cv
9.14108 250.993 36.3598 195.061 43.8974 179.219 cv
46.3715 174.021 44.7588 168.772 41.2216 165.018 cv
60.102 108.055 83.8598 54.7312 156.918 63.7869 cv
165.016 64.7913 170.152 59.2215 171.419 52.9934 cv
191.245 31.4588 219.187 21.0276 248.52 28.9666 cv
265.799 33.6443 279.815 42.5911 283.983 60.7586 cv
286.434 71.4422 283.375 81.5247 288.768 91.3186 cv
291.196 95.7298 295.146 97.9104 299.236 98.4314 cv
302.865 105.91 314.267 110.293 321.767 102.137 cv
325.835 97.7137 343.07 107.342 348.469 107.278 cv
363.375 107.104 360.138 98.7874 368.631 117.185 cv
380.024 141.864 387.6 171.219 389.055 198.226 cv
389.114 199.289 389.273 200.272 389.518 201.18 cv
377.351 236.068 366.926 271.352 358.336 307.317 cv
356.046 316.903 367.34 325.068 375.86 321.783 cv
cp
414.976 194.59 mo
413.688 172.898 407.95 152.249 401.52 131.558 cv
396.428 115.174 390.499 96.1111 377.952 83.6785 cv
365.232 71.0725 354.482 80.4637 339.739 77.0682 cv
328.03 74.3719 319.767 73.2415 311.537 77.5945 cv
309.461 69.8807 311.175 60.2381 309.44 52.6546 cv
307.213 42.908 303.408 34.2474 296.739 26.7683 cv
285.139 13.7576 267.1 6.0872 250.46 2.37284 cv
212.513 -6.09591 175.504 8.71317 150.389 37.0769 cv
120.504 35.4949 92.0053 43.013 67.6513 61.8802 cv
33.8022 88.1043 26.3457 126.291 13.8798 164.942 cv
12.2588 169.965 12.9697 174.376 15.6689 177.943 cv
4.83492 202.113 -3.90336 228.715 1.79781 255.184 cv
7.64108 282.321 18.3203 282.779 39.1377 289.908 cv
49.351 293.408 41.894 286.624 50.7568 297.671 cv
58.6045 307.453 58.041 323.41 69.1386 331.699 cv
77.6108 338.023 84.9604 332.117 91.7231 336.199 cv
106.063 344.855 105.764 382.1 108.492 399.207 cv
109.269 404.074 112.083 407.236 115.578 408.911 cv
119.298 414.692 126.763 417.855 133.623 412.252 cv
136.8 409.658 141.132 405.76 145.608 402.995 cv
148.663 412.254 150.952 422.943 160.849 425.995 cv
167.308 427.987 172.58 424.805 177.756 421.028 cv
179.213 427.256 180.778 433.461 182.443 439.645 cv
184.315 446.592 189.851 448.756 195.225 447.719 cv
199.137 450.14 204.182 450.524 208.987 446.866 cv
221.122 437.624 234.458 424.246 248.177 415.943 cv
261.647 426.865 275.563 441.088 293.494 431.491 cv
298.033 429.061 313.467 410.385 312.733 404.822 cv
316.606 408.831 325.649 419.58 325.993 419.878 cv
331.755 424.845 338.039 428.524 344.541 432.454 cv
351.969 436.948 358.342 432.728 360.847 426.424 cv
364.665 425.895 368.303 423.783 370.571 419.462 cv
381.657 398.341 397.07 378.291 402.421 354.685 cv
407.532 332.14 395.606 317.436 397.341 296.375 cv
397.744 291.474 395.036 286.725 391.206 283.775 cv
398.302 257.308 406.418 231.199 415.633 205.303 cv
417.062 201.287 416.575 197.603 414.976 194.59 cv
cp
.25098 .247059 .223529 rgb
f
336.131 203.997 mo
330.381 206.413 326.176 209.344 324.116 217.263 cv
320.814 229.967 326.393 247.83 327.775 260.591 cv
327.812 260.943 327.921 261.235 327.978 261.569 cv
325.589 272.103 323.819 283.595 320.665 294.15 cv
306.024 296.395 295.229 318.13 287.738 330.738 cv
286.333 329.302 284.924 327.783 283.932 327.074 cv
278.868 323.459 272.794 321.767 266.665 323.326 cv
254.461 326.435 246.125 341.071 239.671 352.789 cv
238.346 351.685 232.607 349.584 231.681 349.332 cv
228.375 348.435 225.04 348.138 221.617 348.676 cv
219.538 349.002 217.633 349.641 215.773 350.408 cv
215.161 346.698 214.549 342.987 213.936 339.276 cv
212.561 330.935 212.009 321.721 209.428 313.667 cv
207.574 307.885 204.728 303.207 198.934 300.687 cv
196.614 299.677 194.438 299.452 192.169 299.542 cv
187.975 284.473 184.629 269.161 176.629 255.666 cv
174.274 251.695 168.995 250.159 164.707 250.431 cv
164.353 250.454 164.067 250.511 163.73 250.541 cv
169.021 214.979 164.865 178.928 170.532 143.038 cv
172.667 141.366 174.31 139.059 175.087 136.163 cv
179.602 138.538 184.788 139.335 191.223 137.038 cv
196.693 135.085 199.645 130.784 202.501 126.162 cv
206.407 119.845 209.119 114.496 212.576 109.517 cv
216.222 116.964 220.769 123.819 227.341 126.161 cv
231.744 127.731 236.405 126.778 240.549 125.23 cv
243.023 124.305 245.319 122.397 247.472 120.953 cv
248.927 119.89 250.384 118.826 251.839 117.762 cv
254.002 124.069 260.553 126.282 266.48 124.954 cv
273.924 134.787 283.522 145.437 294.397 143.413 cv
298.608 142.63 300.54 139.786 304.028 138.268 cv
305.153 137.779 305.473 137.214 305.53 136.769 cv
305.778 137.262 306.257 138.019 307.262 139.24 cv
313.353 146.64 318.228 155.595 323.54 163.555 cv
324.665 165.239 325.966 166.474 327.356 167.359 cv
332.162 179.179 336.938 191.825 336.131 203.997 cv
cp
346.424 144.478 mo
344.698 139.746 341.295 137.327 337.544 136.632 cv
331.708 127.019 325.15 117.036 315.853 112.282 cv
310.28 109.43 303.598 108.729 297.607 110.541 cv
295.189 111.273 293.064 112.34 291.034 113.869 cv
291.002 113.893 290.941 113.942 290.903 113.97 cv
286.673 109.148 282.424 102.366 279.916 99.1668 cv
277.44 96.0091 274.348 94.5257 271.222 94.221 cv
267.417 89.1956 261.799 85.9373 254.262 86.6746 cv
247.821 87.3035 241.87 92.6116 236.862 96.3006 cv
234.423 91.177 229.342 82.7654 228.86 81.8108 cv
225.158 74.4632 216.167 70.6038 208.924 76.0891 cv
199.534 83.1985 191.635 91.1844 185.576 101.394 cv
184.25 103.489 183.058 105.661 181.984 107.904 cv
181.785 106.612 180.79 105.376 178.812 104.207 cv
176.788 102.058 174.71 99.9598 172.581 97.9139 cv
165.415 90.8103 152.866 96.9851 151.461 105.984 cv
150.381 112.915 149.954 119.78 149.779 126.69 cv
147.634 128.414 145.987 130.915 145.359 134.365 cv
137.519 177.492 147.301 222.501 134.332 264.719 cv
130.846 276.064 139.511 285.382 151.067 282.246 cv
159.809 279.873 157.244 279.115 161.196 283.06 cv
163.851 285.712 168.145 310.361 168.963 313.162 cv
169.423 314.739 170.115 315.999 170.906 317.1 cv
170.889 322.709 174.184 327.857 181.538 328.209 cv
183.05 328.28 184.364 328.171 185.607 327.989 cv
185.905 329.8 186.204 331.612 186.503 333.423 cv
187.454 339.186 188.404 344.949 189.354 350.711 cv
190.856 359.818 190.558 372.557 197.77 379.3 cv
204.265 385.374 212.099 384.135 218.772 379.43 cv
224.441 375.435 223.425 374.745 229.641 377.345 cv
233.929 379.14 237.282 379.616 241.914 379.469 cv
244.408 379.389 246.42 378.703 248.067 377.675 cv
252.976 377.588 257.359 374.423 259.946 369.942 cv
262.52 365.481 265.241 361.128 268.165 356.887 cv
268.375 356.58 270.466 353.913 272.007 351.817 cv
273.576 353.128 275.413 354.404 276.21 354.994 cv
279.708 357.58 283.362 359.212 287.686 359.835 cv
292.584 360.54 296.371 358.777 298.908 355.918 cv
301.446 355.351 303.877 353.808 305.819 350.856 cv
311.208 342.659 317.749 328.298 325.717 320.616 cv
333.073 321.227 338.819 320.11 342.653 310.93 cv
348.735 296.364 350.645 278.632 354.347 263.306 cv
355.149 259.988 354.687 257.203 353.475 254.959 cv
352.816 248.883 352.157 242.807 351.501 236.731 cv
351.12 233.219 350.739 229.708 350.357 226.196 cv
350.362 226.102 350.356 226.045 350.359 225.955 cv
355.12 223.97 358.374 221.998 360.728 215.616 cv
368.976 193.225 353.858 164.853 346.424 144.478 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (head.eps)
%%CreationDate: 2/20/2018 10:09 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BoaR^FX?grJG]rH$N[P'%(Ve</^>4Bn5_COUf_#%h'r\i68C&nbZ6?MXK8/K^OGT2pY+X+r'a(-P$7,ZccCpHkDLqDmW.aT
%5Ps-mooH;jIK&ND_s;gJeaAcAp:F\o1$uUa]3gRY4o+)M5PqY1It.L9qE/tgrJYgX?(*o/R-nE#19\:\/pU]JHN!3NQhR]?Iei.!
%Zhkhn350k3qTTPcg)^4io[WB=:VW)hT'j>,J+;Ok?Zq2@:S7Tl>dOHQpu_/F`VnokS!Qq.mc*'<`pk!Sr!u$5<H83>cM$nTY?soN
%=8-Xj9(1it3;mL)s1:Yu8872Uo7-W8rHHS;Gl-XfgZPbIrJt=DeGZSGhYO;Mn"8kMEjK-?S/ab[%sOrK5<\u8`ERcQY+6lR^AZ"\
%\+m^]^\]'(5Ob[$&+[A\Yf#^fCI:+2l0tmIG5WA/pUbE(l#XT:nq:Y#4Wt<I.EKQd/oXl&5g.L,8^-*7mU(GCip#3EY+^bt1!0$^
%o63cll`-X`,\s*3m^'Os50Bn;@J"bbhMlEa)s5Ns5n)-nBrc^_e+<IOr+bt5n"5&Us2Ggus5r]Mci9=_iZq<id[YL01uF!$-9L2\
%5JFXWo+/$r^QnWE>L'fH^O?(Jr<qk8]@#`Z;m(C)I/\%sr8Hn0n*]'?otGnF,8TKE]0)>(rr0s)^No\-H]Y#/L]$T;qcA8lrSQ7=
%)<2G!KY6p%V/R5]`4Ot\m+`km5.ddFk7i-cQR?k%mJaU5DH.apXn8HOlL3Rls6f]`?d3)Fm:4V8^A5B"cbF<b/Ba1K5Ml5hGMdK;
%[U.,s]R>/,WXQf@DiVU"[_m(YgTTr]J,&Vr0E:h4l#Y(BQi?iobNRJB2T;`Ge$i,&-/1Bg6.Y@/G)*iH^&LA^*TUuUnUHMmJ"H31
%nQ8u8&O4;JT8k-[*Cp)#EoH,+=c><l7f3uG:5]^^`H\qXS'Eh8R:i$Gb82h(B:Lm+3"<X]J"1[Eij@_XQQD4_jESU'QO?!j>[ldU
%QO?Qu>kB6-[!#T!UsIOdEG>5r*9D5=^hFW%rl8^i<uJ,hL-adJS:a,dIu_39LL,pZiICcZ6/d=K8gd8MNBuNQNZGm-)<8S4F\]=L
%3"86ms#B1^6!IJ<G$\fbk>J2bs6HLBH6%NZ?[J]sBBRH9PuI;_VdYPZ+1K[Pe<0'0[W)!FVdYNqV0-PF@Z1p!j"Cg;klC`fkL"t_
%E>liQs)g&]>]b"o#C'jS"a7UV;HZ'JU<Ynse&a+]USHEAYk-R+IBq_A/=W5/^2OPd=D/BNjQ/FCr>9%_s#<_e*FmTEd>RNZcG9MB
%nj;GL-gC9f1R-;q3>\D=FN;ZWaXC#N9iBPCB4(P6F0ABja^aMW_NaS)pMjA^^><17TV(P:F^@#,;RWaA:6=>l_Cm4s[eo_9\\.:c
%[a3*,[=+^4?M6XZ6se`KWU0Pkg1@GAC7n@63dH"?P1&17jmlrqZ!Q_N^b>UB<pAtoHi9oAe?<T7^Y;Q_P065>VY3s';UW>7:]8F=
%s3A/=4knS;Y910EqK4d]hsI=jalTFa2RT1RF[#-KmAGCBoum+mee%lIqWcu"0E$_^qWTtnbA#a=0)M/6knJLVTu1f(T>@;qEf(09
%kbiI>b6^t4nLGMsg-3\omW--<GS4pL*O^F^jZtQ4SAJ-q?gd<e:Uj\tor3,Hg+*^(?%.4cVd@AI$)n&W3I,=5Ge,_+QOCBGX-7k?
%T$cB>n`bs1fg-+dTu35GE3XlA^;urO4_M?f[eKTD<:,k,dS]-2hl$/]m/]8jp8'fae&hH*Z3BT5Eoc>iq2!qhe3fY$Bu7j%4PG+_
%AqWt3)l2L8:ZM]D,_cX3.+aL2:A;6Ujmm3*<+$C";X;<_dj6M9?-n4PUVK"WK>>t&H.o>fCQkLqP.:d.b3b1iAC>;a$J@O03Y$3A
%En2V\pK;uX0I8gnpT38OT??hQE0-?@0m6AP`[@P#LVpLF(_FFCejnM%#Ls9d><%QN4"b!Z`jFA>2g:bj['AZCl(CgU%-3@%*p(`d
%?[S0MAbs]R[u'a3403:,V$e:^(J[JsN?L7/]G`M=5C`g@:#Ym:QK`j)mn<!SP"i][rQ+7.fbh+,fs],qC"O]+#J];TLMluuPleP"
%UGno1/iF&c(8C1dY<P;\2V!i3C+.Rg4LF8)<edpUFKD^k6se2-)td[r=!(YeQ;>P;GhuOlT8f[,]DQ?g3d0EH^Q4*;KPi-68iB<T
%Bq#3Xe7QanbO"FB)7/TgCPF$V=mkXWT36A&427AWX,XIaI3dJsM3D4-BbtoL$3OS[`+n7WT%F#'/0)j9W2.>WNEPLV.DI<1V7^,6
%)IMX>;T-\JF;pG+f@2)_S<r;Xj87Vo9g<'tgNqhk4b;GN=(8*:_?=GRXDe/d/t?0)W$%000R[T'`Z%/>.:,[g]BgI!eYt)U]p;'`
%gGjKH*^W(AgKLp4TnVM2*TfEV\k2D=H%0.<b/1TqP_[eD?#qpnf8#`lXo!6rFcSWClU<XK&MB]Y]D,LK'QOr8D+[f)n!+ekb8c+N
%RFZM^[QE-J"1dfa9#@0imHJCqCi]Ut6G>O4Xl&'O3gFKoY#8Nh?DY$aX38!%_?YOY8iW6=-F7)aAkeHbXm29'J4bf4q^;]f/4$$p
%RIK0g@C.qDHf[D.e-TBD$m)*@[pXmQaXprSdtP/+^)nF4c.`SOE0*V<](3-^7?reGo2`H_7M7'@7qa\o=[O5IH<s]#DGZm)2WVt#
%$XL(t-Vif7o1WI8J"NF+E]TadV\6,t]7/!=Rl7Mp-EcHEfqN9HISEX?:Y/OoWRH!M]uIf`=8gCA6`6oX.bbD6oN>:-g!.uDLV%N3
%@c*HK@1)lQf[EpaLoGg?jdLJ'otfRNgBdcEcZmUp$o^Y$76#GTP`i:fjgRaAY?/]E1'KdW29Vn7_a"GsRP3^?X=g;sa76>[\#G'r
%<:4Hh;q@)3W9W&0Z$surK8NIlr4-LkrT];HGOA#rN-/HgltNR;*m5rRid7R"qmp>WX^ML*M=<4RKLXXo#JEED9u<Ea;c1nA7F^R%
%$!S*ooRM,,M6#*qpC7:uG%$=1*E)\Z:F<9qrD.uUI)^B+D+:JUXt?Vi8_`">MHNgbG.aXW/9Qqo4J8&9DE=mQ9ma'u-q2$8-srTq
%DV`u(J$B?$e"b$o9MP7t1V]/k2eKhf#A;k^H`*G/qW-6+rbiZ'2K;\-`^d*u\`qOsFj4e@%S\Y6@,d1#oV:li)]c(?<0*QZi0Ra4
%G<YF\rUTQQhaB)+GFK*9=YX[`Vl6>OpfkAH+>8\[lHf9pTBgf>fis^071;'c@]a!HK='P++=/Zh-^0QA).ogT&(/7m,]YJ%ar5!W
%pM+"eM:.WQQ0"=P4Pd5MQP7kdAa=;3-ImTIWb]f,J%$fk*Zu/#bg;VEc)"O[$d5ZI]']RJ#W!*9h':#'+`m/,el*4%baWG72p1,-
%De<D,hGB]TI_uFSkc\iH0lC=%fAZ?m(!.u+(1nt7iH#CXh!M2O2Ak)!]P\$&Wo2O^::=3ClaE.^/D^/8lg7<N]"Mq!3!L6ZNn;s(
%(h5:YQ4VCXe5s1Y-/,Z&lH_eiY)K_0\Lli^m-SF_O`f,&cr?gr@'KNiN7TY*)Ph#\dg?h-=dm&&^7g#KZ=g^YrJk)5<T3?DNa"+T
%I_4HV*X_+7@'3XgNk#hM:"`eh@A+*BNEt,3M[$Oh-J/\RgKjd8\m/K4qc$!p=g\-V6,:TE-#fsI^+79bTnQ+X$[r#[d-;CdYqFir
%*>LTNr@5=^dd32aD(_AVSaVp1_=.>K#s%^N=VgV@E:Y9bY5k80hLVQhX[/T!-l%Qb"YQq_bQ)3ZRE&MnDm9B\5O4>F9e2f]:rZX;
%n07>jZS!5e@h3Z\X5URB(L[lPgHb/U/_Y'\j0a9&%dO9\m[$oIR)N9W(Y'oMgNfdMMFFeC["][d6<D[X\E=9L[$Go15uFRVNhhVl
%g4aEt$?3R.`Gi)YlHdI"Y<KO0U"\(:e0^uM0dm]3KO?L+a?t9M5!=$mZ692BcFm8fQ8afg\s7ZXAM!D#6_?)-HG/pr]`_T6`,.;J
%@g8oY-$38EEFkr"Rtb_eBf]k(j84;W'r:J:,<kb+(F=4j.@0Y>R/5RlCMK6>M4-hZAZlgPkmS;Kb=lU+b*?m3BrQX=7>I,h]YRA/
%L;!RMm_NHQC+CkUFjEhLksmLe*mEu%4WSaMd1qb;@?l,1$H0Aa2]."k/SL$QARp]-dj=%IDP;EZ'80TL;VSHqL!DiP`EE5U<4X`@
%=3.diLSC/M&4DqNgI<8>K7t1\,')r!BH+>9$];'"n'&=Z(3JA@h=jO-f%gU(XLI-)@AJVNf",uNaBS#$2>9rs1Nd<&?Z+92Bq(hh
%e1NC:,<^FSimQS5qSg;U)j!ZY;\'SI.bdj&2>HhRn<6o!J`]O)4s+og1qg<'j8!hoCK:PBTnU%ZDNA0gCml*_$7(e$X4gSj2o0sT
%<a2V\e3/8/H!=1F#RgRmA1k"(4k?XD&p))M=3@R@h.i^.rf;aBfArFK*lqr7bdPO*M+7FM%TN/_`oY'=\CWH4L<jjJBt(8]<`LC?
%9(;p4EabOlXo/`?<^gPY=;?+-ghWgSh]$(?k.9=>JC3t/&-Y-rT`#@u^P/B4cip1ZS#!VYcY]/[mCEKBWrp%dR?a+cA^4kLY'8bW
%Z1Fi/<KqIg7!qq:/7o5@9m*P)7'1GmC1bW?KD+F&;MZ+5953*?n!7:ZDI4fiN@$q?-uLUL5$@I3P]"iqYoKdSH%hHJD,dKP.93Xn
%Z,:oEV>!o2(3J6,>hM^;X%'%.hs86<`Q5J]?.\0<QF^qJS7P'WB%;&=T=\13D@L7E;I\[fK#E["K<ku]a;+Bh?D4<C20HSp/a?10
%<j?YPj%QIqCYHs.hWgaqnljLj@NfLK[-4LV.MBQCNin"Th5,1dJj/</#b.J_SP5T""*^3S!QotMNKYq0dGgl9kr-O/V"pl@2O.@G
%.cU[Y]$N;T5R4UcLr#UojbkNboep-c$#]INLo&+d!o!?&)!3]B/Nm2h?:,7+]F]G_5NXiL00b@A=HV$`6XGOa/Rbij[bEeYg1kO#
%-WW-:fjpu/0%AcGOeqI.@R63pP3(rKjjU+p);ESTctps"jZ.JBNidSX<3J=N!haO%]=<D!/^:JCfJ;cPgI(3Wg.YL9jniYC?=C)P
%c-U"!pJ=\?K,1mhnb4t&WlU.T`7K]brIQY1T/uPFT*:_Os.U+*64oYJo\0.@nFf-gM6]..hMR?Uq[IjPH`dA7+fg($=N"\Wi`I+m
%[o(ftGesPPk^!h@+^?MZ:GaW/XQ*KIWqk>6n4%r`dM#OP5kBr57b\<P'md),?+1[@/O3uV*NB":$>?:?"F7t#c).XAk*@X#h^TgS
%UfgQ(l\96dbpuGqn<u4?\i%S,W!0h;pUspk6O_pufeto"\u27,k0b`Lp*q>+i??%U))0Q^g4Fp?ACoSA@0V1cZo/_3_nH5LmEK.3
%i#Y%[LsQ2V\Ihuu1JiGp2>VdhQ`*A=[kDU\=+'ZAhV&@Y$@+M^fcm7EntYd+AM98i4jbsc1,UAD\1F6N?C3*2[s':mkr%tb_UN6T
%XKgKliirm;a=V4OjXFn!\=e+>2WUhuKZdpuV"h\me96jWdrDnXnF:g)\%nVY/67HgY.3cajkK7U477D`Qf(YZ4'fnD'V\UBd%F=T
%T>AtuDuL@W>1ohQ0Ct,>#<atEeomU9m<N1R3uPM4Y,*OO/6Gc-CJ6uOWa#?fY()ni4'*.Sf,`HL^3>7RXF-3>KRA9_9PZM-A&iH>
%MV>bj`MuubLVA7t3V$&Cr4+8OSIMh9,#`.3h;0pQ\\Fh\?7mO;`5E=eY7I)TX(HW=>g!\b(,N\ump?;1h8i]$W@#*9dtNR%_mRlF
%daDT)S?QB,h:'X4;KG2-_2\oT@bQE>e=&?5'4B:;hqM%5cG]$#E]c0!VReAfF$B8rG>G[=j45j$/'gVMC/eY":MWf-!<8pnhlF]a
%&k:u0%?N^"..1l3"KCfo5O0Maqln0ibNO?`N[fiVq/-1FLRXh1c7_-"UJ/!eM^>7kh8<M69j9tn([P9rWj7Nu&qd?fPgr($j*0*]
%q3<o.?#%3%:Y<m,dk]FenUNJ&U@a4CFu$+VU!UXK>$VHL/s<&d,e5fb</L6i/*>po]?9ho)fnYskm1m>X"cKXD!)D25e:fo@uVa<
%DO-%5PZq,J`(kd-2-;lc<?Q0N3$m[/]03idCgVcHoC9*nK^[jO2ABtqWAf!iB"aGngBLMR::`$^Y:6!lpVrk&LZ!ns0/e]T8=4JF
%H:ou-frs,o52)l!FAFG@12OrFeN#8<h5#<2cs*gB+TW>-RaB9CI2?*f>Y/KeS*cqdPlj$I:2>5n)0=5//a`!N'D/2?)0Vr2?HJIh
%C\hp\8dVNF&cif4ln)]F<,gK,7B'^?]hZ0T`>b>]nFrt8K?.aV"7*aa-?DpO3/j@tlg\HHJ)qgF"uPf0V5-!++Q=HK=qIl#jk,4#
%9$1m.3#W:?EjG46/P#&4>)%&3cM+,gW3%_$J9goV;@>t-`lB]tIG4#"9;Z!;)fk?L$Fl>-F`7.0(FsA8hfdWX:$f+JKd'"79tgg5
%YXb[IlVs&'2j1TDh?UH9A!PZuUs4%K*OXJ-H_TmFK.fgU)HgV9qUtor?g8d%DTckS=*r,V.jPM8_na8rdCMbPkV`28B7W+E]<pi>
%Pd-PjTX`@MbLr=3AaHA2a&bQY24".Yp3fhZKbgmg]TRIcVUhRAA1N8f6It]?i`^^KVsbn4bj;u!_2Eg.;Se*9LEk?pfD'L=Qe#>p
%%kVj1-r+k!RFV6(3;I$4EEf]HY:;b9pO2Kg\Pg"73m(Z'm$!U?n^,9h9#;q=eBR5Y?BWq.(GStc5f#(abQ&:c4f%?nG,egP>Ogf%
%=#Af))D$:P.+#4/R59e*pUlXqVQiqlCAY_8<0op$QfP<)Eg5bo?;04>FU3:XM<cipmqfc%ihNGigb.:A\0)g@[WDtgo93bu?#8KF
%f9=eg!57)54n(T<<[gDDRl@?rJd(YRQLlXn0_6Xtk;ANYQ-E?-X-QGS!ACA-"1Mm,b_l.CLk?n,"fG(]13HO1qm;Fh.BN/N0K$/O
%5$J&%FJO,nV;W<KpGU>2:$1i)q6LCbUnQD$a"CC(j)P;[^?i\8Hh_=-Yb(`NdhaQ+%&hQSDL5l!:g9:F,fME+$X*]Im=\uQ$FF#j
%0&B.q0Ga37kr.DHN67N7Z#,uo$3Ihj?1]9a]c"7jV8X+Zn9M.Elp@oJl6k(HMBd=Mah:c8_Qs-<b4AotDS62<]YH%!C#s?N0=PgP
%MmOR%Y2a5WL726^?L?()DYKr<TU2N^iEoC6R]U]bln60;\<ZKV.jCMo.&(ftM2e4Kfk:o=>')As6fi+#V\P8E=r<PE[5(3Mc.X3m
%lC1tk0F]bOo#d2h9A-=(WA@E4Hi*RF(HYn_;&>G*b0DNIfhssa$ef<ZLjZh!"SP-V41\(Fp$"qsf0t6I!id^t="u#3X?i`s)U8(K
%Wf*]Y7XWj[;12Bne4,9&B%<TJY/mrh4rU9R1.GM5Z8K&K2W"(?-J>E1CaC<.[Ac>Sf5\eS?!EY2*88fIMb]!F<i:iE@s"h#IDAN\
%qk[c-2F\U5W(*o*EUL:";bg].QV=6>c\>3`)dZAji1O$!dm121b1KiKb?$[<L\B<aqM'qZG;"ktl]Q]u(nY.hX0oY!$WX9=h-O[K
%PEL?tmOO2>4h(Aqa6Ao3UoJ'XgK^cF3pM%#%BSEDGH?-7fkUb*EtM\>mn&AJJG&N:9,Yf\KnC;Vmn7aup&?uj1Q[KmS&F4c=(Xo0
%8/35R-/;boo]<B\Qa?7oP-&\mBr'D@m-SsJ^90\#l_H6P[?U\i;rgj)&2[2;_D57$CL?]kj`0bCYW@5*R;4@RNEs5nq^]'B#>D-J
%L#pNECu$X;AY'k\1P%Wk`&Mi)BUm)rL\8SC=,0e9CFTDE^=nBhH)E+@]?_e;o4"-^7:@Xa1ebVfWP;8rj_D(RVg)t<<;?3uk(NGs
%"n%n^9Lr:ogjD4dM92B\?[[iA`qJ`goh3f/7O_h!FSt6if.UH[B:lUspt8aCDh%]aM&(&B_`*)F=tY(!$ItB5I.?t-=oRR,(I-&t
%J+r*uO5L!6eXp/4q;UT7DdWP7IeVafT=o[Ok5#%gs*".K5Q4ISito>"ZTe3Q%r\%'PC(C.opiXlcbKM!4)T:gnat*):-Y"Zq.KO!
%R-RQBIsV(UA\3N%SmVG<s5N_Gh2V*?a5$4.(JeC$IC%r=onL5,rf_a#<9C19&guPNrPqFaoDZuFhoiCr/j*chrs)<_5'kGJIe3Kf
%eLfGIoZc.*]RKIu=KiSpIUnH5f5L*Fs5j5cGPp`un)$>+oD5'0qS@CSo'+mnmg_#=?[_f=SH\tubqNa8gE&0Aj3netSq$Lsl1][V
%rbQe'oA^@2hYlF+lPK6^)kY_0oq1b!>ksbBIeD<ZIsh4Sq%#.EA,;KEAU9q4HZB)9?[m<Is#B:2Xn+KTIeQItkB[hc_Kl4Z2fJAX
%pZh^lmF1?#>>LCms!'\gX(RrjX_01LWm@s4rsbSu(A[mqF4n2b(t=3$I.`i(_@1nbr/^=!W0l^34b*.,o_Y[2T>/'XHh6pRn*pI>
%h,f)TqY`R$:-%pHG0BB78@2]4rUQ9cb;)$D%^5_-rpJ%[DkDrpr0<)*Vr*B]HG)D_TD.:<p\1lP1#)*-@5mTah`gkqT:UEbgkh^d
%q[pTR3%)Au^u:?j\]eE4e^ko2@`[4ur%JPc(mWS<BAX]cI%m*PS_9:_i.VMaP?k`>Y2!K!GM)^s(j9d6E$)_TiL>n@c/FG=l:Lar
%*=3hDO&+15mD\&6.(0]C%7:!`a#Dnj\Gr&Sn(p0Toc<,U\n+H\__CpIijUX1k5p+%kL"YS`]s#N3g*.[ILIKq@3-C@.[9Q)4S`G.
%pHagR5;Ls>m>(Kga([`]HPZY-F.C-1c/\/'-c_=pq32Cm50,1n4Ct-jU8L)t8]W[+1o2q;G`bACh0=`rMjX<LKb1.A7PQHhMaJ2*
%6&p"Ga`.^o3TO%H9.)_dR)5X!:iOlPNq7@W6b5>'P<<<33+3`enC''#j(1?r+Z=un17W>*ZQ*\D#N@"3.kfdtPj'%jJ)PC56]=u)
%%W^pL%+;1'N_Td3\+V$sg,h;!*:Dh3Eh)2MaFkRE;In9D&kS,I?kcC3*eOij)_Q0$LQ`]Jq*#463G'=8NlWFRP9$D^ilN#:03:Y)
%k3Cp;TBu..mrHuUNl)%XG+AAV#"?\\U\rG3g;?4jpP8Pe$[P?aKL<[5*(DqB-0Xi0ce-SB;%B*KKHWg&,io;_@B/RhP0'(EEh%f3
%NcO&GOGT&&.0qc+<.r(4TBmi1FHkfNHJ5^&^R1^jX-a!T:T-qM$P\oG"AC6#G:(m_OT5&qbXb-bs-*AQ5WBkqTg+V"84+;i=A(u;
%B/u1pO7I]apFBMrU!"jK$/-r[$2Sa5T,48!HjcL2eJUR@f/rEaKKc,(h-i:T60Kg+jW3,Z#\FcCSRo@W,@9XJAD3((8]XKsc8<YI
%k34Rj_[o;j0NiSO.@assUPq7U/0*\=AnmQYRq43J6C(AiFi=.lA;)YA?DFT/&rpq"AM.Pja$%9P%RL](rC(D<$cOBbU:nq'=_Q.'
%(7\p8Ot86BS8f24GGe:b0`l@VG<YCiLXYK5GEhJOScb$u:;VJRkMu@`LONN>$[H.\=:?r"+eAFLk`4-R>`TP"BA`iBBK-tC&Vt-f
%@'C&67S7-Zkt4("#Yu^9gj:0=""tK_[K1IO14JeJO>FWE1)U<0q2+J/JmD+El+%f]10)\gH7NWV/VQn:*(Ul@S94A\\C&<KX:_pJ
%j@7@<!&s(l>8>odN%N<=`J,IOP/C-tOAh.\h@%fb1J_>S?&g_R*8j#d!5du2&LKMi/HlnVL4Cnu@c2hOk5BrN*Pgci5DnN`jUpq(
%jhV#?1h"b:9^#G[.P0(gETF4<NU)bL^1GIRI,V<Qp5sbQ$\A[3;o]#k_4uX-*%i&Q#_#CUAL.*29B_Zc,*SC,9Jn.l"N?LmoL)m"
%UVU4V2`*EN2L+.\a-KNZ0k:;eVumpTOY#K#)?]::$3Cll4:jM>`e"HU@_S7`N+XIV3g=_?@8CMG==LGO4eY&JDLp$6csNK^Sd#Q;
%p2i9W%P&igZ'#`R-@9JaHE7hF.n0.g=fAX(9;B_:3^O-CTo$J<&fWaOZq`qN?Kc&6RQ:h]**EkbQB!>\\fcni;@j9O2@qSJ'/&Ml
%>)+ZV7'Y`"<6k%k#a@Kk8Q'P;C<.MBJ.clZ2$?7A=$n)oUo,tP&0?1dN(foWA<'.eN$9g5Z8)t(&.Xi>5t/[VO`7$KfM`2(]Lo4S
%.#uHlfbBX`W?m[Aa[jKuTLs5;MEOc^aek4p<(NN/,bf$=+ZYoN!bEXE.cRC[W;<3f#;JLo*?u:/<AdOWh4\N+OFg`.L#T:ni3)9p
%]:oN#KkdUjmYVLa.k9JClMlu*;Pj78DA&JHL[!:[W8('n,na$&859bg+k3;@d^t^_@Dj\YI)<SdhDoV2CFe>\Y('4Li#c:=HM[43
%gYI))KNX!HYh:Y<&&fA6RYVdY+:-SfA`k.h%m//N-K/=Y&rshoTdNN#@'^F!WTjgfaRUH!H5:qF$1S3C@ppiRe0jMiSkKs%p)l+X
%g$(m/3`C5F]+ei`2E?m[-F1Plg#9Jt?eMMLr2T6<K!uQ-7H=Y_FbS)&;j#%i.Z9LmASfY[i)N7EXA51SZ9)WBWNs4Wq!.aNoFThJ
%).?s.m5Wj?.0kNMGI[$-#f'dfj5r)P35Y5/)ngC4Rn(&<a;o2IQ9X_t4$NZ1q([Z[nPSI4rqLl]>A&&dN>%m=dcr5cjXbdj&A*+=
%l^+.'+9Dn_`R>/cj=Wq7CDRS%UPQKP%O2r^M#:dgAu&FiW:Ws;1\D6X?)Br4TH\S,^JU")aE',I%TP@uejWS[<6u!HBkl=pWar,k
%WB+(FYtbn+.3Lb<@&hkYR00=D'kM2<AZTmN?6q,BgaQl_;p]J'lZ)38=]*oFT^"F7PJVG^cI;c-a8!G)Xc@@CO?4'W\ojf=+1WD4
%a8DOLr9tkRI)d,nHT_.bO8b;(Ic@R2*-ZcH8*Te?(,CYf$V\H\g<,!E7'o8=-UF!\/6brH27+.(17bAuJU0tdecNb:d9)oP.!GMV
%9L<C3?nhb%F-OO?HEOQO?p'mGG@#9SZ#US5(k?04R%`[ok@3LPhP/do24t.91bM^$5N+#)@0"SQ5:V'CR`DKic%=uS*jsoe9>7al
%5T@b$o,&hL33IB#kW"j_nX=efI,*jun)ep<FF:g_^XXA)?1:p.LH5H**YU-.88b=&CbNd.E;g5@(B'l<D)1N;dpI&.NCc.#(Cg\@
%.?hdmX5;p^15j<>TJmV18LuYO[OAcuS)i5l]93"$)AG)[!auo1:SV@3M96/6!l/%WJm37ciH*ptM3cmi+H,$7&/McZZ.]hU)^:9[
%!0qW)7\i-r),+cuNom$;U%4Jc1!1OjCK_RB=^mr`7;GP0!]F,dXEr'h[t'e<b?DOF^-iXSf4j8)D]d61Z?^\@CE@grO#c9]O#i=%
%n=pK(j.js!5O"2^UEDD^EY)ZH0&\Qlh"btSajSM@)1lZjGIj;>66^qJj(UQ"6D5fr#7r^)!-JE/!I`8#XWp,-5b7s<!I"V3<2``H
%c4bV;$?@W7B`R;tgb`\C1l;?P4pKa-^eI.b4h,4qk*%I.FVNgd+K*)H$?RcIWF2X@SHnc'AqHV)4k1?1WAdk&'ECsB?J4>)4dg6^
%5WEkhCr:Y-ao&Mn.)!%;W*^U$k^%?M.bj?<[t%9I-sNaf/;;UgPq(D'!e%,92k$qZ*E.0@Mdu_Ig*([A52t\_/iSg^K?$QZa6D!l
%nM,gSnPSK*J?q-D\`9I2rBKJ*LsZ+E;*K&ccQ)%&8,4ucr6/#%F-OujjYKF&FE]R%;F?SYJ$/_Hp^\7;OCX8]q!VdHX/A&a(Zu3f
%]'O":\,fI6)o$3B.X[]^_*9ScmbEV;JO+NbIDi.rS/L.RPHWe%h*oqL.VsN6Y"<Ypi8`)nGGCeZigTOQjdJX56#HDlGQN(6T"lq0
%MabW*.M,OS:2Qrg>Kun@UK'/sk]!Wd#\/mRMbT7Ml!fk.cgRK2T6WDflCARITHErW7?f5q1PmN<A0MVFaam>X`XU%tOHSp:2Mq!'
%geS#QP".JFmj4-^^Hcf_ga*J[Sj<0?NI+h,+s]A3%XAphs68rSqY7>UrNrp*#r[U/[Ps#LY;XHGi$K-24jfBL#r-)0]Prcj]!6hm
%FE<@uC>]Bc-;c:RFGRh_2%eD>:m[7riuSr^c#d=ccDs2Q(G;ae4K$"8<N/$X:2ij'$1e:<,Cs(/TBO^pLDjcg/A0!^==n!$,VY]=
%DH11IcN%Akkb>mCTgl"rN2crWQPuEpnYs^aeCihZ94[<j[dTWhW>_C4,#h'j:dp=X+/M";-EK2/I\#l9B[#b*0@#1iVK\S$4/R=W
%)JH4WXNMhq*OFNu@pStAJI?B;ViAU.jGmGOQWqK^c)_pp'Wg'eUCW@6>odt+X1"'N52YmYY?X&te85\.;`9)W?lX<\X,AD^+@h(_
%:(5r"N;G%'RH\/np;fZEBXeb#HD[rgU8-sN!s,0:U]Ynj\T0!U_bMLWLN1pY7U)3USPTCk26L+M"?k3B-H8i6=2?^U>&]MA8PeV4
%2n/V>*)4CHm]/\pDC0LQ(H48mfZkI1,81d@"`2"$<ImGL?Oc(k*iug&eA^>*k_%@X>o`jK3/N;-Q?`<?P@('T$hmR0(i##D*k<?:
%;f>9lr]Km]4]AmBO30J0%dGMcQ/ft&VfCaaDB@aW8!H*T7iuI*aQl4]Gh)N'0u*UI4$MZ*pGr4ohm"HN%%eGEg+VD2`r$npn<.G,
%=A(U&./sq?J%#.O(>[<hIc1cbFT5i[q]!%%G,^8[QI*#G/ST4"Tgnls!D<l&d^Xc/Psh6K_FeT?WBa(\6:sm1kmC#q^>5HX-'5J;
%+sf>%cqt#daW7Q.UBVLi!f'eV:k'#bH5ob&,JqOHb<t^-C2s's8(p";%Y!%B[h$%0NDDb1ps4?.'p*hX0q9moH-Kn34nqQcP=7R*
%^i.MNW6Qc&+s@IgZ]L9$U_u^Mj#_hN&t45JEfVdCM!:umlf^KPNh1W<Q$%2J>\Uso4"?Xg-24A--O%:#!Z+&>o]XpRWEP`?o,:8Z
%l8h3g1NZ.9Vo(PiouS#96`a\kfgPM\&ulHX%lYGWe)]f45U#62RV4i%Qp*:ag)I!YPlDU3e>&C/7;6FT-nT5.7Ia5d'5jbrN4D#J
%GJr#D<l`aWgi;+/r6<-miulBklp8qrcK!"_O#t[Jo=GODj!2iqTAr0-*>b6#WPQGgO=n1Y]PEg-)Td7ieg#mMA%"Qr51<t*OrM5F
%R)tPB&]c:6$Q`Mh,):bPL+#HU5>[.lq:1>TZt_/YR70,7Ine.`N6J1.[Y7+4&FE1\42e'u$W&GT9KmYEY<*MEeT-o(FstoER>ol:
%ZMB1n#3KI]0ilJn'b8#VMZqTs!TdtqEV<5VjGnWo>m#q_l*Y#hi3Nj6>GNQB2d@^bD'_JbVbCBo<d@?JHJ%gD4Q\&K?5e.b*ln(^
%LYVEjk<+!Zeq`&NWpSi,cZac/j*b0HoKA!]c3#jl7CO,I-'SlW79,IH3f39#$sYS]2nTSAHABf122/HQ93V=[>u:Mi8uo>fd*%0J
%De9@u]@<pN6:%1/Z:_%YP:BDE69&dUWE?#t//'R,1=n:t@d_Yp%b)&Dn]DmL1lJCkY*r8I8m4[`)7@^FY:MBS^K4j+IuQNN$]m#t
%jh*o2-X(3!.Li:,A%,Uo/g(5u\!2neJL?RkLeR]CmX6930Up&kKsqaA3jSt5Sm"!D^3D1!!f_J49+Qjp4DDVTkce2H;HWZg['UJ[
%O'ojQ;)k*p%C!kHo&p)>=VQF^=L#(n-Pl_Jae*iL/FbO=XPB2f>-_ZPQb+:7]q%"8-.0dS=3C='aB(mC3YolKgi5tU^K/e?XdkmO
%?.Cc#(^<.IrGa_qlsqO._%a2LP#\>PNi&%</Rr@[gPQk.G>l\2Q#*fo(To5sWeSW]2\g.9<NfrP07p0+Wa6F*l<G(&FepBaHn*@T
%_0AStHR\9c0'],j;Pfo(>b-"Zf3-,35_-JVlsf.bCLq'0>tLH@:j"?:@qB2r!1QDG<G5OkF4&c`=ubZo'ode!D6d>/fuh5Ql2J7r
%Go/+B'<ciT+JW**4%)#ch90.q3-c\5k(s8mjLbo11o+<<:WI0PZgGYK@c\e1SJM;O,C#9+<\HBPk`.:c,]fKoE8M;R+*`F!Q``:F
%fD`pB>s4du$X,HMDP+LoRVd[OA/jcB%a@r,:-oq36fi2Q`O_`M7(CrI$_(br/K*5VD/4i?_2Ooge*NC.`DUN<Au023HZ,#\.qHis
%BXU?:!3Hr$4*CcPp;E-$,[.>o0dWqN=E2$2-rW4/>ac\(DICSRW^iS[L/;speN`\WmAm(SVsZ6U`\=L]@nS#1"S]/B'j=XT9("ZD
%+&s+-)VO\+d&FoT534afE'1_3`!u\8,7_Cs%6I0oB.M/4<]nMUUt:CO*pN9P)GnUrg&oqYW(rO0S:Lc8.`0@0%.Rk39P-RZcVeq!
%H0F*A(Y)fApORFmkq+-<--?E-c?_>'-*g4=1]?FRnqcR\cq6^k@468STLNW1,'j>Z,&?D>W"RTrT\BG`KS)V7)kIh!%?kKf'/`%!
%9BUSb(AZfoTC;QipDs:!/0'ns*R30&R=KWr.69%3JB3NkWVC:`8g^b1@6L7pP*He2`Caaq*O;YA\VlR]:fL;r,dG/#T%3,-6645o
%[An<e&TR#l%CGtQ;[f`[(9QpgWB,6619T/sj5I)fS<b3EM7Jq%>76q)hON4VIFYmo\oYSdT,VPiDd4<n(-n!Lpe\"_GDck'I!rj(
%]8CaFr"NkmjN#mf2V>ITRgks-*N[,&I=+F?OBSNXg%^=s=8?tFKc>g#Z(LO44*Ho6=g:S0eKYda<*WM4/ToI,LbNu6WcPXsWV`#=
%ro=IA(83dKeV.8lW2u`)Ru<##0]`pg;I]+EAUUgk,<_P;/Qncp2)?u:,M"*)6T/MNk,+jE\lHY'O584(^T<t6$TH;HdBe!//ZmW?
%pJZ'+[BF?r3F"SV,&8?=*G1GW*NuU;:#4'SGF$ffICI6=O%;R7]()r`J]OVPis$:i&I7aVS3ib=bh9i=96aZLkck<$FmN?8E&Xdo
%7CdbH$*R='MHs>%X[QeYnQNVne5_>c[[MG?[,'N[J&XoO4G=uG"_a7D^q0HFXO=Z[m@fc:*P:gMFTL2`%=D@rTgdK6/OVZPMUAko
%?aZ9t^u&&sAm5H<C?R<U@4`1q%j^HC^_Cuo>OQ6ZC\rY?9*kmD_4]^!Z#V?O335H!Qf5bd5VNZU$@XBSpc:,(AjGic;"2_+?n8MZ
%W+.&#p`g=+Z0n6<aaNLam\OuDm1d3V"nn2jY8r):\[UP5]A[r!h)WODkWP71=0E#(<QUOAcITC;QM#uu%!GqLBO*?l)ZOiu"Ura"
%.sF:#)Q]!ROs4/kZiCQDNe^4,5-,eWTneE;DCTTa<Oh\[8$.]W!J,XN@@6C/4E/?+X&(U>NX]R%r3.G4./teD\ue*h(!^"STb`H'
%_h0T_VdCch(geX\pJt!8/OMk.$Q$RiFRaMDimP`F!6gb^Rk,te$bfl!??TbDj_bJ<]+Bq6;6KaM`Mu-+&q0F&Pn1N[@aMIF&J;QV
%8[O1Vgq31=>\:t6.GuOeZ8[e[Apf%%4Y4KDPRba(X=;/7/3('H@)*5k;Lpip*3jW]f*>U]Ypd-VRio3tY<:$p1SKN5%V@V)bXg11
%>d5g)F],!Sb&^9694f(^8'RO%fZ)/5N!$JWZXOLp#$*N;9#>(C'EuseND!oY=Uu;Bh%OM?h9Yc.l[/C#4`CMs--+#WJ984F*<<pm
%R3('ZO"C<;GGg0kC$8NDi#0#IbV,Pen#HIma4:.+ec"*p=?W@:AYZ>QRKN<K0IDkU$MbtXPLnOKeUmt%%XuPl+^FJdO1C2:5sOJl
%RCsT10Oal79tH[%kF+c;DPU^2rFX(A8)<<;GN?7SoJ*Y1q:+e&Md]9E=LQMgqCXGJWUotNElY`$>>;LVl=<g;D^gQ44Z%;c.Y'tP
%lO-pW/+p*EH6ol,`"qf93D-._e3ml-7)"OGNoh_Q95^!8j2iL*cO4ZB7Q\C24]Ho^7QR(7P,1hqlUAHQ\3d8@_?'*V.,G!;1<EJ9
%X+2#/'EU`P;i>T#I*'bYI-;t@#qn)\+NE@`>kgN\gro@lakR7T'</5jF"J(TWlK)C3:S1IUe_A$,_^@/Y3OnN<RO-)!_C8QS86hK
%9D*7(6Yl.rC8i*t%AT^q5bJ7,YLV^P4tlB5U?EK]%9M`hQE-eK.WYi'^kusoS$&2qLg@e*H4nlG<_aUDaq@_=0pRKl&5RTB7DVnP
%Q87!7$dA4V@ORS3qAcr,T5,^k6p!7Yi[@tE`A30W'gZgiH3,a(WA-(W3:c2D*]RUjjGn5"Umjl'i91SG\`;*`]c@K-Gi7d@)<Hn!
%%BJ]s$?An^B&tSE'%a_4^"$"d43eIETs-C),h/TA@B4isY#n=gVO#b7pMgqrYRG8+[ON,[DNYGt=GdU'GKYGZC7r$SfZ=I+=9>\_
%eZd/Q:3QEnW9u"--k1):/`"$.=I&*M%GN7c+fW"-Le[#qC$t\@'>/[gR4NEn'<NGOL<kW[DAG`sGlin49X>X5$]AHeNjU%mi,Kh,
%&A9JgDX?bNO17ifHt&b7'SY)rAWOKV96"DaMG`f+1,Uu(!`JLFmdM.+L&LW%GL:jF:E)+-Gb]5k=RP+?.,k`6\VZK;j+[U.6'm)&
%[MLlf]a.oI\%\r"E[d]PWa%Y=/>d#4/]oFo2@)r(bD'*MPZ_`/4"W*;2=p.B*;@_b^gbH.!lu.H3j3EMW*EY#1%I1]]r:4M<>/H)
%^j>RjVCS=P,Ad<VMGcA3\9KOVin\_'*`nAQp&"!Bht"'t:YjS0EtmVM06AVG5:Drkjg@)H$ZO5rD;*0Jat%*UK:Z7kE?m)n/tZ,Z
%XRs8*B"Lm[P!5o.A2M_58a%`%4\K07mHUs_lK?/bX.\sqW7[g^k+*sWoZj41I:&Q2S4L=4WB$,f=-?BWVt)Afl.Eb-Y#Be<qU=:`
%GNrO)JGeUMY<#6U=/!<IY(%&"nniI(CR>C1[]n7N><Pt<.B6N>XV?838Vk*0UJP!dY)^L/9is.B;Q!u9%e[YErD9#khOLdcS>l*h
%:S0]2SmuqREUe0O/DB@hR]N5?f]q\CoI=QT8m+F8>@i`*:ef,+Y[$#G\eaZRPV^(t/jCs.J%`_Q/$3Y/Nq8qP%k`l-m-`^JkkRi*
%Z3%^<YQPCWpAJ1qO%&<0?!LZhS]fCMc'@C7hn96;GHH;*lcZajZpa"(7rqEH*]j9ffno.Z.g%+kW@]b5:n+\/[S>Vu]_*iofQc+t
%-2g/YKg=<EhHo`</I::UQb9m*ng1CqKh>8nhf@LVr>'&<>q/P494G<7e6-QZ;&X"HAN>r!9WZ#2\iNbf9U#o@A\b.R*:T]T@O`+&
%a\4!XZBrSZWH3R9q6A$2e-sZOc0c"+g$,I'.V-$l$u\J(o&NU9f$"&`QOM"9kdOmlR4n96jH"]SAR?6@\Dnr]lXg+A9B"eNrROV6
%p5-#+F4a^n9'mj3L7&$/Zj[nWJ:c1ea3qg3!,#u^-_^gA"ljk=;8[b-"/pchR/LRf!,<(6pnSV?0Wt/HLegJR[Y"Grp8ciLA&"3*
%>5#!'32irm^VBY'm8eA7bPQFa.k=lSFfX9#DuZ-XIYIYVmT8)m=YuA:B"o@%D2GRPgN@LR\RenW6=`ShomY`Ob4f]/YC?Kegj]40
%^.k;PSdK?qQ$Z-eBu(CE'Nu':3%jEgVhdeUbG(ZYS33Kt,YPr)bGJ_-]3ja;9u4&mc2+($HYIb8DAoh7jWFW7AEY);c57htDV4[O
%GMPb.p"Pm'EOmpkougXWhUeW/?aq^kdEFt#_O:R+aC9jQ>o@F7VSV,`4O7WpO2\Wd:`>Zmg!lFXdG@PU=-3DXqg@g:Y.hX)BdDXP
%OJ2aj9i3uY\TK9"frfY`XD_UH0(u;S[c2d`RnN-OleM`?mlYsZC[XT<s&?:[iB9-GJUKV"6YZR"Sb.Bt*"nl;Y;/,\$?@5b<NS*l
%f!j5Bf"]eRf#LL/0u=&PjF2/B?TF)tGHI&J)tc[dIHu6hm,*(gD'\k(I.E!Qj#NUVAO$'`0)Op+[bWg=o6H_e"r='n1KRGt;5Xn4
%6Bq8A5aB2LKs,;RQ9XLijFG5c*KN(Ig\UDLH!/j3Aa)?;=`N?l0P03RbCGTc:,4T=^6r]eW@&-s>!btIgpAWOM*ao?aN1JWE#5@`
%m72N=P9u/Ro;*1?=p$;3p!3!e)nQDN0H0K:5niW[h&Y^("*-MGOQ3kO&KUAfb'3RJd-feGh7q"AKfCtYTtCc90C?;t#M^([=X;)b
%*IqoSG:r=bm!/%E3/7KF1$*aIqdGmO=]WHF7*51,XD):7Y-\r$hFG)Z@bdT'd3U=9T]@?S]"A(g_kOeZ%rXCa>"61!cuu#rhrhtN
%2/RLMg0RZ[:M8d[_tsVNF\pNgP2(:4r!1ZgFspJ52&77KSg#(`X][PdOS*J;3a>NMkN^^DGZa)j'T.,o9t^A:\JoW61h#js^$5;/
%f$9<\:`D+"W0q%5d+>F]/IEqFRuJFjIJ&&)Ha!+n]:o6L!gL1.g_Fp6[*`le.AnJ7b8jA/Njn8agO/VW(1_\WiAZsObMr;FC&DIp
%.na#mIC&1Z`(@VdoZXe3iXMb@UI!1QB5(`[koQdnq;0L,9AG:0;^+!NCK,BtcbX:T##MHP@1](O56I.B!QoTdPb2[L1JN7oM9e$K
%&5E*"!gN`Yk5"^TWfgRSMjND,?5(AS^L9Br5D'PjKc"TF`XfbeUcbeR_VQ^)!rf2t=T&`0'J*2b>O9?&IoP0XPJhURh?R>(@<1gX
%ksh3"LKsg%:VMk5qiK"EPG_ei`"H;kogMk@Ktr5Q_$c<l2h&;4Ono3)Hd</qhuEWPmJYr/%POD;qe,9&`S[:BYg40=B+4,_#5/o:
%qi$)S`kXcJ@%T0XcaN4R]]1eBI&;bH2";Fcqc"E"[!_K>Y?u_Rk4u'ecX2+pb?st?HN2*N0E1rtIQ$J(?Tro8pAW;eZ/Q9YIeWJq
%Y@#1t0>HqF%sLV3St/RGh%YWY2hh'F(4+YndG;bJF]-WI^&IfI^Yn:9qM1mpmf)a[qY1";^].)DrJO@em^KfXqB*WCgF'Z!pO"8X
%GuhKImNn=**k;*lU:L!a2iF0\BO9QV(&n*brL:9okKi!KJ,SZsS%nB?V6;9BgV`@/06TS;s4Sg`S+F,8hnFR2c/IonJ!OgHjq#dF
%gjeqmqe'hsZ25JFnUKT63r&aGUYb+.,QD%p,C,Xs#\+_6kjU3H5Ddg$8X'O\UV6mjrSphia)W)r1#IsXME<bWG9Q*bZS\O@P_><6
%!'WU7AAd448<n=H^(WPl#']7M=\j%3f^GErQ%Mb0aD@G;+_B?(Ep"T:Md._-hentU*AX+-DMiXP*lIE%9@<)1\[C4!p-B1/@_.c*
%m%n:)P@8]MM0F6(Za>[8@Y8p=<;=;#&(:?#\e?.DGJYNkVEmD;a1Fo"gYGYO>.>NV]k2aQMKQ3l6QX;(N#Fq6o5@%!k4rm_@Jjd"
%WfWe+jb,cVoB'3Nh_%D:a+VXU44N!;AXo0cEh0rQ_NT.g\r.VN36@CZ@mgDMGaZJF/dedJK?l9<.EqS>TiK_V:6RsSo!.!,\LC+&
%FF+qY!A?Saf?&)G)7/rki\]n^F@U"j6J-/!]<?@G]hD/IAhS=ZS1"7Ro#)9#kj^&7+9\KU-;&V7.tj-m)5!FI2bb0N!.j)HKCi$:
%Le]dr0d1E?nhAj=7UE8lZ)mHN+BAW;0aJGY(,+Kb2VTHg3=KSEpdLd*C%g2KdP;te>7?3IR+9nGq0M:I-QINbB"_/EC&jC%7FhGj
%Bs?>fd8/k%-R:(o"O0O7\/WnE-[aON_g^\(+cWucJ_ocTBpH4M3?q*`&g*cGN2`!Ag8np)A?m'^fJe'9/96IsZ\u+!)5VMRba"U7
%T!qi5`bgD&#8)GIZ)d<2ArE=*0BSMDGo27F'51T.XP>BegdLjhN+bJo1tMqojCRD9/7h6(%/r.[ZK41ik3r5,LLH6ia8>!A<,#FU
%]$??5.h.kIfb4rc.t*jBs-*s.ctCY9>pXP:;_HgNp-O?*>BZA"^KE!+[fpXLabHNpjY@tZJGPoQ-%M4'.:o5a-sg#5cEX_XLQQ1u
%-gCpP&Pn:P/HPNtck<34ZUHk7Ci^TFh'e_K/-[_l"Vh4%D@dlMSBO#Ah$FsLUn'3%DBcA[VKC))lj"[A$t1E:OquGV0Gj<-jKm]8
%,Y>PpiBFbN\t->r:>(23*^UGfE.Z#'#M0umAa&82A$oi&A[-r?MU!I%Q4,h]T>pRs68bKTOdgZ=;$SSqEH9bqc13ku6u6CF]>LR!
%_@uR3funI/;Erq0o"nd23,S:*PEjh\:a/U_;>sH2i1k6bE.%I-N?"@j#qp?SM?obMgjgtZ=LO4u2;[sn)2G/[E[$foOEm1JKfOIf
%L_Q:,@T&GOlr*%>A(DsMfSU^r%W\FcduhbK+qCj$j<1F,.T]/"K`pjpD!]N.E?#sr;jJ9p'#&oH=D5f#$-SU]\-)p`028`_nA[H@
%DJ9l<1"qiqPd>S.e=u:1:)"!=?5g$gZ%b4aK(oF=F"X"NEsCUF"rHQ"qM5^oQ'U?@HRM8r>%E#7Wb";e:WkPg0GN;^KT+"97V!u<
%i>j/Q*Zc=VgRNFiloa:U#p#?MOP(E:=e63K#A)GXPtQhRjc2p(OYS"%MQuN<KQRR11>5)/=Lp1P]2Fqs<@bk=48_5K9s>p2kb(AT
%ZEsllQ^n45706$4PE#c-Lt42r#9AhIc@Z^-aMOda37<ur&uNC`(0OD+#*+':ngp7jTbsko(N)G]8mKRH+c.<N,.7\a@Wg[@Z\r/W
%(h:io&f\Y[K?VLIb)oU,-o#$F_N6;*L&M40l(K21kr`-)S8DRlbWK?>dL1?O/1lsd73TJUb8TD/l$UEe&os:n7;2c1N&l+PYaI(l
%(^_u(R0L<j&']aZBff"c4=p&8U)\^j%sV47;gfC`_Cp<IhYN^A6;e22;+(o([7Rsg%V8A1=aKPL=1Le_/hQ*;43B`em%bpQ)1aN?
%$+gY",-k.CMqEkA!>3M*SV_@&fdUM_(M9T[&]"dL#?VuigR2+MO3q*sgYlH>$F3F:b@A4BF73VeF^&<DLPZfSQ!p1(3frMCMc;-!
%=IS:.".KN#3eoIE6Ec[5$!2o]0rj`]0&js578\n<1=3*A(n.4\g&a,O9$`_+]i':p*EgZtn(]J$/OIsi`-)fn)DS=cb)%PTDj7Yr
%WSo=;0ROc<+R9YlVqr4f6Ano.>R)T"49j;^O_,1OM-BX)<kCI]Q<a+n>@J(e.QDc)b[?I24ZFkLZCIrhV.&LGr"KO$aJ1oh0L,U^
%n8UtS?YGh4T;fMa"(i4<oc]e7.O#hGkffmsYS&:D/]SUD:(s'sARCh9n9h=H/CZ6KC4[!3?=lh\dT"^>TeFFj.ZCAu6YqIEXg5KW
%>(V]*\qPhJV+!@9jrP,",SsbrUI`>nUne&uNKsuU$@:7j_HrBq8.5+`qTu=l'sfN]Q0^k@@T@'8;g%Tq1<0^XFg,ge@^)$$Lfq$o
%&?rjdP#=UTEc10$,h]&^F#bnnRHBN'g<>j&@^D4qBq<)g-W.[ld$M0H94a"n[^;!G0.)a]M'')b3SANge0`sC(g)lf`nr6/ILs5/
%QU05tL6&0cR`!UET5Ep_$;dC0Fuo!V?+H3I#0PsT1rV)XUJ<!BU,ntk5u!q!*O65B1[C2G,F_[l'^@"]Kh.e'FHm/&1\_s015'<g
%6DKaBMo;n:=pG'4d9QF`Cth"T^6@`:65QXC`0@Z@F:_al/8ODUSO`<\VX7%8"oF;g9^Oj\L2&Atk*$/batQ>n1a3?LR$kb=W8Bl7
%]sdc_iLb#H(I.pGhV9TASpmsAgTTJJH2d*@h9QUerNg-$^ARrq[nh#7)RpUuXT/sZ<01Y]6nSZI(dQ##%76aT/:m\j&LLUe;'*P9
%AR0o2.[oP#kD:K2L7=>q!+UYET0S=?OGW6&(=Z9DMGrJKdcebn@H!=HA]Qmq)mV1d`Lk7F7:.$K*(9!&cO-uk%]ji-(Ccs?;\^fr
%aRc&VbAi"-.K(q"n4E)W!0nt3A(J5l:91%E+:[2UFtHpB0H:CWOCa0rY_'RYZH3"V$/n,\5Z#hMe\.a+<9?0dO;n:k^BdaMGM-u2
%Le/H"3.ung&R;=[i)UtETaRfI?lkT8#n7!S&UVXX)/0Wa(g9=ZOU<H%;7e__YAbmuHRqXfS&%0S`L_eb`Z*,if,@VSb4Zb,\U'i`
%+ITCRY/mu<NZ5&=U(nEkJXqoGkKk"]!nCdVc3?OB!/O`]!(-Hq+0lbbPUI,"lEog#^]H<R!+(P\!e)9S1WQBSC%nolGNQ\O#dg>g
%6.K3\C2(b[>qb#iedQ@fjt9*h/m5\4`i(X]9_&b1'_165En4amNmADV8bnW"\9J.`]eMC3:ZMYS0JlS'TO,KNTtNBYk,6'W"q[!m
%=?^+`B'"7l`b$VOck33ZH5N;rXDE)[C(fo6Af[cA$kO&o)U4P?%ip<aV+&Ho<jl]r_DaqBNt<(?nX'<`L_;PL"\9">6E64ZcAm3n
%*fC*kGS1$!:dGUD@S;RE(F9&f(1,_]q+4O'FNq/a+8N<<9Vb9>6Pn0"T1&SgCR\teF+>s%nf1U^bL0NYP9*SH;#>oi<agS!+kp>1
%><!=?BTZ"=:JENZ7=Y678=^@i>'RC?f467,e&_TT4a*\.Go.bI9OKEQ%VjWEG.0<Olj&Ke_ZUT0`/D>[nl!&SPm!FA$P`u[1k=uO
%)8]HdSZ$OfctUjY/M[(3g`><e#bAg9eNAI(B1I!-23J9-c,?/EFo\)OF7[#$Z3&CEctop)oE7q$Y^";"RrqRU6k<k0=AG7DR7r2A
%7#aXF'?NP`/;m['/SL+faLhb5,2=`Mj'eg@e;N@kBZVZI?Qj&=$OcP<I+FOL=dXd,C>";;O9fO-#1J=2Wp!#7/L!qGfmW"cJ^5im
%]=%q0(LOOEO>F-0O]mu'Am,,O5pf[KaXMm)R_+qCJGX"&VT0GW4s2G&(c#=4(^u66`DY2!Y"S:>a9!ZdRA(%Gd3&j(Beg2W-nnk]
%?aO4DKP-[0#CFm_^*-bh+:cBtKN32T$s"]j&nXS5$8#64AB2QUSOr=(8bLN"W^@nOLf#do).4tr7sT^Mij.jdSd=t_\"Z<XLI)Ra
%<m7].JH'>AfVBQlp'g=+QN@T91?GbBpuH?K#Um`t740Lu`U4@[ac%TUO_X8EYgPO?<IkfqjVYR[`7f?u8(=n\n"b4Q`WSJ\pFMs`
%_,Ea[11PL(;hH!.EcNS*B)n-IU$2k!aU/9X[tna\=+\5u?GQYc_.&?hJYM'3fG6oHb9IEriFCYYaO,;M]NH:`k6^0;$h+\bEPcJP
%Dm'/4ltBDQm6Y`,iF-WHY_E+mNXh:/U5gP.GRP9<@\h^Y'.,0#'>X^N-(B+Q0a)V:IZZV@=eAE.&OW#P\'V5YV]q.rbSM1,U*'[p
%T+0<Vd-D#(MIZkI'_,ZE0cI'9.KJ$IMH-*4-qX[(3,F+qD+gWM;o^b9'rqjIA#>?ZUWe.:(*0*0Jf=gZf9SZR6Z`Oeq:[kjWZtu*
%qH^_"lj2k<A.OC_Js^Rtje:lY*(dFhh9=`@&]g7TAa@uF@E"IsB6?hN]sJY0/PIL>Jf0$TZ)AN?'o?_$HPq/s>0%UfK!c!6+:FsS
%.:h"3og7>+MZ0HgkS7DuH5C*WAEAAsd&a,9"Jjb_kDOa)&HOQFJ--E6$M7F-mQdNJYj@U=BA019*J)-1onUL*!5_WLKD^Iu+mQB*
%"0.MH8!n:iI`Sf'LD[[l'O<M=RNcQIGX.a;:h%SD?UeI;<M'q,&\-=)'Du_m6!-Q,+uF=:FW(tjZsE&6lpG,,%W%LHZ(Mm?DAT.p
%+W#WH;N$MdF<pqIaI(n3.H$>nJGOif'[Q8j/7;j^1SB0%Ke-)'^4X#C9BQ@)?jf$C*9`35"sl&[6+Ht&9c1Z(V__t[%+>;2K1A-c
%64r-b+]>2ZU+2s.^2tpc7Ar2F$W#ClV28l#T&*+Koja+OYl59K:^M'c_0L8?1>Gri!e:8<<&bk&Tct0^5/:raNQG;`X=2h-Qp)?>
%`7P2'N9j_)Lsf5*"8@q[,BW:8cnST5(^&9!?5J7Io`K`$!_bot<6sYcJ<%KWA.CU#]MU$c0Ll>B(DD_M"_B(.>a(H^G6U4kP?eNL
%Xb%4=LdfSm3?>d1Wj<1k6Z<3^"'?!#!.YW>)%FJ7pRAJj[?H4U/X?]R=f>hLW&cL=6Dd.1U"gahALN/Y+NC'f.)VuS[`l.\;c0>V
%Bu8pB8g"JES-:"D4D"djKej3S'd-DNk<`r_;r398'+`r+=r*iNMUFr62Mr1<<erh8kBH5@PT'CFUru(>Om#E/Jq7=/fLrb?^*Z#,
%0ER@CqkC][IXgc5BpesG<]DJRdRjf<(k<_UXQ%;:<S,#r7_hghLd8((QJ%o#VA,aU=Wp5#U*<&6Gu1V?Y;D2SRgm#Y$%*^4'Dqu6
%]6_Q^5CiKS%04$Kn*k;#](u:J,hP9F.#1u^/cW,Tf:pcSj9/rZ#q6&Q=0[s)Mm*AieE1qRm>tHJ8rt3`5dgYs'=fSlOmGuU0rPEp
%LVH"Tk-0paS[n)WVJ0=?csb"GjeZ(TM.44^K.Y_F[3&I[rUeS8&<-5^G?_pTdia;W)3crdqAuo0BH:G9AoABi1.r2>bS*oK.DTNT
%&4H[3X%_a#U=r<!g;&[fe.]'-NP0oB,IF?eXf+dr0oB^TN\bo%6qUA`_gHL3>pj<YZ3C=kJY,VJPQW)e``&hck8>3%"H=n[AP>T$
%Ph.a#ZUkNZ*PHQ*XIf"$1l<.akV7ePLCZig0pADP&X"@Kn?1`r$,=^R^Hk_lWLGa$UIGn#Oc,gi'm0>GUX>li.'99<'5pX7a"Fq*
%I3iKU3/n4O)>)q90iA@pOOVOSTe1pnOEhaP?G_#UAQkcS1Em5q5!h&l#(#6>*0cn8*O+1l,"X\WSu4;1eGY@Ii]J^NBGG)W"sd4O
%rAp<GiOgqlo[?*9KcO%X&En8D)o7p[WWV'#;Ki[t9nE%;Z/KBM\H+)j$qpZ3eEc#oK?nZAeK@TqMq5aL?md:>&LS0^]EsZ=\M,Xq
%&GC)&btrm%dF=o)Lin7F%gH"+KoS+7QAP;cU1:K$)pp;GV\ab*6ShZ/"'#AjaG;9aK<!8%Br?VD4Lh,?@K>qt'F>8YN`=<d@*qCG
%?GA*rgd")X#_4U=QJpc!(DkIHP:UC_][FFq][VU+^b?YY,0UB>5UR#3Gd<ck"O)?P>DS,ggG#*%L1->90jEERFCX)UVeU<0L'Y3n
%/2UKa_BT/J<g\6*/uoSte/4SbMk^I#!u,8Kb)">)nO1Ee@:O!'*^^,V6VaM14S,6fIISH9kh%mm%n@(O6rXQj*sNPldNVo.p(s#m
%dQj%iD^Gm-Fi#dSg?2RM4dbY#$%!OLa2-u"N\k\id&o0O68mn(Zr?0"Qo`/\_&/a$1"D@!E4j"c-T6])S>-+*!=i#2c/?R&?0[?e
%;H)ZW1nu[bTM!;3!pYR[M\CZh^n-&_aRC#Bn&C4T;$1:k]W9*gSGmc$,FXIt@0GUQW`RH_HGiXn`aoG!b_>_aPoLZ:[4!-'-(7'D
%O#Fc<\<7W'/JTZ_WN-h]%M:%de3cdlg_5mW5Y4O5*4.J=E"XlE#b8[h8-`^X9fB&73#6HL<i<r$7D(H1W5/gOg$.R5"+_O2*,_q+
%)Bsqm@rS/sk"H1'aJoRSrtG6\!DOJcE`gR_$mGadL-c`N$t,anrWa9+%0o-6isMPQ[V*RXU!fM5+CsnS=`KBVW44Y#9FrZjquBe$
%r`85-5aR=fHpm^50PBm]_FJW73%'LjTiHVue-:WBL&m>Nps@A!@5-D=!JSK[B?3a4/g,(kX@$Nu.khU<U4>PRe3*mC-fkR(XND,E
%ceSV8O^U;9Oh*dd&g:2[nmJ^',?ot(J>#nm`MF%D#Np;e+p3A@n5EeNcsY4p&1=9+"p[G;((VX#a[#STig\o1$j[?1r'Va&]J8@m
%>]'$Mr4lDY6=r5mMpR24#iV#*)FT=:'d\KQ^hKtW13s'E6(h^u;liRq!b#\_3iEb0H%FocYbW7h$0ROKHO,=NY+jf(\;KAM<[YRl
%#h#Ac2!?I7=0tfX<lrZ10/QHL7PI2?3K;,];+&liKKWaXcOIN#SJSpM+VGAj)W87fUCcSgDp4la?e1]@C<]iQAoM!U0Hnb4k^JO-
%B)HdsKVuZtk*a#;n5---S6mB2Ti<u1W,B,F&IJ[jOJZ66Y-0Q75)Lm//HhBd1=r1.@?YGL"-mCr((dDaUSgaX3>t/Viqoal<e-YR
%Q1g"QO@9UtW%q6s.Td`'^PT0[`2*1=Weh#G#TE=J86VedP2M&3VFY\PVCJ'2WKQ4b:%\rP8A3#R5t?)ce.YiAL5Z7Q9A_gId:3?n
%#acak$.8h[=sg"6^_3lST1\PVL/Nh(TYH4P+E]W!$.*sj<Y<U"=i#JnM[K@^cii$q,lqi`2FumIBVU<+db4'sZ[tiA;ilNY@gWcp
%2d"-0,D!Q]#b6VW,:!C!#\QqC5D0G#=5"*oOH`.e8:]6(K]?Ue&$BB)%K$BaL'._<657l2,\n0KJIQTuBGF)O!C:i1Cfna]<tWO_
%9-:/W?-q4Kn8BT\ZXepq>3tZr)h]tmHKg#R)t8+!J_*FK]HBQ_$#>r`1s*78b)?^_J1'D),`9ER9IKrm&3'9)+`gqWJ-aL&Z\B4u
%r(Y,D-G<A_i--"FqFGl:)1d$*=]O_1?kHr%A\QBX/0O=j32=<[d%UPo,GIJs/>TSF8)Ke1Qq";Mk\+FBiX*[4E$]08Lc:Ou)@CrA
%KFYU.R_YRWV=&^n<DR_*B+f_XF$j@4`o=VN\5_VlbC]m\^`aLoO[[??J<JhjNG\2q!Pr^(mD'fse*[naNZ.O7VIFG-W`TiQqZo-R
%<=-'E)K_BUHr@/'2`VQm>HQ.AS#8Z?$*OI3Ff:-AD+$Xe?I>>M*U[$+EB#m2)mgS%W@*92L+>UbcnL(`&0)P@Qpb7G#f6_(Yi$+L
%l!U]m)&0hDqqm*P7*PE[`V0S"^qJ7JL%$,piQF!C3aC(F#PcMc/q\mW7q;^P3U4acF0']rI]#S));KR8l):UG6;jd"3@N%MRkgbu
%=jam(ee.nPUSjtHbr!ZH,ln.RD@Wo&$91B!C:r24!M>I*7f!ndHTfeQ5H,1080;f[<A`,H;ap1HN*Z]5,nFu^>R:TM*/^'?-3dJL
%nLaHG1c,N=U&%kkFbkbjK(DkLnd$Lq*u>n3.tJA%]`eS1iXBfR0id*[in7a;H3d>ld-,Xa!%h#f:LEjtZ5*@]ML;b$Z\Go8p`Kih
%6c-VMpC(5`RFYMMltArT33S[3-,?!2H%>O#JWtaF<?>Ma2Xq4@(5R,8M;fC`@.:JMiIR<2_o5=KOZH=f+e%#DGj@L[)M77[BTZ#G
%pe)he[_se=;hW?<<ej?_JcaGUJ;7k"J?p[H/W%n.*>FrOge.sTaP`NZ-Nf8nMsNgWTn]QgeY#^^8VYr[h@V0pj<<1Mld@rY\tL"\
%C"O;-#ln.8UGjM0/3k]p`UH@$(!I2LXM%Hi0=a=d%p"i#&Jd2I<!!mt;&]ol75b]fB9W`3FLK\,.n0RNkfZN(D.Jk=hS,!S]HN;T
%`q>aAZrk+;<ZI`;R4rhuJKDcG#Qh@U;40"p>I$nsqIoh<%M5uQQNn7$"q0@$G\)Y#i,9\%;l+\W#`:+6qB1;#ea\b-$eWF-Ato+N
%_:uf]d%]hN1'4pM"61'Ad.4CP$)R/b=?0J>#apQI)\A`WP7GJQ1N''XjWL"\Fq@p(YQ`r.@W%bbEE)EL(808[=QpLW>"6Ym4rG4Z
%$d]D2WeZ`R.g@\80JErgL!^A70^=Z%M87sfGU5\XMa%Bi`'?JVOr>4(,3+"S9fE_8Kc/n&_N6Xe1(inCCSKR!176Q]M_h^X%uOg>
%U-pTiade4s"_*-+>;/DV\Q*^-_h")9K:^0N3eVlLkl#`1qZ;7SK!NLa[Y5a0h8n^Y-$)DS4]#QLK<]E0@CWn0QKDkIHKNHY6W4F+
%pX4dfZP1[nYpF&&f?A+-OLR'^pdY5sU-LF5qJI-i1O>Uf9IlO(81q/>BT?Dg26K(Z_Z@QiGcAfL'sqq+oh&i/7?&rECl1r>1'A!s
%@f!DW*?]J0FI>D`ge4m#U7TFG-:YTJ[mnG9kEM\TkBO<Za!::m7VD:b.=BQ"@Ju"D,#hh-k5fQH6BP#'YX8QA^k%9N3-s'$?RAMm
%I]eFk_jgf^7jA+?\]'Dh!2:fM!P<!k-,]RgF_3X.LWZBs;.@2r<.MHn09%ZL`l)8qFBaVsTN`5u9'Sa!*UJ7m:Xsb\.jNp!A8u-6
%'k%2!A<Du.1i%sS>&p&^lh25+j_%&;HY'tm/,_SG%c'p7!=su?++XGeo\D:Aa%6Y.$\8>B"+Q)$lA_"IAW:(b==Ijl+c:]``-Vru
%#:CSu$P9`S/URfJ6OX`f%oA]*SA6W5@[4^\&eUjLQ\(IL>&r3qJOW$q-A4M"cpSpFJ7]L4<6=M=R#8Z]eKBGMMe!+,W>_Pc?6amY
%ZO6X:$&-)Ik2E4Y,'Yk4TjajM^((X&p=RX:*sS<g?IWqS@*o*%ptDZ!>Pe0CO;S<,j:Ru.ZnU[XK%UXUm;,7n"(E%6O?4)nA:VUk
%aS<hmYuK)cJlIeaiTV-OC->u*liuu?Salu!iBg(5:^7_PW_WU-\<i=3@oI8*`LLtk'Z-b6fmosR5\Yj\N/V24bEO5o/qEY:ehAt9
%R3;fQ"Q2b@"M[0rS_]r(C'Bn@^c[46%]7?'@:F>R-H6Za#,YDHGujET>5Vi"(srpdjfAQkKkHA-,[CX6LYOL.+Mri')(l`UHkHpc
%L,[[lL_+cXHl_KK3'ko]>0JY#2IQEVpkq0JAn;+Ul3,4uWXR7q@sSg!>%A!Jf/1F5hL:NY:'Rm8?3*un9r^t4d=W!p9=[2(@S?uu
%6')ue1^&_B<WSK0/IO1(Vaq3aU%CYC5+jsH5ZI:uENfYk_c@mp#S;P!Rdegh+qtYT"#1ihb-ig5V][bSQW[,br_@3b(^hN]c.tB/
%ha"O%(iUU-XZV7!^m4&XiDbmnN)$]-X(:Ii=EI"@JTFRT7SO<<!_=:g?CH%n?((ctWSFoqPA,22iru04T$^^!R9NheWHhI017Dp$
%@g32m+]<K65%.A+Zp"Xn)9+*o'6s:?A"t0^&/P[5GGoO$=d2l^QjQ6b/Jo!cSXhg5Ik%ZeZQ)*P(OChB8ODq"a]`A&UW&!X3jY+W
%nM"=[R/h(,C?N^E!&I!c-7[M_Wq2h@6]X&GR458p#D?^l!;<3U=i5n-S#k70p%Qa2Mr>g"_)EO/Yt8ok#h&gs!!\<i!U*SU0dH&+
%'0g)jZ+!-^3,$<!%5K!GeA,_1`mW'U,&3gX!`M@BWjULK_XADt,ZKag;E._(i+SV)QJ7%2F(@2'Kq1(2@FZ8MDoC]o,+J\MZT8uO
%U>aWN#LNBifWLe`+&T9UGej6me<&(PY-/CfGC^qE?9+^VpCCCnH9$t.bTbX.AXQISaKa:S#6q@S&</h;BI"3Q(dWA"."Bdo/oq-V
%#:_<"?>^PR3YBjH9/c)'L>Q^H^2Y8(=k-h\q<H7[2FRKbo*g7tShs5n^AVg&CPY/[GdnIU<3M%8=NGB(4jm+jW=L.Hmshg92qt:Z
%o]mU5q<cYoYJ*$2rr0+Y]`&SF2Z;I$f0=_&2r24/p\3S&5CInYm5OTtp!`*[c[W4sa8_0,2bH0FB,2P/f#_U&U_`r&D&m=H#0)ZW
%h*$C-d5O7)NI[8PHc[:<5ZGBIUFbR679Ts-HSt2D'D!g^.#)L`c0B0*NWhdF82N[`V:0er#B^52RY\MIPr`Y3US4Q6+P_sM,`*L@
%rA(UGm-gS=,c"GI;k1G?iBB`b/H"=K:H0E?r$@AT[4.1FR[O/YTn)cDZ'Z.Di3a_O+j/Lgj+\J,\6$A+E/f->J%7^\7NEJGm-Aej
%>6rXtSAsrA<77-]%E-l'+X@d3Gq@QY9dsZ>Uo$&&l(PZg7/C*M(Zq[c!'Crf""'CDo#t_ce]c$67\!Kgl3>V4'kdH?Ag7!t0cn9I
%Yf[(2(jQl*MaN(X<&1[R=l%.i(L#F(d@d;_S:F3aW9E4X^."D&G7nKDBo[09jG&>27Kas=eJEuL3P#!,bVt1jHL"^$"dMp2U:r3n
%C#0F'K`GKt^I"<!9Ifb`_E`O"?'3E,7,dtD>lj:iLCB'!^^LC-bX`aajO[WL%]IAmB0g#@Xj*MP&;%;,HUjW_#p"i]6-b//3\o2@
%_J>h:,=iS%XDhY4K$HAsj;I-D_/#7*`p,//ilqdQbtK!0%73Ps7a'D=4oq]'Qkd<Ma:P&[f/'48d+ls;9+E`X.9[)b]:]\!E]q<o
%L*0(D]tW9NefYdB1es@<J^Rebhh6=V,Jusnh8kT%3`t2$Y$O`tdPIqV:+/@F2XO?T0m24/]7`8)0muf^Ceagm$fi=j#);=cJ0C.>
%H);lCCVj^A;7Se?2$QK[)AXp".U(Of2U@gb^d'jPN]!5f`>9]t:nt`tMdD;5=RbEq,2?Cu=l'RTH*(XgBb@ri[M^;(9X!NjZ5#@i
%lpWDoN)=A9fgq%EBJ?1o2N28"$rPu'=uGoIp"8K+ih`mN:m[C$Lq\9SKS1nA(T3F;b5rJGo50j:L6`+Y*_T&iCBWqc60FW;TigM'
%C=K3*IoJfEop7MY",V9l5G50BOMaK?O4Ck%@Se8;S7Y$]>ZB.!:cs<n>U'=]['qWB'D87kTaC![#FqM?8Q3$2n=i>R[Za.Ug8/2!
%;>E7cDP#@?b.(1,%Obc26)tTJ*tTIc.#%f"M:K\WP@,;'/;r]@Gd`m_R^@f]Z5bI>0ktheA-erA7\L-q&@'UD@P5s%bVUMNSJAn%
%8-3&&!\pW;(<8_S^'lV5=THTZq/LCb2=FAV?,L@=;Isf8jMQMY6cL[sM\]GEc/-jDG2V8D[kkG'9juJXn3N$jet^.N6B*P+f[8Ws
%8`^K57(^f[$7WXBi--DuKMffCC,$p7[m<9.ek"rV.2GEq&p`PhT\?=`!,6G`'YDLA==-XH<ea#fJk+rU)JTNbW_*OQF0ua*#T8qh
%889QW/;NFWoZb+R?&)O2'FU95c.QQK7JKs"M_gPI7a6'ABR61`0#acOB)kmCelcpEF<V-bcP*1J/KRY?A$:Q",_jk:C:=4&T\b]h
%::=&7GZH0m4,L)X]LK%$KfGU%<lP3dKed!RLodL7e.4fh1";MOn^'V8&5lH,-/ak"*d/6S+A2i'_T5-d'\G=D-[F\NBV:8WH^,!A
%O-Y)O1:peW2FJ;.3+GF>*RgH_XkA7*.N5c_OFT_*gr#eFW`#Lg'0V\dEH3eu7S'T`%qo#6K^*Em0k4+`L6*H5#[f+^[<6`3TU5_h
%$oTRRW9k3FL%R<-5lp$a(KVdF1*BPWc7fY2A]mn"CC6NcBR?#pM#bM!ANMfC'L>^5A%`@p"f>6,KhY6"LMIZc/lZGXMi8,+E%#1K
%,#Vp;&rRnD"'B#/3=AS?6JY.$i*=KRLnbiqKp'naC<uID_R.dbPs6F`7)$h'c$a:d(`<us%[d,#Ttp(>bRf%;-;K/][g=H1b',"r
%0ELo;:(sWiM&]u%=GV<*(Z*P&]gM0/.+:F-M=2Zq3,hiUQ5F!QN<>B<oKqR&j6i6Bf:CRm=Xi(pdR]tQI7K8C<G%dY2/u*u*AA?V
%l&_(7(8ruOAQ"<r-'Ta.JJR+c>d%#<2[m]dN.N]db%+qlnG)'I?)Z8*&4uq0L$==`6`DE0Ou_Mj/6N-W83@BB<2@-bN-?ke7qat(
%Y,qL.h.&hR=&+g/4ts5G`J".#cXLHS)^fXm!(,%pM=<FY'tc9L1X@6I#d;NR+%.r:E+^SY:<Q[_^^JF:/u[I]8/)oQQs;b1.Glak
%!#tD:LA_1t7>/,6hbHQ+P;.PDaPK]SelA4S7-(dJQ6gI\gn=X+5fq:OPo5/o)@tB"B]W%SYUc"PCGa,R=CR);R4uhbSPL.Pb/tp4
%J5NAS,Rj`P,+@k`:U$9oA87]6jcsEV/l^naZfC9GK%^Ak%bphkd>As[p>e)sPt3oE>&".ta81+Mm/eM9M?0[7BRp,%L-^D"IU4of
%>D]c-oK(hlBN?Eb9\KO0ZBQ,JF@rSaYppm_q>`>pS>(184hsiXQ2dj%E??:F"E$1Y"rSa>[\q*1"tR@kRm'_CVV_d(.]dV(L)?=4
%iA?mT<@3]",.N?lUud/*X%gkHR#P($]rH8b$QVmC\OYbqH.9b;7-E"+'!6Bt[_#$1+J1N1PZCAhO?l#<=[[*l[NN*s9!)d"k/cHo
%+RN<H'hBaQ8OqpP=:,3Q+hHFPQ53<WBt(s>(k_\`Bf"!BAHZ??qd\DGj!+@51pHSQicWW-3ahV8X4hB%)+<S&AR\T;\UnF**&1U)
%fWLs-=A`0[,NtM-2XtJ&&U(.O)h[h<(iq@$)b1b6R*-WeTu58k)1[YqP&s<!`%I[A:5gS&cf"Ji!,[7AjoFFYdON7M@*jr=)(&:>
%@Abn]"&.!%KqfIsC#SX$!.^B?V8?=u>+R%0@3KlA$"-f<!jjjF;?NI0"[3"&7J<%rG]c/f5fOLA7Q7816;uN=[_9U*'7(->K9nD0
%;57lnYVp9=#&ff?/N^rR=S8XEcH;Y'8%(CAJq_!VI$o!L*GDFjUd:Jl^?NdNh)]4Xh&n;@kc:NR"qCg[k6*%F8p/ir/AVQ"qFXFE
%.[UGr]m\7#4^iLZ#butcPEBVE68ULcJV>WdYD5A&/UiYh#[,%K#tuHQe^o\3BP)iUi.hnV'&s>*0ADbSHVoJ?CN65/H&S&-aiJJJ
%99X\*On+2%F4-4/a9=-u##.<JKd<kH@^o-3P<uRVG2fthnJP!!\;C[#<pF*r/Kuc\Z5.%O_*aBD.ikFfq;C`t3d@gETLfK8L8'o'
%9k4Q(['VDi_Uqu.)!S3mNc?[.\pi3GQ52_nIdTZ@ke(KH61h20Ys9n6MO?_C(eSq2gsr#b1II/KSE?W:PJUAL",Je.N96r/55\5t
%W7]<<#-<JJcROlM.nI^+711=r>q,8SZSZ?5&tfu*T>U)j@EJ]b7.pRZ!(0e=7PjXU):H[O3.Q-jSJ+t5?=`cC('1Hg&AB$)QI3S?
%%mW+B)i'Ncd=\?0PV]G/$0!eHq$DG3,m(!#>'5VO%Gco:<oL$37i<DH"`RR<;u$t<%e<jA$u2_Km0TA]Wdpbl<n7Km0-)nG"`'!a
%n6ZukMO4L39/e5GN`t0j.n(#g/EMeRY6)QiIpg5[7HqHOBgd[f.tnao>-OI=10=GaWT>tO.;,QdTnFO8-:0_WfeWhM0u'/3`JD?-
%lVB=i.]P!gUoIJ"mK=U]hiBH/W+D'9c@g8#aMkA"kgnhZ\<?RXZ_FH5-c$I`3D3X@A,?[(TP20R0%khcST^j]b\f"i$Rl,N%$N&A
%3k85^B0A3_!mLagU+!aD++m^m('-r(^nl5nZ=R]`e/GJ@'Wo1q@&?WYbF5'm;`R\W@Y`Y+I0?hY/*b@\G>oeZM;_9PP43/=HH<N5
%-OT"H<0KW\J4X6Jk]HEb8RQkQf0j^=_pX5ZcH>6^+i<IOr.Sdl;Jf7G=]7ZYlk8]36FKS?@jg26id)#9ZcD?r7(bc0@E,XH7`@rs
%NgY)u(N=_iS8n`e]ke6R=,+9/Lj/'#W:W@K!%%&8i6m-uG(@,["gV<l=-EnC,@nuV1a05Z<1M3`TND]P1RfA,((5j+o86NUU%0t=
%[%:cH_4Z9$4-"CfQ!*4-Z^cA*#?'.#O4CCDTJ\'aeLcUo+BoH.^Ll]V==h0*K.M'roqae@^S!9ja*Ui@_;(4+`->3->8U43N\D7i
%!U@.obd1<X*26KTFBnJ7)AT>\daDrqU+Cqs=`-.f$N,R2>9%#D''kKM=u$nha<1fi2@M'E/MTdG>Y9F0[D_5(8d!*Mq^?*;ckS^%
%5X7n5-jN\APH5*d/f$=0#U#"sSRo,^Um%(*Op\G%3<;m7'M_J8\^h1ZV3>WABl1&:nBbsV<fR9P5I4r6U!$<j90f/n0bh#q?A0d4
%,siQk-K#7?7eJq..l*LS1FQ8P,-`YP`b/M_HK)`_/WBRre3fp0;%\3/l9-qY&dfuT9R$ar!JHB)8Bg[-h$R:@J#Us08=GIt97u@6
%lYM<tMJ:\oE0S"=-7K.lU+G9^1rY99dV\CVX3UtRP@]Z#.E%8Qp:qH0[!#K*\O:)jKbtKZ^rWeAL-g'"(bGD7n-pFXfd/4p*84UV
%+@SPh$n24Ekm,DG`;=0Y&j89j7Th6JQT@V]?Y7(Tc,_^H8rVTM;K#_kD?i-uI:q$1h5\Db!"n1XKX8c6=TTLb9IP/mA;jGYd2trP
%PB(n_Y[2T&fn:lM\+38sh6K/XkAj9H,?W'X&JO)INg_j(V%$<L_Mrh6.(DUi)h$K!GJW8tK,3L=g1rpW?]bcc7S@TrD[pS&rYbBG
%>lb'-C(X0JK'HBk9,FZ(ZLE2FkqY@f6"\]uFF9L5dqR3%(WhQm<X5Y=eccBk1gA\J\l330>[c+plt%K[:ke>1&Y)g:@o+D1bH?0*
%=*89'=i35oU8hthWuDcA>t>0;dh(Rq:)q)rTUu=TrlkM5i6EU3=]?-.U:htS'GZC[V+f'iMW6)5YPXdJ9Mu'k<D&,rX)2)lMUUm[
%_Q'7g+AWd5-j@ReWJRgm/+pjDCt4(Pjhr=3o+5)jE+Ar\VOdJ3`/udIOTX1W63T*O>2fhEdiHo('$';K!oJ)r8r4(\LA7u&*j2a-
%fP63%C/KfL<]f)8a)e<0iO(J<E]CY"/4tSL_\$p>C;.m.i>=])Z;NV$2)*t'>a>hk@?dY"<Xjhi29iiM%HinY1t&+33/k3Vp-bkt
%%]k8]BT&&4dD@h7`UGQci,L1_:>6AWBc$HZ&`#EKg_%5HN.e#0`2\O_[7J-;MM2`0@cj<5$>7R6!np;HE5pI(DH/0Vi#3!a>,?2f
%1nCPT'aeSCqQq^cT(jK_f*[3VreQ8!QA*0r?]>0,TbIi(a[-2sejA=D-q/(MZ;<OG2mAlGW=ob2aoL]qR;c9/_4ngr%f(90/4V-%
%N]6TmWV7^U&M8ZtK3BF'VuX#aD$@f@98<tfW"0C(K8$j/H16*d0PRQtc;Mk0XGVYV8U]R*3&jN(!]@-g_(e/*d(Un;N]EPi,#BbA
%UXk_GI-E,5UXW<E8ma*$o@7eDGGW,Q!mBQ)(<b.aHoE#be?q+mf>B<Ch+E<D/U_>PD>'g%GLB)kRf?tg^\L2Vk'H^._%Ce*nu).;
%QB7S@.h:E>(=g7/R9>MM*h;skoLphIc2q:U_O'B#dEK).eGA)SP^p8t=s'9"]^T6_AUSN,d6O.9I;ftP)Hc+5Y7IdSWO)LWed&+G
%5ge=i+Ikm.*/er`"i@6.%aMNbiI&Zao1r#1E%&^7dTb3+B>%]=^+T)p=W!%b'.=%$dA!iD=VM,Hn>aINXZe]`\9q<uSF:'"f(,Ot
%32#(G4\j<Ne36+&RWi*\S:P3cKNikD7WT&)FA%%$3.=DZbPL.WM/k5UqVZ$qD6mCfSE54%@!F14%Um?)>dZ[RjHPsO?^(dCP_1Nn
%=rs1F+J\k:4?,(-A81>24?,_1$ImVki/TI&!Cn^6_#`Q#AD"1O35ge/7B$gc=:$%I8Z<5\(<qhGe-C2F=',$r4uaNPbU$EC#D\q-
%E*9.Nc4Z9r9i\;+Y+`,<[&OZ)=ZSKs=s)P+[,SGB&'c@cHoYAEL6SJ%[$CrPS/YT&GYoM%"UbB)pQb=-Q6t"E#M0a[<qX;:RIIi=
%#B)OOotg=#"J>Sfi7^?J\5j]a%A?`'f:d?sce=?-k/gkGdl=MQK6)nnDJFH93WpHRiECMGf'O_S0?SpZ==Qb)o&*i46Fp2=*#L2I
%SsJKS!NRX\?HRm&Mc1-c.1_G[11)H@-kGa69UC/X%h<-:AK,B0E7U0%K&M-'E,8f13,[io#lkCr\Y4?07L^>?eH^k@8`[)+#QOhW
%Hb8E"N[n?+h%BJoG]C[GKLo6oB8rKVb4_BQAQrTrk?)``L&qEB$-+0]"+l[n^]*:tHY6AjGCq;7KXr,&YUreCeQ%l;R610+>*.+D
%C\Zg9"*?F"0]@Wt5qXZ),k8\W3_[b]%Nh2N+0h"Z5.F.(Rde.kT6C"fFOF:W>OfN93$h7sM@WJW\NueD#p1-o5QD3-+.T`sDG2#E
%i+*^:Wk%,A)_qesEP_qcY`5BZcgehkR'778iIg0SZ<![>#DZD09e/Ig016M[!efU4@]X)M&<;B\5acWr#T)8j4#VV./.Dj&g^^)Z
%ODC]!J5("\KLfr]J8dl?O25W4KG+\Aq_S>,j-Z-dh>r93Y#B;4.mQ)Q78k6TJ8g.VWRIItJFH6-dg7'X%r/%dkhtsb;57.-_%ATM
%0f<cd(?Y](G7M-RU82BO13g*VnkanRj!_FkF'NZ:0GbZZ3#F9\BqXChep)D+i"6Popl>agcBs`nkc>=`WA!W>_3%N%\S]:f2ajNn
%TejRgkL:/h?h(p7G"b6"M?hE:"Mq.2j+0SakX/?4E-<o@5F(5Z6R$VJ*?KGP2k=`'i35".S5@VKBu;@+kQD,3=CVpj2"4<To+_^^
%bAVm;E[ScuDdt`A^kme=r:UKr9o(FuWKSTaF3nE4A(Lk(g3<e[(5Ya!:q-?:?`QQd`\W9U\3b\gHQ\-p,QouX`p\E"2L[l;"9i]:
%(0`"HZGNN3!!SB44DE646\3/G+=!=AJJ0dNN_dUqLZO9`3JRZK\(_#g:9%69O]3TF_es3JDBOKdr?I9TM?JsdL/L8e&ic@u*%R<:
%8Dl>(6_8hD+jbt(3=n0\;h7PDTthhUV?)7;atV<GJ`D13EET!N$(Hf]d0^'&(I^I!K*#[a&#'+?$CiHI&I<ACJ[:iD=C(kSK>\.f
%abg5H%Nh>P<$ZG&QqZdr^ki1c&EsN):.(I]&9At5U2%!!VuhN+`CR+1J\W-7:2JdU"+cZcR]pE>#b98J1_MhlE#-c-^_I*E<W`f@
%M?=>J8+uuW38c(7B(JR4!@M+k[;X"b-gDk%=umXBjruQ*=rNSI#:Nc_)\+hQXBt@8^r9h(`X)kiP%&!l#m]7iM[TeaLBGi"ngI<S
%E!FDfBRPmCcLr)H[O;VF[>\KW.h4O46fHqhE58_uaBMtZ^^ZuP&^frQ^_$u`Pu*)6kGqe1[_dR4Fs*q^Ns![k'8_g*")^s8:#iV?
%J3uZ)b74a3&=/[j],'K;8djB]_"#U(i'@SMc=[d,[).@BY[J&KK`O,#=u@6Ii#&BA[T!r[ibu,"X$Zo#>nU:B.LJ.nS@Ii6$90>a
%\d];[\7rlR'a:,rJ5V;[!`#rV.H'6>!mWD=L4U-D*&C'gNJ7LPaH`#K5er4Ma[[fb3+d+PXf=^<A#`X7h*Z_!&T<VWJcNjW)aa7"
%#]M#M&$^liVj+3k6@`!$>,Vc/:'k+SHO+Te8ldC1(dqh+'J_^4"?:6=Vhj6K!9\_=H6G#YM0m@=UH&N<%K]+M)@!_8,EjGcE*`X4
%k8jbrQ;aeGaMpmIX&F[h@Xo,hPB@*N"urk0XdXs^!/LGAke;cPN^]X1GB413/h/@IM?;(42IXb!UOZ!P3mDWZ9a+X538ajSX&Ce4
%J4$CuB#Od`U7WE%'aG^U!C8[5JAC^+9NF(pE/[IKG6\7Gn&K2]KNM[>W&gkBi4'[%,s!#bbeWFFnY8)%e;rt]XZ57%cQ;ug%QMCY
%``7#o,r@TTJFdSBG-XU=a'*+G5skZc_&,h'3tuWLM:cg&!m\k(aVcQ83"+rE<anfPi(0[O+A,''B<FkZ_riH+%*2u)9;o:;Pe+I2
%"3u!$j2)fF3:0PY$Pse%p4"jM<ft1o>Ea6^*!tD2Kat%Pi%4^L&77j-LSZ0(N#`NjZU.(=WCYs'V$Z$d70864;#NF#E/7X5<ft2f
%#c3TS,CqYn8)W<_"O9V,RWT>OS.DI0d34'N<=1rp70:LW-H9pj!b]N,?n`T630oANk>W^GHm_hh2'd.lWR[56K=^-nVDnU-UO:18
%FJC"1977Z:E#fQNlhMBZY#+&2%B6b`1I\P_Ks%8)!iPGO]pk\1%C>%H:/Kk"n0/fg#6c^\0(&Jr.Da.k.dRWPS@*K26ag08k;C1V
%Ttmd-OOP<YS9*XG]1KLVNV;Lu"pJn(#(h1ME(jHt'N?K"f\AKbZiL>jBNm60S=mYXH[K7Q!p@V%?dM)i,DA(r0qC-LE"mWA\sYj8
%"')]JgZbM"J[:+^%'l3'[kfH+GR"Dt%PY=u="&$P*"1FgK`Ym/RG<3#"cb2lJML%QE42*qWN(Q$j"7!5^<aX2n[c*h.MauZ\hpm?
%=Q!<FnnBQh\4@/=W`\3WWCZ/Ri!B<4Ee@hP@k&5XGesNK'WIRp^eob[8q[BP%Z*5]F!u!T#N>0N:uJG!(HcVi!lm0?'fmUZ<4,4_
%j&[LF4uC4b#TUqpfa]#63!L[p:B^einlFc:M?FEZ>knRE'K@g$#gZ>@^_m,igcZ)R*",lc6kp'!IV$J,2fs&7o!rjEi8SXCEP_ci
%Ne^&/'akuoFqjXPi&iM>hi>)*&[S5pXJ185_#D%X%@l)p*/51;SAU-P;=VH2I/j)\*^:PRS0aBk4ZbcF_n%r'VC3Lq9IP2Y'Fu2[
%d%tJFf)6lp)4Jtu*&oGVKm?PS^faW3+H?pB*1Jt=E]W32ZQ(6+6O]^l+ACo%l0uK6)N>Z,dfe0&f>$<rDiaP.:[3MkJ[7]M62_i8
%S>IPomtM(-V,'M.L'LHR)tkV%Gi4s-\s<d9S7u$4^f<L9;[ZBI4E-)g9k\M(fL?;*2`PbmHNM=`E8^MfPh9%sE(X71gqeR5&Ss%t
%E8YsF/_:13/iX8i8*o0LkoleE^;5@VNLuu:i5"<?QSmoP3,nZ_"PBhii/A,LR'iZ>,8uYXJ9GVa&/2mTTn1+b(@\Sd#&Zs_c*Zs[
%%34AD85-.!i/I&+ehPCr_!uT&Ge+V!glU<_cub-LNqX*\fFA?1J\1:%6)82PO:]p:!s;%7*dCcr$QL%>k[mrT/4pfN"r'%[).O'g
%&if/Sfgel$^dhs&l[ch`$]NA,38b>V/l+1ZL]MfG$I2MaTtZVED'7d'qTj?%!$@KlUPAgkPrk`aJ0QBb[XEo2DV3PPm=YHLM0ot*
%!&nF!-WK^X!?>KjX@oPni377KmahPk-SA7XiI@VDM[iR;s(9[^ej,#i%Hj0^\;L9F5(5h`<q(%cSH5=ia8Uh,P^#!8rf2pcf$3H(
%+1@p:^u+Y7LC*[D*7lat;:KM`=g?)N"8tti^k`rn2l=`!PctJdRpn_4<7#PS"JWP\IT(iO>n?dke][s]#5Sd)F.>OF"8;mUAWQUl
%gEdfs2gY!&:aR^L2r$m;!VVM*Mk3NEqp%ephS?j&5;qX5W,Ek`L2fQV``k5Rdu_9]U_@Fg3RTk*//;$XD[I$XC.R6Dck,H(^.3c)
%NYBbuS3CT*%@ln78A)+AI%t=73Bs3bUV9mX?0<?f3152d+MNu;5fH4sp]g8kJJm>'H]Mo'1jj3CiF)O`G]2Z/X:$&[2cqec1Xj.Q
%Z$@5aW7]tR3g!uqF(fJ;:5OF,TtMai9B=qiZo>oC7"b2fK]malg7's?CtS!V]cgucTRhGW10SPhQV\UsL"N6OJU=.d@L..op4bnf
%rRi?@@q:V0eI(Zflie:K.^&NEZl0sh2q-5N>E>.K!6,[=\II11EIV`c*nd%!IoP8]A8fKd;mI(B2l$:a9^RtUOfTD8ADNol)'9*d
%<=eJVo8A67d,$bGMQc7kBQ'EjFJ=+qDd8+(fnSif_+;Z83O1T^e@#h?)\OJl)R_RFQ]\3tF)5baO\lB\Z+XRO0N6l5]jZIGV;>^/
%dn%X/:"\;.bn#U52Jd;&V":J$p6H8s%260/j7d`(%GRB)L/AQ6B2L,oOn$UE\i6abTRc;@\i3>>(FF*>Naf5,!r&Pu`_M0sg`(f`
%l!LLLhQ.<1d8&WVL,KEC^cHFQ+rsdX-K&cul=3CeE,W;gW4;'-]o@:+irnd%_,3."Hcm^D"594j8OsXUBQ"ZN#_%=kHR#"Fm_:cf
%2\RWVriaE"Qs<\;2Ip`TW20>$'=Kj;i3[h][PrV35nKGoHXj8g?oDh>_g%$-TY9;30l#K2HSYq$Q*/Kj&?lVU6$kEX0n^!HDq=%>
%[&M.'YjY_Mdij(el6jZM,'tQK5a9*Blto;)Ac)b<2r"7U"BAuN<h@_*l_(rM4::_*L%^7Ralll[p(fUtmAuqQ]b/6rG)m!tX[12c
%6$kEW8ZSP;p1?r+,%D)9Ro)L<"]oAU]G]c04g[-lrQGj4BQ$QFrLaYR)c?_H<FB`O2CP>V(,ZPSNTbr,&Tn^RU]Pm!4E$JsAch[<
%Pb'2s("aH<3<h"<2a[4)G16P>1TnddJI:`Q8UsQM^tqc/=U+3S^u"EF1!WJ6hNC\(Gs_5%UE9cL4%Jukr^u*)'\OG)h?]Lk#49["
%*"0&6CiAHq;*rd:]r;EKs7Ft#</K]$:i(&"6Q=:'m0sASO<(\e$]`?W;R*p?pN\kXE,Sd8)riil]c#@aR%o7[F2-^%2/mJ)"N%JI
%pZ@2fX_:^`3AOc@Z+[W[qtgF75IqL<.StF*3c&`c,mG:JMXAYH4b>IhCi=po%ViaRf\TMNkf*q`Rgs6i'=9^R;PC5XTY4cQ&M^(J
%HV97ML'cS'hJjn,boGH,[KNYs/$q6NqH:C5Z+[V:qV`gp(XreYb/BaeOOXW8*`PHMhES4e.b4#'BK4/4f7l7/#Q`!QCBTK*l%h\j
%)=AN6CO)4sP(l\GdN/h@7)qLZW%b<T_$alf@[([>L(OdT,m%3N=c`gC%]N*3h&VXrXf)nBeft4bOPS.kFf`Z]!MkfG_erGF+\7>i
%CYZb>/lWp+$kab.07BPd@A9a>?Gu]6pL/b*$_]Cd'`]s:M'+7H"YGV<qE&+o+J(1K)PA%U[dgRU#qs,NZt5eSNR<(e/WRt(P_GjQ
%#j*'Ob(><<=PXYQNR$hP&afe;Y/"0@'2TaWon9l#&BRM,OM52a%:Qi#>q8A<i^+iCZ;9:I/%.]cN_3a#L3=8W&2+_]0>:Kl/eYrd
%l,uC+I)De6%na//^pB?ZUP!)+m&8<^n*5T^0r)>QO9enhMMjt)255KBZ,n*?G7B-?+`HuXTPrC@,*elq'0aNO,^p*!dK*pYO@7h7
%<RKjGUE*h>.6[au!D:M?L*Vo#!>8bqBEsI>.h"j9Cs^!.)AUka-Fi+4E8i;Z'hs,abDH>$0h\GRc]D^TeWuATB2>!lC,,pV7<-(D
%a8l8d3P\gN9be;.o.ob8ECqll,o4NN&TWlZC3_(4ADRD>DWU7PHO^U-L"\7s(;TaN9'e*8#iK&C!<H@E%[7H>WW?uqb*O)@MMsOh
%N&^)5K>91hkJt+5B]7#iN&3\l;3'"/?<XZ1)>'h5\/t^81C,=IfldEA_SqS*$P,/-].787?:C;?7uaH/Jn.2>=O9H9<*ED,QJ097
%#n*8*2AJIYmi)>&n2iH\ZuhO"d5AKe!)im8`h=T5HsDJd\\sn9[\t=jZSmk)M/UJQ&OTsp*5-OPau]XQB2"ukMup\X?-1#1$2dal
%F9MNH!B;6i+h$kt30#nZ/A?a=)YjE@jf$MQdD^Z'70+F].9;65PRPu0`:S$hBpq%N61E_SE?hZD!pCmo[@7(?ciP\<*EaWo[(u+>
%3T^NA#a;(]$Et<-'_!;4.08Bg7UeBN/#<:FifpGZ&ebFn&FAunkX.sqkQW0"_LjWEX?R^._2P"J*\l[`=]!"IAB^,RH2Q/hLL2/e
%Nn5iEDr;/KN\m8$_N+\96o_ti&a'AD9QG>FJREHfVh>ok#.]q0/7"Z=)NpUlKO@?\P'mKI+lEBq,,ihn[8qif!;&YF&O,.e:h1(C
%b6TO?*]C+PYuW"-o7b9)4@n]`c;aMJ@l9`X>AkKCmdOnkHLdHV;53fF9Q*B7</*sNP]&mrS^j>fP3D,NESQ?m@XB>?:YZ8>gYo-1
%rFi;l5V'hmAjH]g'iO$F;'!9A/"SK&ZpUU1bE=oc6ld^g9+b4kJFZ1M2U/*/JhAD@"7kIpWf:WpbqD)_PS&Q'bWmYKdtV-H.-PiP
%9&[U`'k;+C*84?iTQN95KL$g#UM^r<YIK<%6R;DB!C&T@NDV<(`7CG>F<i5&:_U#uGXTo'%aA%j'URX1$a\d(@IKA0$^(LDaOs!r
%![KB/%@`(m(PZCWnf"Z0oX<Zqm/"X=A`t$#1%gN6V-9Tko7aN@RC#YlDDE]Dp#$db]a`#G6$kYR3?7UMS3r[qXShCG,fEMY4aG."
%&ZD2henC<S&D^%d$/qou+:mALQFGGs6aD>$V+=<'A]=meK1rpFbSFmL/GR6sb$Wa(L$VM/G2Q2.B[AIN!FA5DE<'T3"Df:NKhQ+O
%]HE5e%J%l.aQ*?6%<;t+'H@IJE0*,$D,cGEYqHe1!"_0G`gIu@OYEpJ;okk&I[V4k">8d$i=F.Aa\T2+;"P;LWZ/mPVM.%M'U_=&
%g5+c0jCnaALQt;O5[[0kQ?`_r.Fa\MS8`:+_DPb9Tmmc98WZ>bNHids<%r$8.FLJuDDSp_Z:2YZ;de@*NMK(i@bqYZ*Y79`,=/+?
%9RKn"5uQ9TA`uP;3cS/5=/fifR\.ep3a;DZX`-d_CKJU<5a)OCD#(M)C*rqj&\_W(\7lhJ(b#p2Xdl36Mu+?&lC^.tR2a*P>*rLU
%7[QlS."ohX4.@V_R.PM5Q1>of-7AGZ=jL2,PlT1H&ZEm2BbtQ-)5`ds\56`.eo59=c;<1SWiiER&HPR)))k?K4o/"9,YrsV__N9g
%W#J@$RjXK$QsfaJ>de=eVBh7$2:f/u8kHU?7&*0%n;Ki+c.>[TC()uX@b4Y.:sUV1E!P<*_qO'LL;,NB,R0ttiW4#VZ&tMV6>r7'
%_E<]i^j\]%fZ9CT;WS2+:ltl@8.qpH,)7P>QZ,oGI6n2(KTA`0a];$D;j:CH0H!Li*!RJT'AWi1gt#e?L1J]3NBiX086Dhq#rr!-
%R7Bh@6f[b@,DS68QlI2]SV-*1>mPJ%S5g)lNYkD]^nZiM#FlNbYCVgH4#V%bG\5mUD][bXk6UBAS&Ionn4d3.1(il8c(]lc,FJhQ
%IBjDc#Uq3g:f[5Y;PGcPJL4#^gk?8!MG_1=%P96/6<%GB+]"tT5m7N0)VQ4IAjJ@6eS:s/D&G;qX4iGq>;QL+`i-hkJtYkc_6%^+
%paLVu`9TqKmAI`O3TcNr9GBe-hc'\#7)jMHJ4Y[^.sj_1;mbJB8k`/!If$9F3`5-@U=mqh1Hn5b'S[_<So>cZl!X?]p'Q,qnLEbI
%Ac)b)'--7UmT=T8.cq=f9s?8&Z15-2Zj)A)GYr9I`KDBU7MR<PL\=23f9)(2:):uZ4cR.Ra!P,f=h6nL?L]AD"ic#"<,CpD?q?q_
%&DD!g)^:"iKcH!1<!V[ULG?u((jRGB&0jK#b+cQhd:<K%51nDD%n'o/#$M1Ek2Vqij,.<D,hA+4/4aXF(Nn#Y0F/bYYR`fCR0D<!
%BHgoU$K6BP>];C+=<N`qn:?u^i0f>4OuF;Zq6$`X!K5(+;@(ES<-QB8*<ZO[3%\iOK(Ig+4tqf'RQUJ_Y_YhsLUTUXSsV`>Wn_#!
%\-AN0oTFa/W-*caKtq.!aJk2)(*n^L5enS5VX0-t9tk^/aY5RY_%$9mpp`#bdteR4SU:$Y-nfiIK-_d2<G@fk,@nXF<'GCKcmH!6
%B]gN9QiKA[.gnWc">5Dd"cY6HC53*X=/Ai,Rh?tNOOU)DFgXOSV[d^l^o*VuR*H(RkQ'?<9lQ][YDB&&8#9)M(Mo3BZ=B_N_aKh;
%T-uu_!sV:2$+=C`&c0ZnP[0ke>EJZ$,PeA@YV7>cbI>(sCi?VgK$[T*'*>3lJj.>`H6%&;>l]MqF6>L=HNq.ql])lsK9[RcNkcc4
%%@qVY<Nr[SfmqTSUj+QUPsgmGO"d)V32WgO4AUD;*4C[](^XD&c02k7ccdYU(]Y.8hn^6%C;D%G%aK-](\jZq.SZYW:_IsBl,(MJ
%$,+mQ-352k%<mp=I5R]K0@knp4X,i;Vd2nM(cSRL"Bg);^iDpB*s+q*+CU<cM;&:'E^f_b?_XhVo=NL7";uR,6tTXY.k/7(TOVG/
%)%h"A&V/4e"uYn+$cM_?Cg]"HFr,Le6YEAR+GFmb`B_VkO'9TM'qZGs0g"eh%M]][)GJXo&GJS?+<e2%=S$[Ug@kt0=ba35*.7i[
%aB/u*Ib;s@.73*+Kf:Td:[R:(e]_pj(;BWN9Y!$0Abs$!eI"o`c(7In9X9A6"QsKP5jZkSN[8t,pE71DZK`:&bEo)%,U#(k06Q8$
%e=-Fa"\07')G;<Z$54,hd$,8\.'V,XWGdK(;6Uu'`^].C$/kAA,h]NaTm?aUWnTgfL#E4[X`+l8mP7lp;*5g=WE/OU.UN5t:B<[I
%>tu0O:prA1(8HP_9b#An(bM1a3/);c_T3:5Akf@>=>+-j!:Gid2_$R#SOcW#^jT+HH5tR$e7QZ"^P&jt/7_l?!Hk7J'LU=>=.sg&
%2K9#QU`aetZ0;@JNTmh.^pd>>#3=92"c8QH-?qdL%V[Bs#SHqM8YD2#@B#+uB,^)1M`.&B"cENn/+QA%.>1U-+s6C;YgWngbEo73
%J<^8E2&Rj\0.Jtt;hEgO@V!&PhoaTn+B<hFm3p4jE'%h7-R@3$Lto5g*M5fqV\Q>oA_g#m![O(8Grm98=aT972C6]V)T?Wdn?2q8
%HM$X"AD.-SA7;&`@Z+0s(et.2"BQf!bnX&TKm"HG'.!D`Lr7YM6aX(r[K+;t;?tX!Wd2O5Esu=uc7(]@(M0!\Op4Pa/!Ch6`"B/r
%SrcPK$@)W90gK4\ahX%&22YFF5CauPMQ7,Km'RZG5YF)<5oXe%:pPaS(?U]o3]Mu"7L=,B#dU*]IJPD$<28mi6p44q^J&YS&*!u?
%Sg'jdKQY>X2Z0r5VgEG5>/@0"H0h="59Z?.#_;>;,O%XjX+WNEd56Ie6"i'."$MQq>3TT]>KRRRb,1"lBK";_Db!)#d5/j-B?:\d
%AZ-0YAW@X;T_8I\#cF#K/GVUY@Z=+AR'XV$#oP8R4K9o7#a_r_g9Y0H$7=kf8,s=C+Cr`k>6%=c6S^<_'lO6/S$"n?oilAJkJ<D2
%"?dCC'Nsc'8;Et;L_47h^dK"0:F=]@F(p;aF$O&aBlpOCV17;F'LNAIp-a&dM7mMSFbrP&C/k%5E]a]K)_Ie('F=lMeF8=VJd>Yi
%EL9??J[l[h#u"u?,n$g%A<7:0D-Pt<e>,">\O*#pPU7S"B7je5=Utdr4d'O]Z,]o%#r)I33-h_l)5H_.#[AVFGdnW2T7iT>]e<bA
%R0";60ccAlOpS^mBG0SojVe3'k6]<LOnf*Y$BeMm&E"nQEmD57(l@(?WRqJO!"!W`W9UT^*'"&$Ue)Ki$,=g-0Rjdg7X/$i_,U%a
%1&sWs7hXE@A%Y6I3P`:ph]j(Y%[o?";Gk"G&%F:jnY:)oi!2h+4ZZFBDlUKF&g(clP1@DT/d?fo8RRaY1ep9cm1O3C.2.M2"@9?7
%CnHer,-uiOg>!,)W+fGFC0VX$%0kZ:M30F8NM!d1jK[/i-paH2^;e_p5Q%;u.ZRFm$HKC1#0s8s@i-Qp2uq;,,`)U#NM)OtY_PPa
%@c=U&[^A:db^>lO99cgqLtS"qg?_,n'9GHanKKuhZ)?]NZr)W2RIN_6@R/=dA84(pDC$uq8j_&N@354n8ir.4i44F8ikSeKM,p!X
%X%'E/VAD5cK8mOf$f+Sk:9Hhe3,)el.mOHW/2W60N6tj(EtZbXO7KI7m`^,\"G.F*QrGii,qCm[1KjNqXJalLj/kP3MPUhZ1<YLY
%5h*T(H.J3.BhTX-kGW3DVST:MXp8P=:93@nb(ZoQEqBejGn2O'\IL?.KA]d$g;b\V<\^SM!KYGBbt[`h9c6?#Zb?\<Kf#"pFgc8n
%H<-8@U$lS`&1e<bej5$!H!(ZmMj7o7]FkEd,Z3@e?!2=7JMI5%bb)c#o18G36)\(d&*=1"*KlS?,BeY6*i#=W3&SBG/'@r-L>$n8
%g":pdZa#r30NK/T0a9A9iUW/nR&nLH0oce+!AQ!J!=UsIn1dLbYj<1VdUSoZA'HlCH%=!q81m!!P;WCrMr#gjWmfo.F!4&If4E&c
%;`N"kTo!8q\YW0H:^6"pUrGgI'-mVX+Y3-9eM7J??42[IY6#f+!<B<oNF_6=ZO9]:SuiJll@JW+:3t45!C8V(8.9Ek?6LcoErsJa
%mZ?)\dX3MeBOIADF;]!U%^]V6WI;Sga?0h:$,g%#/7FUG*!J2g!N;W09Nd"3.lD9R#E"eF3<A._iPK(B-)*nk:`mR9Qr)Bt@*b%'
%!Y>..#Y.E0_N%Mgligk>8r_^BYmYAp&i$`W36`^OMiURO"Ml&!O9Dg\c>)!eVuVW1Z`VHh8S"(pc7I!le7dYHWX#!9m0QpZ,ll27
%*/<B@-[@W]rt8hL;SGH^JlEbVTF.,VQJ_au,\kJ^P[0e+B"#AC;JEKe8MZ[@D$WJEkU,j($V*PNc9lsk@3.sBDhuaa_1!\U85%hI
%"<@B[e.tXp1k?%=[LgBV7<]&Q,Y!\fP6QjQ_$b5lSsQ_)b\E[s76I0\"\=3<pY/6kP<_Z4e2CYKK89e%444idFpqpCW.q/$4A#@D
%+lP_2<a?g$oUo37o8_*:T_2cKGl$[Q6l-T9KD8dJGDVB2+<C%]SKV4_CU3`:WY,pm5jXT(5laJ]<H]\@9F2@Om#l$TRY^fb.+3/^
%BMVN9$3MaXB'?ifpgOe*dZ,_OE32MMJBCZbUM^Ul3d<kfV1u5_1i8+;#:Cg4f`@fbSntT*,+1#G!7akc@[>H:A:QC'-7!T,1Br`s
%5tZq;Tqp21Nm]H;\7`tcVBFJm+$=H5lm#Q"&^MQl7LZ9X-k`8@#GTt3;EdCl%+ubVpbVK`(3QO:&:#&/@[$A,23s"-DjD6u&AiRC
%Cgs@K>,MF#0oTl1=k>W>RcTm!nP23$=f+#HTab=omO__?SFUdoZP![U_BFY+7Kj*bFC863UWHcHePn7i+NHNu'EY%[?m_4.%%(%I
%Zu-_l06HuYPs]Y57-4gEO%79/%U,D#7=Boe!t`-'1%;0LnMnECXjH#AV*]lM\n3"LF2kGA:Gr>C4#k4a7375;TdSoN9IiOA:47.p
%3`3JB(f^cRQcIgQ5"!brVT,Kj/;0fEClM5N\I,:"ALWPGW!.A8+Q<o:YLG*m@Ek(S's910[$-^%V[s_f2<,f6!>b&sG&X+,C8GeU
%"uG4=\:A9lUI5`G>ukgX2gs?\@gK)*0k<9a&7d"A2eu6Po_P`)gq[)$KM@QT@Ao:(+bJHp)#-RE"1"ROd"IcH@md>d/0>?7_P0!o
%#`B<a1fA'R8^1IJ%WOkAN$5nA_ZnLJ1MB&`l\*!N5rttnp.@"W,]G*(6?_DL9:LLt0aK7l9E7C>;?s0qb5p5u>W0eRe6^,0,$e6R
%73PeDBM+(UU9ABC%EP^SY7*@Z?sj&XXe;)LUINTL>U;u-1"doTM;B<8oTeehOD6)_BnK5?Y%-E,TFDGi%P3ncV*N)1;R+"E@P?i<
%9GLq:UjSEJT+qhU93j`B+/HSV,Ua(C=[3bt;ir1];.7:-<;:XdWfTn/+BZhj"e[osC$ks%aYI9Td4n1fe.?tn#",EF)UM$=)oWN'
%OhtP$nV3iY'iNtK%7XeI(.%g8>&Boi0SjElq]AV!$`u7e"KXk+$Y'<Ds/_5S$m,P>6&uV)60q`4HNp9cXIi$4onQ:XO.doIS1Od&
%./a;PZu&H:6:_4rV-cg-%s/S9B_\?3hW(9-VRH8lM"=_,YDi*<7s;5V=@E$m&7\UI5fD&p=i9D^%+.d=#6O@OgbW5=JE]?T#(!CK
%>4$H/5tI""P(I$D&h=En,lQL,$/?=*q9eD$:h,Y%6SJlunP,QK))6@COBn4K$rVQ!/VcB-IXBe0D1a!!Q*U#p&6f=YUmV(YG+s7m
%KZaP1A7Ei=]d<91g]P=m?s*5e5$F$]!GA_)&8,UkaM=(A;*.g5#4<V:I]X%8*pJHPe.7K*o]5l@aF$Z.+gurfmjX(SE$!XGMQA4d
%>BDp4$5ZfB/Drt3k^YWGiQWaEG37,mG/H`qR!sTk@]1H/_R.3Z#G=IiIb_SfW0RT:Lc'FCRNMpL*O?O"Ag:MAbRXFdZAsJMbc"d/
%NcBXC!;1LshT;#sKAqXomnspg9[_*4GnSTV_#0eJ8"uT:<KqGU7NTCC&<b=`JR4.-H!ZjQf3\a05K%bV'2n4lJ401G!E\[%=8)#b
%7)TT-TIAfY_k:(s4_5o,KhlJoAbKNG3&FP',Y:C%aRV[@D&ipW3(:FRj\WHu$!BI5f4E\n4r/.,d?lHr/P^:YA_,Q39DDZW5U*$?
%Z%`H="$iLr!A4@%$:d5g@hLN4-Zaqp.gD-a&Yp=Z[d4UFS.[;_&=e-!O<cAL&jBm(pE:]uNr0Tn6@8idg4LMg-3Q7r@MPZ%XJCqO
%']4Wj8TH!!061Ta$JJ.mBLpcKBe)o6rY0UR=U9;/r<b)U>jmpJ=!erIbt5^dfH"JT9go8d+C/OY7*R^b+dlb-,<\IT7(Rk]lmEL]
%ZGdW\Xb':j9M:JjXN9O7*@A#q33*=*Sa@\2]u-99e?Fg]GdCgTiZaTJ?@n!PfQN@So;n0`U'iT#JO($$IoO:>TH&oQ0W.Jln&^aF
%Gb-#ndKr<&9ea`;"Ji@BKuE@QV=S^:qZH5LJ:YQUd1p)c:l^('VRE64C_eS2Q7^2UY0,f4$,MFRqs2AeQ)0@3Q9')27!N8:ZK5m<
%I1c6.5ul)H`g(nX3?cg)Tk):-8k<M^%jnac]Em"!n4#d_;Fju.D$a3qmtX)4_Mb[_N>a)mfc!3:__@QPJRJQ**U<:$OG2K9=b4I5
%O$(j>"C"5=8B7,%JR%,%UHma`d`;5NlG1NcSp:bF1)d5_[#/s5Q"phCnORsY/)2Wg+:&s0DKuA@LokOAZO$pWrt,qhHjAX.;M1j&
%@aeG&c"2I@&GQ:)Qn34DXN%_;H^TLi#Z_kX?Qt.,+JtfkX`eC:Vl7rW!'o#k5_<r$nAGAK.D[YhEUdH7Acc[%ZiNI1f_S.6U+2(S
%ReS%FTP9)nq>sMt`LTFe3=>=$;8k+3grM4F!e_D9\-CL[JAE6E\cfttU%DK,oD&ffk7TEaI4^[+l3>@h)@BbF8=fo"7*s_Qnd6V<
%#c;&/>[AOu+D-Tt5;WE%U;.$A.a&r:$Oe,KeR-bd,2cWuJfrBM$r/1u6BZY_%n2o@`-E0,0oTQdHpPgqcibNN(!:XV:m#Cp+_`;S
%i/3W%QN<K!@tihk?`dc8AmItZmH2G,$%R[(+Rc82+ajb=,u$F;Ls;\C"R'"loRN.@(0`G/1MtiJNSt^H"t1fa@#Xa;P&<05o9G]I
%@#h3\)\7?eZ3R5tQAup"@MA>9=F+Y85m:N";%2X7d4#a3OJngVE/"L.#SW]0+>MPhdMPGM_s'N$$p<'j((WGV\GD0Z!L9i'aUfSe
%NWn;U?2"WOZ%G.aJ_=#alP*n_TO>iu@T+tMXOQFQ.o0MKe3-f(8`7u%@)1k(13=oj!+<&Z*>6WA=92Wmf0e%"V"TI66b&5N^l47>
%N=cR]$dC+i?s?>IiTVTCl9T*^!8;;mdmR?-l7MT.]N5Xa"T<&]7^k[gR:$bKq%=@#LIRO"do&j"C<+16)8)Upb3fGa$%\dH(<>#l
%fFmjMP`/=X)f;Tc@[E`:r2J-j+U7XG]oY4h/26)_Zma`RF?q8N4"NVt^dc6U`jm!tCgcuO1H,>=]K"9+M8GC"hJgWdW9=F!.jEZ'
%V-8`/?5e>BXlfg0BW]jaQh#W^RI$SpC'E(NeQT1e)06r$m9$D/Z+jH!KmcMc&T6unou=!f)1U"bF!A%9SqRV+J-GkTK<.ouEq[QN
%\kDNfP'RtPS<kXjH'$!U/9R[!/.]iK2FSY"j;P9KfUDk46;+@%k7IpH8W!dmJ148Y20,k:0HTl%&i0`6+g;BiW)G5N7j4gTL/8:5
%E,aC%UW$8#<'lWi5LJ76"jF&%]1HrS"Q)&[go!]G@etL@6lVt.QkGdgeM*el)Us:`&>3%jBpIr`,-"Zh<MZ[P>J_qRBg5%Efc]1E
%-4V[scrYrd8-o;!XW2VT4d:C6/-<lO##-LR3ln(0=m%gQnEP\_a^LpuK)f2a$?=McAdi_33bXBWc\Cl+O^Q+h&>!0cO!u5h.B;#=
%PRYS9Ns98"VZa,-aIQG:4jK-kE5`30<X%a^!f%&2=Q.8_7*3EQ_kG+;e1<Ga;o&tfh5pAqN/SCue46c\!m[V/=MT@DQlk.NLF9;g
%K(*88hgJFiYtP6#c/;2;Ld:SJ@$>heD@Mc,jjBUQ1'<5Qd$6nA+PQQEaHt,X#KZ5I3Ro05rMa6n"&tY&M/<J1Amde,C/Z7#d(F",
%!893&Q.;ct4ZgYP_[=sL._<(oqVgW0J/\%K'bZ\joVpba]W('Yl_KUX7r\W:?:5#M1ZJ&?^n=H,3%4gR^(%^l$3RgsI-#$mQ!i*d
%'W)U3ju,7.'[[N?)JO,-hhX6(_`h,+]jXJm77"5]3Q)JcM)=9ITu]\8U_:=3)Ki,=o?3*RamgiIlO4GnV^C9;%5[!G`LB<;+:.oj
%ZWR@N7%T_lM6iX_&W[!ma9l(\);I:69q5*6"bGjEF2G-SHJ&Z_[LBrCOd5HZTJ9E^bdD'kWe^gq=l9t"dR/gcPT"rt%jk3YMM=u3
%O(T)NOMNAVD-4X)lG90J"K_kS0f2S^(ud5,)P?i.g*&#;1Q&dNP@.&k.7Q]A88)3_c%=04mT(kr,-!?QM*$iKOH%@g2Qua\fdt&i
%c$[p_Nol3AOT[iSb?ZEV+;@tMV+R];!Dl@`'@OM&,j=+1.?Y`WCU,0-[k[^Kcpa+hYt;K'BU&fS#>;HtJKU<$BI+MuF\(O)#^Oq:
%4<eAM"`+UqBVB#OX@6+D@'_O6JpqmhUa;_2^T3-M<5'V.i/,+*L/(W99449BF&%7H)LYG$g>S)J&4T]V757D5#rBA_76Z>\I5X?#
%T(lu[KTt#8E=c:cU3mMtPoU(Aq'[OBPI8C'%[\t-I,KU.6ioAQDG-u2_p27H_rHjr2]RRJnMMk9Sb"6WL<MZZ$!:]=nhU@D-40eh
%$s8eJB`t?nk0&^YH&Sj@Abh?e;:O6X`K"t"dZ_Vo35J!F9)eoBhtV5.rJOir`3OLRr$7Ds,5_Y94^CSk,ck)(%+abjEAO+oMHSuX
%f>FN+c*H=QM'8.!KjtfR0HI1UN];.iqkMYu-(U,?(s@7&Om\#0GPG*]R/oSZAt=PhA1GIHUH"[0;sD[5^pa^"Tu-sL&o!OucsU8M
%LR4A_,fH?=PFoiu"5j;n:uDP#;:'\XL6i=:>kfo&bp$!):1tkPorQh8'.KO3W#4`in9(Y;:Za,/4--,/H]'.@C\J)?2b9aA4)1%\
%rY4ZJ8i]*,DGn>38;S^@$tO']LBmgl'?i3a8HdTqgBtpK'BUVE@84):ag.07erKDQdU&SC`G@#i:6hno`kM;ANZ@@k<%1\i#o.(2
%<^CG/Tkc0*(5>Y;7Nbk[XWIlWaNl)j1edp=@Jc3*#jQn)X-4P>&sJl.rC@_e/)-lWBB!*-kK#&!MZm#dd6FkOd#rp,3t#sH!Q@kY
%d4cNLk,j/:O!?s=9jPq>4DmIL!+@LNB[f&#,O,EDSf#\s#qd/o!sk@N0W7iK-G0ojXbg2l)bA:L8P<Ea\Pi2JWYfkjXPr>f%W?l/
%@>5WKFq0%X%kib87f'h)fgqK8-tWV^.:JhWC>$:=bnj,)dqG)8MNkrH!RVXL3d`Dd%S8/4jG/+CfZ)R480gn3Ls!CR,@tmm-"h'e
%YeNTm"m&JlL+,ZP:T*"lZE5dHZ<Tpc*ru*M",sUs8P[Tg&eFjq.b^u*=!ToUK8_%5.\/Ok"3`5/SW)*VE6RN7EDbB2La.t8$L,cR
%JE*(17<t1Nno]QsA84BRJOLr]TJ1U6XGLD+5i[u0(P]dDCX42^D9DcerfildAk]!@Lm'U"oGLag<ijVD</_<0W*.Z<V-k,QFtV6h
%ADdOQ!JV2F-im0?.Cd2`+UoYp*jJ?L[pWMLYq"S[7Phl">)Ah@#qi%1,&U*QWE!h&)&PUr]Fa$6LBWE3TNO2ZVPPM0d[9]_%0-oa
%arji!*mBr#KZ`)%5en3/r#2h2&SmIo':4sRLd<^b"n^27:i-DHB=&V@krdIr5W_f3,9t-U%m>Vu<,<]_-0u'h94W@9IA#(3Cni8B
%HD@a^3Cg+h(nlSEg2_d#+^p[JrDqeW?#B7YK>^uUoOI,4^E44!mNb1qW1/I7,$3J4SHP`:<]>)fA!.lD?07nuSM+aAKtU*S'9\Y?
%XV6G"A4hJ^QqlY.\Uau?eUWfi;t3M;S8Eo*Zk:AdmE25`EerVI?]?KF<0okeLb21#8ZE4ge4ODr3CjWX!0!'6"q_HJ'33V9jSslB
%'?CGhSNLpH$%'6P2(LF=m'+=LOW>7==@a;1oO_iMPjD>cPUZ=(,6=ZO^0@lg+FJ3,a@p5"Mo7VS5D(^D,LRdG[>9Zn>)?#pIT5ko
%IO815BMfiSS=?K.Q3B7-Z*@*>Km,XBY8F'.R#q90%LHm\`<s^*Q&=R4r<ss#A^D`C:Vkj+Ub"b4+>e&)p@>Q`"DgZ0%JVr<fh!S:
%;Hfb2!7B;uLqnE>O<<;I-SWV5]Q@h;2q?ti`ZQdsZQs3lQYhqZ988$\M]n+UAsmn0(l?L08.`=Q&q,f5ZOlu+<<DXr1n:)3Flb2[
%Sk8^c5&L95+,Nr#m2;!FZ7XT#fGs+1T@-)Db]D"d+:Eq(;$>J,<"$`4Kqhh&*@iOZ-S>`VF9IbphOeG`5.'$L6%hQ?$*arH9[`gW
%:D'F470B#bagLJKX];\DGmZ2:<!Tf?D^qOS$IST!c/MUAAKYEW7t-:E=i;;)A>$3L0op&q7n(.Mn*5U;Sq0?FCeiJ]!F1FkdkonE
%#S1)SdV=iqDa30XkRo7PEYnt6aKQOIIE@G^?drmc73IVm3(>lFMsVk!\-2/2Th2P!\C5]g:*sp^GSV;:"lomI.u\<n>fhSjin<l@
%0B]A7PWjh`<XO@3;>=Nddkuq"n0!H8N--oNTefhT@0W-CZ<Eq%P12np1rJCPON[l"OhjS.&#"2]>msoZr`s[:kkU>WR7O63ok*d_
%.]"'RIKqC"-W:nAX*k+]i['mHI!r:51W;6ZP-OMcU&o*+@O=Zc"CahW=T=lVWT34#-6]ama]<a-V(+ITZ\VI70AQq.8CH3=]FkXK
%N\?k4jZ.lm<2;/QQ:C.&j9eR4<?Sk\Ua?V0*<o,#Ap]*<L+X3-j9G2&-@lf[=9/1Y#)TDpd%-"5k5($'Ll4iT*ZLE<TR*#+APenq
%H",0d0Uu]_Hin(a6aX>(28\S8_I_gc@f6gt+SOeMeKqV1*OREAFX3N2HWf%L#.`Dh$iXTeLI2iZKr5U-MRB=@1lsDKBNSCjKeF9o
%,GQ0]S/Y-?>r7)]_Lc>pMI>KP1ZQDIbR/J;"ZK,'3[0>]Xe%@I_bQa.GCq>d?0nND(;`O8%Vnk?cqm=gd':11$cKBCHU(46o(e\J
%8)fgo)uS!%ghGT'YWC@.$H,C!"bu8qj;9AgB;&gG0cuEL.@<D&=7`ii1?2brTogKY]RMp\-$98+#)q#5iKn0Hji]\LU779f"'Z'X
%_D2eD5NE5-Z\;G:#'Z+l,f\bop*2O4N#5,(<D#0XMDA=OV8<cmj`1c"boC1W=->H;MR`aWZOY>:`$q&aK9J3,&pY+/QF(Nq_j_*K
%)/8G*<^UF\-2K\:^sOV-*bj57IC&%@q55e')C-b)(,qI3ORNrlCTr!'Y6>YYUS#AG^u(i*)P%Gm@5E\W[l&3k2*J`r"iD^A1*h^U
%`'E?P0MGWGTW-qWl6[.f%q5SIZ!A$c2^g=/]/?"a6#B]%[#"'[0H0g2L^.)'SC>@S@<D0HAM(@mBLIC:KjJ8(!O_HnR=T55E<^bZ
%UjG<uWa5GCP4XRWQXU)Mgp'_&TVhpD,T\ej`]@+S&t+\HYp.sW3>JV0?MMO5j&cM`j:lE5&fcDPAgKHMFOHpnOhfd#5VGH<WFj":
%KeAX(!^*jBX;"Ku(b]f%N*8aVZL<l.V:cc#M]0^)V`gi-rB<j//$jF%X^;J_cWe'PdZLKFi3$Q$O"Hhrf_7pm8&Bj/Hc<Dl3kVf7
%CpFF/$`:C@p^UW]2(X_p.L0FSL\42N-dak@;c1h0KMJg#.KiN[ll7;gd@UVS;[$eZ@HOh7NE%pI2I/$ik`o>-)GhQ^\Yh1&f'>[.
%@7m+&TEq?VF02<qMI4>1J5HGkA0E^(Ah./9C:C04Njo.c1'gViIAcHt<+tX>e`>@^O@:i6WUL7H.74M=:h$XTSY:.kkuoN?+^gH3
%1i!AD@.C``Uj4_FZ.1Ea#_#p/fIN.#*0^M.^pE&Db?(cZ!gd]AauD4E#fKUFWO_3.5_r2ckr_MVlao3T0mi0/@6TJ:6/$.j)i.hq
%=(Es,"ko=a&TMnVa>Y6u"XF/\6Z,YomCPrin;2Uf^N@VE7VK"S9G\t7?tE4$EC+&.MMQm_n8[1W^7]1u9EG2HK^+\cJ2S;jLm+RC
%j]$]qfT[[<baZJKd7L?L"DWP(6p[t#9/IPFKh`;tetKM`&D)_s2U"u"O:e]3Oek!.iBDgR`4I6mlPc'6gif0`#Y:Uj#pcJaC&omh
%KY]HJT&j.P(kM\n+;(tk$k&U0]kC&R\-(eUiR\+g!it]:+UPLhei3S+,XrX0Fmb22RBjI,]k_F?7=bZA6&'+=d.'+gjgH985XANg
%(DGZY;'J(?0ofk(PPK_idK0[p5b^VD9F[:EB;$ciDM+2k>B`#BJ]Ja-g%]rj>Sc"b6:c@h#]/?e?V:BEg,hd/DV=0rQonOV80i`8
%%6oH$ZO/Ls+sVl#)FF!Y8\fQb](K_UIQM>S1k7*P9Q2\ZoHE1KVC*ioI1S0XZg*B.W@K0Y/_s/gU=2lE8I..8;sU6a0TB<\aB?:r
%U#U[tc1G+HYrZTr-;kQu`sFd/j!BsG*DrJk$'uIA>1?D"p2qGi\1\imUKd=\2Bo<%_Q:GMZRXu>/,>hD:P<(D0U.6qbhI+P"?Y@N
%7"e3l4[Y?q&P;A<**m#!_-j,@C8:mjXI<QQrLTuSUCcrM.CD67/qWL)Jie6B*P,-Qk-R)^%_i3#Zo!#SW#pIh5AY8pB&V0gYR3]i
%2G)^;$iu>K!<iY:T\:#[1^6tnTjG"91tI>;CW"0F,W$0QWf8GbUduXRfh5pa(gqk3&E`$rM#pk>YpFosLWll1(%=o>"cPeBf-KaF
%Q&:0k^Ne,Hac7j:a>h$hOfS^e>6lu6B!V%r1V_dqb5N]qi>O!a@j;Ym/I&ZQGO69$;a^JL?9%`1Qnc"+%3d[B7aa%*E]6-L(5O2S
%_YT&+R29N_Z=+Eo@LrsE$%J?Y]hlKJ_3L>5J6\uU#0>b^b**Nok!2#-W$=!,XhmV3=cp?nO(BHsZ'![4O-JX#k+I?nA1h@<S@Dh?
%Qgng6<0MFJ=jX.Lp7]*k<9"JcL2$!Z/')\@QBOWXdRiIFWOD0$DmhQ=0bVgh=YF2&"RE1O)+ia,H5pS3E:6c4RH;9c'Vh$=C"C_\
%9D27G@>VHb&r/1$OgFDu)239mmG!l@k+r3_"n4tbTF#nX:`5^)SJsDRa2A7#!G6#-IUQae2p7s/<o@Y/:F/.9S.+,*KL-?T%MU#<
%R]o/S,]iAs8LH:bjmmQ@4;G/f^.#6D+g"NJ[jK\.=55Ph10&cMMtTf3FbeM9"`6`oGECdj6%8)!O\1T>piH]V>B_3iCl.D-.`J>,
%H:%W8]Hrp8e?_YpXO2%WHmLFEW:dThDHlk9e*bFW8I%e]gn'raAPX:Jb7-NKYU$/n`qb5)E"XBY8:?sSap)"J&8.lZ;V#%IW$R9]
%moe"H*0I"]O-u+#:9]s^6Du#GB>r#00+C'4J2Gu4#Hr$l;acN1J@\,A(J(DdN9OrP8K7lYNQ.Wf)5>nEQHj%U%#SIOZ9XFb0cG%`
%U8XFV9QAR4btuf%a,,'F;Kho32J3_=BC5^4fF+a>_/Pg!/t?]FNFEN`P5ukAZnEpA6OI!n6&W]^CjV_J6(B#`%(#`"]arHqaRPrJ
%><<P)<,G"HM4euc`$^'_6S#J]*`J<i/7!rS4Et:ZisaDqio`o@p]QN1=d$M8'Q'+"Ldme)>=aap*ZV/QPIMD*Y),C!fQPmI+h5jn
%,cS>t$).HWkS>ZXBMnjJ>F#Z5d4>f)9fcs,+smU\W=BuFC5/!QgmG$K&Q4Na]4I,`;=:Si,;0&_\FS<2D2!(p-)40'+Ss+7"NFDt
%dPA7lKt8BOE(gAeV7f8OJagQX44W1g)C,Fm87Q9XmidJu3^-[q$[\.4?.6'6<K#uW=T*t"Y'BiF6sm`&OHO$@MIk%fL7GZkLQ$0q
%BTebQ.6NiOGp>$j#foo=^U/l$37\:YU+Mg28]+^V:(B;ljJehPG^'np-!BK^-1Cdd8l6u]oe"V<DIJ^(Z*51SW][:pbE#X.6VQ#m
%N`r7$Naor")khGJ&Q-*H)UUNSc^mO.<Z>5(i"@/TSEsPj(I/qEqI^Sq-GUh$CtN2L(<8'R;V3^=ooC3=N1`FFep16m-t\Ej<Z[E8
%.;K_6c#<ds>C[+@9[%>f4`W3lKSlRA1BK#%Pq$T6(4D:c<A(Zg;N<5t3AB5*[D3R_,4Whp3u8)aEXjeMCo,k>ZV,-H$#rZ&T8&Zr
%UPEZ=*/':3N,E-&_iN+FKUBa1CtE@=FH?]:caM:^_8M.n9fC6^r'3r[D4R+,HZ3-Y]4M+GNa`_H[R2F4TV[=)98'CF--IiE$W>4u
%E0O\;'a008RUDeTao9`Bk60gLm,_LJ>Qt6E-\d[oUr%a0eO`$aAIpDT-.s;!%b]9cQXKD^C_NPM.L]-.QAH:jZiJ!_$tpKYfo;d]
%:/`GMO!#/6,B1]e1eS=8W89#j8VT_U('PW^+\X>5N>a'm7*%`8@(*1oOsrkd)1(>@#(eB`$oh.4-"(6%\V3V=Zu6TN1h1KbKm$K.
%HWYcOe&G0oW(=]:j>gA&\02ORUkDbS@TiLeaJu+!U;+X(f!!XW*!fE#Z>=sri5Lce.)qZd`B$lIF!@8<,aj4R[&hiSb+m=pk\/AJ
%W+i=\+7_'_8sQ3A9.8j>$#RY>,Q*kC_E2CFVE*7#3/%+\)$%jC>[=d9:a5SnN0(m(q\Jb-k0JZcJpe'abB<sV"qk.!b<+jZOf(f<
%nhnT5$jNbrR5cjET7SJGA1WY9Oanc5Y#CR@QMD7V?O+eB0.GmKIKQKYlj+k0rASGAk36KB-/kOK]VI`%j"_a>d3S6NeUGC8Lrrtt
%C/P6<bB4YtpkDCmZ&l4+9=(^F<)Uk)dH#R:YSMf75U]Ad$BrN^eX\lp3>s5>@e>J;1,%Z6jTklC#!`Zc3,c'-d;Oq7(%tWAR$/[3
%;j_>>Fr(k&0.m=HDoficn9UtZC1dZYl1g?YWjZghV9!7NZG1[i6B+qo3CRnH9)`p5cPRf_L'7^lQEDlb$4:0D3LdjB&]CoNH9A6_
%(_N3Nf<YE/='@m.q,U+RkU5DERHAE?^6J4FWM^Jt6I<imT,3IOI]OW?>2L-6HMH;[,S\a+KVsS_iup]ZrR$bg0q#0igVR`]pg,Wf
%7ip%kD;:f*6[iNYiQ1TCPHo<gJinYu)RA/Cq=.9;8*nmNO,&U]@+.N)#:%bKc-!tbLJp,B@3WD.6nr[#jEQg7?oprBV*MjsUW0XY
%A$I%1*]la2gKBs7L5?O]f\jW1=JD:`nF5`\l&dD0Su([`2OO!fX&L9**`(M-6sL"nR`S=Tn_dj>dKuR'GY$;XQG."JUHP0fM$+>Y
%PTT;2J]BE!P0@slJHtA]JXWE5i"\J2;4O3Y05>i2,JYPJ03jaaIn-[R^u$12*Rk]bT#uKu=cjXNniLs$P<!L*I4*:tTi'^0N>ns6
%Q2-G+#B)Mfmhd`W`[>BjL_^'PZLZia3mhlMhNaL>ZDI*J);)n:RWlDg#'h>3D-#LT"*<,AoG?@GKDo<J`spn;lid6qdG@/NP46%m
%]usI!<uU=/[aNLS3:G5_61U^0j'BZ.,!<+Ch@Z:bhMq*^_+R,0>YfPKQNAb!NU73.:]_kG-+bD,R,3(>'Oqpu4KQ\J#9$%LJK*,[
%[Pd:R4/TV%NJ'hY<h_Zc)T2B@kft:[M9pSq\hhE8gH8uW.h9+!F`^<$\7%d@6tNsik<QRCA%J.$k"KtC[V93^j3*R_]/&"VPGP(e
%Vn+Yaq#hGNF<S1*YW=;dh'D7+mR0_[G[\5E^!PK`f^9/eK'?Lcg$Tst$K=[%B4+:llR08*8>H<]UUr%sKp7HQ\iW9@qrB[!mN<:&
%Th9NA!.*R4SG;L\\aE$P2s7e/LjpUshtZViZG^(0`ch[[,a8E(FE[_4nt^<,FE`7l&ou4=GA#!l7390'h]6+%KT&^kmO6uu<44md
%OJUSmgDp9_#b9W4mL6n)R/cO:mL3<Il!#[oSKV\JK!^g2cG68B!GG8QB?1Tt_F/T\.Ki8:]7V@Zs4tV:LGiu.aB,f3U3_rmE6`W>
%a?0_C;q^SpmR@i$b'(fH&TDUZCj/FVU(Xkrh&3L,PB0[emZ;H8]R<:o#L#.&&5%.:#eC`07!D/b3:tu!FE`JXo7311FEb_:CX6hD
%h&4e13]#1>)5g1[NU@8h0B%IBh45hu<"9St*HTNWDm8&k]?'df-S^e\XLiCeGD&:.O&sAF7mm\^9dna:Yn`ZXWGHc&Z"AXV:;dR>
%/)B$'Y=a!d%umu%W&:^0MUl+um\URqE]Y0'9Q2o78.u);dO?kpcZ[>h`[De\SRJgV6r(mJLG+k$U-#eFlnQ=6=113_^IWjaZJA[C
%A&/lEf^;Rm/>;IRFpBQ.8LRTI43K<WoKCqL@%kf3mDO/Q/4Ppa=110kP8lO7mKb-gm!7=B"UI&D:fb"d_iC9!2sB[gEuN6&FE`h6
%E>U(742Y)9g:MF;4.pR"_*Op0,D[5RZT>ZZ5V`VjGGVnb#qi<$GLK>L\iTmX#[_#:])u6+AAftR*H\EVolbG$:s?e`;<dMApIHUZ
%e(s!T,3)q']/.A::#eWcB*\qbncmp@@CS\@N/.UlPD"ou*Sha3;JB/,mW]aN6'^mKk7l;mHbMS3Erm%Zq<j3N2<q2hGK).7>u*"^
%8B;L_`-96Ta[WJVG@q1p4dZ\m4/dXL^GW_e*7_@M42*e/g3k`E<PCP^4cWO)Q1*#6"F'^kM=1qrN8u=o45^B83+Yj.#EPAi<L)k[
%N^21D!(+;o;0lVrVE:KT8e]Sm(dO&*&U<_Oe&>iVB^WCe>b"pa?k@Q=ESSN0H0XN+G:8kH91rd)6dI:)T.7YtN(%nTGPlVTRBS?W
%dbC/jHjba"G4]qhZf&RFgHf;i2dYb9bYU5u7rJX;UJFnSm0lku6G>)EFq=qIGt2e.&&K<"A[d<J6"825DF^0cR;jQs45_]b`2f$T
%Kpm=kjE=aFr-a]i+5K0e?\]t5cYWofR$<8`aUVp[YUWG3Ua>FL=WI-3E("^X;E5?A2"Al50A-du-`Fp-dTG<[/.-Y3KW:Jo'mVbA
%qO\C"c-IFsJX]tTCRcJq8e8=\:'r6Q.l9!8&SKEDQ)MoMQCK5S776)?7?21sl'UiDgGIruZV3Ib1D/@RdMFs?-anZ@3V'DS`-1>h
%'?[1EC^8]P3#3daM<tTJ9Fqm![=^^V8ERR.AlN6Y`b`\-BJ]24RED8[o@i/g8Rg5;m9$8'@`>Jhj^m,4gG.HfYq?5F1#!"$ZZ>%3
%Q6oj\VPCcp#N^p2*Nm>(L3Ft^U(Z2uVYALCYFT)7MFgT4%&'NB_M=0'%N!PGDnL74+G>igo%Fu0*OrVqCBk6n"1u>@&/jJh34H_>
%B3;5H-X&T8(,57sXW9ZLbD1$U[!&<Iq);J=6\L.M::,0k$sH'PdFpn1fLM^EK;=IU::,2+#d?WcCBr=?J0^-*%MEW_;-H%Kr1c"@
%4V)og%u*\lB:)+DG(\?Up7%p^Ph$<W,6VUNCId_pI-[BTc@F:o<R=T:$)s8Cm9/ff.q(WVZ.`&VU(OH2g;0q"K2GE[B*_R%VMWmL
%!/&'8p*h_8+n;#YSP!tJT]BmJeIE4C_l9_\L:FJ0DQqjbTk*5`XELssL`]W"m0k^abm(-f7Of]9Q./RUCRMJsPM/;RN5Lq1Np(+X
%G)b"3P!M6hM:Bg-,4S9?#EPM%IuVs<;#rW:%8o:?_@e?$Uin`;`^%g4-+,P)LJJkZG*%"`-;$@08]3J@g)0srR]sVAB8Bq9rPWB)
%pG[@g';HQP3XCZ!SC*@+C?EZP7gY%!/#++2UJDhfFtfu'<LRsJR1+!#M>T/B["F_pkXK9!S4<;nV4@W-0rp9p8ison719j+*SaH!
%k;?!r?3=0JT$tuX5-`Zr1Gabu3+\V$N4Y&&%+eA1_)[V"R7_1+]T]qM7VQK@d2C15V&e?\En\`.mBEQQ;#Yc=4,AS7Z-q>l+%3#3
%n7;'?.M6RCNn+\L9eS$!*@/LL?>8d4b05N3a(pI>-GF`d[DTf4"lJq*d67&(rkL`8[[AmCUV(c[(P20=>!#EnkZR,E[!#E2"QHJh
%Fsb_/p70\DdP26l6u+0D_hlm'LBEa'*N:'F3h\'ge;j%p/10dUm;T#/5,aUt0lfa`d7S.d=NMNL#,rV>p'nPD/#aQO=-sab;EL'l
%9jVD=_b[,]Y-Qb)MFRa,T%+<hXn6g0CBkOU$-#tS4!>6@@>!4XA;.p;`-+O'JEtdBm9jl-+h4,r%X(F>3ip8CM"_3A=XCL$hZRBY
%3at2E@^$]N'&2@WAP]35@QObqaadBJmDqd0[#^5!DgX#DNfMa%#+$W4?7!$I3/;$ANS'9)q.(K6M!`R2:Zo>%gE@OO"7!NKZ(5It
%XCf*l@QQuM(n[tDG%`oa?UZ3J,EG4ocXKC\#I-[u/$kciS=8#QU/HqH2(=4gAigpJhReWtc7g(&il#YG#gN[uX^ef'+;b^VPhD'2
%%TM%#ZQ5`YaZNmtm2-UL*2kXI&UliVD.l;W5a]r^rN\355sf[``b[#>o*kZDRI)Q[,;9/@Ce%k<oRZ\ZG/Qs+g+t3*#c<Wc>FFmR
%nO\er1#%iM,E?JI[UZX*f1j;%L\<IkL,:X>&O@gY?`"rs,:,Z?]oLd+#XlTAXNYk+q'(*"A[WhHOkbE2Ce#BJEf!h348.s$NP0Ae
%iB<p^(s]\Zf^C`PM:rGt?18^nC--I"nG?1"4-:dI;;:W=,+2Ba&^!Uo8!Veg-tL3J25dm830OD>RI*h!/khn&foAcnik*I'mI2u$
%=&ropTbbc1`,(3EYig=A4-['Ani^#_4$Jn\.Bac7k@IS6]QWX2U\Ri6m0L2GE-rt?,L[>k6cX"5'N\b&<b=DtM]3sblh\OlQKXGb
%gX4KO"F0jkF@iUc^J34$ide=_7]GcGB>^IH8o7(]!gZi1e947IW%?AK3CM4sG/c#BS^:l+DM-^S+=QT]C#jG([?Y@rG+3K&q][4K
%\qc;2?M$QGH95SQER^91:*p][=m>=H(L=&<ADLcA+_#FqA[`n<&T.QjDFYlpU<.TNG%A"BJi]a;,OnO3XY>A_p;elNkj@S,NuGK;
%\Md]Bh#^2e[lr.M5H.GChQFN4n&tb2m_@PD^V>)k^S`2>nE$:GY<FH]\h/P\p.XR$cG)!81]*Z&IeDlBq0-G4^\n"Zr:(:6QfV6i
%rT^lZcPYSYs7*!_s*Xe1S:BtIrgpn$puL?3p#bhFr8k9UJi=KQ]t6FWb<_CB]K+f\k3SRqb?$Xc1?nMn\,USn48gK)EVmY_kPWMQ
%]Dh)FT:arR\:/YpWf5uWotP+2E;kda:+tMh:L8)rJ%rS)I='#R=/Tutg@A"pe\Bed.*XIDqYl%oJ+;gtRfu1-lh33',t%K:_(^<t
%o^D=pq8LtCgb'F8^$q,uaB]a#5)t-[D[=,TY:kBLq<^,=?^gkIEq*n\=E)Z+QG)g^ksTmu'O8=uo9Zf<e*kSKW5/5Jqte%9mr#kN
%IonYmDr4hQfl?]%^$W>h(>V3FY>3uHs5E,<s1CG.3a8<j2m2&ii3'4I^V.-?]B^l6%IbsQqqK*OU35*o^!DE-m]oOUq>J3p?emfH
%G4V?sf&hC!ID8KurjVdE21+BXci!n1LPr4FFCV6FERheSfB:cSDU-Q-G]W`K2]$+"7^Qhoq]!kP0/sohosa*CVmk8:$\gEB]''%_
%o(pV?f5E<[QYi'ZH40QrpV4L^5<44Ao'u"fXfgIEb,qi%dC=4GFlaB4_<T21gQbtSE`bK8_t2qqhjg"7E;A\_Mmo`?G=Y>Ep#T4]
%DY<+Og6XVp$$ePWlr3Cp(4D=?nT1"EPJd-:?CZLhIeiduVm!8<?W1&!`2*;)"O>0ohV6f>=.c"4GG-l@$Ol4ojnftJ=-rCD3iRS&
%#IdJZi/af)hS-Z_]m=\mkRQ?b?Ei3k/^]BXp8AUjN+'h"qeD0^mBZ,!nCm4)p$9*M\*quZ8%dIR_Qb-C0#*(uKke?.lc\U`s8;kc
%]D\&`SGD,a8c1oYgXhlu:_`Hnh9G97Zh)Mh:6uEg]6mTb5A:sQ^HFgYbIbC[bqV\+(YIL[oXi;qS!V`.Df8FTQAfSU-[QfiY^Cu9
%s4=a3=6C)4i:N3XFZ>7#3=H;Xke@p-b(&m-*B))qESs-?B4919QFlheZnXbV^::cQFBL`f2im\OTBfPV<:,F81jU2[(HD36^uC"=
%i(\gDbR#9_V`?Z-k@%MR6dl#CNeMu>A^&C`"tnW]dTSD\])j,2)#QZ=bl:qBIfHrKmCQm;DTNaN&ZDZR3";K`T)A6CiqAj#kI4(g
%F&Zf4ji-V"V\aQ'M!O#ES5/Q@,/"N?I/Ei7Ilb@?qA_;:Ph+.NNV53Da.pAf>33)6CcoX>1f(*:Bi,bpJVOQ(=tNZT0Ufm4AU8WM
%IJMmbr;=;GUa)LX*Ktc_TF(Y\o[Upm-#0Yj\6o:&WDmHB]!sk.Oto6OcYUFQ3LZK)P"#(qouEi\S(BUVIWKp_rUkaUo`3g0VkqC6
%j`R6=lRB4D0'QVEQ.O@Bl9'c(dO1]o^06V:3M-2_LG"S,g>GJ+"hWtS*;[ZW;!iRNh>L\4Yo&O5ZO]^qhmKrnQe'o@YT)n1%\=mM
%.(H<9AA2]B[O:FP04Dts3rB&B-XdI3[:!,Xc,mM,0FuQ3qakNRaHXC9k4Is(r:9INbO`&OnWrR7lt^uu?''5Uq"V:IZKK^!PDcp-
%?CmaZ^H''?rR:#?7sX/(-hT\O>CSKc+7K6,r8SDgY$QA"9'"p\qLUENdAZ^sVr`(0auk^%U>?!fi+)#]QY6U&e,-l)@I(Bkhr<"l
%qN>I=UW!%3&?%W.'t.X,:VAmPotiJTf,'d?bKBH0p\-riCoQ*Lg;Es7!SfcFNU-<raI@7>YRAJFlIEl@`HR5peh5e1W33;,Q4+'f
%>jpO5p[/5C]6I]#3kbIjoS:$els=>]T&)"tRW@N(L(kC3kLC4#,e7Z._cU<X?8"$<YP0u1bDWFmdfl9\B;_)/J%AraE'LsV?\974
%XKShC9Xc:`,1dj>(&7XfqTY1EQ'^mgZT,Y0GdBs2roUKBi!BCi4j.Ueb!A"#B2>K>A]\>?-%'^NPphPS_kD"-,qr1d=,M%lZq=1r
%`k\ttjZk$Q96Smk*'HeuMmC.*4H`m47>pI#CJg[V4`L+ZC/L9*B!"L)CJfP@e)j6QU6o:Q/]o7`Eq!glX[P6LMgDKo3>h_'kZ]&'
%<e%-W-tc>T(1kTqNb-gla=PRjf$l8IQ4M=\qtuc#%A(&-_JB)_a+q0E4<NQ[hdW3rn>,O]J+m;WIR6/^00aE/kSVXL,n[n%62GkA
%JC9L<qQj8BqCn/%<NePRYJjMF/XV,iYH<+feS@[Kf7&3J,ceJaRVR\[f$:Nk=08oG[>/J(eQ?%8[8j90>4&;&[<Y7*b<=pq%rFoS
%9YjM!aW=F`E8<tohaV>97LQ)$h+$]glIJWG:;VTt6lGW((DS4@Y2,F5p<2CO.OsqoMgq:)IWg#5_j>`6Gs&IAHu\iEr:S%Zh-?4N
%-.KEeVmi9L!bRg*]<>"YF8k=u:?[jN_kjn>RB3&<4,:7rdQGgZSffG@=b7Q4"K4.q^BLLXrBj^"?1tYN:<^b%3&.-)F#YWKqmcR7
%r;Xh!02<Rda(9`Aa?pMG%a?hV>""'/K;6&NqV4M-j%!%d^MGmE`%q>P8@ojh8,:"*G3J5Xc56BYaeSfVHsFG^pA/Xr_uK;q/j8k@
%p";MD_94mNUXT>QJpm[3/!`$l(q=6t(A*25gm(h'`o-T)3\M>f&dA3Z4mLoNA%8QZWuH]Gh\[DJ)'AdEpb:NNn7UeGc,K'/DpE9f
%==csh7QqI[ifc>IO"h7:^i-i.qQ6<;C]8P&s#tOh?2f$Y^k7ENQIl''Rf?[b^MEiCJ\t[_^B^8.>o>d849%t>&K+t<I([gh>][Ua
%)VI1@5gYtk?$!_qcM,/0^]H=Miq;V]DpMcs?PT?tC<7CKqSh=8S>@1fo7]Huh:;B@eIUi0Qe1-P5IAUlYJ7V"(Hab]XQY8`D>mp]
%<l4u=rpJokEM/VH\,Pq#f6rF'dd$OT6AO"K&ZlYN2+%#+",N$j;XJ7eD!00r0\I?k>A?Ad&b=d99Qo&s19p%-rqbdTr9E<O-(]Tk
%%cWDMY<W$Siqi6Dp>_Y6=!(f,S6k$>f3[KMqgdI)&C!>P/H<.4hDDifD[J-N(t7`!?bCZ.HPbdOG:_8ppDg(+jFVr=:LQ-J[5R+[
%EATjZoBdrmI8NI03;-b2i57hc+5VHnIT?m5Rn)cafMatW_5btH59LNLrKDlj<r08>s4=a!6[I)ZVk:&AQSn9<#%#lrb8PV."#"HJ
%AIZ<-HgDs#,(UPi_D(tp#$qel"'l!^%gfo8cVAdIFZp$D5l+_+Sth;g4ggU0#K7qu5/QmOcmBesA@,.WFPL7;9)o#oY_g77_kD]W
%//c@!K2!mM6p(<FnYrd<4B\J:bDY-$:+u$o\$(SI!@tPME'+ORjj4OYVgu_X5WA#e&'3jYG<Ho>rJah\VPf-`oRQDAU+`Y49D_ni
%^DNK8cbDJgFoD82;Y/DLne[roX^1`-@hKc048T)RaB*TMd&q'C?i+&29?+2dD3YnXp@^Ijm</C(p"T(Bm"V#$<sr%!Z0hA%E/_P"
%+5k1eh5BKG*86a)`72WnI$E/K><T>\n^*4:IXV73^;"p#W&dYVgXfi)RBU'Q92)EM>$/crq'+^d0<82j(EW9/=^nu2d;kl=(b=80
%'8pA=23)ZE50_Kq1%H!6@k8M8)TOg>:\WN8r#3UXiu!RFA_&i\)TPt?(^CbqJ;8;p\u8<eWV^=@+1Ut)?u],JhS&a.g$S$JMgBI-
%([l-9B+(F=7tYV64C<X:o%!!Zo0;$#s.=Mu=(b02JrT*j27BROcYkIScgD-cG-M'QpU?((7>nC^H=);OI</RM_W@Dn0:)7*aRAO;
%=hFXKDQKb=p/do\irC!$U(UOtTq+PTEJ>NI=AKK@k_[(`%F5ip+5L6V3M<SM2i=L>QF+U0I=628B$#nJb8)!;Nt_/1#].jt"b-IE
%mcLQoQfVI7k+LY]5sJL_<?HN0iA!Vop)0lY=Hh>T.(t,,r%\>MAp?WG?V?,okiH-/^;nWcHS$,Zi>6i8L<,^*p!3Sh,"i=/4cV-/
%Ip9YVP7#;?CGc#=U[bhfq)gkb(;EZBFS4b(:4RchEm++2lHQHfh!3.dhV@)d%]_O4BOBi!]X\28nl,;F(8)5?hV>iY\HO'hFlj1[
%R=!`;Wn!YEh7;(,>MZj?SU7[1>^/U'gb\O9*4eRGjCfOEA`)S<?+U&]IJrHsS'r\Ha&D`qSf/Qc!nV&gAD"YX]!-bb88-qA*`lgi
%a'<U1NY#9$O+Vd?b3QqFAF([OG$,56Tj7WDY:`VsrqZ)@Lp"KU4hJ6&iBJ-46JpZ!E4I6WVUt3Nh(<0'5FR#-E'21HNW+H^GEf`'
%a5OrVI#rF6qE"8doZ?X+5&'?@/V+sM4tYT6gjFAT!)8\boB#W[q7N&=$(J]^f7I5N5kXs+koqp]]6[hZqYlsQ8-G8OGQ-rWb'lOa
%boc:fHj_DqhS-UII<p(NoX"4WY7Bnp)TH7#h4lusQ88e2nUPgg!"F("=oN8HG^+E!hMqTF5b4GEpViVGM\:O,b'f8)8pV#84HF&;
%I<%UmiR;@@^>D'8Mbj_-We]M0>'$`UYZ_6Xe?of2)a52+@"Atg#Q=]FC&99))rH67^V9+(s7PdPebOh%3;mAFMH6M9&WNO8-MlXR
%o""2IUGe"$>(Q6s:>(9/)4k(9s3Zh!2;%k`QJ=^n\n:prE7)Ccf)fICT6KDi].s)u*lAUJr6IN@i?`!D$fIm$KA59#QH)-!s&=A\
%[CW7p(Ur;73F>1dE)c#\ji-V"V\aQgOR(kM^^=pA*"TqX3V:4/aVYNdE."=JFmoXsEkT)VNJIOnI^*PG0h.7+ZGAmcH6,R**maS*
%e@.E[(%JXZ\=Y%ugV&+da-^FE;.aNaYJ<PRNtn&G"6dI_63":W:JGm02rc!HXN,YG0dt%o5J$hrIf8t'<F!SCjPQJngF^4m3@6>o
%G+Lq3Dd\@&-D$O>pJ`;"*krq;T6oec0f#=`"d"[U$S:e"8'-"g.+;LWo9Z)K+*O9gs+irfIa$t8Jm?D"CsRak5u4Z!%]KT4\A(0F
%1A-i%PT7NK3V^9tQ4VFbV*.!A:^ai@O)5[R]g;U]:*?XGJ%Rt[q8:1r,6`.K0e$p7(?B(F:VXJ'ruXnoO58@`qV$=RV\S4f_n2tU
%^E03iH(IccPBE96cSGCXE@s&R.^NVgAM<a\*'tGH/\uqK3PBb9H3oeP!Nu5'2]NfbeDjt\g;08L:GVD_X)>\<oG[SYolXC-p:JMk
%e\h3flZFeaI%1hm7s]dmOs'`"GQ26/07SKEWf\H%(*NJEcdu6jQ+IT;kaBS#S:>s,2?0/,IeDlBl[APpTE"ECX6[t"0'/:(It.%R
%q<Qdbs(FCfh+,3u:B'e^8&'@Os#ZbK"okOO5QCKZs7ZJY5Q1$pqu4MB-\"2Q?iU.FnuDWa++O7Q=3n0Drcts48I@XE\(To-2\_>H
%\J_`Eae*-+`93047e>CS(HYdBcP*HC_s\uC(n[:*:Zf-FAuN1TO)HfQgk>=TLGAPTHFJ%C-L.0dM5M/\DE/Z`p?5k4oW&d8@FjL(
%0>>9nq7"+GiBt@@q>07GeO;4V:2DXlSdj#$_$nnd%*r3-\$7?fHL?R)O891DT.e>'FnWAlhXTKqeUPs_(nE0q&E7bH#(Q3<I"9gn
%K,639:&b=Q[9T?Hqr(+!";C801LqG#n.IJH-%ZXp).<9X(l*c/7%8QX-iZ0n5'7i7RB/>iY*06--C5U7M&F5&>eWNPX-<Lf:3Ne(
%*V1+Ck4cg4VB(j`qu(3"O4Lo1>!%D>Rng9Wq3-'sWpQDL0l;obr;I6%^7Y&H;jL\RG![$^T#kPhkIM@UH1+M:nTo0nM&F<sq(75[
%4(]kcB;`saq4HoTolfYm9sjG1m+.(i\"&FkHh8t8:WfS?ScA6SO+-bGfd?`Dp!Ku&ahRfOaZodfDAi,q-`W^+Gk^"*+lYSJ\'N(Z
%7/Qo;PjK_<1)_[\.aN;UIEp/oo$:'s`bs7,EO8h'*,3DJU__/&8F(TlS^,=U\Zm*?Q=UcJLjK@'I#(hS<`'TC?U:'N]BoL'NlrA-
%>a.MEe5+b_4]mupSbq>][L[5)D83X0mX9?2n&(ZeLFc'$gaQ@kAPRlAHZ"<5eU"ha?1e/''M2G<#0Q:8R64Ol>kFQ0\]i9pShmWF
%67U<AXut$pY>AQ\H<W;3$.$XS=T*if#/4.6kfFVU<Ru]*\jS9%BDh2T(-Ph"Lt1gLE%#pUEVAFbqdT):D0eDBKMUk1oB=@q_/l*C
%r]?uqGb2OBGC(_(5,A/!T0C,,.5+Sb&&,+qX*m[Q1K+&B_Z2^"E21fd*,L;^/.8X4C<lpHcSKTYQK;?e6E"X,g0=B`MkVt93EhWE
%P/K]X)bO">B6A4+A@kM%i$ZM0XQsG&RmSt:Rb0i#am#(CoA%>QRFs,U[rnJYa7[g)M"EfVMt83[@kp"b11N<[4V&#.mD&gHHOeBY
%Zaf*20,l,^Y3tjl?$U+OcuLPHmF>Kc[`ddk^3l%ufk$uorJFn\bS71p"^&K4;$:In6YVk.*ho"O>uUj,(-e*"lL+Fa%*oC^1;u!L
%fo;c.mN;8[(Q4pO#>>oJ:ja<S1\RmHf3];;j0j01If8B$L,CO4P;@Hkn#fuf]`%!bg[gUfoG`73b?u$6H09H]2pBfXVoRACJL12U
%XI%.B;;O@1U@d?aEi\13L7mL?cXU+o=MV6fQ^=,.:_nER#X]$'^UWX>0cLIXU,=,FbLMYK[ac43h/;?01#Ch=Q;p,/NlQ$?UdHj#
%kM:$_;8l?jA\Ve:*fDqS\gVbPemf?Y1Q8*2gMM>0,7h\d$-Q)J-hBohj7>S'n*Tq#cXoi*CusM`*4abF[P+WfLZO'dhq2_QkhmF:
%Q#Uh5-Thdu$i4mI4gS_[8+-'p$CiJJp.[#(`_NjBh[p5Z_Pjq*IgJ8HF4$4`Ynp,5XCNmW+8=+u9-<G>q7Am2`Be_DXY]%0h,(6k
%mlaBUZ0MIA.:K5.S!m@G7/UaPcCl,$ZJsalNoOC"DK;)rbTFCgJtLn0Js?:oE3G"I$@63e$muOc3ldFnpC(fJp!:V".$sbs/$-Gd
%^;Y[C]t!Z'AQEk)a3`s=h5rj?m26>PU35KI\FALsn'958^%q!em8Q'o2!DUW`WpnBc=Q]3q(Z$b7SMp&nGGXnGK\rJ9X/UlV>>A5
%3u2BfYC!nS9cnp'ICF0q36,q0jnF\^Yk'2cLl3mUM76efS=L0MX$=cD1COW8>gEk?[ebYuT5O'HqYA?1rp+Ilr$GKh%E=q9p;Q^t
%,qXi?fu:_O00_P5H$t-b/!6t6kOe&ijgMSdU[IgP/#4s#H2`HQ/ke0\qs<tKpAF(<YNK8"]Y2#;'`P5S!R$J_8NCJ-Inf"(rU!t<
%:G8R'#CkRc@f6/p6I<*_GPU:D`N0$B4j\(2&CA3O\$JR6ZSAhFpu6dNGO\9-]\=NO$8$!XE*&"f:[d.HS?:bd2*AC'#M8J''+5<\
%ibNCa#BrQ@G6\A6,rR`Lc!l=>hZP#H2J@R5fO3,E*F,B^*?,F1@Y8)))gqF%GJj^SGcnsh;iM6(7Sc3MCs`4CfO3JT)]WT(UPfSm
%]uC946Xk[[EGX#%4L)_)j(s!&7[HH"dD]7):d]?OCqG/=d%HprK4.hpE:IFF/:FTf#&@VnY&V:M)AaB:`<D#S0"An)5>5=DgLBce
%d8OQs].5Pn-Q@Pm$P(':dV%VXl/IEQjiAA,&C7L3[M^V>M3#WMiACaOZ!<r]a"@ja><$K/\=@g5*SO5V1fAJDYSmr]\fr[1^MNMI
%UeTDJ;u)#[g#_CGb^+,/cr!NLnmYkd\U6PQoL(,t9op%-\=s2QC=&o,n56q@2/p*CJhko:ij5_f@RN7;V_F?DXKO<WAPmVYR4[+l
%AM/bVVr?E&iXNcI2-*I;([;GXV@S30E<tq9nth6QRcY!g[`*@3gXH`MldTNK8g/,1b@t*Y8"K3a-ZKtcO4uG^&aP1gBOa30L4Ntk
%Xt5I-WmM7T<\HAd'=;7kFqCYm7$!WuQ<gC56Z>9q>\7e[<kCK27QK6K/DH9J4#f0TDCqV'\Fte6``t`T`(+mD9Q,2r?bOmM#''IU
%5)8DM$ph:j`LkH0U5#WmnmH2@U#0-_gh/\Z`o&nt[YriY9f[9=`4!3_r.uq24h@^lB@do5=Z/IA(?$n7;biiE/hX#9*i#dPmU^Tk
%Z/j3l:ITo*??Q4bORYH7l_#'OoO<K4#Erac@$BBfAgk4%4:f'Ce(#]8Q-,$!C'polN+G_A;*@uSc%k.-0%P[`Z^Wdce@f1s@eoLC
%jCnp/YmP0Ln]GC2_A^U@*p\6F\8mCr_+Wb0bJDdQ7ilgAR.A'?';B;>02(1=Qg$of@'KjBGfIpMa@o#MO_%WfB2oOFI>)T(AlVQN
%8?sJ`g(8C,-8LE36X;Qt"aNrWPkuW4)p$le7eTP`[;^V@RkgEA'a/_=`Or%8]^/W5]1F"#'T-?J$Hn8[g(^P52OJfe2,.M=&s/m$
%HpXl'@Sp6&:RT$GeRCsUl-RFTkF>;9N367`d>5Z^7:F.d+/4!Ac,^uOj?i=UYph6Q'Ge(@k\CH6Ce?n3;6>q#"9dC6(8h(6>Lnp/
%'6<I"?2NpqmTmpW1h1i+,Q&2'#e/u4(1GH3XBC36Mt#6%#^JoU6-P0LN?CUEas5EYJ\t8/bkK+.Ol.9(OYH,TO`3feIP[W]b9Q'd
%c]@P<,M8;PLqE3`9-=%?nREl)!:*M1#k=&*#js(<&],Q&KY/gp!2FUbBa"<p1r?IVNSkj8N=]kf5JJS;%i7juq;[]/i$r5%hn:Cu
%J1uc@&^2eenF5VT=SuDN&fC:M,/L@KKV+W'5RM0TPCU`sRRpU;#p6+_(lj/]L=NH._Jo'g%8<a4i9$?m<9Uq3*?2pXh3&]`6m\pm
%TdC.FMte"ZK[77R/lOkH94R;Uojp>CrJmN8gjED&_Tj$Y2?eJZ2`6+bAhrW0(lL,W)29Wp]PPV%Ok'Gpne$Lq)a]3bRhhC0ANO=S
%aMT3K#8#fLC7uDkiGsp<q`%P4J-apYH%oe6=P)E2S@`6o,!6n-/W.iXM=,OI\(on#L%AB8`4=O])Ic2BaZH%o5M1;#DbSkX:?qcC
%7$$o(C21ua#B$Q`/XB7Eg^8Te\>u7i]ZE<jim6Q*(UkrfBYh3:G%XJhIU%/8LR0&s0Y:pZi4Th_TSCtVF&TI8*S6V%2o<#PM#*kC
%^0#@3ikQ]\cu7kB\20fNYbQ58Ih^a.$C\?F^)T`0YEr=SX;:`Tl"ag_0VSb7TXI(eBscg<jqi`_&[u\.s5u2@fLNB!5#Y4;E7ah7
%7RWY3ae4HtVJia0rSUA7_fGLZVC7.<E:`OBmsSOo\?C:p]VU.&)'HV]rD7Y1flo0*<o)UI]d'YQRWqbK9Jdq8?-A[1bp)7BO(h6L
%_ML-^lgD;VZ>@57Vc@G!k$`$`Z94s5@:,6QUHMF;1&0#W5*$2YH(_B1Ynl^AJnV_eLnmA\7a/dO#HVMBWXa39ArfXkQaMmkR@!Tc
%WX^WcS=NC[;fsbqma5)NC?\kfjd5"W;`K958R0Q-<3leJhXXu#e.;Cj>B;^ei9&c!W6]Ii'*t!9kLs"]9aR08C\2N9ldi[A&Xj61
%NJ^YskT_5C#*YoQ&$%U/o@M-qC*P^?hG2+=eOJXSc*:uXXkU;hO,`:Y2>-JI:47M5$F9Fsb'gc]EZ]1%m_cTk\IZG"q;GNHInG1>
%hesi+jP#USLYpC+[,3OYIWWnSZH(4=pj)SNn&TtUCq1)>G3;'C<6l3bEBE=Jh!Wt<Y11MC9IHCqBA9Br[j1RNSb]3[hopJt!i^J-
%@q234g&!NHcL&o)\@N2_#mCb@`8.WKB0O28eAoSq`;/b9VEWdqe480:I7ta'DS>=ImULScc@3MSrp[IZ[(Ct-q3pJ[*>B,RkW1,h
%%Gu;)eEVT;oAOk'52>SMLYIseO:$fgbf@4Lo-".<c-43bd<""/(5dPW9'0XX0&2`fO:n%B((,2j\#00-B0NV5+P[u.-(>d.0["j&
%RY"q/p<Lm;X-o$9VTd)u+8]O;@jU_thb*%K4E^f1T"@)U;,bYDk$r4qO/[[ScP%C!s+J<R2u4mi0D(sj@!@?7<SMYi=RT"n6F"Pt
%:4._\q3W'K7^jW6@GF!:0f;f&?&=ViZ?$?pYC@`IC1Kjsg*c;Z>tFk2PkN2e796t^WS?5BG<C#CHQjG>dUVo2P9+0SG"E3-l2%2G
%e"@XO&(Qsb8IrQ\leuGIO'2@5AA:(W-[qYX#,BQ5aE`_+EZR6sOn2+*EZVoq:B(REGpK<PLU-/%M;[es5I`DjH"9W634ndKP4QaP
%kFor:O*g)KV%7._6`OLUo@OXqHW\SRI16n$Q$@LUNi@?4b;V9J7VQgf^NapcHcjA6k6H&`6)0*M[qIb+32"F&0ht'"/IR0W=_c#+
%A+?VX]5M"e4mXc$n^75Op>Z$0KBH'S?N5_NYo%Z9]S:Fh]S:Fh"NK9H]lid6Rb'C_RTHT>q,F`%]R/PKDVja!qeroa?LMtOIX6r5
%[lNhbb\>iDJ(fh$5/`uK0908AiQ^,lWS+F[:Mo+jp2TiMCu)_B#.N`6N=l0^(h))tjj5oa\0('77gm)B^:di'V:S?([8M<P]Pt!;
%52o3!'omQn@p\,]Iq#PP$HKfr0s>Q?q_"1@iL&5+ksm=k?=#)*inU'BMCJk$WF651+a!:ZhF8Tb$Fca)UI6Z'8[X-*G\OXlD,WhT
%75GUkX:_]#RCV#`oAIKSh$!Kl/23i)4RdG[`ESWD0:5b=Y"YL:KWGC:4G6Z2c,=eu%68UFS]dYM.UI1X?/*IP&cc>qlI>e_Dk:4)
%Th-5$]bsVW8(E,bpKgkpZIS5OFpc2_j9Veelu\F&[\#J"oYjf$KT0Df\fi]'oan,(Odm-Z+V(RqFDIkge-5]jXDAn'hM1?kka1Me
%H=H,_PDe!2JHZ&l6F*AP4(\U+]a2Y8ba+6!dRTnOq4oVhlI\50Emsm-@lLN,4m!4gS8n\ab\pCfYP7]AF<(@Z@C1?9SAn^ZA_)aZ
%,1g"AHm?bAolhf/Wl!b?9r7GY?Fa:6!(%NYo$PXi-b8[d-n!&KP9N5UT;<t\C(6;FWa)o:*2PJ+4'EVlR1S)e!=V]n4<P?^;,+MO
%QDKL[VG?SVKkGO%d8r-2?49dEQM8\mg1:.$9]G;RVgH_/[64h/h'>^W?/6fFH?$\m-8BV53*U@!b3=.+'b9ulVVBY_G0*>oE4;m!
%"XUlM[e#skj0`kO#OsQ]69+=A"k/j\/MQ'BHfZCgZ'!NYnDt[\j0N22AsmA-[#kL>!QN7KbVO2P62B0%a]@mMG0b0\\j[Saj3Tr'
%V?jfc"hG>0"IlTQr>B\A`s_qpmpeRD1LW5-1\ilrf\VAGc0PfMa+i_N^-d2/c1o$`E4/faN^X[@fAFd-1V"WH<8@KCUqo(QZAE`N
%Nf*3BLNMO2PDZ'`;@aZA;DUhm=$&$U^a4$8Arc;kgPbg`NCUb<d:Y4;1d<Qn`'X5r[663CVlm$^Wq#&feh^31gKN"3ASIOrC`"*(
%SZW2#[HXttiQJ7$<AfbR6a^R7Ni&;=rQOkX5\YL$G@67F26Q*(NirJ^r]JA;F7J:V]GqYd0ho8iCgCOJ<a-pRLt39XC/IC_k[kAa
%0q?[f&5_ak0hcng]iPr_XHmHUCO0_+F<#PSh^$/-V_qV*1#4R(@i1hULl4&N`'+l+:$.o8kn_FcfTGW8dEJHCISI4AHUX-VI@SYT
%Pk;W6UVriNbSt<%&`-9`J;U[\nke(0asm`dL`31qltgBYES9#Cm';&(Mh+%8f591roe")s.J$gb;nYJgfh^;kUI%$:\eikhiQp&s
%JT.^-R?[jgW?!K&BSV0m\09auj-G'ejV>2XK%!^OS74]b6YOFgIjU</nnoi'CM3i;E@+B#MDP^=aT:t",\Jjf[N*mO9)Ns\LFPE%
%+Z](IAf$etc>;@Fandr``7*I9pRI4YHP4Whr(NZa\gKBS@/E)AM4rYg.3F//T"DFMm^=f1=D`8%o=P:"[7tCZP@/,i<3pG10W!('
%RH/7kD$$0e'NM6j(-md\D;4lu9kpU#rn7A4jS_dV,U4L=-bEu212_9]ES.u1;__nE=YmbC]eDKB"i7!a@I2-)c[.QbTXB&KBX@N&
%$+n<LjKk8p[PfZUSp_h76%Re6GNe>k6VdfSXd63)Wl!opHb"JM]1gZ@!95`9'Bo#ZLI5_Xng?qjg93K9HZ'"t2mn/-M>`Y6/K_)(
%kR"*YIqfcr-X,!qGGk*UV%%*^>5u;pT_ULuS^u]K#';,)r=8pZQBqWFjUVcMG/n*B/c`79WP9eQf;/D7eDEVks3>MT]d<>kgdu"9
%=cd!7Z^cKGl1OtGS:597rB+j"HJgSd/:FDf!q@[O0@2Tjf*>b_BlkWK<&3e4+)HY[@dBD94rUGbfdX(J=ji`?Gl=U!-#Td1g.`4M
%s*:Qa;N6$R/L;,OWQ];]N6L]_*?\:Nl'bT>\a>:Y[q30Dg,Rr=C.l\h-u=XPOP:SnD3!eG9Bj?[\DH>r'bUHJ[X<=:q(Ti/(Adt,
%o]GM0[HD&eq)HUFd+\)rp3[ipE+nY7pj%HYCX:$>*a6HKCNsM%%inYpB^PUTVOiiq^g^4=L+&#S%=Atg9n>/_36SX=bqi>'Ybd*6
%0o8ZH=G/M;')664;ccI,:J+5Z>*_pN$4]Q>8!,m-#uMHB/aA89<d_(^N"S#M2h%d^)4]]57mGsZQP4i[MV7QG##2_K>,V`H342)H
%Ua:[_(W$GW.lIHcf?;mm+PQe$b,s0#U@_,0YMb0>7CsY,U(TBrl];7bTh`T#,i9+emQrr$)T4V.PO4AQ>#F65QIF$mK_6);gXb&2
%[hs_#n2YmFI+Q>KSN8]!NMA)<o8=o=B$GbV!6goi,CNk`OGXMUU5pN1Xl%V07H7LB1jWS,GfE'c+';?FKJli=b$q<nA6O4ZmZqn[
%/hMt-N^gp6-4c@MF<"H>Ut.nKDU?8WZMr%Y8pZ+0KW<I/-A%g';$o?M'o]#X<r2!,e/GGkkt$StA`J1UgCVS6fIG8>&7U-/;&s52
%.s\DCeSRYf5a4DdaOP4Ef8\LD&Riu.#o&*@)!Xg'ICHu/=]aW%!?[rQYp*cMRp,0D]IN_CFtcZ^+"HAm'!0j@&68LTfmD'=<0F"b
%q#0RFnp^W_+V4]Lm%.'"/"m6kOUNFkYj:*UcYn<6Wb7&(5Y/qBG.mT$gII!qVn0H[<VLU%m1$4'd_(!j>g2I?\V_LbkcA2a(!Ogj
%E1(d`&A5&E[C8J+W8_[9[c1Ik"mCT9fQnOsADF@`9P3:,-S1<OeeU4O""!KIWJMXbGhXaX>qsAea*$^4;J'[@,nHFk=i%SCWVVjD
%>)gfH/6j0kmd?$F!SuFM/)+Sl-.U_SX5eOjNf\3q4"@s`,S"]^f5)UHi7;K:SLmd:G=)cgP.?To2\l4T*U@i!h6c^h,Mm!7pW\nQ
%7H*j!(c2uI^o`H$;*[TnX!Y%')Mn-9j*!oTm/tR/5No0-^3EAE>U01^^r\507^^%<[q=JdR.e.AE3VZK]EU&0FhV?=aOmY`M9:E`
%Zs>KEoH<"U_A@P-g!NA_T%"m!f*k!D1OI"mf#'&jbiqH-X3G\0i8(mK"L*]U43)?@c2kHM#,((I1$7$IaiaptDcXe>m@mHTk`.F2
%_j_%M1,+s$!.Z#3>VcVSAQUkn)liL1-+#0`h/U_[A%lEOXmMQk50RcKDS)gYY3ipcZS]*?=5ulk&%BDZp.uEhLimNf[C>Vji][[B
%h6p\=0lQbgQHdj&d8m]6B!u&e]&GemVJ<ft.U,s-T_EQ0RZ4%WNaks-a$`cd[icO!B%]I=\#bn\3$ng4/$Ug**5;WM'U.n\Tl%OI
%@\R!Y@Q@Ak)kF[[[U4&tQ5mYm2`I,tgD%)'1;VKpa"K/oK/UGW8g,qB*8<,L[i*HP_j"Mk/XqD0C>d@hc7@)hgG9fc5+Pob/]WN<
%d&5N,2d0/^4Vf!<-[ghX<`_ZM[eI6N'6j^D&^k*om?g/WABg,K/c1Cmg(moI0nE&Am_flIb$m+c-I[i9"A3@),ti?ang*(5B"3NR
%N"6gq=X&.qAr=rdX,^gjn?NOP8kuKXkKO)]?=%\sk#PNAm`I47LX-sdKTWYh:W.q0WqDg`+Yg7@>]C;ZWRiEmr>OEH@Js>O"ANo!
%'.TL=`GEj'4I.SM:.mn+?&COG.FO"%MXR#^(+h(tHMtUrIe3#d-b_7*Ls@P%qP(<sMVf4GHs]#+iNhJ;`=n7IIU>5-IIY8M`=q,F
%:OHM3nH4]+h\T(9?Tdk.k2M5OS'@Ls=a0=mA+ET?cJ(I(8;Y'jf`gH#C,6\B4@@?,TpJEl]Gm.aS&MKJYNpKBfC]DO]nF=PVO*2/
%hG7F<n1h0.@US2AKV,p7gdqL5LFLAFF3`P,4WqZDnj0SiaS.=Zmu%G+`M.,Jn9siBpEoP$:$CK(d/V]UTt@<nY"e,'[E,`\h6%N=
%\"Gh5U3X_P^X3O5GME%)d8/MJ0)t*p-W'fX%eL:W(ms02Y0T2%i610+fn'.=\>!6HST<-El_QhV>kDt'5\K\4TY'JXXrZ_iHI74O
%#Pt6$oS"=LPB,&`44(CMAd:Bo;WS,2V:gH_\Yrmmfmp6O.i<\[f\)/0#K';:N;ab(7XqVtkL.$!kECMFp[7YAh<0:DN<?IqmE+M#
%$-d`Q?FH8<aKiLQN.b9?pS]Rc3LCVUTL5Mu"8=I\g<!Ysh7MpiS0'S7:?OLATA'31(TpL6Tso.)H0pR6eqQXmBC[kr,bmBQ1I(%`
%=#Z!Y29SqC3k)TIJ"`D^F2:P=4bJo&I+7SMQeZ+-QueQT\05F\,`/YS);X-_s-^RjD73`gVVW6R1j&1pqhF];-25pGE;-c7S$)J?
%Un)N0AW$N=Z(H*k4lE5m7rZZmI!6p`;=JJ4]AQPNAgfHKRE#/J%t*j@^ar'R?/G9rc98,WApuBqC010=?3j%UQ+?9gpp9!2>aZa"
%N?];sj<nrApGT^,-91iQ?Y87mNK<+em_argj"pGk!3Z.A4!7l.5U]W[f1,X`q[>Zpo&<Z,M7BSZNppb.Tq^:X].,6cj3PT7<>Sf.
%];n`NX),9Vol\BK1;A*8;eLXDSEkJAX5dKoQu7(e?(!PRe1S+#RZT(3c>QeI^n3FLB4pTK#1K\sNd:Nd's'V<4r)L\Muk<;>[Vg`
%"_047IR-MY5RJ.2%lu3FKUg9>;#`DoafdrfnPp(dcTU1CneS`6P\ZIMR;M,]i)Y=T]J/`"?>usMi^=Ba'4#:CkX'HeMeODE3U[KI
%Vm$$nRE[s<NO9Q.^/guno"9.c'e;I,EKBZ)(o3ldg%@SmP&*(7+#PQIbrTM.QeNP?Iam^AYHfAQZgDXUaa(=`j*`kDohL1p=Q0-a
%F?]EJ&c4[;fp<[Q2-\YM)[]8+GH;ON:9ID"So`5n]&SeG'Tnce1L-L1],anq[X6q.L.5"pHKE11[,D-%jpWZCm9H2Oa`8dcm9]Q$
%)m)-7;=tc?fnh$)C$&R'K\$HD:+S-KmY1*Ig3$GbGA,*c+ZRRQ2eE=gE--5O]*J=GB\E+3VDL(cZgJWsT#J?0fWj7]Kl!bp[P+*E
%9)B#\*ng&*rBr3UCE-7h!#SK#0[hY+LT.-4)>G84TOQ?V.N8"l5[9lm1Jr=_D4f7e\_nk5E@cu+^mo:c0m\k_;nGjJGt*nJ/=t@o
%c@J2m=DRHeHU[r6r(A!\^%Ss7oc5mThabP3YJu'q`db23s0&QEIif!kI3dVBO`5eh62paP\F1[$^5msEO"\Y**sq\T./tAO'$bpQ
%X#HP+jqgc,c(&Y6Xsu*\+$\;78&!qj>V7FZHdJ:,:fm7$k6sX=,AYkf#[1dNZe9I5#]EET>_"#&CD"#5ds32oZW9K0YtK<DrCf/k
%";KBM/+$8Cai2%h4T@a=ZCIYfA*Tqf\K">!F!@%f8-42Rft!(^cd<>"&3ZP`gG_Wl>ddZQF\Q<$7]\[,k9Vf`4!$_"MYAtCqm7&Z
%18]2I'XK`1J>Hf3\I)6B:B7)0UL]jV!#RsN_M[Q?3($)(T<;>KQg,>u:>6Ip:-2c(W`j%6)>F]0[G=2*`(SOb<;Rq5rNaf.EG5WK
%M5Q!cWtlM>@5C9g"4rog3#0.IKQ6_kSM><KhuSK6I1^Mj$]lNaa5^fs=_TX#ipKPDiWI*4igOB.03L/9(!TIumYtPs;E\0Q,K-+R
%!"Vg[\a42*Em3(:iC0u.Kr09[PDjD,-Vt@g"aV1(0<@n$-n+)N3%Sg5RNpt+Es8oW6'(\:0fj,'U,T<Y]!oqBR,(H5SD0ALgW'j[
%%#/S/4V[crEeFk>Es*XIK0Yq7#3,/=Je<7r.FXj2:E[?85W:mj%'V^4hEh#_jQ'Ab@oYopB0FL84Q=Sqi8*6Xd.'"im<N-c@:,UL
%mM&98]"<<hPtF)l3Wm=4EFB%dpDT-1:V;sA-_6$*("p,U)8s_,_AI]Z\e:U9B3AYJ!Z-.'U_0@U`Z/2ABif7<VCg_hf[l,F?a>\b
%ijKTQ^^</AdiupI<<S\eS500AC5!82,YkJk6%V)&2D=9O35`qikXEa12n3oG-6CcMbntIW6Q#AsZDAOuRPEtn.S*RH8[`B',4M(j
%'-,r@<8tc5jGhCN@jJ1!8%bM9nk"R_F418+=$*(YE;QAPgCf)7[a*fo*D;&U'M8iu9udlt,r(ssCaio$;c.jn?;0.[3Z>`644WI^
%b\dV(X.bIZR&VL3JD4*u)d+i5">/H`pq=oC^!%^eH#gT*^K5]p=*_M]H+m@*rl8&b,\,+]QQg29Y4@CJcE-Th)oM[SX#t:UE38]0
%J&5ufdXUA\d-PPW6F3;3/+a(ar`-EoX+,AR8,qMD94QgOQZOM&Ir(*7q2mNUl-!j)lCYZ-_sFds%h?:I[2.Q3B<AS/P;ODE14&mr
%?1?FA4?993G-1<4ppeF!O%X7NeiOPh<93KoSj0a'6i/:0Q[#`Jo"E!5]u9LY/Fb^grHX`SSE?ds*XNAMS?p-Y\X%KuiTXrZiit,J
%nN`MrpcXV[Q^2kieN)CmN&!*IK-d,2U't'tS4+<L4"EFTG2i2N1YlTd9"<#N!L?t!N)k0K2HuB3m6ViEQm#YtfQA??]Hi;%H1]2'
%!fpgUp?$YN\dA\,=/S4(GYs!6_#1!jH_O&44#gIAcum=AM#iP*-?kbQQoLjI&dndj)Zk[jMK#YOA1EcX*^!M1fDo&V0VFGS]n-Tb
%U_T@m)SH0SduO8Pnm;OB"X3BRI+:5%hF"Y'e`FOg0qrusGmiW=cp]@=lFD<m*;E$YB,Z9H=i6LbM0nOYT0c;%"gY)McgE"RR9,I%
%Dshl9nkSdU>omqFd:_@-jK>ihR-_I;`Ei5^gK/:F:tV9s%B"3f\_c/KDA>H#e*VZ&UEmgE)&3@IeE%F/$Kqae>iUP;:8\7`]KjHI
%`bX!N:-!K>B@<sC*Cbd[-Aj"mnPJ_D%]B$FlmkW*P+Am%J1";a"Dc)Al[:QV2QRP(XP(X]:G**?Vjff):"lk4N%<!c9[<!X:Xs8U
%pQFmTNr30Qf(&X\Bs2kIBQcmr9f-Um;gI'pb<Q#Hg8Eg:n_8>9%"HSqDa:sbrZdZ+oL`+jE\JOmHmcmNZ!JIGc3BR!+T0oR54NEg
%fPWXaGkW0%ZIQ>_ZeY&L^A]PC]>Pt(A%"&CG_"b$![N$<,Mp_WY:j;!'A7PKo]ZI3hRM@.q,tKM2E&FdQpi>EXd;S.!l7+:''\\Y
%!e!SMd/V&!M$oO`j8<hUY>,V3_LLBo97PsZ3Xq,I'P$GmSOPF"It-V%o>P4lYZRRFs*g1>s,Pa!i\rQCq9a-JlL:GGfJr<mIdPQB
%["b8b]3&suX$M8O@heWRS3dL8emfp*B(M@hdrcmHV=E5N)pAaSSSAk.?(^=)R`!#5=aela5F*DMTSjmb(5L/?H`18[12`+9l493+
%[rG^oN'80O/#Z4(\X:d?3NgCimZ,d-]>]Y%0J4;rS^=o^dl0*R5("<'k,;!=.g3G32TUp`]p@T4gQMZ5HDAYu\Hb%"K"j>mQYsKB
%9iq5BDIn(D%9l&j/+SBb'>)fRd+_6T>SdW>nn@ZbDZ?#?!kq()kqOfkTNWH]Kc^3$Yn+]t=fh^>DUn?,7`>hGV#.TJ+c@$7de%!>
%D'%=K5TGl0`,aLK(Om**"Zh6QQM:NZ/h&DRF]BuAEOokD0'&6?[DR@QR"BlE"F8#B&%@CVQ;8fSM\F_-ItaN.Ml<qHVf/A^10Zr(
%dZ=jA&%LY2KhZZY'/R:t?_)s:@(lNG(\X/UKZ`IXT4pGZ[K5A8]!G3k2[I9R(K_+@l8#`)EYBiC,JSIMQ81%^aq&:E#GS(4Gb@"P
%@;6_?K<F1<&pOYMK)=4Hgb"01L<b6M,\oF^-iS$Ug3df<<+C2SWsu*S+,$GL=T`s%DN?5amL<XUIoY[$71Y'.4^?24\m\Rs[]oL@
%_bo(G-#(D(GLWMpc0j"o2`j6s!rn$]Jau%i$@I$hMuR(YDVu9=p2/NuB%h7&M.Z`5VYqm1/_$jd1k,W^&Zm/0@YJ)bKWop)bc+r9
%JfrEsIW3(9(B7W=FE"Jg6kfs1L=OL$ea?S:nt20Ur[esO9ebY4S]q*-bD#q,]):&cn8HQ[r`:iL0+Rs\6rq2]R=A5[@mifa80I%/
%4i[/(WRlLMci8FZ*Ige\ncRnJDe9f8W/gK4CTK)q@4)t`']^<?CA6fTs'+deToR9Fa9_ePVCO"8bVW&<5tseq0juq6>U^:2L`$X#
%K-#D`c1!B^`;`,=KirJpfe$ZEf9^_((]V3=lao^b?)7GZ79W(,,V$nk-KF%tUk5tU)?[sGb*g8k,0;0qN.oBcU44QYh_j(Y9bq([
%=6SHV?,ojEO=VPF;G<9RP?sP06,Fo@Vb#D=F:FQ#WqfqQrN=!9ll,6")?6kSr^Y+IZM%RRrP's%[[G"aIHLro@MS/-(I[>r'K_Al
%g4--TrjSb_.XdY^s/_qj!TLDN0A.CJIA^)(./p@qT>*(,;`.9cRun-hhg?*j)hXXi2dFD5as!h'\q%U2Y0RD&ARMBO0iRsPWS;oa
%+<&iXg/+U/._ZFNYOk*f95YeheCF)3\eq2p*fr!r!lW,i;?'/-U,*PAE!LrV<2Y,>fj_g/R56%BU?_M[i.psOr^Z1gn.f]<S2%T7
%=:dk(@?<<,)8qaf3WoNC\RQ`06]^L3,8B)`UJ+8<G^c<Y#9Fh>WDcKWA<S1Ipd\=,RiqWAP2dpDc$plO%B_HA\@O6MBj$V$C=Ys4
%Q9eh":k,?%r<WX*otMr*qJQuLj3P+aItB'sqR8$R3O/Vfr%A_;^I/_6cMK$ha=`YE[.$T6_?Xa-Nn^<VG=%[8G5CSt6>34kT%Z5B
%fask'=5OGdYT,lOcEb.,iuG/La>4'I%kZ84\DBRLr,oI>@_4Z><Q.AO90\#Rke[4HmSfLOE;M^pchkUEs)DA:8#aj0UH,@.5QB*B
%o\t;1$"Q0X755Y,;4dEkge[c!Wtf7QM;e?he=Yueg\U8oMUVI*g2>reNn+;+@Ce/olKPlEW)gN*:L,k(;ZsUf%e7:i=/UQ5\)O3q
%@AoDo6h"mTb%*GqX$7@GSGik^,pjDfRA=j.)d!''@_LJ9'qIj*Asb>N&&N9J/fB_%2ooW&pf\Hp,!%LsD?5hB7FPcScY:p:5i%Ps
%e[N;GLSjNRqLjfj@Z#S,$>3fN7H3;D7*358+,2Q@j:s__9VanYL'aO_=FiL!mjJA?<gel,gb`_<Jr.,V!+iE7CcaQ*_:/i(g@f_a
%aTE(r=(pk[+N=^fK1X"+*!6QcpnPOO6)N=25U)4DhO(pM8hMAhc-Ro[27N]#-%Hlm9PVWM0s<lmV91:/JIP:Cr".iJNc%T'`:EsD
%!C9^r_mFr&dS+NQ*tg&tVZTUYlD[08Fi&.9^dH0oFRUVNaXK_&ZA@Kk/=AJK-fMRD!Q"9$3cTJ.&0k,=1kDZjb1_LN;G"Ia8<"tT
%>YRVIW@e?e9XQ3\K%sRa'T")4&QJnrAIFG@#\h-)M&5YTEeeED2.E#m<?\g%Bjl8+P%"lqgUX2un`<(V(1F*a-eO(cGbDc:!iB]F
%i<EQ6l%LmH8X^uan4M\^JnPRn4pLUD`+*V,oSK#U]E=AW=0ugh3#\1iS#+CuKk+DL<6^i//A#:-J/"uc.4,Js:f/bN@MMXY=.n1s
%Ed/;ONi_i/Beqd6VabUN$.SI_;TnRp6jpWF-NIjIKFp.3R4+K>21r8C<u@..8LUU4#.S,>(HS5MJ<"&3a:C2$CLU(q:2c*Nog;%G
%2.706_Q"k3ZDaEUr3ap^!*Q(BC,U6GhLU55=,:W10[_5QKJ/hkkf>WT'rk9"Z*]+I!j)dC)`!O`?.XaQl+4[T1rt=M',4F&Qo;4C
%=<SmsA#k<:=pka*"=L;$9T<9hRT#b@8?s_H(*7>9%$-+JXe.4jj_,XCmBirh1eu$d/U>=&MRNtLRF?HQ-mW7`%fU-A?n>\>[J_,9
%]BQUQ5]fK9q#J:iiIpD4S0i(Y;s1$T^sfPCMG6jpD+IAR)49C%5WNZ$lo5J`Mm<+n+.qlo%@%d*a:n<H=RQeO>W#6l:/eX''t<:Z
%RJ7(Q9`1AO,&NE^\-Q^c3Z2oH\4RF_6%Z)g#n2s;M$f(Up-l;o?+(&q?;njBrB\lBbGKm`Ok`:C7d)T683d;SR7)Yf\2i:IW#dl&
%2?DVR1>6[J`qq.e4H7W4Ah'-<H15rjRY^626An3g0]EjQ"#2.IB"Eo#9MbbW"3_mt<77%BR4P.Ds.*W&VRX0j/cZ0.kC\BY:Md-_
%l^BMUVG%fVj$>o<I5<;4@hp(A@=`A!<+iZ`1K8Oc]U#6b!&I&[4O^j<dKk(h(I^;;)4?k14"o.XfTtjn3%si./o.GT1)',]CQ_GA
%&_sdn#Z926G6n:r/kaLN.Ggcb;?Ynb;1N)FjIF[ZJYWuRQJKK!G%*KokTi*P9dGFcnV"h!#MgSRWoE8l6jYK(pS76a+nE0%_Qp:c
%OtbQ)@%snuQJ,@sCQ4K$pN<*a_Hh`k]X:=LB+LAGYu:60HG1'rY)k,jM#&oHF!'t'4Wb1W;-Wdc%>rtfoi$B>h$'`!H==YSr,:[P
%_BkpJF*S[[3CjV;5NJ^Zh5rq432pA,c7Y_bJ$:LN1/C38E4K^qC+<p^;ZR;p6:DZE7lTp6F!&q8XFGEWKl.unB7rJ_8@iQab6tmI
%=)O5.,IM!&X;W^==EmPiYeY;-"q7ZFbEA9`PORmG@OOpu-"nG*L.m+GW&al?NYVSgR@..Z#h!;SKW9h34Qh?M#<^Hp2KI7gCtK)_
%0ZmAQmmOq+S5:a:l6VD#WiNEZ@:6Vo4CQN"Y@Gr0Bm1dVPIpl`4<ibfp#Skl05$\`l@TP0$Pu:HT2,jqL`I_X.Dph[5(W[Ne+"h6
%E;nP=,&-,3d@S548Ub,^-J9NG8Wr38Qm*;e@]#.4oEWE>99c<HBIf8T$?%b`#U;pgQq0!6%g^$-cee\G;DJS)1upLkST#M&1^/+8
%kMib'ZHGi(G/2?L#E?4pDS2A;j'uQfKI%0\#tKZPk"Jf7D9M@W;<r?F7p<Fi7ho*MK"7+bU_#MJK>r4kU/,?\cJ]J/bfA!KM)@2C
%kK-;<a/S%qfI98"k&BB1Fj8SL1&&)CJ'K*JjF,^"[MC1/qDV2Oo%q05T`.12V*#UeIeDg&2&cG+d2SeT%:(nC<VgYi*]D46;fOof
%WufEEH@9OA(Om)]W;>Sccsu>VGBg&i*0_E$R5<YM1_rd,,'UV"#'es$\i;1f;0d>;3$lmL)l8;DPMBlU;Z5P:/RR^KSTYf17#Rhf
%TNQk<fZ2?U!)8?#.@?_aMQ:*pd;2kgeaCp1IJ2"^B/DW@0,3a_?[aF6L0LfddI+``'X<O-FiGMX+*>Fa=8$?W5.g"Srt;<B]l*Kn
%<,20MX_QrjA?rhMs",R"C3D+XYl'bXK$<;VUJmW+(FJG8r\K8fNtXrg9U)`CU5:7$IRu?0_Wh*1+T/`Hf_jjsAc_f.4Tlhh=WS)D
%^!>NNr;ET=\iD>$g)Klbd)3%[l<g5DJC*0_TDpKC*nGf=)p%c'JL)Dt=i^Ou][p\KQhNOrc$_S=?^hdVJ+@Zp><W!%eiRWFGi,[p
%q>>^=dbK<KS'4OC95\\do!<$fWn'bOT?kdMqR;i"'^pdm,Lo#Ji4m!<MuG'PEfLD#E'C,T#XT!E\Bb@RaDAUJ^"J2?2GjXGbC"4j
%-s)VBq=!ba<e.[V>N!o.Nf"R-[seB6jr[&>:pGm)?]mENDt3V?8[ZtdGC5b-@BVi&[OX@g&r3dZF/gu,5)oI3U@kJ=XU]aAK.=U1
%n&kT>II`!`U$4Y<%NE.*ic%j;1k2DT:Te]=7o[V%aOtgf+-/U48Cf+H'[.\e.sC7=@_M%gn+F_L>BAr^%jmOP;]N5^>aULC^K@b)
%GC-9/Y<B+YS7dcIVQH<B2BnE81H+'-f^FeH9Lp0"'&uj8RA<P?VW6KPp;BX3EA/m8MM$csL@,LuZEGl]JZ,oXBSu>"B>lfKaq(,]
%rIM,JM<KAFJK%nj_i@YR(d!Z\`U9s;">qY.##La'hf(n.pVdfOc^&3NX4o/6H6>9A6-nNdV^T-Rj+;(CqSbW(porEh[u2lLqdAb;
%LhC^,"_^o9ZV:6*l:otfpnd7+<<"iHALbr%Z.*SK7s9!+X/N%NX"Df"@eZ5K0^kFD&CG%#>-4Il\9=8Bk<,@7G-=k]?WR'ap<\H,
%let16ms`jbj!D\[m[l?Q*A&4\2WA1N`(B`EeR,?D3>7a,290))HeQ_^eMj:`e&.5GF3;\fX6kQ!#RGI,X."h.+oOO\,<C6o]lLB;
%QH@V1h4oK<+V&@Y6:H`&0mAJUPrR!JgMNDpf@9nb&q6Ar%Ep]S@X$>o!EG#p3?@;1@g!E!l"V.qjWtFL,DD;,dW7#le.%1/kC?CD
%9(-6Kr@KZN%%2U)-J%"rd3Q[M*bkEe(9ua!lm&D$D7T*5;B>D7d-m>if>TW8-O+,UU;+K_TS+Gb`GTrJes^o^ghuiM)TR$o?XU)&
%^k`N_#Is+O/\k.$ipI^qG@CgfCH/lgAj_\<Xr4aka$MX@kk,UAC,%Re$mp&Q68D:/AP\:GZYpeaR;MD50\:thFUlmlgn_%H^`i(!
%Y;@'-(!CMJoT\@7*(g`lVl.V=bdpEm=L'T$T)\>s`+*-lm=u^gS)H3%'QQ6GEVe,$Bs5CI)b!IoTVbGbmcP`&%C7aInJH/6qO+1Z
%H&q'M53u@<BXI."/)B&M9mk3g\<qAoHbH?5U^_9HWE_T"*]"hl>":_DR'CW_e1LKi\d<=s-i07@gK&*"P-Ji9oh)JeF4;Y5Jac9g
%,?jO7rHb@V/"r[%eS6h$*8+32L]'<R6#/I/?_2n1(]8M["lU`53"1:!#C<<W-=J5BTBQO.*T9ji?_?>nQ+;B(ps=;-A)ZXGem3(&
%a.El]i-GF?mYgOsI=uL7>!mj[f8%'o[uj%`O3*9>X]-9f9)h)BN+TQM>;UYO:l4iLp"1o*J70Oe9>Ajnr;K9s@Cb8Js7V]Y)[f&/
%5Upu5Mn"_:7a8@lC6Un%E!S0m2:bk0%@)sT6-ghbb+anB/&,EsZ;M]$leSO2Gj\OW"*?)dp?_MY0oGN<F_VFrY+(jr::E1sVWJP2
%NpSETm<K($Q[<$%5/Q)l\538>$Wieq"`)Z.]bua($gH.(d2@2$W<_[XmBu,")T$HWf_c-0I:ej]h,19%mLO%qQWs;[C4H'Up_2\]
%Iir=`1L3kur+VLdkcbip&JK0+(uB,0E.'p1^_4*kS3&.kWJF89MqA6IKYb)X)4DO$%+Fub=AP''^@d1dbmkT5.FFS;10(o`Z1=lB
%"7^:Gqei1?\DndV"T7IalZ>>K-_`I<Q\M7=6lqBB2N^RtX+Q,[M;>:_>u-9c&9,DT3RE3Y7AoO)l>.@0h,I#d[,Gc[U^(U_eK'6f
%aOb4:Wt\dKim3\+'Oil7/d13cGHU^5^\Q:[T^CZiEDSo*Ln_hUb$ms5KN-r?pVdXO^+Q7Rptu8OpM%]GrgI^1@+3-fZO#\L4W:&E
%(t$?sO1e(3AnT/t;560XlC.!q,22B9P'e(YEp#C9It`XPNoOOpKs.V_W8adbbWP;'$pGNGAJ"#,)H6o.Y6A.WYLr79>a(VQ48#m8
%rSaK,5kH%?bFeIt)Rt(br`:3.9HU5or"V0L47`/<qD\YrV,HoHJKDLRAc,\lEpp=U_s/EQp'(CYTcWh-%@HFZcM-)G[o'5+#LuTm
%[Ui-@M`-4`4HBq-n.p:_d!=FO1T;R`0BRDZcc[g$FgT#qOXDA\cqtK)5O$m>/daJ0#M&m5hSR3dAu%e'317jR;_c9A6,N'WEtp4%
%O7N!rVj-DFQ=)FU?Fe![/eB=aYLX(LmfhgAc`.3@Lc^IWgMOQ+s&jMs5.!:QCpL:;%F9@pAKf7uKZo'W[7BsY0CCl;2>`J2FB],`
%`]^G"n\g+4NMBPrNd@NhaG/O!n<I!9jOKunQV1NQ`F#Vm&B$DVVhliD3!,31(Ag$"n0R<bn^fd:*mX4%]jK^\(D%c]][(r];V"fS
%lSe=[@"H"*HjmsY1p#95p,LMSEMuElb,"q.F^&[G9j;-Aq:+AsTr11m.s04YMVmmKN6UshjGX%UG?7LWS/mu$g#C.^-^h0/"ENeY
%WS]qMOo.N4i%i#l(*Ashm)e;V`nB1XOU^aAqS3(0]AF]Z:&Fm)X%Rnkk\(:<)L=#WpA<o80T9@q%k\?'pollrYD!+/Wjgs)ap%]G
%1A6q%lFt%^fY@uCr;,Y@$m/MOl"fFhI!C<O\*.U*27E5Jl^?sA\1_d[f.qbK(`-p/5(o45piaM6J#gD`n.'n!^bGYdZ,A\N=i4Q=
%Qhr;8;\_KuTAnn!<-)0o^orEkSrR)GL[ZH:e$%G(FmtDuYOH<ao=Ff?_@K*1A*QX^;&[e_0cLdF@sVe9+e,JpmJP8t=hg(J'r7\m
%G'][7WO]]"27X;^:DDZ@/(mU:9`]QqShd/(c%gCXojB(o4BA)2C.(i4^_6qsM1E@7U^tuh-,'5\.D9'2QbWPAln8n/N#aeAX:W(W
%=#0bgEhh%8NS$@Ea791cdE'2*R`3.Of"Ga=rOP)kl3*E7er^b``5eSM#c>1Zr!_tpVVQN3'3TGN!l#^]:(ZP51s([RStS?>`oR*Z
%h>LpEZEb9?Ai9]/@2+ULhk).Xh:>=JfXkGD:Hl)9A8ANW*e1q?-=%6A!IKRlL6,[dW!$>nM,(6<c>I8*cPS_r?`0>S#Fgk"8PY;\
%n!//DPKTOQFa76krV)<&dBPpA3uW'r9&68e7".;U9f;5OI%,h6*d;,Yl>VesmVCKdI.R!4[;fH0BY<pZ?VTL#Z?8,h36RP^ol9!d
%/l2Y!^."2^oAUpA=?0UiE63:9XX;g!8r</!@80H)b(k#5ANlf^/6s73fXY<45P@#[ac'-P:WS0%,bA0k-&cMR.:%iqWp/TdamLuq
%/WTg*_Yh#1&=0*j!(=X%V96WDhk.X15^3M_^OP]cKU=Ap$k'7%/c!;^\*s=(9ll;I?#UUk=P=^?_Jb!AW+SZ9Z^YVi&g)ko#6#<*
%+nl6?9>RN#IpbEfl<dR9-3";W/Iq3=l)4cdS'o#8[+BcrLGSatJ*hJ2k)Wau-2m/]ce&0[A*2#X.n.ATNI#Zd06PPnr:5qNrG#`I
%lrV5/bc_8\O8NfWnEf?/bJ8&7:K5)seIMMH=8lk4<gg+4p[86'\:8_skfgec]i4[G]5ki^gg!ML;\+EqIjR-Wp1M_/j8O[rrhKM_
%X<6pR8&kpcY.4&^5M_6NrT?IikeAMlRf<6DM<;R9DQiuij0p?7D/VSt^OOpNi%U5$=5<h'd=1`&(A)a!l2!1(YMAi<rO'dccJRh#
%8,cOc3q.>On)"#VZe3"l]mTG>+0@$u9E)igGU_!8Sh(&/J`'G)EI5)-8aT)BdG`76P&sUW>#OIG%Lf\>^MP#D)5jO/V6/#1j3m@1
%EI0,u\9hRT2(nJng#lj^l1!rA]p*k+3*SGES7kQ^m>LD\e`aTKF=.*^a$b8gkp>eJ=XnQ%kh=U]ZIHMg!1cCTBrQT"*9&ZIeLMD;
%aq'd?6#Ee;#WGC8JS:Vq"D%2N#j=Q3&hlAc@:8tTWtpLu^>0%BVakBNK=mEXjDJ-_Jb-ni/Pp]HM$EALiRP`-fj>(#c\mE@[@Zgi
%hN[%Z(adVC9Jlmh@%tBJFLG7T?<p@WQQsiRNFchipha1.?Zh[Za-ZP^h;c5!3L,n3QOhS6FSR2&UG#uW%sO=X@[m8<NuQ^6bJh`A
%_fG/*\?Xh8*KHK`U]&i&Iqu\!_lNuZ:NJ%Kn`o.lHs5m>YYcUMZ@*YH>tIYrr5sKKU9S`Z]G"Vno2pD%DJ=4)o%\,rY>jAICut'G
%omETC.sHUE8l5u![ON*0=Kp6bC4'_G\9T\k"QR`p#_iZRZg6Z0a_e't/-ORKK(g)YV-m/8C;G3rIgC5H2mM:#)ST>`%WA)BdH\a=
%Wcn=T>MZmCH<a/cpU&JgZ[??Wr,Hq!oqiVlY<J!d-`]+J(Kp.d%UW7,XnWr@_q!Q`Ije>RDaV`ZS"ZB3@hd'r[r+P\?mA$mDE\n`
%Hn:RNQ(rd\e4rUe1eJfBKiaJgEd/fD3=k^dDE#6&4H,!ghp]L4H)t!Ph]AV3_QQ-&EO`P`^gY+KD*qZ78\[dH@_mi8)LG)kYO*?D
%XgJ7R\[lqrlkS.?HI_19#R_a+>0Wt#[8HDS+VG::T-B0?H\lPZ/<qFD=/crq>u.pS2^c(e89&@R&pZPn@Zf'd-&5p[6SF#O\ro3=
%?/L\9*nE-bCifQV4:J=K4e8Y>j]==GhC5jMU.a</.iM^HNC<SS1_EHP^>D>>gU1A[>(9MHYE(Uid8oV>&KTKlV-##=E"ZZs;EGY4
%oPp8NnTF%BG+IAoNYRVY%V"h#DL5mX8DW-Y?=&pUN(Q@m8<".O2pO<OlGieQdIRQuUV?8Ir`kUQTu=C8?3ON\SmKW58#,[+FBq]"
%8>Q\oQb"lT]Q+k3_(`0B)W$R"o&5=N=HlSAWub@'P+:gZh1P<7A`^Un:m@O$LpGdY[$B\$o:9p6(>Dn?eN?piF+I=KSBc=YVM/C-
%Pl?!*T(D$*qID5!e[Jf>d$ARp,T'#*(o8G1c8H2J7sC(Am<3>lUfHlLLY>R1*pSm=g.4/@pl`@`9!.;Y)eWTm*3Dm1qt_4DCMV$T
%B#q.\/=YG9Zbg;QKpCAc2L@COJpcr_A)%JoZKU9@T9!pdorca&PsK>J%kHj[:<ma9m=U&*EL]X9`r5>VWR3hg^R9YZ\7-r<j)[!o
%]^D7*RDu]2>$V?W2n%<sf:$n"S"&(W5FAXfrQVrhUVGJ5m%e'WXl\SdDbEajB=H=Re_sOPrKQ':g`3G6NJc0/[M0)4g[WctF8NUI
%527b/O5]L#gAU>4FRLiiZb'6En!k.4jdhb(jl;p2Ofn,TmiN'`GLE=ch:(Dl_qg[V',6#RI^:-OMagXI^"q/Re)"4lGJ7/&Y,D!u
%rLt1e38<>H-b-`+c\GR!nOf_0:\^QS=p_V3cqIt"GP/mKrMGm*>:harX4sbcUj4]_,`hiN+ShP_%j_%)EWh+g`D5%7<'n^oVXgM0
%;6![N^J6H>N[ngmFui;=S],(&Vjg."h1%T0B/Y@RbtQPf$YQU`rJ=3hX`Kh7]m1Q/[l,.:p9`Pbb*L=B_gVPsG\:BE)UJ;9iDU_.
%s(S<WZMtsP%h9lV3-C<H+1)Mq)k#N7c<@i/\6_/O4\UOHDhhC)jj`7Y\N`%\O-S1hh.e'QPV4kbNZ-O"h;cl8_shp6rqZEcZ<B*$
%GW&(&O>48gmCXkBNc?\dRTR`jXrlLq_Qs4<A@It#SJ85qb/mk.bC:Ghou:]tAKFTboYB^*BDXE3(-BWUSY_r)jm6Di]RKRGBs!sW
%NFLiDE:7dor\Ad@?21%,isR*d>IldM6Rsk774lBnQ_BC[l#KRJj-SB;`nk:io]dj>;%6jnpGX]tq<,)'^YiIFN"h5fhKIk*1NZZr
%O(tMl[ISIu.f"%rH$,a??X+$I>HM]>Gt5S4C$_Erf7KF"RrC-d_([g)HL:"[hH3pl):Wgc\*W&;mIi(Dg:FDq:<IdCf4BDtI_%#b
%4Zt45]t`4$h/>2lHhW6ec/*jr'@&b^[GfiWZ!)X+W'$Di+2^0Os'of?H2mYAlL-q4T41)'k%X.'Zh/?^Oj?2`$>odD'j9Jjb^WuH
%DXt39Qe9hgk2e9Bo9]#b,Ouc(%`bcPY2">OIMe?.bD2q7ia2QZVKa1IcPOWWk80tsbOb>RFliJ41fu86QAsA@2%3F/&*8Ren+a+h
%@I*Tqb!fGO<'&VAiMq&Hl.,Brqdd+*g:FAb#Ogd.g!/ooeuH^>\uM]aos9&8V;<-ar!i=n]@AmukZg(#Xhg[04bgG7(K[(:c0f9U
%"4K2P?9Wb[5=R\PrVGJJb7(g0Xm:(\[t\i"@XC1X@C5LCEj`5qgY(u4\+?09Z][K:Y(k0NDIumtm$9T+S_cDgNI")"l:nHZg>20I
%dTN5mSpu%QpEKS])!9Y!h::D$%Z<s^^Da-_ij#EI_93bS+,3j3k5X2,'F>ITAh-Ke^,54V(3MQ=F7%;Adl0L@S#*hY?iHkF'7+WR
%puQQ;+8P$kOEhQU/8C]QZS2$\9%Ooi[h8\=MLDbIZ<<aO)`%Z^X1QjC(G9Q(:3t`&\M<;jWp/BD?1D7Xljg#j!#,PY2F$4[a6q#X
%#u]`pf5?ljX^g)2k=<L/V)VSeY\,3HC`cpk=2VcG<ga,F0H5__T\/^_erpZ<NK)'%rf9KAFuD@/Ts'hcZb'mrhsQs;?Je^Tf?NTa
%Ft'Q?!.",M#?BZ[;>")8J\GQ8KH`;GrS"2nID[70R!clU&#Cm0(1Aci-9WggnOITF)3!VB'TW!lL'/@m%`NK1^q]Q^^-2gmYLiGI
%KbP1=!b`U8?#Fi)F$>r+YPV^8#='*fmi1p2:q>k,dQY"3Y?_jgrJ#ZpJO^h\@WVKe>](\$LYXfSnsBCj,?s2Z*/t!b?>Y9jF6FQe
%>Bi8HliV+5V#hd+#L36\>JN?P]QC:A/`LusWh1XCMq74\hNudh$19VE1)`aY.d6'O$O\mW3C^&OY9&"u1k"#a0PGXb(ba<eb@V`;
%b9.]gl`V.cchD(%JDDRlRIU:=:R&VE'joSY%uZ5omXr`8E<SQ+g)ID^T5FA0TA1M&InNMe=KMJdMjM2-i(]FXoEWF]Y&,0A05Yt_
%[(qaHgZmg"$,G0iHGLsSRZHGpJ!V7DO=.a0kRsld--"tA;g_s5:;C,_W^jn=6Z/Sd(G]-4]g;3(!h^5D8(Bq9gaRB(c1Z*#P@#%U
%(YLu;n?[<A(;r2>I0Ik\_=LjiLNFd*8^W.PN$7sN4`c;_Mf$+LZLr..mUL5sKi(cb.f;E[Rsr41UW)7!7E3gARpXh?3c0(Zh"saO
%Kdr#W5#J(BgusnLomZ^/'K`/YdoKqlL&/sXF[*+$@7l73GHjbblIjn$GRF'8@Bl[#>+`!%fIsrYnjB-k=Fh<k=_g&k^-AJE?]S=%
%Pk)C24T+QH`0ufCm7Zm2""o!Fb=\!(]i&j7/,iQi%0%n'9`h-0':mR-R@/MXYqqftA3h4s$0b2F$0PBUJ$ltri'V&PAnQ7eGe8F#
%#1'$cpgCkcfW9;q7p5k<BJn<k`eM\'l6*tGS+3QXh%OXD1\\D*&g*(U4I]2CN"sFO"-PK7^SU8^dW0a$3OT^\?LJEb_dd6[L5Bj1
%quaR_d3r-^\B)Xu[;%nUgt=9WA$OS\bZMEu*=U$<fp,9\^HY?*4XIN5k^&uPb7,,?q,&BBb6$^?>$J^4^9q$\@$l%13\&C.[`lu7
%^V4r;9GCC0l]4PYpY1(QDn!#Jn]bLD'1oC2N3f5V8e$LuH=^H7.I#R8%EI#3gW`p-0hO=u^$MH6CG9%[F78Yd^""&&#`p+)T'O]c
%p_8+r'g[=)C:l,Go$K^(+E:VeN+!Rp/JKXHb5+OTe^.X2[M(0+0TnP(J&S8"X)+ds?JE.W$8f36j^JT^2'\MmXs&OcV2ZZ@1m_Q.
%S'OTiA:%m+2*-OUNYAsNn/WkfNc,pqE!_qL>sH:Ah=>;.Z?*=Z_)m]>:!^-+VX/gaViQSa5WQP^jYs2=fkdNDMSNcuA1&'sY9r$%
%]HcQXQWo<E%^uO!R<;HKe\q+=!t4Jd<:;iQI9h-N<(_]hK"KcCJLTul[/dMoJ_dPg/s9s.fa>'a-(rkTS0U<&:=:*#m9nKe\KB``
%%"ELK.+AETO\/9%)L[J/B"+m<gGbO1d6G%1Gnn\j467#!pf<:=mUk%8oNlsd!d(cT]iB>>I3rhm(^%FWUi$\F]okkq$;V<LjNu0u
%p8VlWVYcSA(Etf@*c(,6]p07boNNSHgGjZ.'T9$88QNF60[Eg<Y7bKIjE\>&Dna9LT/Q#F:orIf?3ER_=lhj=,"Jf"g25h#Rsqtp
%8N#DX``B4J;U;4TCGO7UpQb?n8oHJXOalg>-dHaJa4YREE\+/!dor[MMSQ/4]85fZ(Z32rG*u3dD\Y`7M8IYR4?L)&ijpOH1ZNZ:
%[mB+AK?dB)4I`mbXONNemCflkI>k3P#MZH:fegdkg3P$t1S:T@jX%(!\Mc6sq!9kmA"jX^`_EJ.gj\8E81(n#NqBeeZ_?)m/0SjH
%mZm;4o<uHQ9+a(r1oo;+YTHUtfOZQHai1P!Gm-@@l]JHoB.>=.ER:j`&1/2!Vs98cODgDf/ee.h\XDTtq*Fo3"+4fI'4!8Zo@RN\
%WlHP*-;cb%7)7IARd"ANXu-_slK[ZDJ&c>t4;gRcp9g)enJRm1_rpEhCg+ST,.m`UG_kHlC+ui3/Xo>t4NX=1f495;o"ju[NLJ^K
%mB7hn7[6`Sh7`5&$B<eOJ8lQK!;&)5]i-3rN:MbBAZ`3EO$*Z1/<XdNVDF1#=W$)OCC$,k\\:52/NSi0r)?M!nbUN_gABKD8Sd*,
%Y#`\4Dnf]>ZLH4!hV-@oZ>L>jJAY&AoT#a7A1Q/JB".NrONZ/2?`k."A-(TI1>T68)J;Auml(p+1\E7*FD/VYJ7(6!e%p9gC`O"$
%@)'kc4XlHH%uL5M;9Jac9YABS%oP.Gnp1c=+;[_opZ%T.IU(5H^J\^OC!b:b&'CA-_(rKoDVT*tSY`pqZ;qLXV<=n4)Y>[q:pa0l
%IOZ/S:V5'&^:Y[j9:L;!H762a[-^V[J70d1W>WGtd4V<[8c$U#3TU<lh%>_&,G_Oq.A.uqUKO`ie!J5#I6W?i[])'3`?dbS_'J_8
%SH';?i.,,NE<lGJkD:eUK'8^<:<nM+KF'9Wi_7=]&M8H\E)OK[/V5kuL1!\Ra[UT&<;PmqbM0ooO4-I#fRYBT2k_Sk-NjSr]Ci96
%LBr/LWADcl'`1]0]\Jsnhg^7r;k1(I&J$%u-GX=>6n0iYG%b3GY6<)fH@HD;nbKNErL>G@C&6n@'Vfuh$J@[7n<%sC-l^f!kKI]c
%06?AH5G19fdVD?HQScd\aNe>If_K>)?)LZQU#D##[&KH+=Z3rIp:TUbS=tXM:Q7u;-ea=W4^jb6[C[+2V>a#E`#P&qE_nlBb_Qg1
%qSBTA"S]sY]i\s(l9n0pCeNJECIjY1FS*V,;6\$e--LBCQC#gW_e8U5YQ-%;ki8:^DbR[,-sRj<ZglR\!V1c0iq=I+U'ohaT$+j>
%ghg[%CGBpH3&SU6!2@XJc_Oe8S%r#eeU2h&B?I@NT^Zg$(dfC9J"5r:A!+hAV)t'HGr$L.2-l8tpI%]"IMdO(3'C&$-3`D\X!':L
%(gl-tO,r1^mO9GhWeno:qCJ4f*gHXq]-'2@GF/Z4(7V4"qdhkcRdEiL]!2ruJ40(AT.-r[2Nhl^M7QSX3E`A[X)",U8]X=$eBup=
%d)Lsg*fVsWG3=l:+Fh?5fPG2I2%d:A!4^S;Z"S(9jRP$VLg^8eZ+PPc8!92lA1eQ]rP@RV$^lnn%Q]1[`Q<tTg63[E[jDuOd>eYG
%/3[=@[&gLrp*`KEmY"OQ;#bTn#Na]``c^d<5#/C`(a3-V?Gmr:Or#WE,79^`C@F6ZEi1B4rO_DUQ9K]V`<kW[nNc):/4ajnpiSZ"
%8=Ws+K@kgF$5oCBnkm[U8@m!sR\L,baYp1a:i69N9[\Pr<3'ZrrRORUo^$$+b9(<jZp*4409o3eZDF+<iT<>F@CB5hA$_fK\)S'F
%]`'OM0DEbVpm'aDdb2K@($O2r4t-sipT6]\n`\j5N*fn-&U92LKO\[!P-'oR,V%t7bu'^"bT!.;/S2seq8&2=BsZ6%9?=+X:F=>L
%g$R!nb^mX;cVJ>-Co09`oi+u9NZmJ!I<jkhi8r`ko&;bAhW(b[C8!]&>=i(ik-$Kc[sto5;_9d!JeE!]9BT3U+)C<Uc`2VsTl'Im
%)Z=:Z%Dt/gR>h^]N@Sl;jCXHBfTPs:?82IS8Mr;HkQ64a:ECdhEDhtOYD.K:+!.!ek14P%q4XIpa-m<sX_$)DK;G>qlrnX>"4MAp
%$.+!p$h!:8RsbV?)`UnV^0Q'Q`c!IR_9GFphZRk2^6,q;D"UK$iujdS)Q^VUOu=gLrlhP/l=dI.g=OhV@>Q,;7&npfVTJ,!::XJd
%?'q9'6akXJV4,:KU[geEiDM_Z]VhVlI\@\<JpZG]B5XcT$:2pVS%<FYL*&4'D#!FGPW6C@.tX*La/>2EV.6[_+rFL8FFI"XV[`dF
%3CS;oh3]T-Lhb\hNkSYE%9>&Y*Lq$ngTaBhJEFHXMnh#UbgS*&.J*,Cnc7n*rUKXCF3&?0%7g91#.*D++GP/t5,b&%D;7(`OU^"4
%#>4M<(S7[;!6&kOqK]8/(L?jFR]0njcUoi%Z#$-$WJ*.iM"I(]6KSH=_Abk\#M/Zb+MPO5'hf]mRL`!gqDOYL=?E]6/di7b4SDkM
%T6RXf<sJ'm7Q?d+NV)0sD@IhP9BlSeH94>%IA7?Yc=^Jc_7Odu8="'2bNnDf:cLidcbp/eGYqg^JRk-@>IER?A'V"k\CJc2-F1X+
%DL[H>lG"U:j4DJLOY_(hfNe0W;(d3P!j*8J;9s0]Id-?1J(oS6\6Q'"T"NTgS'BKA'8Z>4'A<$6_:lQDH2?d8bB<-Mp[G\kfC^%H
%/T71SFkNcYLKd`%gH;TV2)FR3HPt&'/gp49p1_8t>$JspDiV)jOeoi)I*5)KKK"8EG!C,<]&&nh&8UZCi.$9=qY_$d*Ii9eN><ok
%"r+ef]520ZA.B\jTW#nim:>)b[aXW64pd<&7Qq(Tl!"(oQYJ-)lQG*==e`NTfUF6Z`#FrSZX11\T%#[Z`7\bb351[E]>JXs\*[">
%&2hLAU#QIY<&m\)bh%iuI<?6o,,tAr==lchn9gSd29sd7BO6g@U+#m73'eY5g,jD5b3fa<k=LN`8n888DI-4'q3%md%+.WSX'st6
%&BL^]:\ANR?GAU)hN8<^k!gjU^Ir&'/Ugtb/7uB?,8WCKQNKnNc'rH2DY+/e<6C^e%-2eO`%R4Ko>Xkp.cNZGPjSGC8LLgepCGX.
%]\dY`3S[NKC1`3&ikGI2GmhWqCPB#$pb"WHVdl'Y.(rmJMVR/dJLtHF.;S1fdG+BuV7=VWpd5Q"<neRQlLV&Nm],EHaMHOhIIK?=
%VUnJob]\5VjU*:(mQK5`gXTqjk$eYP=mMX\W%C"47Sd6>(p:**Xq_/&%na6i9,.tm:TsXG=oWJh&9o7mCV<#MNng)]8*aSg*4jCl
%C4#56NU6QI,6j1i>7l0mQZ(cMP+oE(l2BG'.`<>S':%>Cp&36g]9NgG<c0SlI7.jjS$$Wn@j3Xf9QEO6R7LTkKaiI7FT]J.r`eAU
%:9'D8n$V00]D[7a.IH=)5#jLGKTq5WpMBRrb9Z`DnHG?iH-S+nMbniI.YYE.C+5Y<B$,E9L5s9jF6L$#i;&QfnDWdtd7_tU*t/8$
%5;k]W&V?ZJWc+Is<:I#DT`7Y7l]HXS2]jK!;n&)_T[&7/6;mN_(Ecnb;Pnh#d*qN;rk%!3]n_.['@O7;(N7dnUE+ACG)l!O>Qb*e
%oTX1`pbHD!eq,<fPmP/_7al@f)6I`dS@Q4H'dj5p.G8V5?`3IBQ__/sGpu[T[TD;T]`jRU*tmsM("Y8D\C`#P/pk-+HN!3D@L#`3
%Z%KL*hp='n9R2IX6)NZaA2D6e_/ohNIW1^MFF("=#mMQbIq+ZRBhhWH!qn\h,DP54$Nc<iRnVmZ2$,U^N\9V+HNO%g]F7/?A+PG0
%@@Y_`inNj:fH$V\6d't\J>gZ[WRHh%8e*2R41mL"L([3.c>"_K&\c-kk&d@9f\EoE?+X23V7j^\@'XsGhpsRi@t-JTL%K%:F;2D`
%a]G%l<cp4NJQZ?7h*^YFG::*L$b]WEH;3Q^@?gV2Q\Q^TH[emTJ0;'DD:QYV_6bBRXeds]:H3.6,WSugGaHZ;"QT;o2I6Vsc]8I!
%cc)8KAk\H)/E$_BkXL+GAc'Dp20l=i)2;ZY;][U*Lt@;'<+Joo#6(T+9kpe&KjA%K>oS/EFc^?#<0f3A>Dd?+W6a_gj6\.*h0JiO
%N75)O?m`V\F9N7*^PGG'qKj*=rd>10E35bBD!O#$P?bb[&&YkLl/O!'Ud't-ca0eJ-@k]7??d?3Z##a;Uit1/SLn]^Nusj-pO+Uq
%C!t^^Furp:K[R,*Ng[2tP@`3t<mG\+N9nLY;OTKg!%(JjT!.dp0i[Tp5=[(9dEP:[>hE#5CZif_<%dOphVWL-2l#H0r[5:I5*s:B
%f;EV@hW^ou.GA&\BZ(<<_^2l%d!B\Y,C0II^Bu9uV>AQDEupFh8r('RCYsjOmPVqjcXWX,h$TOZMt,k09@@\jKe$JsOO%a^hf:FH
%cAeaGM3NJ&!M@o/L'_Sk[-oK?'"sI/gP,9'F/-C]IWq;U)!cq_0A+4rOOcI4dRVfr).\GM)2PP\ji#jB!Ns&cmuS0>#H*J+n.jK/
%Xl<%c?PuUWADU@m)7.r=4Pr'"_"L1bk4F.7=(`%^QEePC+$Tn"%?IrDR5,09acg\Rah*<E&PC]RbLdUB$_1a/6)p:?1XS:ZT%%Z-
%W(R8^cg16l+['(?n&ND\*QXm@OF:uhh>nWFCUei"<SD9VUn=*"!LL;VJ11@$+4U)lL3ets`%07-@68Tf'a@4O`FC#03_gU7S+HOM
%Sr3`C$9E6E6kaW@4]<h@oSK".%"42Q`'K),h0(O7hPB]MA^[SXn^_>21W@tTogF#MJ"D&t4Xm<DO6Im=9q!2<"+PUQ3]oL6A=L&0
%-(%CaCW2;VE0f<>P-@31nR!,&G]_R5fk01,9=pL3o-KP[M3sraO`f$I_D"pF4TJ;[_>^`cQ$HIilSk2&")\?GduQX>$B=T^Z1Pba
%G18&<cKK\;U&,!Mk7EsDj2UWY(Af+(mQJD=%Ec(o4>_>q7Vq/''6nkuht1p7D@glt)WP/XWM?Kj`NF8kk.c!4EO4D7%nEmFDqnX2
%HeRaE/.ZKJpSmb5%_F;7?Dd!Ol=XlB!go`c\&qHOWOd\JZJpQ:l+0HP2K/Td+0n]9>l;i@+5Z+\k]lj)Nifk?5Q;=ihEEsdbB8XY
%M8<l^F]__#BcrH"r;s[O*2FD7Ic[)HNekF-jl-UEF8P8fs"VM(B65T/U1eY.]POT/?/mO$R`*1ia+f",0fKi8/s%tJ0'VA-HHE^K
%r:W)IFp+GoT^>gQ/GW%g%o8@lnk]&N''?9`0hp20?W:YF?=`Eg@&"c!;ue#j2%IM["UMqS]#kFp;HZ\U\E8ud(=Ptp4/se^`aurn
%%*qOdbg]@7<n?bHA^+lQ0hp-d;-Aq$R`^$5Lae9m+%_MJKDAFFr!-jh"(mF-$=;d%^%@\d(l4VK[p5st%Oa(Q+DI\bP79br7V$7m
%F(SmV*0V'R>*EHrc4t"I$p[9:IB!Dua==Wc0ccqHK.nSu8Z$03biCrVMj^T=,:L-+)47Vc4lE>RiL6hmW\S[_Qn0.eDM"AY.9+E(
%iJIih!N[!#@uCu[L<OX*'p.R65L'Q6_#l12&MNs7-CBr&[#":?$,g@F0-c5';8\Jm+<B=1Nf>$'XT;rMk_$OAI\m/W^eXqF>7b]_
%Ujtb+0MdPia>nL.7SrVQF,lL8JN&;i5H8`tP9iVVX%4a9UT/j9X<MflMlFX2BJL;+\IL_URAj!rE"gmG!)'20JMG6&$ohWFcpBMg
%$6Z":-pnZcqnI.M/B/A1E.Yh)=;**`J<loR6kCrl5U\TE7oYk5=2,so<<;B#poLL7\>8@u>Qp]AL]BkFBO#3P\]#n_L4Z4!;+tP9
%icsk$.`MWA-n))(AVfY+3Q6eo-6Xk-L:>UKbS:h*`!#a$1W6MT$</p_'qPEeKmn:@2\)M`0Eu'Eij9F8iTk7&0L/*a[q\TL"H[=_
%56Dr1$.D=5ciP(b&SB++A,nE-r6Z(>NQDe\6D5e/6l6#;L5%QC<(hqJJQGZ&TZN/Or)!7K8K@sKIY4VO/Ah$i6_P8)KE3n?<"eYN
%`tk$tA#-%m%&Skj`t_E`]Fl78)R"1BEYYe:""U(<?D',pYV5K".4T!Il:R<,TIgML5HpA.Zmd!5OEdE:0X*)L"&7Bd4>9'u7S)`N
%)":.?kcLid&kJUfq1*9(]/6%4E_g9J0\06=6d>Z_BTX1$"g.o)12rC2b:ITL=@WtB#N81cP7AKsIO%qfE<*23>g*`&)Y\6e8Q?'2
%Qjgm*q&(rdQ\c%X'2q1eI3snH((<k;L`6UGYQQct;+G@<+?O*i5laTQ-kI3Rb;.rINhVG"#1J1d(9AG]!:U[J>Tm^P&`tF&%*X8/
%B$$Bl<WK9P3Xu6=5up^e7sM!r8dYgU#'^hs!l?(sJ:NNS"HcQs,7(sd_l]C@?j$%!,b,_S953Vb/Ehk*ONndf4piOJ"lg*P73-qk
%@.V3SBW-8+^aRtFW[g96(o.:J_)*kY%4-u0_%SLHp>\+rf`j\A!)o)u%5KeqCKMj6MC;,r^d'/!W?@[DoYB(/K/7n]Sdq?nIH843
%+MaYqZL3U?P0$*0Jr.[Bk;7D+KnJ8h)e0;=7c1>"Y%[$j!>c4]=$irtkiB=C/t(qSJOG$Jr>kjF!dZ5`A;#M%)K;R+NG/(mDbWPJ
%kWWg7LXFBLB-a8f2JIo)/epblX;(IL"]S\rNIb+Q^<H(LQl/8dWM<IX5ceO\K>/[%Y$tq8.`0;IPR0_^KU9dl"^r'XOR7["Cf+XG
%VdVlk5\gKe^_RfB8Y2CR>0&\m`(]@8&=B6p,a$KLOS8gJ.4T$C\9-KK+e!WU3!^C08I!O0]1T<C\]JO'21Z=,$/'hp9hdTPO>B-3
%=Kc1Q6k1:#Jk]VT9UU8lkb#_GaE&1l7@1#o":1l,f"i;@jO!u8pe"""V*Z_ncg!=j&mLH=;^[+21([J(I3q>Y$VCOk$j$hK6nhOh
%'C\:BBi#]>7Rp>,0_@*8[E0$a-YTKX+&EZE!<H1l[F%f=quPC$OO.EL3rTOuPpI\?EZ3R3d0\HM^deDU%P>I\"mm.c$7I>CrOo)$
%!sGmg(`hOrk^Pn!d+SN@&3.Tg+F,:Daj<VR-.<EB1u9oA\6Wp5^aSK`5h'2*Ar6*#8AW*YJ=Y3;=bAG.a_cY*@Z9US1%5GS"'LB@
%%Vu?:!F8)8%$\Z&E"?-grh2IW,rX,-C$9mM,EMqcbUt;;bi3:Ml"4u.UgR.%@2'-WPm2MX#aHRu5Y2/E%Fd]`W.FksHdm^=#0^U)
%EPY\[?\gV?JY=P/X#Z%d)Hm;s(2>YPhh]<=o!h"l6-1rQZN`O&XpNKS-&1q.BVd0[<>-aR$f'.-W3R.mRM)o!7ULf]/Atc3+_?V:
%(oPFk:]mkV_8.$>9VIO\-]H>:7b<JP$'lD56I^,dm1g3Kl6rMd[LNA5)e=QIAPpg+4Z/5I!Vk25NfZ"MNr8sbAlpc02KMGH"2\H'
%79>*je7N+HCcu[!H"IUBEnRgk2M'*i_s$<)dBc3Y"B/7?KE7(J&0U6T-:+_lp)ZWV$G^0^>f#V>j%U6l?R@08$:2`[,$l.-#Ye/q
%&KZO/=@5G3VdZeI32)/25QNLS7ZO>Yg/M#o&N4BeDXeZ&(ds.L(Qb/f'T6I_/RbjkEiEe!JM9@q"#T!5+AgK,U8o!?;7"E$@i/LP
%QBq_6RV:/,!>:V:_AJ2I(`+?n(_W37D?/t<0ieG["9OBC"i\HV-Co`R9@?*W9erT=PE>C/.T!E@l2bD5aH2&F@JYTikK$&J=]l&5
%!KJ$2"8TFV%.cBA3m\XUPN["Z3[7]9_@Q[J^_^Gu6PEbQC73^QZJ6J]Kc!K-,:#*6W,KmFHRE#s8))+H*#QOJ""+EFQ,+k&KD7^,
%!!O+d5am<l6Ad445AZ$-f<e^)b+aoX.rq\I@X4K.Nl8a\'>5(iN$3n,/r?>8,*0eRT`e5Q:.N2a77/;U'#i841GNBQKK8"d@*)A;
%jr'pSZk/<FK&2\!");8%%8@\V><*9XJ.WOK5R;sP6ki?&6h2*/Yp4=@:GSo:!NH0\fTIqm-o)"<i*=ZP&=\35(do>$Ik`,N'<@cu
%)A;2H_S&5[Q5?W/P)N9E1R1YQC''Tp;Nj`30S.h-Z%e@o+P\(^1!g*N*S+m:$kO#d(4O1e6,D1Tg+XgP7&GL^05?%=2A[!9mK9;M
%nE*>nL1)]2&E?AW+gQ[4e&_Mrpdm@QgJfjL50V\j8ek0kd'*Po^_gcdMkZ<Jd*RruFuK^e$8#qb#rng3=:!k2*7,n'IDGB'f-WrN
%#*qcp[:%i8`!T-JkUgmKP->H6Es5KY(f/c!3"fD^,"TLtZj`g$g]aI,'>pV8dHNq#.g)Nu!=t>eR2ESf`FgUgW*#,bJ;/Z`Ji!]P
%XsmOrX(27!%bPf-4K)]0";2)YPQ_E"%T7t:O%S\jmY$Mb$Q9IP9PcO[Qk6Wl<!blb<CKr9AEdW1ZnO%:@&+rUEmANA"eWRFi?=lu
%/@cL0-pe%[5ZU;tJ;o4G2Sshul:.o\>8VZ&Cb]M%"cNW\0$lANU'__mQAY_r@#@8_#KdfA%0]C%%'MRB#>MQ4W^snGIN"LjJ^RFA
%An(OL:C/3r)6m1t[31^>mc7^^KeV/ZBFLY!NmSB#_bc"D6L1Vl`*LNOK_5Ij"3VoMJpqaAZCtS9S']N587D`8&/FbN3^gj7%EjBi
%+DCPO.LV(jdDLV7:`rARR%"MdK*\`uD^f5O;12GT,c55`PC$27%J1*u0HW2)CLC8*1@eaVN+%5N5q%ci8b*A^"T:$WkEpiuif3ZJ
%&BTTjnl%`Q@ePM4Lo)<F)>n.\RF&jp<.4l6#T9ml('.=;!'#QS@'g<a"jU9dFVJe20J$8k\3d#2/3\$R;MR7[=tSZ@%!,#S1NsO[
%o^de=2@.M/J05@.<)lYn=95.h@q#P_"Tbo[#\+1"Z5R*p#UG]roGEn+.'`li+npMH)HF=%1t&W_LJ8D$RL6&5"L&/=7=,)%&t!oB
%(QUnXNh!mc`PCap2DI9@"?41dP>$[-NRD+OIb'uNk'gok.q)m;lVq"5WYcRLku99i<i-G1Y]_._ZKRHJ&RZ09VH$AcL.O*'9F^=)
%.8_cQWC2O3K:sH,2%!HIh&+fa-Aj]m9dn+;/6tb73e4Z#Oo'pT"m\CO"1h)/)7bKY!pU<,/M(=],+51F!PXsO`7W3d"GaK#1G2Ba
%WaflY!uXHR.kP8QdF&)tEU$Nc!C`>/5XB0/$#QIX5uoFQK*[o\@T8^.3ApSB6^=cG%nG^`iA8UUEM/lF@6,`]*\'(AVW]:(-<=@;
%Z4Y_meVC[]dU0@(WNkGLV-GQ9BrIS9'GW141/YW7,i80E>ukMlkUI(%p([icdtH(t1.JD\]ne#XB)mMc"!Nb*WUtd22?W%OncAnD
%gJk=32%c-_A1s)"_Vdsoj>n`i_$3H0<HR&)`s=Rn7o-FO$'&b(ofCV+:+51B9^s5B)9%@8P@@NCr,G.NCCi$f"r5ek0>JWbNtk%<
%R^>]\$r!rrJH8f;<>#+;[@EH&`.Ue$,n5kLFfU4)fbM\C&d8Ih('-:$OYG0/r4u]\N+a?HAYrIFK,E-OTXYQ-(hR48&"Pm"JV4^>
%=qZ]A.&onb6c,4Y;htQbKIQbJ.2%c-M5(UtR+@.*'H@92>JbD$=rS?C*K7.?9X(p*ON`BSL5oq2:e6.F)A<9<E-s"t,fgNAIDG>W
%_NZJq((N0b=ukM90f00BM$6Mo(0%B-@q:<s'P/1*s7X#)GZ`+0cj->U+oSWO-VUt"e3[5)IM_n_!7S#,#OoqER1@GL1b0UO-XkO0
%22UmE=u`83b]F[8`<mItEbL#T@W]!S<'<%*2&[2KA6S96pmLc-6>jI#*?$ZkVj/4FN'tJnK-70)JS$XZNZ%,cPrteVaqAjH7=bj^
%$/GXD\!09j*t%abTEs(N;IWT2A/*E@.?YM_bTM0AL7t;-9qqEW6el?o;7].V8QZY&9V#+='f.uKTVDhOZo/"=;jE_P&i)<pK>H!.
%XD239NmY->/SZE'YTB^c<1^nu'<8!>O<]SjL2[`I4%sU4W=/YV'A^J#$T0-?JCP2*-X2L@i%S-XBS($<703b"W-!asP]<r;%%u.D
%ET&+W$?D7V6$+5Z`/4aj'[ADJ`K1W/X<CdUIZT&8Oqi^13\B1P(qXQ#J-%-!?tu@9@a.`6P>&'DM()nV`t\$Jn-Sr*i*m"4!ZmTA
%[UT]3ASWGe'cb'.J-tI##+&lC9s!1:U(.NbhhRIY&5Xk:5T`o=\c=Wl),6>Y3S#h0In56n`=DMqR#I_9_%fiR`XLTBWE@CmI[DSh
%1ggVTPaGQZjg_+=@B.F,7:60d;Qti(?E>8Y#_kMRh#ta:+>:5?Tj&ge-HaY"G09qr#p!0MUSl/t%QH2e$WJ;@)CcTT.o]M^)H[;-
%G/_EANKh=G&&GO)MTGp??DgD]l'i?#r7#ccg=8t$2="I-U/<;]Nf>#/\^3ZrV&$r[/Z.?u/$e(\7ffh8<##Ca/W/@YV(cPR2u@m-
%!Rd@L:tTu=KCrGBh&*:r.#*ag"#hQ'AK9;W3#DWJdfLbr!(po:E439HJbb'r<BBaagfht<\53nd2%9Wr/ATDA"gC[ti!KN\dh&c/
%QohAaPpt8'V+gG$U^iKZ9+".<%$qR2&iVW':R)cu#ZEIH@9dD@jGRff_JMXZ'bITiADmN['%[4"nm/,+iE2W^"V+'o0FL`s[3%1R
%L3=:ZLp^_bE\rj\;\m/k[*c81KnX:M$Nm\>liq_BAM7H@`H,G.X9MZ:.mX_"(f]=bZj/r40^dk2FQ#K!73AuraQ-p+7@1r-W.L>&
%C5_:o^ke_W5b?>s]8f>-)9Vk^\q?hZC#,8%R95+I;ArN:<RB&2(`CI/i;d;n$/(,qf&P/.@LK\96$F@JSh(d'a.b.-J;l$$_5)or
%;Zm$Kq;@ttQ+eq?0eb-Hd*an=T:!j)fGBmG8WGLCjB)H#aGUmd706D,#NK$V2DtgHMN;pU-rpJHW"SKGR2YRmc3Nne:?`;o59Te,
%R6Sns./^p(K7[YCgd`TTA&4pLrX5a$;Q69uhSYj(3OEhCJJhQ&:b[DI2oosO*+FhoiI7r:Jb"Us8apL&'=1Q7lm.M^%g,JpW%+>"
%UMI6hM_1ZpN00X1=_iCa;5:o9QN@m98dHcG#*+TuZih_m4cW[WC@.7IA6Ns"WKth+*l&3EZt[\cQ6Tf63dFS.(87djD^m7]p'+Po
%8`7Q_+"XZ7^=`hl>l#=oY@0"`@p3JY.g9`kR?2AN!>cj"ojN]1@A+,\#F+rAF:8Fq/b(_NqVd'cHimJL<NLR`?tt+r,Q:qj`<?JR
%iNNlKGsR4+<QIk9+A'E"C#"6WLs?>3^L/ltgjl&T#0MqK6ldo-8f16g)&NIFpA-fG6d5("S14-I>q/t977'7i9A>"Oed&0UE2O*\
%n8Tf[jr,^$hoK7m%jD87U7`b;9fXhDZ!irBV(D_0m9kiDQ!,1e7:E%,9_/I&eA\!Z))hYtp*phP&XO!K9i/u_mSC8b&gaT9BN.]f
%9<?0*,iUdB>WP-2UMAA7"-1hB%k8?BF@9MfEAnH(X_&t%&>mc/j/;I:6<Q'JQrBH*f+<0D<6W8Q(Gs'<"(YYXU`,eWV.rsf?+8nL
%i*sq7EtV4L%?7`R%5!I:g:K9Bs5qV'eWt'qb&tQ#YUWcfeg3f(GXYIg$GlruBNZtB9.G0Aje`RdpVus8*\/?0'UN4pS?_6^1EPT(
%Hg@fAc;F3!%t<jC9S3+G(PS"9rB,`((:,9gA@J*0S>5#\'0(W=JgE,fm*XXZk6WEHhaE!U4nlY\,a^R?,).eg'?32mbG;%^ClZJp
%o0i/5d_dpEO:#uu++afr-_4Ko:N/)6r)b>dGpWYFKQbrV;)A+B%_qZ;;V""$V^Eq<'=U.9E#hX/,h*9ZIaL12'\aN*m*a7uNf;&:
%nMr]lm9Zqt<n+J<W=Ea2(n!'GcX21j>An.I=.FgH%dMEURI/k!hd@Dt`FTL:d7h\qNK"H`@eX/4;CcY4I6:s#<J7-h6+i&\KX@B=
%C'$HoqLd\;?7@;6`7FT$DU53O>Ng[aL]u,'SZLH"66Oq!*7$GF7!@&8+LkKI[ar`5\i+4+;jq8NQtS^Jq:FO$hV/&4g8WCO5bm4g
%VKS[+!RCGPT&CUD_:tQXnn^je5um4-F^V_BVj,VBf7EDPC,][0eGGhr,S+JkO[%cfA_VNSAkOh;P@hY>m)'H#":H^+EheS]+\nR/
%,1ms>!X<SCJQ(EHbB7)1j1jC-p[34/C3#k(4DR<Fk9=fmBa1d(0UgdEONnWEW[1XoKi/ac]mO/co@#dRD','DT<tS4;[804Y<Vfq
%pB0r>i!4#cH60Ea!J6gm8['it+TkccLRd0&.fFEg\+Lq9SS.?G0Nl7EL[5D0@tFMsG"_'&ErPb+^3fH3Z?Um>!@$3Ei*O4'!L>e*
%E^4]X4]<KB>$ZT[/*J?3eJ:,P8KfZ"nd5=SAa/^9Gn<cim"..d!HW%U#P)'eQX?,K`pEs6POO)L$F^jEWlX&b&N'PaLI+co'Q@5^
%JQ+C<P5WM?@1WZJ"T%A>Kq<KCJf?mX%oj4I\0F<@[[uZ;%./?AJg4D^VZtOW!L6VJ\@hebOHcH<NZ?Fr=J/?<aZ8,aiB1Lq_*O,]
%!H>J7W9!3pp\$!<Edd0gW04t5Y#;;F-]f_&KCjBXe<q]U\L?F[gq/+>GQ[+FKLc^!:":)dik5`l5l_j$`gu.ab?-,l'r<TBojERN
%gHp$OP]@"^L8WoBTE'eP/E'i<K-N`U$4K2)4GM[^7]tB/f\`OF,r+L!3g*K:=H*=Y*b"jYM8hR4]#GJNm;p3a/%(U&OpXMj&_(5;
%EtJWU[Hi%YoUP5HpoYjngq#uh0XC@p1_$@i]UPA2X/1n"Gm4^`8lPe7,,NqFED]7h@FYjd2"%[k<MpC3^sY>lDKdun!n*.N+ab[A
%2DoNr+-BtO4h?J_o]!6m!,qgW`r&)!nEB`EIYu9^ICJYHj-IZh9?p]JoZqHPG-n%k;X/NoU?`PDCrr=`!k:?8IasgT8eLlNcT"2E
%F(-0QQX&WT`-7#VcQ/%i]J/b#\MnMfgeJp\S<WK&bf46tk,QRi*'``'^(`dK=rnqlT.t0U1PuJ(F$kap1.f%':%4;6b1>Q&cV(fE
%LRruieXhBM)>MZ9X:Kqp3U6rWEnK$f6=aUc/?U=r_"/sH?8G1jYWPFHA^9"*+\I$5'NNGFi*))#BAYs=TLS!FJmqRNo:V]QnH0]/
%@37f9$.j"+jG^s1G?*h9Qgs>E9JK-":*0_Q&3qEcC_.b8QT#hQkE`+%c'JDSWX6Oe:re\21*W/2]'T7PL*+InDk-sXF.,CeVpGLE
%6[HkJ-KpIdjnZYlB;<m)$7JfHWNK"S5M3-`_E'RP&K'eYad6]GPuJW#<)i>9F-2p,9/i8;G;1<`Z_.BYBP-`\;l*7T_bl3jaElF;
%@/u\BB=drJkSmD=)=p&)_.PD_SqHr.k3$H$*'V>hQ#F/.Ldg`-_Eg_51Hf.eS56`i!P^O_STA<_r^^"q_H0S(jqj)r1,72hl9=9Z
%8(`n>nFKrKk@MX\d/c*.'4,E8,L<NrW(+KX"7$;`L?#kqfLa$l)XZWt2*_9G'(476mBUM&R\^M:VgK3s%*!gNUZ2d<Z`O3$"?c&i
%M;NP,]`t)G_.`4RTn]edFB(]g<)E1&WoM0(T'X3U_.R`)mW`1D"XLB=%]\H?iedf*+024`VM%NQ-a+Am"r-<nqjG5%<%_2ud5-pR
%0L@@(a=:s<"udXi&q:pqG0btdIn-GOk)4Ln+JS3A+DE#X;I?IUg<Op'."N_L?R?5V7HRX+T;d-oJhOKRBs"S;k[=BR5=iaVA4P4d
%IeN5*0^<\1EQnT=i=VXgJ8^^[PXs<)GW(1Cn?dL"(>(1a:J4E"7IYFWr=igi-=AQZ)e$u['uT80M'd.54P!KehIUb_7R^^)\WrS5
%Jr5b3b7-tQEBd6\U;1VT"iYXq\t+%BhP[H)WZCh\bUg7I60um^h>%+s]*m8,A(1N%l@)dP1JNL$1M%Wi0HiRR@6%sLRGbka<r4r:
%UurYL-mCB*!mD2YLsJAtX.FB)/k2d!8BE#<7RTe1IQZA\<Ph`K`t<G>1J4M!4AiFIa"esn@=9W<VuG(,Vi46@%-/EmoB/4cb.0bo
%I&V_/n>;nh*:T0\_"WYk]YfpOk@):sfFO0H)V,Co0<KRVNETcR2bJ^-knCJ^M<EG5Vi$8;"2g1KqIo`hKfAf`+WC!$Q/;0N$(db<
%eJ!E"^6id_V<W+i+i&3S;0=(,Jr)!KG8APHS<rNZ-$=7,DnIjYJ-GD#=g*Oo2L>Z)l"3+Z>VIj9f\@L=:nZ&h(H5`@chb2Ajn3FG
%C5!VnPE;S2k#3jV,5ill)lBH;30+YPj!56,q0J=*6kI:+Y/+J?9Xons]fjH9eGe-s4_TU>QI%P2q6,#3M-<\28*,(bb1pH6T<34V
%f:=e?#(Kb&kC(/9=3,-mK'*,%^>(=*aTMb'<02fu.Dn;unDagORKR7kB2;e%nS9?EXa)DWpYJg3-E^3jImNd)G7Oe>Tm\ecT-Bq5
%!sNUbP"S9fHsXfY(%Shm%O5R60R]:ZEk3&P+hV2Q6;tI$^21@,nUBQ"8!=>6KOiDVd/!`0Ws2J<A;aS:;+Cb2]&RecTkeBe7rSA-
%qh:.[F5Y`OL:\)s$ksP]1B8#=pnn$_:nMTdGT,OF,^p+frnai7o29b+J-YY:6BicC%#i1/C6n:kRG@)a.:"YhRgMHU(eP)3`Y%VF
%$5njhn(.(CHISD&aaC8[M=:D$c^\Z=^2!]_<;V!u@pVq\,fXZl,t+q10_32B5ZP'hDo""YcihG><uq\Tql&nOK#r$bS0$qRRm-l4
%Udc.*)4&umKTn%=?/-B$:h$3>8^C2:/Cl;NeqHGn,q6sq^?7*MWZ,fW)Gc1,*Qo2MflK&>pW/F#;@DD7+Bp\ca3*<DBCr'C.,[e7
%$?6E9q>$lWb`3&#.UlT2`]RO?<Zs$1Km^%lOXl_!fKP7e1n;\ZMfhFHJZa!"ATogN;(`"$:.oF*`a.>!9G%P6$&U(-DVc^SdeJ>J
%As,^(hup=_l%L1f[50e?`&>)nrI!n-5^0!ZH#&P+0Tu`/S[#q@KO[C!Jh:]Fc9qa.#URZp@dY=,CZE]6"Sdg"rU_63ElVffK8IAT
%54dC)F@>RED>:igB&`sfi2b0)r=/kC15,3_6bOd>Ab=ZHAk#Q=:4Mt^>s"(Q^>![!UIu!3gWY*&8%6<fT*Pc*Cd#:lp^<tQ&_@N"
%!)u)Y=\-OR#@1WPcK%&b:h$$k?!`Q'3%+AV9'(MdWlYnB=l5c+1bq<If%tIjCKi,'4ZN,\4QYmFL$h(P,n0*fUcA9G*6LW(jS#[K
%H%j?[G4mE^j8eUX#p$<gWkdJUf:S1.O-/`)c\Q[U[Z'C]Ms.i3<`+iYAo00*E'(m\?<p);#iB,FA#Bhc"GVgC%E`sS%17;dlpEsM
%H$3#,))L']=j5:UV*_0f4b.tVc6I(EG^K/"M\D$kk_@XW0SF<@c.bh6P.G!5iKF=Jfs`D2EcI[YY2,q=^,pFK!O-6u<m79R8Y.<G
%H0017YRr+No[9ER!XNP\d"M?,Fa`aBU18p.OAcKpE`W9/`aWJcKY#0Maj8P_#Ji9bWD+_L*sBD,O[`/gLLrk(H^kg5_e8Z!OC*,h
%?P\>c+`\t</Z9eQ*(W"<e#QAoR#HcdcW5(L6F9:_3Mk+Ho%Mp0ULJoBSOg"W-MNHh_3'#<JICA!jJjV5752kbnbejScfo^fFD*Z*
%r7UN*:QsD<Ze5"f_m8-?k"tkb]HHQa]%[$RaFF4Ui=3DiCPe/m)kL%(N\+#WU_oUDBT8aW7BE`02]r.!mW0j#ln9fqE%&3tZXqfP
%0i'egN*3HCAS-p2f@8hNNjf``%QmdO+<&;eW"<SJ7dHJJhl,^1`lK&XDJNZ#KY0'pqRUG*S?@=6!&[#PZL*'%c\n>qRF?[nZd,/o
%h%R>A!+Oid1`mpS!Q+HgCG$ACXb!aOphGB981N;=R3oUh7bG/VYN=W#"3B4X**FW):u2BV\q+18!\QXa_LCPL74YuC@XS&H)jnut
%VT<qeD)[[&i18YJ5uj)$"bB6JOkfQaW<?_"<Nr8;=/n"nQG@p_)sVhZ4AIibe*2*J1M<Xr2SdQ#D:M_^R1P%>2Qtba+ITpOecejH
%n<O_J_4Ho<%M8iN/<IX[.i#8PIEN7A8]=J9[Fe?4g-7T'o'd`YBD2&&+n6q`q4jY#I0UIWeA"kFaeIQ5G6C6_oE+A<EER63eY#+K
%g\TUBa,UFpnTgiOcA4.Q2QlZ*;)c[S#Osd)Tf28o)#(g2I#\dqJ-m2CYO"d_-(a9u:6U_+kLo%ro=#nWZD\VUi-j$`L-b3Mc@S55
%f)#76ki"L3)k\N[U(s8'[U_4`5po7q$-n:4nR^F!;kA=gAOjf8/?<(r`R<=P4feP8Z*,%F.0P`M-eC/RAOm!7/(4tDmtfW^cJ2Ar
%l#1mo]dF5[cpW7`H^?>r2,O!.jbOb<S>tjUhM/QFqiCCaV;iOk5N6[h`CY@2cP7,OT,Og8&:+iDA]u5+-JGi78jBk-H3`a@PN?ja
%ZQ<in:P_Bh_`mI'\fb:U-uXuAVGeHPm%7D3N*_%Y8WiOeZH+-F9%YD=30+Cpp/-M9"1Tbif&eOOSeGP(1SfJ^+k:rP[Z$Bu0tKN+
%k?4P%6ab0Afj%m@T19dge/n-9JZP*8N8h4`r_c#u6bXSbO&F6!mW-kLFNZlHY*-7Mg\lJ;7WH1a]AJJ^&1Aor%OM!IdSFDShi3#$
%E#Ir_.2&?("_ORi]2r-4I-(9nh9DuKnd"T*$sg/'2(PFsk,/8\?9;`tpUc0Nb$?GT0QIuQHOSFc#Pqi2UPj8>KKY[-Z9_b'$VclR
%3gI&Q69*_Y9Yq8M$0VfN0qqm<`N9:#&asr*^?&:;b?jqD\^ocY,7_)=-W\en?&gE/I56X[:sOF,D1gM"GQ&^Bh^d-BOlJ0l2Fj@W
%lcbRVD4b_hofUcr-[nj(2!-k_L[tCU56'\tId;Y1G7Jsh4SP"J]T8//Xb8mM&+2SRh4D\A!ZUJ._S]e'pPR?`l2i)l_`g^^1FJl<
%A7;EtIf7*$]cS_eA`nb#;sm.r2KN]aaUD*$#lG[)a-/m7]8XRD=OfV^aW57<%-mVl3G@l%d<kFUCIeEc#JV,V>ZW0/5![k"Z?-"`
%[cYJ2WHOaF.W7$0p*sEa7-+dnOK](2$IZ_/r3&q:3U)es+#qNh,W<-g/C]m=qan_POc_g>$<]'<T<M=B1tfAhYhEO&%(p9(L-KlE
%B>!,UV5SqhC9%HefI$^0-?R-R7["lA(rAK2#fQX>n]ru@S[%kGPb`t>WiV19dHR6k&AG7h<*'Ss-C4Hqs!NhsGLTm9mDq_YoHksi
%Ni8cAfaCh;%d;iL:]`%KL#c.bfRJ=Vhn,AM8q8G2"l9/0=PYOU!<tX$I,*E&C<2Yic>_k?'2)k&hibsAc7V@*0WM@Z0oR5--)A`;
%`_&CHdL_t'Vp?F]jF+s^,B[rW<hFjdBhmC(WK=H2A"@'_9hhc7gMZu7&Nl)035b8bW&XX#LemaS6H6&PE>ZkS$/5k3)c5[YhdB47
%HU4SC`p0C:!:(sH6l,$QmFjdRIC.o.jtP(lC37F0*DJ;insRg.'3tl&(lF.#*u5n#o!-\m-CX]mY"EP3fK-ntc/;l[_o0oq2JWR=
%j?NWYIrQ3rSs:cWFn4#-NW"<$e$i\5oNS(Rm/t8?2m,<I-o+'."i.Pb=p-i$=*M*6M)Q.b*CH^Jd,6C-B0LQR"iVO*;(6$h*J/uC
%C8P@g]4p1fFf*%<h`KZM_"0:ceW0,5:;OQ"6iR@SBJjh#ZdclP$j9L73L$rB.,.'BQ89j1k8*?XinMZ6Kq1R*6lght53ZCdF&+B>
%:OPm)nHVF^NA'mcZX9PT(n=Y;D96GRN9/sr67:(kVrAe<6&Yu#"[ju7/(o1JU3m*d:ll+fLJ#9__IAOMGP+/dX!EW4XZ._\Y+WmP
%'!kl',[=D9E(gu?FVk)GK'CWA7,)LRglXET,h#J*ikETdZ,LoeP2A^]Y/.ra?=Usnf%#<5malLTR]6)@X_@.Y0l._r-\,"2n88<O
%[;"a%Q%e5AohH6\G6Whk@m'WV[i*VVZ;![?=R(HKL,l$&>*"I1P[O.2,SuL[_U".&To0s:(::U,U!Ib^Y1K[[<e-=)4)k-AAdh;_
%cThJ$TB#%]AZm.p45$JJ%\Xo`D04"^H9YE8BqY+Gat6N2'(Y=j?Nt\9$X,S;Z_9Pae&VI5iiZG%*P][H"HuM67>eh;efdCZ^TF?j
%!eH@J/u.52e^7#cPnBjd6Td^5<17qZ%4PqW@Z2@Fe5nS?]0E1^Firk+Qe<4SHQCQ3ptUS2.G8r)4i>S9R=CKKPNUfq_'s%dj_K8"
%g)8uJe?;Ilbe).<E&OsVs'Q(q#.ZYPmiJ\Xr_(5AA`sW3K@+q.l+n88*EPIR(:gibFRn&2^+O;O_2;DDjDGKo%rk:E)gV)N"#[&`
%rI#VuF+4<"]hQTc4`db=jdeU!c;G+cf4.jSEGf,jQ+fTu0"?j!V[7kh'A2LKRutPN`50Nn[t^Z.KZQCm4/B+//fd9VClTe*91Q/Q
%&uh<)<,@P_4%Ic4;Q"dA@#)hXB%"aN:'N>,g87G#%6pEj&?:m\K#S4%2.WXg/7`G>ZGXP?9"P\J4ZsKM*H,j*:(&pabcTn)!M)-1
%9E9FB7%3K6gu69!;_uoJU0b2Ub$7!MZ/Z*>#=tIQ7/EgShcdU-8j@Q,K<AOi-60ha!A.ip8D7s[$4PncX*=j,L`kefldZEo8K4lM
%33?t0$HND%6'Q:ChC7>Y!(.`KBbT4]b(Y'&EHPis@@tMp-7'(jcR(Itm&V*c7Y#aWgDJX3%pDb.!Xi$m?jC7o3K7lK[QQg\_nOM&
%P[&d#D8Pn\>&l?%b=$PnRY>qtS4'!6lnkAJnA7Eqd9C4\?b826Wso4WlCO><m5,<c7i<8"N`1F7(NN%$4>Yu\\Zf9X?QX%rn^#V^
%I`.bMR=.%Mp3Q[lVPaoX6kGC%,UW]S8M$YI]D=KWCEJ,hA(K?E(Pc/KFgrkt+GOfp`$?6&=;t9-r?SQZbB;7s/S7_qG@oXGeQD2/
%Y:97<A`:tREAlbmX"-G6[_[/2(k"7E:q>-81`Sr^k#Bf%[9k9-+-?%NJ&-UN?C1j?NH"rT'7lb8h0LVo4BjC'^:#'<MVk6SoSa7L
%$1TnPiEDCYN<7EE*/.@1An5:i1XJ9+H3eW9DW*B%D"bQ1;a/N?bkG4&F_t>ZU(T[Fo#,aQN*_s_@Xkf$d/DKSp65,aml88+9'H'a
%=6LSW<HW0GP3H8!GLhk'ph/'-'/f'3c8K"r8SipFBq0S_>F%1eno`5cl\8eQX8."J04t8LLYX56_UQXEc#*h>(i*NmM(gaB<O"J`
%EX`I<ht'4bg/eJ>"S3E38jbnQne7#Y&##j^Rh.,=<'g&IF9I08`E)dS=rnA/q;eVOSohsVJK)^TMjlIeiV%W8M0^TmUr97>j<-L*
%a176Z>+Pa.KuqEi^+*#kG1r/k\tU0>aFWY4,NY7$bM_kch-$kLW><nuNgE+'Vs!IaJaNuc]ZVki49^p_jD_8Lk_g(([`CUf3Y4li
%kk+Ag\;qc'/O?e:i^(kn"$PBH2`!%i_6G's+e+q-=(B+ghS"?ReX7d!UWI='!Ugr[G7U,"9#Cluo[ZU*(]IjAI^*O<8ApGrfoRm+
%($o31kUYZm+2Kb%<$oN\W>,ND?FdSJ)`]-W,/?_k'ph:MNUtT#o;"skQkKSJ4$>0D["QMBQFQqNRIAKb>sG*UB_+5!*PpPRh\)UK
%q's(\=hIeB+mLq>2MtL-flrscKFTYfk,\J$DPqW\R'25Xo+o"Geh;0-j?hpL7/;W7-e1dY`CnjJc$XZ#'@N*nI94-oZ$X>51KB&0
%<e`aN:VZBB^X=*(=<U@0XE[4k*\;7cht\sC@IOlo-LSQ,Cejp:);8IUk"oP&,Ougc4)[,TGQi^8c%NHR2,P[G-];0.SlX9;0d+6R
%(V\P+"S#4P_!'/(VEdOWkfuH.X0iJ.4uGJJ9N\G-kGl-nmPce]I*p!7_#+p%1V3:_d1DU`d55@+C?0!Pd*e@X*oA]U2^uGl?0K/n
%-F?TDb]0n.fB@4tALLZTNLGaemid`70k/FGr+(FeguL"2*<gPq!L,[kX)`\DXADTHk(rQdR]%S;Q8@UNT(Ioo9.n0Yot.Ig!)TMj
%D,)/kZ2u^.!Q:J-f0IuKrq3U!\CNLp=MA%?8J-iR4!R*r$9<G=Sul1t0S+ta?_^VgB+pp%.(eCPhjGr=ek,?XY=^]\r`ni5j4cGh
%md$mHRs:$eD(7:pp7+XLrgk-M+En:C&S[J6.YW?EM6&*183"dI4q#\or<AfC.'5ue]S4?B@V)C=$S+Dd30B:\;)VEW=kh9+<U'96
%Tqb>5Q"\]84!'#kE;5FBb]T@dUnh%-1/`]n&SmV_(de2F=)VS,/OlqMJ:f7HW'3!.IM^LLEm7SB[Whc$gHF][UrAe"nT:kUT9;8+
%X/J_"$,o768fpiM`*bS,]^<G.Ob78<1I=4tVm7Q8l;uVta:R@4H%eZ5m"qI&6S@@qHQ+GpHk6AI)//.j5?W<VE5_;TG)W(]:O<am
%5%nR4])-1?`r:6&Ub#/@^gGbm@2P)]>e@^ccH(2W'P/lUDWpI46\C8Xp2X#AJJYHRLbnDq:k'$`CS'`LHp9G)@(*K,Wk>j47K0XO
%)9m_H;&#U!LM(b")7&Rgk><5;LRf4OEnM)5YZm7G>TT5Er94Hf[ScgF]N1;AeD$6peEa_??l9LK3oJt"p6.aak0[lppEKZ(J@I^)
%et"?lX_g(c4S"TKV.10=\3%ec.n%(l;F#An>71`j/\"Rq[k20*ZkBoB`]#B;@Sg.%>FA4j2S6Jn='n)^Pucf.&-,3)9aB2I`2pYk
%=o;<O?@V5ei_>NDj1rgp-O`<<UEB,[N"1$NY+,\j?r(@!VF.MMNL_.,n=md^s$,uk652/=lOfSh&>Q+W@X"E%oS9Eh^=*MG'*AQo
%`B=`2/_SI[`sCY*=j[JEA!rJWW=DtXcg4X1ijpTQD(-':nb@s.2s!@L]2,h%p[O]u[pioA9m&oVc,pVSG&c##f*2ptA@Qn]cnD.4
%`?@*L!cCO*5)oB?.P=I(g2VKi0QPbfQhbAR_=[A2R,Q\=:/TW.TfphkUng`qbr+AH2?>%o`jL$uml't=Y+'^LBsk*Sp9+"fKR)eT
%`]B`,8<=qIJreaGf$B-d>(bM)k-9B#SG+(9)*Fg&K;AEW<L2)?fqE296Y.MNqP456IFN.riqsOVOW2F9K&-<oAK!t$1j;PVhKbd'
%D&,,/@eNOsG/YGe'6IkXdft;fggk"7?M=B7-"loIlE`EAW.3sRXB4.lNH&V0lTK.0MQjk/Ut@;\@02!QI.Wugj"Ali+\p5L%LooS
%j0*j71(**lkG8ZR)KY9PM"Im=KrZcZQSG>7Xs@K*=1`;G6XPGG3[fBU119h>@UPt$<hc`cH=C@0,#dL()uo-*FSZgiUZj/!HKDJk
%^ofZm2_;Q,F[g/WB1VGacjeJMNQ(r\lkOB*r4a8ac)(NYQ'%BtbthcJh<Wm=<*l(3`j#>ZhpAN8*,.-(9hBd@r-<HFW)`4_Ek5_t
%hq9os19+=`30$BVeEgJ8guFC3+n[$a?N!tNh,3i!ArRM.'[9+ThZ0U'Scg:>@n4H;[s_YeC84VVBs8V+9m#+!n6_?'BdXW^,;P@m
%\eWn/7#oC8,h:_(aj't-XbR>AT%D^K7;6b6TefaE5D$*i*H24*P:0\OC-CH2&8=&(44=7b&AOcSn[\KOYU>j:JHMNW*G$>rc0g]8
%JS`!$=)Ht)3h-N%_tSdh^\DXL0tHVm'!cdMHh5aa6&_p1W-"doMYiZ%)2nQOOTc-DX`7VMEu\8L\0?no@Hs9;(p;.Pb@>c1fIrk8
%Us5Lm_ID"-#]6jMfH$Eh,IO2MCM3rc+\oYN_"/eAU9Fe]Ki<0Z+KfR5?mD"ch<1:'`IOF)-C\P`Q:HNg3PGf'f[pgL;#k;Z(K2)3
%B>'5KHKD1^n`,W!R+<`^^&-A\JXiJADI=1jI&[KlDZGR(c%?iO[FME[WgmpS45o"H$W5BDb-1MR"OP6A1m&r[hM<>c<uAN#J8"/S
%X(1AW:,+jf$m9I_7N;J)):^O(*A_Obb.*/!#^$u!qD7"4/k2%Se_<Ab?m^O_5hC./Q7H#LL6cMtCpWBs:*ljr?WlgY-F`'LnYiNe
%]:r\V>!h&GP3+(_&ZM$ajJ_#6>:i%>T7`a*=A5Os]JFTqfFKZ\PV#&P;^O("93[n]6+W:=Mf;2b[;2&dN8<&YbE0GsjPWs870qN7
%'RYam[/+VBRin9o^!tj\dkb.;EFukO1q?30'!3mK<ifXPch*Z;hGG]\S*N&V[]3,K!/TN,H3sN;3Sn6E3PrhS=0-#Q'M+Y#%q;R^
%a,I<p6T,VCK^sS`Q%A7_Ag>9^@=WK!W2#R9AZ8/@`2Kb(I7daOWN)\E-;$1g#GN:b,Id+V(YJ>](ULU7:kS8Tc61Ijc;MQA$m4fq
%GN^27s'L%Ce!!o$3G>dc6KJ[1hn_rOR3&Cqe>tC'&,4hlf`_'*$3+tXT@sQ5PWf;ZVUYYj5$]TXOj[BU,0s+1=K<)ZlLV-rd".*e
%IWCs[QK-e!)F;\dd<bpDR]GEgF^=e_h9jljZq)!?kCgDZ%?fopWDOlXPO8qT+SB'6CP&)2rk3=nF<*qtKT4/J"^'DmfZPdV;@D/N
%5$u'''7P-%YF'Sa-b%+>WhZ+PH:D"2<YhWBTj.m`=mN69!mkiR.V)o+F*_Y,MBV.Db="le6+>lW22&lGk?(`X^N:R58[RlZ'ccr/
%\<I?6p%3e1T<a)J5+lVNZF((2eg`XDri4&6?AGSN7q9aO2r]4IksK0ON>Db]flg>ldV<_)E#)4>X5p^qT]A1$4"^,,iQ17^8FDn]
%RsOp6-,&S*UZ6j<!=J6%e%Y]Mi4f_<<5Q+@Tft&*q*EQIY'W3:L88np"P&Z)V"XZMNFl@'a+b`p6TsloWFqSp[dV;a$?o9L7fjb2
%@\46T&tliu:a(m<(9N2EPc1X=Y"uZLk.>W&).E/C`^mJKYe(fekgXm&_J>=)N=XcLmtW2602%K8D7WhQ=6\<hHf>>!hBbgA>Ca#c
%c;JRdnPNrXQ^n%t6B&_dgKuHKR2u++=+Jh46n`%.8aX)I$P\=]/:i56gD8JJh30"[+$"l1C*)J$h_dk*7F:87(5jtNor#tXg*g!5
%bXBO/]OeZ\H7\;cOHH:>-*kmGId**.bAsC>,nrC^kMosTTH7+UgSgYuO2.sl0gYn#5Ok;u=u.dJZiV+#1p;,^SOjCX060r6mSUbm
%hnpd:(Qi2OBF^GrQ8WP8V_'t9K9E3106[2p(q`k?YFo`@X4GI^N'FF_(u;Zj5n/MZ%D7u2YJaKJl*S+-ajAe>FI%N>eGT-I9>KOZ
%DU-\9"X5X]or@-/c$F#ffbA[Fr-1Qj7_]l&L5c3>#$IG_*1oH=goZaZk:<Z`iM*;%$E@O9$nsD"@YA*\fQR\lcG!:5.m4Sc^L"'t
%Q'U&El3FN.&$m5c;8Xo;`=rY70dV7I2+uOZ;e8:!&IL&_Dc]ZOlo%NbLNQ#t7Ds&"=Ik_Z5-n)P<M%O/CcnO[j&r\l]UnZ9dc-/7
%G&0W@/,)pUE&L[r@E:n,D8r2=l;%$MP6u_>W%f`L<*)a=1'Sn\:,@<Q@W96MVL&\<4j$'6J8g!%D:t4l5qP\UI_(Qnk]DNbK(eNQ
%Vs[l7EH\jOjkJO&=3!=NKKV2@GV%.*aRV3cqGdI^VIM\+l$sb97UaXTKHkXX0X5t=mcIU&/,MVW(UD_0a/5\):=\N>k:>:MUL3iH
%*EckZ!k9!5)TM#)74LBN5p+=R]]r)$?[Z/E?F@8DQnlCM^CG-A5=u&bOC*r7=t4@n+Dco>f,P=1Qd`\hFkQHEhQdtkp"-8En0/am
%;rs*$UbjePN`UH`^E2i@/WU7mcXVmD"71g8E<\"]'T>@n<@]G)c!<NfQO"2#_"![X]iQ"j`_6Z@bZ-`S[s`'iMMHW5qGlH6`ZN_p
%8.W0jWh5]NSKAcq&XG/eHOom0@qqWRp"@'%l`u8X@oaB3/Wkf_nof^XM*\/(-k2epqGG@7GU'@s8jeP5;fM8>m>,VNiQc@qhZ0Y.
%@25mr4.n=>gq>A'9CD\C-$U@ST!mnE;rasFZ:6;3BJX]ij[p?T+b"h%>Mn^d6aD%@%^rk4;EMBI$e/'7A9r3]jMj!J!d!!/&E?iZ
%94f7:o'O!M"G00P.$&5&;ruBqkq410[3O@dJ*;TT@.$.VmbR.H*C^.WZd($n!CD9T5roIA6orfY$I.=H7bk(,\TLPg?LlXAgl]1L
%l,0mHP.K'0;NjVfI8h'_-=Q[CUoueW0:Z?8TF.iIjB26i!Lt6##!JuJ$hJgI$3FD7Z^f5NctN.$;`8#V1*Zr%,@,LnJFYGn&ioQE
%]1*'(.8@I)BN20X\68Np@ISer7A>o.lRq`U#5g@Oqpm=Ieqr"JYe_X^/_?8'V*P(I#@WDDFnI"A5`D:TN:\V(-[9j.Lg`\+SMY?\
%(r91=nE&7Dr7:aZ1u%r8-oK3-`J0,^0aboZ8dKEA5skra>B\#KP/Vm>ENrYINUi9";.q@snhfIcG3#k3!qJp=]Cg!@TiT>1ci$;a
%_,#p0HCkqUL?S1*(p64\HfNVSIKlDE_oJ,8M$='VP*0dc_6LZT5Np`Z9VtnE$hMp$\KA#a.hUYen!9Nmc9H_Rhtf6k]FBGr:K8Nb
%!n#oj*R4@0hppdu>nmWfS).>0f*:>P#HbM*2`]`3n.&\pRlKF>@!Js65M.UDD=IlMbM_f.CHc''9A>9:+&n!2:]q7:O\RS6?s2\Q
%.".(B`$mD"/PY)!ZXW1njel9R$1TQ#@'>!J=p7?ur&J&"Se:Ogp[C2$%)D)R2HUldM'("NiJ$1$qu`l=[BG?'*/fYn`omT3L@rc-
%qR1G,S\>#+#SQ4bYCNnG[cOkZ7#,/lMYZR''rTJe?L>5IT23,)N`j`c/nb2[!9qs#/qND1rN'^o>^3;A-a;IpBl!t.=%eF>]8kS9
%90*+$EEu/$n+=m'D!J=ob)Bsr'Ko[-ro7Wdb?fSnOEG#MCbnL!AfBYqo]<aUVkL`e775Abg6=8%1871W50g%W6l:&!I;X?l.6Ed4
%Cdi'd[.t+eRT*mG-FR17h5]-Sl0jZ$atCS2P)jZ!L2*'o?_?ra^.3DNTf$l2ZY'NiVFW"=Bg\G6+ncd(\Alfnn$FFQhEYbtaD*SI
%,R]iR<5[)PbhQ96;ML[Xr)ur(e205g,2BuLXmD,BYcr=OcW>mZDW1o)Y>O+K!8.5pr\_h9Xuf^lT.1?rSpF&Q)T8X2eMgK@!N@Z/
%Ilhbj9U#@Q#!X`p,Q0Ff-1_7rX1^u"18/W'mE_G!j*Kn#h=60+co83^8.]m6ZG=>1Yp?*F,4XL^r[?8QOW/Oc-7SL3U47le-!#SS
%C"@LSlE0kRfiE;0BQrbTot_1ep.s1aC3T]ue)G^e*Mt"ABgN9'f`9?WB#MOJY%h.LlfcKQ<X,2eNl%6k+DMaPZoW=FH2M(agu\Lj
%b*no^S6)aeh*#VRKi!cunQ.a!WVe<B>KXM.SItg;A&?Z#fTM?Hja(_:DsG<(?UJ=V=j!F\B#s8J5H?Zjq>Nfm'>2?B.nSW%_:Vd.
%_-P\T]jAu.%\@Y]]Hb&^H!X7\1aj5eE]lfTi5fKS*pbIrEQ^ROGBUnFkZRO^8<"%PfH6Z=PW^>#;sYO=>NQI\I'q-dkZ-.m3tk\a
%/u^rke^;h7W:N=O?Up\e,QiL<ShH%hOr+%s)::dP28"2r\,=N^qUWcG3OrMuU6N!^`.J2e^[d2=*W=\\b3cd'//il+OtHI#h0OP&
%K$:BEN*T9ZZ-is@+eI.'.H1TIGE0-]ipe>8=QKFIoOgZJA"fBd<;]hM0f)=6+K?e&i\K=P0a/1T;b0C4oWoh>;5p)OmFPt_^!g7_
%0*&Nu8lG'kRftl<'UG7jXRtcJk:t4=*(XFY7lRY>775.>8gn8D,E#/[&Ugk"+$^!u"+iiV2/89DXArs0Vce$WRCU!M,-i<>X'sFD
%onjBT=.d98?f:[5dX3+)/]%A4FjcpBnN7!2F^J(,-Yrppj35AQ=*;5s9=9b#<M)=3I)^TUg5O:rEO-bl%.,-appuE'<]QoaF[[$u
%[r?[u%;S)&-W0`!Z)PYt"8Q,)AKu<*b,D\,m"/Yuap3_OMS.>D8NVms:\ZMCTjDU_rcCMS_L'`c_Mc>I2XS#1G^<Q,U[RjEF,N$d
%!_9WFh8^ZWkm&Z"1pq>=+SV]LbdgeG(b2mbjiJAe42+?r?Cb*Dp2ChBM:pXdUKism*h.?:->'Gq7m)iE+c;-DM(>(<Tcs1&/ti#8
%nJ:#Z_ZHVU]^G=pY^?*4^$m-$HF+;,Vq/'!Du5u#P8JLTGhEm%q<WKuT\\bNI(dK=^jW<>>3P'W:i3g$6e'^P6P(sn]YF'mhhrY>
%(qA[7P*",YNFse#7*\('1Y2L_EJ3]\"@C7=W/=o#hdr3)($Eln.#FM?mN.Ep]`!-Ch0rf3.7sd.$DsbEI$AU?R@7?j7VV5?[b!N7
%^a"?@hlje-=YQVqZ]g9CE&G_F)2>0]b:S/rW[+)%,?eK&>&!uV]H+E1X#d&N)L]'pb-RpA'@U9cF%ie&Vb)<m"BbG0g%]9N%]QA%
%UArCIIWHF-o;XLdSaDQ]:)L#IPP0r0'LF1bQIX[*r9L$X.b-P[99hfL8<Ak<nbXOGo-]cg<Bg/<J+\0WM?GpS@^oQ[8Unos)%L*;
%@D8`f[ae^l_YVGQd]0C3@-js'(ME=u"2+iXJ:]*AVhl&FgTSBhc1fa=d@rD0fQVhG1GB$e=J@BYPO'R"EM"m]q,RL]Lol$TS+j<?
%DV694o#7bIQE-KrmWX-THZ-!^(O8YfbEcSn)>Jr.5Dii1Rk=_=!"k)"QJLR3/+qV>*L0sHSr;>OY6+mQc^5=:ni:H.B`4JDs5pr"
%!Kh'uYD%S`)l-`md8->%V!W-6`J*k"C%_?@-XHmsoT*SZc?U9[/>K*q%TI-%$-61Y-iVD0J+(WZZW4[?JaV;"mfT3H_[0MI`SmO<
%\r4+C$3&oiB0Nm+!<d-bc<[f2pt\55M-hnk2=%6Vr9F%5'kb!j9umeH397Q5!c9#oo:-@k&3O)rK$)ccfe&r@mZa2G!)('6d">GH
%2jm_9P!X=W\o:i9CK;193m;%k>W+??Tpd$@mI%PQ`ZQ4._Ye`%h]"Z8dUTflRe%pP/@Ll**Hk\6:1S2VmeRdiZQ&t!!e+g;l`!^c
%ZFu7M]X]Y1"KYj`4k8kO9HcY@`i$'t+EM6Nm`m1)[U'c6<%P^j[&j#-hYq+$'@K1o5<)qPkniFdT/=8rQlt#9TmOGWm<Ga=1-5?k
%fLLAahYHHLcLHo/+fsq;0bXV&Z`[-d2(V<o6Kj\$]`t+:'_l;S$$+NC0MJVDR]FlQ*Jo0%LQ!,*3NF/EXUJaC0cD$o)YHcn4h_=B
%#g+[PRo^$$54,UpQRb?t7@qP/"g"o5B'qQ\Y+^-Tg]3i#f3lt8PB1hWkT0b>!dF8Wf"6GBeB@^5!(ub24Ia!g/\k%8l_B)8?fh_q
%[Y@s=U9!M_!Fn1q&3)QsjAF2U?P1=H%,QG4d^'ZPG+lU?N(`<)##Z48e]_A4^*D/G2(_pP;3&OOZLW]YY\/pI<G%.mc1Uc=Yh<5m
%Pm#C#9MmukIIsp=CD-B'KXS'j-MK.d*I?ElQnq^\2Rth,C_9#Qn0g(`jk]K`D*s_GDkA`YmqBDeG;P!6ULUrls#p:DPXkWg#R&P#
%^0RVrZ<_;-m+Bss`pDBR#2SEbe&l);XF.#c?6Mp^Dhl)KaH)WK]li"06p-BM2o[E!Qpk,>=kGQGO46"A]EmaKR<(EBGWBujJc7S&
%>j<]3V`Wib3f%3;)G!%t2'[%;jar$Jek<d>%9dS<PH);SS%eJs"S$3@&N$15LA,<TeNX_48>PBiT:@Sp5Ognh.B=SRQK*V_,S?*7
%d`_g.:@+ulk_'Qf4r,;=XpCnshS*\T&5F?'qafTJ*LcuP2HZJ@kAc\#bHqqe&,rdd<OcGe#20EJ]!\AQO*+k@C[8)NT19(Z1X\hm
%rX)lF^*D'(^s8lY-l/c56h"[S7lBF/_?bu60(7hcP-KW\"gNr!/D@n;BA8;>]S&<,I6SC9F=l*DkH.b>>M%Y.[[^@j#>$a-q]`?:
%@/%Z_<H@uR<BtiMPeEV$Hl9!#3E17s,Jh9+489P6fGVf%jrt5U^0BiUQd<<j4,f;&I5/'r@%jsY>)(d!<?`O^lapStURK+SWr789
%?qi'BnZp2=8Cq8a?7Ht%B_`9),m5)WS?47.HFBSdZ`Um4'tWamOINEM/9uJYELqba^lsGQjl'==k)SeRo_3l=c/t(?<%S(qFMJc_
%BDPel,N]cf`SCY8o-J%i715!Onr-NaEbe2s7.-`HNZ)*'2D#2^3[LoW0'2YQe*:+cj3gUs;`j%,Xd$"EV3]-*M-o(\[`pmkGC/)2
%:]Xddh+>F=M]Q%i9\u2r]2HrjZ[]L#k4nH?7ehrWs'(&##A9VS$&oO?J>_!!RH5;GObOkDa/Ig<dCDBr$lJJ+T#9#J_^b7Wab.ho
%%g,qSo[KncLAoJ,8$gRu=;]MfMm4Ua8-sX=3u=akQ]Z'I]XOCo-$M2X4WF$cp0hU/ATc)/[0'k+[EW%k"$\>CDi5u$k/ttf9)t$S
%CP=JhGB+k3I5f;d-pS(k0.6,fNgI7(_uV^,<92fJBT0Or\F5-mZHr9MS`ts+Yl?=lG,G!G`qX,KjbB9:VJDTFAs4:-VtQZZOil=j
%_G['=rqB4e][ArW`;dWX(&434a!dt0L:]5eYk"Q0k//[>llGsCphb4#`eN-Hn&uE-Pb)['QYpS*709F`?F\Y%jP%LFnK8d'b[+b4
%[c`"Oi%StERoX/^`8t,mNSLd$&4)n%6=nWj0AsOY%b=^,6(-1oTuChjWN3`";!eg;0uk)ZS@ob6`EMNMXK((FN*Y$/E-udPi[e?R
%T@&&C#sR_PFB6L+c4#Y;69M]DEY[QMHFJ*pi08&83]nA=]_rc-T.'VFM8M[PJcHuE"P%\S.VdtM#c8Qb>siftZ=/E9,D!+G7^B@*
%`_j=WMRQIJ]O*\CP]Wp`64l1Y/"&7pIG;>!h)T$*C_'tmNEd.C&2_Hb!oC^QWoB'\dVJpJZ'KGl4c"&\BjTeJZZJ7'Q*Q-U(Yc64
%/*866&td('N8AbZA>sDo<I'$,7^CqVEV^(S=tK)A084mN]Baj2ki7q^]*`aG37HTGPq,jUWV#))%!$=jbbJpej0#9"@9CYlU>WM<
%A%Bof$/pqBQSR:k.T3Gp-Do:8<X@5YSp8I;l(]MJE\B6d?#OY+0<jV7Z;Og+Y!)u+;`Z3U9(e+0_qjLFF&JA4(Qm)9EeB-5-drZu
%#<0#4'fAKJ,$FIGD1tXiok8Wr3T=/q(NuMa!.JU[DL2B=B2=^^AO\j\?qAj"VA3H`pqV4=(D,PP0oDrff#V0&1KNn%7`7]f5bQ4q
%>5M^1d`\9K#QY&g=g&lfJCm"'T0"69*IGX7:fE0O/Lfg9Ti`nD:ja'Xb?3kE\L5XnRB]VVXrFIVkuV;u`MPjQcaR9G;/"o0"ZF[e
%R8kZV25DB*15qtHi7Pm8D1L*I%W-EPqY^T!XZ3g$cW^S5j^P$=,Z8%)Z_R]WZRQ-kXAu1SRj)mtaS&]]Q**-PU#fi=Y#_GM0tZt)
%@*FFW!'+QWVSPq1:VE+JDfjFiMh?tWloqP)"DRSaKD(2a;B?ruN],<C<#0Hn_J?0WBEf;!J#GX0:^#X[`H$7EQ@fsK2r/Q($QI@;
%R5-e`kP0\&U1]XAAqms,^A(q>:+^4%LAF>G7s[.Z;p^58m2pJ.X`*2MqeWl@^7n1C+6=X&T#c?bVj0Z4jBCf/Y(8(I@NZ`2H_bB*
%GZUu9I,Qq\^eNf^5(_=[D3IIP2B=i=QL60ud$K:8r?$3"M[U[no,_V22RU3hdJ%BG\DC!QIAXuL.#PYgXJ[!74Db;!@=W8S4.Kcd
%B`O(\rRb]M`g4-kL?BIuG?qS"P0^8>JBf+ubC0ROGNkbKeHR<OEmdd`7<a"r8a[K8-#5P3q%D&".A`)pl2W/=g'VGJCKb]rg`rmE
%oVnOs2a(@4iYlr%6idj:Xg1J8%UFG6\@XiK1?-K$8S?KkAQFjOYaq'jZ3R'4qOQI0Rs.YAQ3j__Lj3\/S1E#5AdEgs:pPdVA@lL1
%-!Kh]%G#arT,`q+A>IUPRi%Z.1*](1[Da@XR.%'!iu1EjWoLYb!^rT:.JQ`fctU9g6TO4KL=/CjZ[+mYjmQ1nC']Fembn73]q%:D
%Ir`$Uq_[\q=`j?FUmd(<+&]I@U`C:X9REtfO<!lmkL.AtMU$ZUAJ#!t1h7_:C3d:7R&/W8d*.CbV!jSDoN&PJ#$([3;lppE]P`nU
%d$&7:2&&>6ila@aq<f9f'V:h-SC4u/ZOo@E:gHemEiN']Y]s!CW04ql+3n)[cLHZ?nb>Cc&Itn=/81iuiR]NU)36tN3j/,,PSQF3
%D'Qp`/e&1UI?sj3V1@UMW$GMmCS.B/<:+GbOM-"0%MQ"*14Km+H0&#^CJH_(mL^WX#Nap,NO\1)Ck9:e;M>6`Hm1-g(#*GIDCWHj
%6L[ST?+Y6ElR.Op%+;9bK+2+)lsS?KJ?Fs?]N[OpHsMW1i?L(P&KnM"C4_m.Q@Ech]@i#&Sl%B(fX].2SH.B"=0_I!T"!<("bMcs
%*#?_d,bJhj`AmMOm28"sRK[(/,]hN[g/cr_\>0;po<4WGge@lC7WX"I.GlYd2"+sGQPbMG#W,I:4`bn,j$JWcfX_]Kj\8"7?6t$`
%,7GfDZ[-mPa.N/X#/f>EHTCFuNHi&.+T]\m/*O&!+KR?u1&f!-h(=ZVb=80N6tb2m@!*8QG$O-c_KW7]9n+LRBcF7`Ue+WF:Y[pE
%l0psCJ`Oln'!2i^`[dFjgoFt#f:<B&L:5_"KKpJ56GDb#\7o;p=%?k8n!j@J=C$t_F(*`Y7+Ul#ctmL<LfhGsTgX5hXNpHWF#<?]
%=X;/T3`m,Ulu_T:dad)7O7J&E)KXhKEtWr6h_a*ZVM/Ljrd`D8=U.*saT+H-CG_6.SWK_$Q^iln`cUTKI&sl2Ou+CM\#Wi>!IJN#
%7;P@JFC:g\m9+C*X6,*1:o;2?_E@7LTcSsFg7e0&[ZkV2nOo8^qpdc<)][U=-2MOf[;l=81GiB>_pl<srCNH0o@C,(efQB3\=o%L
%SV2g&B(>`k=lMYR6fg6b&2o3(KpY&$K"RFOI.d./`PNc^l<\Mt;o'GjT/hs')msBnp?/,IFfr#aOA,$0;F.U?d?Ma*6^UoSB#:C1
%`9V=*cc]MjZ9]OG4ET=P.J>oKPf$H;b\V_g@__R=rtk^A<-O+"eW"S(fTZ:)d!Bp-+4%8\>/cuM[nhhLcjAi^,*Z_?^f*DVhrm]j
%$^*JmP!ar_4tW(m+/f'kO.m>3C_TWK?[<KfM2K*3f+un#^_KKJUS0]sKEbAYl4;BBhH_gLK:p8Kb=rkW`Q#brYC`g>O]iMYp!M?W
%8X@O0T]tpK/<s,7Q<>-rHeP\6L2B^7!lnlmD?i1=&EQN.K0d];`TOBpgF4:B54V).mI-a87:hi`nNuPW^p/3gYPA++Un>)s\)qX,
%,Y^3i''V6T37<7[AK\hTjhEt9@khZTHi[7'Tl$>j+k@Hqc`2,W?9eob-'Qe)-X.]%d.VTdcn**;;p-2)&2DA/30d8X=/^CZT\q<?
%]rnQ5n.Dej#a`.1^#HNtBTc?RTk-GEjm[-B"efD5]oL^V`UZ#!>^P*OMjJUb-;;ZWDCq9r\?!9@+a)*hF6,.X*m4Y?gZCfWnj:[P
%H2Gtr6P\!PAaV6)3>$QZmM\`66QF`k'HIQan-ccW)3)+l0JbrMp#9m5&oFa/#R/Zf'&0Uq.(!<,SnZJDM!q0-eb+Nm3ejDBj$%`%
%Um?5*Wfk'!,Fd25m9[VYpPat#*A:=Fe/U2%TpKm:nd,nM34mI@ROt125"+;4U:\"rs,"AAq<B?RU+YASGm8LY)kg46#fha.=fD#!
%gEo,M77;pJ*6]/deD`>c39/1!)'*Kt$3ta:I2:S+`5:4.IrRt?$h>ri9,Ndt4E0H%05M8@p=COa.4/3fr(h0O$aagrCs2X@k,'Y`
%RchjQ,WfspgNH3meSJDaqE]JMbG!kRd?3[,f>$*MV\6lFe\E1I:5^V!PV5FI5Wk#2No/\e\GAdLP:NhfZe)2_T$XAZ3C%(Bh:+(P
%<>\e=QqEHA=*/KrI;-&R"?J<DR$)="`gW6kT&(qX8tDoQ29="4+-LKJaJ?>!Vo5h6fGW/^<\@uF)t(;^"6L)RFN/t1F[`QJ\s_I<
%<&gnUQQ;B%@VU1)MqCaTBA=K)`ff&]`)mY08EF++Ld_*I>p[1"@>io\1;sp#]uEo1V]PSW1Tj96I=VO9!%FiE.s]C?gCVW3d(@>P
%\U?nFXQci(<BkG;/j;0K+<"jZ+j1[2-I!TYU\;.2EjXN3MSaqn6@W#IBXYW$o"S*Z9`gKLHd$8'!Qs7H,g%6=B&C[N,bYSg;T4Zh
%s(j>?dld^t.=QR9h@hl>/6MmT)XbIY]Yd6N:s+rE3#q11o2P[e%2=e\BPMc<KS'bUkNG$:@BB)&AcW?g(s'&P_I_MZLbeZ900b=*
%;(S=,B32'0#Lh_o?-@aA`n^2Sq4.fQa0uH=3?Sf_3'8YY3s90N'pm];b_btFd$@QS/[j?WV/e=s.UujCfI,'*$'ZF]-hM=EYL99a
%Skc$T"mMg$nXZe!cLHL7fq>Ql]pfJg7pLiRJ!VLt(`".*=<I,lQp%6Ac]9jT-:u%I2]hp6gOqL6I=l]`KU*C),1e!)_N":M=/Xe.
%,HJjV<'JGdZ:a-6BgC>-6#%e1W6I!XZ<\E3"jEpsZ0$;.bad`HllBgYSfCricE4q<r)f$`N]N\"DK:oNq.LSdLF#ZTTm2!$aU@8P
%]i$uQ/QTW!3D(S^3%JS@4A8n>E/X`W"iGS@KNPpd/>C=#rn]5Bm6nUR+]q=K>9nF\OZ`YEZ(A*TmE:J>enCS]Spm'\fo_r^<$3E.
%)DW&gLYG?B[:RpAE;299$m5#J/Nk`NCD<[WC666-FLsq37"?Lcbbjuf_ea&XQZ,B-R('ocR<m5S^IDpf,VlVdoN*KMNM1Oojco&p
%3i'2)$Amkd3=6+^TmJ?H%4q7p_1>%!N`hNp_PhethbF\(\S[,o,$K73+YN!*d>CBEcdJfYc"c?0DFhqUqij,A%8EICZ\U+a:ioEV
%UTJDYT-?+`i_=eW.ULtY(q/'E8VF>-dAsd&#oU1e>ApL4_ReD#HSsVtUeR=\,(Vk:5j_7BSOSOI6#'-<&XdUYc42ooA\Ge<hQrAR
%SNJRS=$$+N3!Q%)b3F<t'c6<I<'r:Io;:3t=+n1$R612g*EG">[tFBWK^jX]4LCAD74dbJ6*<+9\oUlh^fb:h=AQ"d.$^VGHYXI$
%ckcR_nNi=!%VF8TF3HH+WP"]t<tA8jcBs/[?IF^k,4h(c<;&i9@\C2"1ZDHq\mJ"jd-?tWp2(t7b#I.l($4n+1C:Uc]2Mb6l1K1+
%\2^$2>PT"l+Q@)V"%W9LFQcQ)P3mM#k6k:Hc'f+-d&f2>=W:pUbX\B-`L`b!2EJFuHlMJn=;@8s<rr;7*Jg,W\V7\9Pdh)ceU]FX
%-gJ%&_Q\P)#)5Z0C]ZY1R1GIKN9fm'7)GWOim?n:qq[D5McL5>S,[eDId=9:0E1#+_^/"YVG@oo+^?=?B'Uj(_[O*W!_Db-d+DZZ
%S6p"YK[r<\n!)p%!Wr#gQt$eu?F'+.HN@=c>!HLSL6sJJ$C\g)&HeGh(?_YkVp4a&94]:7(JJ,A<r!X)qFatG/^Ulh3]*VEnf%Zg
%)<Jc2(WLskq6%H?ihA]REV,p,mf9d2[lrVqNE#3gA7em2\_)g:!6:-R]A!?/!Ce*SUE0C2gCA22YY(,o$kVG2cSC<7SAe91H)4a.
%L>/"X%8/,I%/6R(0hs5&`I_gr6G\BL9$]\W++[tTV=/O'25RqPi)i1`GM7%\#pb4pf6Q%d83=+[?"iN+<=uuHAD$^OI2?4GI9<l(
%^2[S+S5M(c45jWEepp)t"CUCl.e'i1idu\PAeFsoeOa"#^[C@bW&qOjN]JhQ_WEAq,B$h4g<c\'77g#3[-'e2s%*YTF+TtUW)JSO
%ERctY-,$gp)M+j+1Fg9-p#TTSo1a>39$u,gV\2"3n8<F^ZdL3[Bli\)=#C>9YgMaECp=J\kRQmTFo%L+kaJK2fO1]^8jHPL<'&1o
%(Q""8DCPWt0J1oV/Ge*uXRo8#N<&UGYV_:0B+Jh3Y4t]_W20f*p?Mb-EUOI.1=h^1"BfCB9jUPH0rc8B[d5/B+UeCA9!P?1YPUO6
%@oFp"EIbf3cN6pTh*8f[1@DGr:GZ)i.O:m>j%o3')%54g9N=X0Bd]kmSqUI,SEJ)`A&rj<ZCPL?*/*@qJ%MWU'mP]q"DhF4GUM-Z
%8qE"%DF26d%71rG?LIcoNrqpe:NHN?Sg`$lfBO7=k:DRK]ku;m6s0@QK-pu,qS5@B7XaPaMWfhaf3(cm.m([-en.WEo]`giqc)VV
%&>g6cPKj3's!m&&R?>9".30k#I]udpdTJm$[U01u3g1.jBK+-t<XX\:Jdp?=$$.)-AXWhXAug748.8*jkOC<nQJDe;<-Mdb;n:ZL
%;++=E[2'V6hIgl_,q'e>kWB%7D%Sh;U]b2IYldkRnb.AD+#:8fMc#-[f@IC*Y&s*ISYW<XBatc!G\iho9h!RdI`ba)K@(cBhe-u+
%=UD'U2ZPDWO%^)KkJ,)hj"ENJVUBDfI'49aLdscAB?(#i58&8">D@@?MQUj5&637q_tO088cj2A(NJbli"hn$g4q14\E?UNVE).L
%\OO4k.Ib6Wg:[j?3#\FBF!75(D2(t`W("dSKlKLA7p@K\r^r;l]W=+cS1Z<]f2sI.4Gd`EG';b$/gnutV)4;/>c$rCEj_f3_()4,
%=/8IO8;m6-s!0V<.e#\]@]?7LPI.m8bs,?*K68K-AibjZ&(BN.L^n&Y$n</'1$Pjl(c:'41.*WHa>P)BorDSgEMFA7:&!SBRf:Y.
%VPc</L^&1X5pP:KF:8JRS"TIoH;%j7R/1McOP+0,Yfk$Mhhp@ZM22=?4-$[:^$L2,0oQ["TSb0fIfaH*aN/gYMVN#:H.dLd<uWq$
%rK_WoZ"TbUC4q<e5JdXD=-@>P^=<J+9Y137+snBmWk?tbI?i8ImS@Vt:Df5KF^StC1=G//en+'@pN9K8%!,3MGVO0TH\D]IfF3e9
%oWYaKY6"+$(*\C%_0J*$!bX/u7HEP'UHHjVJ)bD(W_p(d)'Q6/O1)6EXD&ca=70`.T*I`_W;G,=c4H1'8[)*%UnPVN4(;j^?mo4b
%nA$n0$m&U:9LYL7WCs;^SfnQ^J#'p/RP1N2JmR>FJiOj<e96Fh374b\ThEZb+B>W00Z0Ei9PBOU3KH09-6gD#C#IKK?%hQ>iY<H1
%alsmd-]^N@S=[gLahJ5:V3[IPaOXPlXWXkQ[V!HjARmn,\nPC]Z@O_V(RAY"JHBN0JO5Qfe5pU[Kq?.+NS?TWjWc;W^mI#QhfL)W
%drQ\ElV&+:&u$NZLF75*W7(_<m!E%L=%GbRkl:f%,&tO:HPJ&ThoUCWQ!6@SH9+7i-#`%J5HfFIX14LdC6if>Z&XCX<D!OtSbK14
%V]@l8=!BVda/9aVUoG4T+bVCc4!5WQ&'C)SoIdll5j_ji+n.@S7g.OSL9P>;G2e<q,C:,-.u9Wo%aJba\@O>2A0B30@0[B0%2G\8
%rMs/S@q<:7d*(j2AN\o05j&7D-;$5JKeQ6,3>T6&<cG%U_V$S?j"6im:ajS<`nPj;rJL<-%*`*^8Qi@j*AuMHqdPjXc07()[+X<;
%TkXYrNuY4/YpL$EFF+7ECD>7aWK=P8QY_ueWWlXq+Ch@L^Gr]bO]d.E:jm[YG7^t8_VD,RKVm0j-9Uqod.P`dBrMH,Vi6g]ru<c5
%l^C\ZOEg!"!#46'P1h>]L`+RH"U-p,[I3=gAf!CoH3^]WdrkIY6>`f;+/'r]n9Uke-#&;P$J5M@6+4US24C1$.juFAkPKn*ZWq')
%)A3Yg,C)oXW>HC5qjZ#D;]GkdSf5R]1!&M'95')E\aNutl-`"9i;PL1)Ar'eV6V?l6IDWkQcehV69M&3pY5ph7bU^YR(Xbp\FgR4
%J<Yn8';Wu7K.@ZT&Wb3ho',cM7^?\.F@\rMp.N%?9iM^8fjtbCH<:k_%!L0(6@mLV%0TELOKr=QkpX%1BJ?1/6p0;GG9MGujR_bc
%UW8tk121_:0gCoeKbMX9<%ZFAmR9O?,.tfgmm[g4NRYP@[89"^gR8l=P*aS6'\`_<!hO-^ba&*W8;K)])+HYt<hI.Mb%"3MTMr7@
%;+'>/92U9SeI,"[0@M1Ib7N1+\;68!GcO@hj&HBt(^mBO:\t)u0u&4jb3P,gl5BJcs*"=<J,M>+q2^%%5C`[UkN=Yj=9&7qJ,SR1
%n<ZB<fDkR-^\m\Qp=FfgVuQGQO$ETfhsf7sr84,rqY9Bkr;#g\a5?mXcQ@Z2?iKbK1W#Km^@53RornDO^\R'mm/I->'cA"~>
%AI9_PrivateDataEnd
